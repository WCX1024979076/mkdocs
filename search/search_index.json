{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#_1","title":"\u6b22\u8fce\u8bbf\u95ee","text":""},{"location":"#_2","title":"\u53cb\u60c5\u94fe\u63a5\uff1a","text":"<p>\u4e2a\u4eba\u5bfc\u822a\u754c\u9762\uff1ahttp://ubuntu.tim-wcx.ltd/</p> <p>Gtihub\u4e3b\u9875\uff1ahttps://github.com/WCX1024979076</p> <p>\u4e2a\u4eba\u535a\u5ba2\uff1ahttps://tim-wcx.ltd/</p> <p>Github\u535a\u5ba2CDN\uff1ahttps://blog.tim-wcx.workers.dev/</p> <p>\u4ee3\u7801paste\uff1ahttps://paste.tim-wcx.ltd/</p>"},{"location":"#_3","title":"\u53c2\u8003\u94fe\u63a5\uff1a","text":"<p>Cloudflare rawgithub\u52a0\u901f\uff1ahttps://rawgithub.tim-wcx.workers.dev/</p> <p>Github\u56fe\u5e8a\uff1ahttps://github.com/WCX1024979076/image1</p> <p>docsify\uff1ahttps://docsify.js.org/</p> <p>\u672c\u7ad9\u603b\u8bbf\u95ee\u91cf\u6b21</p> <p>\u672c\u7ad9\u8bbf\u5ba2\u6570\u4eba"},{"location":"_coverpage/","title":"Tim-Wcx","text":""},{"location":"_coverpage/#_1","title":"\u4e2a\u4eba\u6587\u6863\u7f51\u7ad9","text":"<p>GitHub Get Started </p>"},{"location":"_sidebar/","title":"sidebar","text":"<ul> <li>ICPC\u9898\u89e3</li> <li>ICPC\u6a21\u677f</li> <li>ICPC\u9898\u5355</li> <li>\u8bfe\u7a0b\u590d\u4e60</li> <li>csdn\u5bfc\u51fa</li> <li>\u4e2a\u4eba\u8ba1\u5212</li> <li>\u5173\u4e8e</li> </ul>"},{"location":"about/","title":"\u5173\u4e8e","text":""},{"location":"about/#_1","title":"\u6b22\u8fce\u8bbf\u95ee","text":""},{"location":"about/#_2","title":"\u4e2a\u4eba\u4fe1\u606f","text":"<p>\u4e2a\u4eba\u8054\u7cfb\u4fe1\u606f\uff1a <pre><code>nslookup -qt=TXT info.tim-wcx.ltd\n</code></pre> Email\uff1a timwcx@qq.com</p>"},{"location":"about/#_3","title":"\u53cb\u60c5\u94fe\u63a5\uff1a","text":"<p>\u4e2a\u4eba\u5bfc\u822a\u754c\u9762\uff1ahttp://ubuntu.tim-wcx.ltd/</p> <p>Gtihub\u4e3b\u9875\uff1ahttps://github.com/WCX1024979076</p> <p>Github\u540c\u6b65\u535a\u5ba2\uff1ahttps://github.tim-wcx.ltd/</p> <p>Linux\u63a2\u9488\uff1ahttp://ubuntu.tim-wcx.ltd/serverstatus</p>"},{"location":"about/#_4","title":"\u53c2\u8003\u94fe\u63a5\uff1a","text":"<p>Typecho\uff1ahttp://typecho.org/</p>"},{"location":"about/#_5","title":"\u8d5e\u52a9","text":""},{"location":"about/_coverpage/","title":"Tim-wcx","text":""},{"location":"about/_coverpage/#_1","title":"\u4e2a\u4eba\u6587\u6863\u7f51\u7ad9","text":"<p>GitHub Get Started</p>"},{"location":"about/_sidebar/","title":"sidebar","text":"<ul> <li>\u4e0a\u4e00\u7ea7</li> <li>\u5173\u4e8e</li> </ul>"},{"location":"course/","title":"Index","text":"<p>\u8bfe\u7a0b\u590d\u4e60\u7cfb\u5217</p>"},{"location":"course/PDF%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/","title":"PDF\u5212\u8bcd\u7ffb\u8bd1","text":"<p>\u4e00\u4e2a\u7b80\u5355\u7684PDF\u5212\u8bcd\u7ffb\u8bd1\u8f6f\u4ef6\u3002</p> <p>Github\u4ed3\u5e93\u5730\u5740\uff1ahttps://github.com/WCX1024979076/simple_pdf_translator</p> <p>Github\u4e0b\u8f7d\u5730\u5740\uff1ahttps://github.com/WCX1024979076/simple_pdf_translator/releases/tag/v0.1.0</p> <p>Gitee\u4ed3\u5e93\u5730\u5740\uff1ahttps://gitee.com/WCX1024979076/pdf-viewer/</p> <p>Gitee\u4e0b\u8f7d\u5730\u5740\uff1ahttps://gitee.com/WCX1024979076/pdf-viewer/releases/tag/v0.1.0</p> <p></p>"},{"location":"course/PDF%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/#_1","title":"\u5173\u4e8e","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u7684PDF\u5212\u8bcd\u7ffb\u8bd1\u8f6f\u4ef6\uff0c\u524d\u7aef\u6e32\u67d3\u91c7\u7528Element-UI\u548cPDF.js\uff1b\u540e\u7aef\u91c7\u7528\u63d2\u4ef6\u673a\u5236\u5b8c\u6210\u7ffb\u8bd1\u5f15\u64ce\u7684\u7ba1\u7406\uff0c\u76ee\u524d\u652f\u6301\u7684\u7ffb\u8bd1\u5f15\u64ce\u6709**\u767e\u5ea6\u7ffb\u8bd1**\u3001\u8c37\u6b4c\u7ffb\u8bd1\u3001\u6709\u9053\u7ffb\u8bd1**\u548c**\u817e\u8baf\u7ffb\u8bd1\uff0c\u5982\u9700\u63a5\u5165\u4e09\u65b9api\u53ef\u4ee5\u53c2\u8003PDF\u5212\u8bcd\u7ffb\u8bd1\u63d2\u4ef6\u5f00\u53d1\u3002</p>"},{"location":"course/PDF%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/#_2","title":"\u4f7f\u7528\u6307\u5357","text":""},{"location":"course/PDF%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/#_3","title":"\u4e00\u3001\u7ffb\u8bd1\u5f15\u64ce\u914d\u7f6e","text":"<p>\u5728\u4f7f\u7528\u4e4b\u524d\u9700\u8981\u8fdb\u884c\u7ffb\u8bd1\u5f15\u64ce\u914d\u7f6e\uff0c\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u8fdb\u884c\u914d\u7f6e\u3002</p>"},{"location":"course/PDF%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/#1","title":"1\uff09\u767e\u5ea6\u7ffb\u8bd1","text":"<p>\u767e\u5ea6\u7ffb\u8bd1api\u63a5\u5165\u9700\u8981\u7533\u8bf7appid\u548c\u5bc6\u94a5\uff0c\u7533\u8bf7\u6559\u7a0b\u5982\u4e0b\u3002</p> <p>https://talentranslate.com/docs/services/common/baidu</p>"},{"location":"course/PDF%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/#2","title":"2\uff09\u817e\u8baf\u7ffb\u8bd1","text":"<p>\u817e\u8baf\u7ffb\u8bd1api\u63a5\u5165\u9700\u8981\u7533\u8bf7SecretId\u548cSecretKey\uff0c\u7533\u8bf7\u6559\u7a0b\u5982\u4e0b\u3002</p> <p>https://talentranslate.com/docs/services/common/tencent</p>"},{"location":"course/PDF%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/#3","title":"3\uff09\u8c37\u6b4c\u7ffb\u8bd1","text":"<p>\u8c37\u6b4c\u7ffb\u8bd1\u65e0\u9700\u7533\u8bf7\u76f8\u5173\u5bc6\u94a5\uff0c\u4f46\u662f\u9700\u8981\u914d\u7f6e\u4ee3\u7406ip\u548c\u4ee3\u7406\u7aef\u53e3\u3002</p>"},{"location":"course/PDF%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/#4","title":"4\uff09\u6709\u9053\u7ffb\u8bd1","text":"<p>\u6709\u9053\u7ffb\u8bd1\u9700\u8981\u7533\u8bf7APP ID\u548c\u79d8\u94a5\uff0c\u7533\u8bf7\u6559\u7a0b\u5982\u4e0b\u3002</p> <p>https://blog.csdn.net/weixin_44253490/article/details/126365385</p> <p>\u5982\u8fc7\u5728\u7533\u8bf7\u8fc7\u7a0b\u4e2d\u9047\u5230\u4efb\u4f55\u95ee\u9898\u53ef\u901a\u8fc7\u90ae\u7bb1/QQ\u79c1\u804a\u6211\uff0c\u6211\u53ef\u4ee5\u63d0\u4f9b\u76f8\u5173apiid\u548c\u5bc6\u94a5\u6216\u8005\u63d0\u4f9b\u7533\u8bf7\u5e2e\u52a9\u3002</p>"},{"location":"course/PDF%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/#_4","title":"\u4e8c\u3001\u6253\u5f00\u6587\u4ef6","text":"<p>\u70b9\u51fb\u6587\u4ef6-&gt;\u6253\u5f00\u6587\u4ef6 \u6216 \u70b9\u51fb\u56fe\u4e2d\u6807\u8bb0\u7684\u6309\u94ae\u5747\u53ef\u6253\u5f00\u76f8\u5e94\u7684pdf\uff0c\u5212\u8bcd\u5373\u53ef\u5728\u53f3\u4fa7\u663e\u793a\u8bd1\u6587\u548c\u539f\u6587\u3002\uff08\u6ce8\u610fpdf\u662f\u6587\u672c\u7c7b\u578b\u800c\u975e\u56fe\u50cf\uff0c\u76ee\u524d\u6682\u4e0d\u652f\u6301ocr\u6587\u5b57\u8bc6\u522b\uff09</p> <p></p>"},{"location":"course/PDF%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/#_5","title":"\u63d2\u4ef6\u5f00\u53d1","text":"<p>\u89c1PDF\u5212\u8bcd\u7ffb\u8bd1\u63d2\u4ef6\u5f00\u53d1\u6587\u6863\u3002</p>"},{"location":"course/_coverpage/","title":"Tim-wcx","text":""},{"location":"course/_coverpage/#_1","title":"\u4e2a\u4eba\u6587\u6863\u7f51\u7ad9","text":"<p>GitHub Get Started</p>"},{"location":"course/_sidebar/","title":"sidebar","text":"<ul> <li>\u4e0a\u4e00\u7ea7</li> <li>\u8bfe\u7a0b\u590d\u4e60</li> <li>\u56fe\u4f18\u7b97\u6cd5\u7b14\u8bb0</li> <li>\u6570\u5b57\u56fe\u50cf\u5904\u7406</li> <li>\u73b0\u4ee3\u5bc6\u7801\u5b66</li> <li>\u8f6f\u4ef6\u5de5\u7a0b</li> <li>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66</li> <li>\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf</li> <li>\u5355\u7247\u673a</li> <li>PDF\u5212\u8bcd\u7ffb\u8bd1</li> </ul>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/","title":"\u5355\u7247\u673a\u590d\u4e60","text":""},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#3","title":"\u7b2c3\u7ae0 \u5355\u7247\u673a\u7684\u7ed3\u6784\u548c\u539f\u7406","text":""},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#51","title":"51\u5355\u7247\u673a\u7684\u57fa\u672c\u7ec4\u6210","text":"<p>\u200b   XTAL1\u3001XTAL2\uff1a\u6676\u632f  </p> <p>\u200b   PSEN: \u7247\u5916\u7a0b\u5e8f\u5b58\u50a8\u5668\u8bfb\u9009\u901a\u4fe1\u53f7\u8f93\u51fa\u7aef, \u4f4e\u7535\u5e73\u6709\u6548\u3002 </p> <p>\u200b   EA\uff1a\u7247\u5916\u7a0b\u5e8f\u5b58\u50a8\u5668\u8bfb\u9009\u901a\u4fe1\u53f7\u8f93\u51fa\u7aef, \u4f4e\u7535\u5e73\u6709\u6548\u3002 </p> <p>\u200b   RST\uff1a\u590d\u4f4d\u4fe1\u53f7</p> <p>\u200b   ALE\uff1a\u5730\u5740\u9501\u5b58\u4fe1\u53f7</p> <p>\u200b   RXD\uff1a\u4e32\u884c\u6570\u636e\u63a5\u6536</p> <p>\u200b   TXD\uff1a\u4e32\u884c\u6570\u636e\u53d1\u9001</p> <p>\u200b   INT0\uff1a\u5916\u90e8\u4e2d\u65ad0\u8bf7\u6c42\u8f93\u5165\u7ebf</p> <p>\u200b   INT1\uff1a\u5916\u90e8\u4e2d\u65ad1\u8bf7\u6c42\u8f93\u5165\u7ebf</p> <p>\u200b   T0\uff1a\u5b9a\u65f6\u5668/\u8ba1\u6570\u56680\u8ba1\u6570\u8f93\u5165\u7ebf</p> <p>\u200b   T1\uff1a\u5b9a\u65f6\u5668/\u8ba1\u6570\u56681\u8ba1\u6570\u8f93\u5165\u7ebf</p> <p>\u200b   WE\uff1a\u5916\u90e8RAM\u5199\u4fe1\u53f7</p> <p>\u200b   RD\uff1a\u5916\u90e8RAM\u8bfb\u4fe1\u53f7</p> <p>\u200b   P0\uff1a\u5730\u5740/\u6570\u636e\u603b\u7ebf\uff0c\u51c6\u53cc\u5411IO</p> <p>\u200b   P1\uff1a\u51c6\u53cc\u5411IO</p> <p>\u200b   P2\uff1a\u5730\u5740\u603b\u7ebf\uff0c\u51c6\u53cc\u5411IO</p> <p>\u200b   P3\uff1a\u63a7\u5236\u603b\u7ebf\uff0c\u51c6\u53cc\u5411IO</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#51_1","title":"51\u5b50\u7cfb\u5217\u5355\u7247\u673a\u7684\u5b58\u50a8\u5668\u914d\u7f6e","text":"<p>1\u30018051\u5b58\u50a8\u5668\u5730\u5740\u7a7a\u95f4</p> <ol> <li> <p>\u7247\u5185\u3001\u7247\u5916\u7edf\u4e00\u7f16\u5740\u7684\u7a0b\u5e8f\u5b58\u8d2e\u5668ROM\uff1a64KB\uff0c\u5730\u5740\uff1a0000\uff5e0FFFFH\uff1b</p> <p>(\u4f4e4KB\uff0cEA==0\u65f6\u5916\u90e8ROM\uff0c\u5426\u5219\u5185\u90e8ROM)</p> <p>MOVC\u6307\u4ee4\u8bbf\u95ee</p> <p>PSEN\u7247\u9009\u8bfb\u4fe1\u53f7</p> </li> <li> <p>\u7247\u5916\u6570\u636e\u5b58\u8d2e\u5668RAM\uff1a64KB\uff0c\u5730\u5740\uff1a0000\uff5e0FFFFH\uff1b</p> <p>MOVX\u6307\u4ee4\u8bbf\u95ee</p> <p>RD\u548cWR\u4fe1\u53f7</p> </li> <li> <p>\u5185\u90e8\u6570\u636e\u5b58\u8d2e\u5668RAM\uff1a256B\uff0c\u5730\u5740\uff1a0~0FFH\u3002</p> <p>MOV\u6307\u4ee4\u8bbf\u95ee</p> </li> </ol> <p>2\u3001ROM\u82af\u7247</p> <p>\u7528\u9014\uff1a \u7528\u4e8e\u5b58\u653e\u7f16\u597d\u7684\u7a0b\u5e8f\u548c\u8868\u683c\u5e38\u6570\u3002</p> \u4fdd\u7559\u5355\u5143\u5730\u5740 \u5165 \u53e3  \u5730 \u5740 \u7528  \u9014 0000H\uff5e0002H 0000H \u590d\u4f4d\u540e\u521d\u59cb\u5316\u5f15\u5bfc\u7a0b\u5e8f 0003H\uff5e000AH 0003H \u5916\u90e8\u4e2d\u65ad0\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f 000BH\uff5e0012H 000BH \u5b9a\u65f6/\u8ba1\u6570\u56680\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f 0013H\uff5e001AH 0013H \u5916\u90e8\u4e2d\u65ad1\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f 001BH\uff5e0022H 001BH \u5b9a\u65f6/\u8ba1\u6570\u56681\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f 0023H\uff5e002AH 0023H \u4e32\u884c\u53e3\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f 002BH\uff5e0032H 002BH \u5b9a\u65f6/\u8ba1\u6570\u56682\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f(52\u5b50\u7cfb\u5217\u624d\u6709) <p>3\u3001RAM\u82af\u7247</p> <p>\u7528\u9014\uff1a\u7528\u4e8e\u5b58\u653e\u8fd0\u7b97\u7684\u4e2d\u95f4\u7ed3\u679c\u3001\u6570\u636e\u6682\u5b58\u548c\u7f13\u51b2\u3001\u6807\u5fd7\u4f4d\u7b49\u3002</p> <p>\u5206\u7c7b\uff1a\u7247\u5185RAM\uff1a 256\u5b57\u8282\uff1b\u5730\u5740\u4ece0000\uff5e00FFH\uff1b\u7247\u5916RAM\uff1a 64K\u5b57\u8282\uff1b\u5730\u5740\u4ece0000\uff5eFFFFH\u3002</p> <p>\u7247\u5185RAM\uff1a\u9ad8128\u5355\u514380H~0FFH SFR</p> <p>\u200b                   \u4f4e128\u5355\u514300H~7FH \u771f\u6b63\u7684RAM</p> <p></p> <p>3.1 \u4f4e128\u5355\u5143\uff1a</p> <p>1\uff09\u5b58\u50a8\u5668\u533a\uff1a\u56db\u7ec4\u5bc4\u5b58\u5668\uff0c\u6bcf\u7ec48\u4e2a\u5bc4\u5b58\u5355\u5143\uff088\u4f4d\uff09\uff0c\u5404\u7ec4\u90fd\u4ee5R0\u3001R1\u3001R2\u3001R3\u3001R4\u3001R5\u3001R6\u3001R7\u4f5c\u5bc4\u5b58\u5355\u5143\u7f16\u53f7\u3002\u5bc4\u5b58\u5668\u5e38\u7528\u4e8e\u5b58\u653e\u64cd\u4f5c\u6570\u53ca\u4e2d\u95f4\u7ed3\u679c\u7b49\uff0c\u7531\u4e8e\u5b83\u4eec\u7684\u529f\u80fd\u53ca\u4f7f\u7528\u4e0d\u4f5c\u9884\u5148\u89c4\u5b9a\u56e0\u6b64\u79f0\u4e4b\u4e3a\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u6709\u65f6\u4e5f\u53eb\u5de5\u4f5c\u5bc4\u5b58\u5668\u3001\u56db\u7ec4\u901a\u7528\u5bc4\u5b58\u5668\u5360\u636e\u5185\u90e8RAM\u768400H\uff5e1FH\u5355\u5143\u5730\u5740\u3002</p> <p>\u5728\u4efb\u4e00\u65f6\u523b\uff0cCPU\u53ea\u80fd\u4f7f\u7528\u5176\u4e2d\u7684\u4e00\u7ec4\u5bc4\u5b58\u5668\uff0c\u5e76\u4e14\u628a\u6b63\u5728\u4f7f\u7528\u7684\u90a3\u7ec4\u5bc4\u5b58\u5668\u79f0\u4e4b\u4e3a\u5f53\u524d\u5bc4\u5b58\u5668\u7ec4\u3002\u5230\u5e95\u662f\u90a3\u4e00\u7ec4\u7531\u7a0b\u5e8f\u72b6\u6001\u5b57\u5bc4\u5b58\u5668PSW\u4e2dRS0\u3001RS1\u4f4d\u7684\u72b6\u6001\u7ec4\u5408\u6765\u51b3\u5b9a\u3002</p> <p>R0\uff5eR7\u5bc4\u5b58\u5668\u4e0e\u5185\u90e8RAM\u7684\u5730\u5740\u5bf9\u5e94</p> \u901a\u7528\u5bc4\u5b58\u5668  \u540d\u79f0 \u5730  \u5740 \u7b2c0\u7ec4 \u7b2c1\u7ec4 \u7b2c2\u7ec4 \u7b2c3\u7ec4 R0 00H 08H 10H 18H R1 01H 09H 11H 19H R2 02H 0AH 12H 1AH R3 03H 0BH 13H 1BH R4 04H 0CH 14H 1CH R5 05H 0DH 15H 1DH R6 06H 0EH 16H 1EH R7 07H 0FH 17H 1FH <p>2\uff09 \u4f4d\u5bfb\u5740\u533a\uff1a</p> <p>\u5730\u5740\uff1a20H\uff5e2FH\u5355\u5143\uff0c\u5171128\u4f4d\u3002</p> <p>\u4f4d\u5730\u5740\uff1a00H\uff5e7FH\u3002</p> <p>\u6027\u8d28\uff1a\u65e2\u53ef\u4f5c\u4e3a\u4e00\u822cRAM\u5355\u5143\u4f7f\u7528\u8fdb\u884c\u5b57\u8282\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u5355\u5143\u4e2d\u7684\u6bcf\u4e00\u4f4d\u8fdb\u884c\u4f4d\u64cd\u4f5c\uff0c\u56e0\u6b64\u628a\u8be5\u533a\u79f0\u4e4b\u4e3a\u4f4d\u5bfb\u5740\u533a\u3002</p> <p>3\uff09 \u7528\u6237RAM\u533a\uff1a</p> <p>\u5355\u5143\u5730\u5740\u4e3a30H\uff5e7FH\uff0c\u4e3b\u8981\u7684\u6570\u636e\u7f13\u51b2\u533a\u3002</p> <p>\u628a\u5806\u6808\u5f00\u8f9f\u5728\u6b64\u533a\u3002</p> <p>3.2 \u9ad8128\u5355\u5143\uff1a</p> <p>\u7279\u6b8a\u529f\u80fd\u5bc4\u5b58\u5668\u533a\u3001\u4e13\u7528\u5bc4\u5b58\u5668\u533a \u7b80\u79f0SFR\u3002</p> <p>\u5355\u5143\u5730\u5740\uff1a80H\uff5eFFH\u3002</p> <p>\uff081\uff09\u7d2f\u52a0\u5668A\u6216ACC\uff08Accumulator\uff090E0H</p> <p>8\u4f4d\u5bc4\u5b58\u5668\uff0c\u662f\u6700\u5e38\u7528\u7684\u4e13\u7528\u5bc4\u5b58\u5668</p> <p>\u5927\u90e8\u5206\u5355\u64cd\u4f5c\u6570\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u5c31\u53d6\u81eaACC\uff0c\u8bb8\u591a\u53cc\u64cd\u4f5c\u6570\u6307\u4ee4\u4e2d\u7684\u4e00\u4e2a\u64cd\u4f5c\u6570\u4e5f\u53d6\u81ea\u7d2f\u52a0\u5668\u3002</p> <p>\uff082\uff09 B\u5bc4\u5b58\u5668 0F0H</p> <p>8\u4f4d\u5bc4\u5b58\u5668\uff0c\u4e3b\u8981\u7528\u4e8e\u4e58\u9664\u8fd0\u7b97\u3002\u5982 MUL   AB</p> <p>B\u5bc4\u5b58\u5668\u4e5f\u53ef\u4f5c\u4e3a\u4e00\u822c\u6570\u636e\u5bc4\u5b58\u5668\u4f7f\u7528\u3002\u5982MOV  B, #20H</p> <p>\uff083\uff09 \u6570\u636e\u6307\u9488\uff08DPTR\uff0916\u4f4d\u5bc4\u5b58\u5668</p> <p>MCS-51\u4e2d\u552f\u4e00\u7684\u4e00\u4e2a16\u4f4d\u5bc4\u5b58\u5668\u3002</p> <p>DPH\uff1aDPTR\u9ad8\u4f4d\u5b57\u8282 83H</p> <p>DPL\uff1aDPTR\u4f4e\u4f4d\u5b57\u8282 82H</p> <p>\u4f5c\u7528\uff1a\u901a\u5e38\u5728\u8bbf\u95ee\u5916\u90e8RAM\u65f6\u4f5c\u5730\u5740\u6307\u9488\u4f7f\u7528, \u7531\u4e8e\u5916\u90e8\u6570\u636e\u5b58\u50a8\u5668\u7684\u5bfb\u5740\u8303\u56f464KB\u3002</p> <p>DPTR\u65e2\u53ef\u630916\u4f4d\u5bc4\u5b58\u5668\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u6309\u4e24\u4e2a8\u4f4d\u5bc4\u5b58\u5668\u5206\u5f00\u4f7f\u7528\u3002\u5982\uff1a </p> <p>MOV   DPTR\uff0c #1234H  &lt;==&gt; MOV    DPH\uff0c #12H\uff1bMOV   DPL\uff0c  #34H</p> <p>\uff084\uff09\u7a0b\u5e8f\u8ba1\u6570\u5668PC\uff08Program Counter\uff09</p> <p>PC\uff1a16\u4f4d\u7684\u8ba1\u6570\u5668\u3002</p> <p>\u5176\u5185\u5bb9\u4e3a\u5c06\u8981\u6267\u884c\u7684\u6307\u4ee4\u5730\u5740\uff0c\u5bfb\u5740\u8303\u56f4\u8fbe64KB\u3002  </p> <p>\u6709\u81ea\u52a8\u52a0 1\u529f\u80fd\uff0c\u4ece\u800c\u5b9e\u73b0\u7a0b\u5e8f\u7684\u987a\u5e8f\u6267\u884c\u3001 \u4f46PC\u6ca1\u6709\u5730\u5740\uff0c\u662f\u4e0d\u53ef\u5bfb\u5740\u7684\u3001\u56e0\u6b64\u65e0\u6cd5\u5bf9\u5b83\u8fdb\u884c\u8bfb\u5199\u3002\u4f46\u53ef\u4ee5\u901a\u8fc7\u8f6c\u79fb\u3001\u8c03\u7528\u3001\u8fd4\u56de\u7b49\u6307\u4ee4\u6539\u53d8\u5176\u5185\u5bb9\uff0c\u4ee5\u5b9e\u73b0\u7a0b\u5e8f\u7684\u8f6c\u79fb\u3002</p> <p>\uff085\uff09I/O\u7aef\u53e3P0\uff5eP3==\uff0880H\uff0c90H\uff0cA0H\uff0cB0H\uff09==</p> <p>P0\uff5eP3\u4e3a\u56db\u4e2a8\u4f4d\u7279\u6b8a\u529f\u80fd\u5bc4\u5b58\u5668\uff0c\u5206\u522b\u662f\u56db\u4e2a\u5e76\u884cI/O\u7aef\u53e3\u7684\u9501\u5b58\u5668\u3002\u5b83\u4eec\u90fd\u6709\u5b57\u8282\u5730\u5740\uff0c\u6bcf\u4e00\u4e2a\u53e3\u9501\u5b58\u5668\u8fd8\u6709\u4f4d\u5730\u5740\uff0c\u6240\u4ee5\u5f53\u6bcf\u4e00\u6761I/O\u7ebf\u72ec\u7acb\u5730\u7528\u4f5c\u8f93\u5165\u6216\u8f93\u51fa\u65f6\uff0c\u6570\u636e\u53ef\u4ee5\u9501\u5b58\uff1b\u4f5c\u8f93\u5165\u65f6\uff0c\u6570\u636e\u53ef\u4ee5\u7f13\u51b2\u3002</p> <p>\u5f53I/O\u7aef\u53e3\u67d0\u4e00\u4f4d\u7528\u4e8e\u8f93\u5165\u4fe1\u53f7\u65f6\uff0c\u5bf9\u5e94\u7684\u9501\u5b58\u5668\u5fc5\u987b\u5148\u7f6e\u201c1\u201d\u3002RST\u521d\u59cb\u5316\u4e3aFFH</p> <p>\uff086\uff09\u7a0b\u5e8f\u72b6\u6001\u5b57PSW\uff08Program Status Word\uff09 0D0H</p> <p>8\u4f4d\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u5bc4\u5b58\u7a0b\u5e8f\u8fd0\u884c\u7684\u72b6\u6001\u4fe1\u606f\u3002</p> <p>\u5176\u4e2d\uff1a\u6709\u4e9b\u4f4d\u72b6\u6001\u662f\u6839\u636e\u7a0b\u5e8f\u6267\u884c\u7ed3\u679c\uff0c\u7531\u786c\u4ef6\u81ea\u52a8\u8bbe\u7f6e\u7684\u800c\u6709\u4e9b\u4f4d\u72b6\u6001\u5219\u4f7f\u7528\u8f6f\u4ef6\u65b9\u6cd5\u8bbe\u5b9a\uff0e</p> D7 D6 D5 D4 D3 D2 D1 D0 CY AC F0 RS1 RS0 OV ... P \u8fdb\u4f4d\u6807\u5fd7\u4f4d \u8f85\u52a9\u8fdb\u4f4d\u6807\u5fd7\u4f4d \u7528\u6237\u6807\u5fd7\u4f4d \u5bc4\u5b58\u5668\u7ec4\u9009\u62e9\u4f4d \u5bc4\u5b58\u5668\u7ec4\u9009\u62e9\u4f4d \u6ea2\u51fa\u6807\u5fd7\u4f4d \u5947\u5076\u6807\u5fd7\u4f4d \u6709\u8fdb\u4f4d/\u501f\u4f4d\uff0cCY=1\uff0c\u5426\u5219\uff0cCY=0 \u4f4e4\u4f4d\u5411\u9ad84\u4f4d\u7684\u8fdb\u4f4d\u6216\u501f\u4f4d\u3002\u6709AC=1\uff0c\u5426\u5219AC=0\u3002 \u9700\u8981\u65f6\u7528\u8f6f\u4ef6\u65b9\u6cd5\u7f6e\u4f4d\u6216\u590d\u4f4d\uff0c\u7528\u4ee5\u63a7\u5236\u7a0b\u5e8f\u7684\u8f6c\u5411\u3002 8\u4f4d\u5e26\u7b26\u53f7\u6570\u5b57\u52a0\u51cf\u8fd0\u7b97\u7ed3\u679c\u662f\u5426\u8d85\u51fa\u8fd0\u7b97\u8303\u56f4\u30028\u4f4d\u6709\u7b26\u53f7\u6570\u5b57\u8868\u793a\u7684\u8303\u56f4\uff1a\uff0d128\uff5e\uff0b127\u3002OV\uff1d0\uff0c\u8fd0\u7b97\u6b63\u786e\uff0c\u5373\u65e0\u6ea2\u51fa\u4ea7\u751f\u3002\u5728\u4e58\u6cd5\u8fd0\u7b97\u4e2d\uff0cOV\uff1d1\uff0c\u8868\u793a\u4e58\u79ef\u8d85\u8fc7255\uff1b\u5728\u9664\u6cd5\u8fd0\u7b97\u4e2d\uff0cOV\uff1d1\uff0c\u8868\u793a\u9664\u6570\u4e3a0\uff0c\u9664\u6cd5\u4e0d\u80fd\u8fdb\u884c\u3002 \u8868\u660e\u7d2f\u52a0\u5668A\u4e2d1\u4e2a\u4e2a\u6570\u7684\u5947\u5076\u6027\uff0c\u59471\u50760\uff08\u4e32\u884c\u8f93\u5165\u8f93\u51fa\u7684\u7b2c9\u4f4d\uff09 <p>\uff087\uff09PCON \u7535\u6e90\u63a7\u5236  87H</p> D7 D6 D5 D4 D3 D2 D1 D0 SMOD (SMOD0) (LVDF) (P0F) GF1 GF0 PD IDL \u4e0e\u4e32\u53e3\u901a\u4fe1\u6709\u5173 \u5355\u7247\u673a\u7279\u6709 \u5355\u7247\u673a\u7279\u6709 \u5355\u7247\u673a\u7279\u6709 \u901a\u7528\u5de5\u4f5c\u6807\u5fd7\u4f4d\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528\u3002 \u901a\u7528\u5de5\u4f5c\u6807\u5fd7\u4f4d\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528\u3002 \u6389\u7535\u6a21\u5f0f\u8bbe\u5b9a\u4f4d\u3002 \u7a7a\u95f2\u6a21\u5f0f\u8bbe\u5b9a\u4f4d\u3002 SMOD=0; \u4e32\u53e3\u65b9\u5f0f1\uff0c2\uff0c3\u65f6\uff0c\u6ce2\u7279\u7387\u6b63\u5e38\u3002SMOD=1; \u4e32\u53e3\u65b9\u5f0f1\uff0c2\uff0c3\u65f6\uff0c\u6ce2\u7279\u7387\u52a0\u500d\u3002 \\ \\ \\ \\ \\ PD=0 \u5355\u7247\u673a\u5904\u4e8e\u6b63\u5e38\u5de5\u4f5c\u72b6\u6001\u3002PD=1 \u5355\u7247\u673a\u8fdb\u5165\u6389\u7535(Power Down)\u6a21\u5f0f\uff0c\u53ef\u7531\u5916\u90e8\u4e2d\u65ad\u6216\u786c\u4ef6\u590d\u4f4d\u6a21\u5f0f\u5524\u9192\uff0c\u8fdb\u5165\u6389\u7535\u6a21\u5f0f\u540e\uff0c\u5916\u90e8\u6676\u632f\u505c\u632f\uff0cCPU\u3001\u5b9a\u65f6\u5668\u3001\u4e32\u884c\u53e3\u5168\u90e8\u505c\u6b62\u5de5\u4f5c\uff0c\u53ea\u6709\u5916\u90e8\u4e2d\u65ad\u5de5\u4f5c\u3002 IDL=0 \u5355\u7247\u673a\u5904\u4e8e\u6b63\u5e38\u5de5\u4f5c\u72b6\u6001\u3002IDL=1 \u5355\u7247\u673a\u8fdb\u5165\u7a7a\u95f2(Idle)\u6a21\u5f0f\uff0c\u9664CPU\u4e0d\u5de5\u4f5c\u5916\uff0c\u5176\u4f59\u4ecd\u7ee7\u7eed\u5de5\u4f5c\uff0c\u5728\u7a7a\u95f2\u6a21\u5f0f\u4e0b\u53ef\u7531\u4efb\u4e00\u4e2a\u4e2d\u65ad\u6216\u786c\u4ef6\u590d\u4f4d\u5524\u9192\u3002 <p>\uff087\uff09TCON \u65f6\u949f\u63a7\u5236  8FH~88H 88H</p> D7 D6 D5 D4 D3 D2 D1 D0 TF1 TR1 TF0 TR0 IE1 IT1 IE0 IT0 T1\u6ea2\u51fa\u6807\u5fd7\u4f4d \u5b9a\u65f6\u8ba1\u6570\u56681\u63a7\u5236\u4f4d T0\u6ea2\u51fa\u6807\u5fd7\u4f4d \u5b9a\u65f6\u8ba1\u6570\u56680\u63a7\u5236\u4f4d \u5916\u90e8\u4e2d\u65adINT1\u8bf7\u6c42\u4e2d\u65ad\u6807\u5fd7\u4f4d \u5916\u90e8\u4e2d\u65adINT1\u89e6\u53d1\u65b9\u5f0f\u63a7\u5236\u4f4d \u5916\u90e8\u4e2d\u65ad0\u8bf7\u6c42\u4e2d\u65ad\u6807\u5fd7\u4f4d \u5916\u90e8\u4e2d\u65adINT0\u89e6\u53d1\u65b9\u5f0f\u63a7\u5236\u4f4d TF1=1\u8868\u793aT1\u6709\u4e2d\u65ad\u4ea7\u751f\uff08\u786c\u4ef6\u63a7\u5236\uff09\u5f53\u8f6c\u5411\u4e2d\u65ad\u670d\u52a1\u65f6\uff0c\u518d\u7531\u786c\u4ef6\u81ea\u52a8\u6e050\u3002 TR1=1\u8868\u793aT1\u5f00\u59cb\u8fd0\u884c TF0=1\u8868\u793aT0\u6709\u4e2d\u65ad\u4ea7\u751f\uff08\u786c\u4ef6\u63a7\u5236\uff09\u5f53\u8f6c\u5411\u4e2d\u65ad\u670d\u52a1\u65f6\uff0c\u518d\u7531\u786c\u4ef6\u81ea\u52a8\u6e050\u3002 TR0=1\u8868\u793aT0\u5f00\u59cb\u8fd0\u884c IE1=1\uff0cINT1\u6709\u4e2d\u65ad\u4ea7\u751f\uff08\u786c\u4ef6\u63a7\u5236\uff09\u5728\u4e2d\u65ad\u54cd\u5e94\u5b8c\u6210\u540e\u8f6c\u5411\u4e2d\u65ad\u670d\u52a1\u65f6\uff0c\u518d\u7531\u786c\u4ef6\u81ea\u52a8\u6e05\u96f6\u3002 IT1=1\u65f6\uff0cINT1\u4e3a\u8df3\u53d8\u6cbf\u89e6\u53d1\u65b9\u5f0f\uff0c\u540e\u6cbf\u8d1f\u8df3\u6709\u6548\uff1bIT1=0\u65f6\uff0cINT1\u4e3a\u7535\u5e73\u65b9\u5f0f\uff0c\u4f4e\u7535\u5e73\u6709\u6548\u3002 IE1=1\uff0cINT0\u6709\u4e2d\u65ad\u4ea7\u751f(\u786c\u4ef6\u63a7\u5236)\u5728\u4e2d\u65ad\u54cd\u5e94\u5b8c\u6210\u540e\u8f6c\u5411\u4e2d\u65ad\u670d\u52a1\u65f6\uff0c\u518d\u7531\u786c\u4ef6\u81ea\u52a8\u6e05\u96f6\u3002 IT0=1\u65f6\uff0cINT0\u4e3a\u8df3\u53d8\u6cbf\u89e6\u53d1\u65b9\u5f0f\uff0c\u540e\u6cbf\u8d1f\u8df3\u6709\u6548\uff1bIT0=0\u65f6\uff0cINT0\u4e3a\u7535\u5e73\u65b9\u5f0f\uff0c\u4f4e\u7535\u5e73\u6709\u6548\u3002 <p>\uff088\uff09\u5b9a\u65f6\u5668TMOD  89H</p> <p>TMOD\u5bc4\u5b58\u5668\u4e0d\u80fd\u4f4d\u5bfb\u5740\uff0c\u53ea\u80fd\u7528\u5b57\u8282\u4f20\u9001\u6307\u4ee4\u8bbe\u7f6e\u5176\u5185\u5bb9\u3002 \u590d\u4f4d\u540e\uff0cTMOD\uff1d0\u3002</p> <p>\u5f53GATE\uff1d0\u65f6\uff0c\u82e5TR0=1\uff0c\u63a5\u901a\u8ba1\u6570\u63a7\u5236K\uff0c\u542f\u52a8T0\u5728\u539f\u8ba1\u6570\u503c\u4e0a\u52a01\u8ba1\u6570\uff0c\u76f4\u81f3\u6ea2\u51fa\u3002\u82e5TR0\uff1d0\uff0c\u5219\u5173\u65ad\u63a7\u5236\u5f00\u5173\uff0c\u505c\u6b62\u8ba1\u6570\u3002\u5c06\u6b64\u65b9\u5f0f\u79f0\u4e3a\u8f6f\u4ef6\u542f\u52a8\u3002</p> <p>\u5f53GATE\uff1d1\uff0c\u4e14TR0\uff1d1\u65f6\uff0c\u6216\u95e8\u3001\u4e0e\u95e8\u5168\u90e8\u6253\u5f00\uff0c\u5916\u4fe1\u53f7\u7535\u5e73\u901a\u8fc7INT0\u5f15\u811a\u76f4\u63a5\u5f00\u542f\u6216\u5173\u65ad\u5b9a\u65f6\u5668\u8ba1\u6570\u3002\u8f93\u51651\u7535\u5e73\u65f6\uff0c\u5141\u8bb8\u8ba1\u6570\uff0c\u5426\u5219\u505c\u6b62\u8ba1\u6570\u3002\u79f0\u4e3a\u786c\u4ef6\u542f\u52a8\u3002</p> \u5b9a\u65f6\u56681 \u5b9a\u65f6\u56680 7 6 5 4 3 2 1 0 GATE C/T M1 M0 GATE C/T M1 M0 \u95e8\u63a7\u5236 C/T=0\uff0c\u5b9a\u65f6\u5668\u6a21\u5f0f\u3002C/T=1\uff0c\u8ba1\u6570\u5668\u6a21\u5f0f\u3002 \u7528\u6765\u9009\u62e9\u5b9a\u65f6\u8ba1/\u8ba1\u6570\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f \u7528\u6765\u9009\u62e9\u5b9a\u65f6\u8ba1/\u8ba1\u6570\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f \u95e8\u63a7\u5236 C/T=0\uff0c\u5b9a\u65f6\u5668\u6a21\u5f0f\u3002C/T=1\uff0c\u8ba1\u6570\u5668\u6a21\u5f0f\u3002 \u7528\u6765\u9009\u62e9\u5b9a\u65f6\u8ba1/\u8ba1\u6570\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f \u7528\u6765\u9009\u62e9\u5b9a\u65f6\u8ba1/\u8ba1\u6570\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f M1 M0 \u5de5\u4f5c\u65b9\u5f0f \u529f\u80fd\u63cf\u8ff0 0 0 \u65b9\u5f0f0 13\u4f4d\u8ba1\u6570\u5668 0 1 \u65b9\u5f0f1 16\u4f4d\u8ba1\u6570\u5668 1 0 \u65b9\u5f0f2 \u81ea\u52a8\u518d\u88c5\u51658\u4f4d\u8ba1\u6570\u5668 1 1 \u65b9\u5f0f3 \u5b9a\u65f6\u56680\uff1a\u5206\u4e3a\u4e24\u4e2a8\u4f4d\u8ba1\u6570\u5668\uff0c\u5b9a\u65f6\u56681\uff1a\u505c\u6b62\u8ba1\u6570 <p>\uff089\uff09\u603b\u4e2d\u65ad\u5141\u8bb8IE  0AFH~0A8H A8H</p> D7 D6 D5 D4 D3 D2 D1 D0 EA - - ES ET1 EX1 ET0 EX0 \u603b\u5141\u8bb8\u4f4d \u4e32\u884c\u53e3\u4e2d\u65ad\u5141\u8bb8\u4f4d \u5b9a\u65f6\u5668T1\u6ea2\u51fa\u4e2d\u65ad\u5141\u8bb8\u4f4d \u5916\u90e8\u4e2d\u65ad1\u5141\u8bb8\u4f4d \u5b9a\u65f6\u5668T0\u6ea2\u51fa\u4e2d\u65ad\u5141\u8bb8\u4f4d \u5916\u90e8\u4e2d\u65ad INT0\u5141\u8bb8\u4f4d EA=1\uff0cCPU\u5f00\u653e\u4e2d\u65ad ES=1\uff0c\u5141\u8bb8\u4e32\u884c\u53e3\u4e2d\u65ad ET1=1\uff0c\u5141\u8bb8T1\u4e2d\u65ad EX1=1\uff0c\u5141\u8bb8\u5916\u90e8\u4e2d\u65ad1\u4e2d\u65ad ET0=1\uff0c\u5141\u8bb8T0\u4e2d\u65ad EX0=1\uff0c\u5141\u8bb8\u5916\u90e8\u4e2d\u65ad0\u4e2d\u65ad <p>\uff089\uff09\u4e32\u884c\u63a7\u5236\u4f4dSCON 9FH~98H 98H</p> D7 D6 D5 D4 D3 D2 D1 D0 SM0 SM1 SM2 REN TB8 RB8 T1 R1 \u5de5\u4f5c\u65b9\u5f0f\u9009\u62e9\u4f4d \u5de5\u4f5c\u65b9\u5f0f\u9009\u62e9\u4f4d \u591a\u673a\u901a\u4fe1\u63a7\u5236\u4f4d\uff0c\u4e3b\u8981\u7528\u4e8e\u65b9\u5f0f2\u548c\u65b9\u5f0f3\u3002 \u5141\u8bb8\u4e32\u884c\u63a5\u6536\u4f4d\u3002 \u5728\u65b9\u5f0f2\u6216\u65b9\u5f0f3\u4e2d\uff0c\u662f\u53d1\u9001\u6570\u636e\u7684\u7b2c\u4e5d\u4f4d\uff0c\u53ef\u4ee5\u7528\u8f6f\u4ef6\u89c4\u5b9a\u5176\u4f5c\u7528\u3002 \u5728\u65b9\u5f0f2\u6216\u65b9\u5f0f3\u4e2d\uff0c\u662f\u63a5\u6536\u5230\u6570\u636e\u7684\u7b2c\u4e5d\u4f4d\uff0c\u4f5c\u4e3a\u5947\u5076\u6821\u9a8c\u4f4d\u6216\u5730\u5740\u5e27/\u6570\u636e\u5e27\u7684\u6807\u5fd7\u4f4d\u3002\u5728\u65b9\u5f0f1\u65f6\uff0c\u82e5SM2=0\uff0c\u5219RB8\u662f\u63a5\u6536\u5230\u7684\u505c\u6b62\u4f4d\u3002 \u4e32\u884c\u53e3\u53d1\u9001\u4e2d\u65ad\u8bf7\u6c42\u6807\u5fd7\u4f4d \u4e32\u884c\u53e3\u63a5\u6536\u4e2d\u65ad\u8bf7\u6c42\u6807\u5fd7\u4f4d \u5141\u8bb8\u4e32\u884c\u63a5\u6536\u63a7\u5236\u4f4d\u3002\u7531\u8f6f\u4ef6\u7f6e1\u6216\u6e050\u3002REN=1\u65f6\uff0c\u5141\u8bb8\u63a5\u6536\uff1bREN=0\u65f6\uff0c\u7981\u6b62\u63a5\u6536\u3002 \u5f53\u53d1\u9001\u5b8c\u4e00\u5e27\u4e32\u884c\u6570\u636e\u540e\uff0c\u7531\u786c\u4ef6\u7f6e1\uff0c\u5728\u8f6c\u5411\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u540e\uff0c\u7528\u8f6f\u4ef6\u6e050\u3002 \u5f53\u63a5\u6536\u5b8c\u4e00\u5e27\u4e32\u884c\u6570\u636e\u540e\uff0c\u7531\u786c\u4ef6\u7f6e1\uff1b\u5728\u8f6c\u5411\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u540e\uff0c\u7528\u8f6f\u4ef6\u6e050\u3002 SM0 SM1 \u5de5\u4f5c\u65b9\u5f0f \u529f\u80fd\u8bf4\u660e \u6ce2\u7279\u7387 0   0 \u65b9\u5f0f0 \u540c\u6b65\u79fb\u4f4d\u5bc4\u5b58\u5668\uff0c\u7528\u4e8eI/O\u6269\u5c55 \\frac{f_{soc}}{12} 0   1 \u65b9\u5f0f1 10\u4f4d\u5f02\u6b65\u6536\u53d1\u5668 \\frac{2^{smod}}{32}*T1\u6ea2\u51fa\u7387, T1\u6ea2\u51fa\u7387=\\frac{f_{osc}}{(2^n-\u8ba1\u6570\u5668\u521d\u503c)*12} 1   0 \u65b9\u5f0f2 11\u4f4d\u5f02\u6b65\u6536\u53d1\u5668 \\frac{2^{smod}}{64}*f_{osc} 1   1 \u65b9\u5f0f3 11\u4f4d\u5f02\u6b65\u6536\u53d1\u5668 \\frac{2^{smod}}{32}*T1\u6ea2\u51fa\u7387, T1\u6ea2\u51fa\u7387=\\frac{f_{osc}}{(2^n-\u8ba1\u6570\u5668\u521d\u503c)*12} <p>\uff0810\uff09\u5b9a\u65f6\u5668/\u8ba1\u6570\u5668/\u4e32\u884c\u6570\u636e</p> \u7b26\u53f7 \u5730\u5740 \u529f\u80fd\u4ecb\u7ecd TH1 8DH \u5b9a\u65f6\u5668/\u8ba1\u6570\u56681\uff08\u9ad88\u4f4d\uff09 TH0 8CH \u5b9a\u65f6\u5668/\u8ba1\u6570\u56681\uff08\u4f4e8\u4f4d\uff09 TL1 8BH \u5b9a\u65f6\u5668/\u8ba1\u6570\u56680\uff08\u9ad88\u4f4d\uff09 TL0 8AH \u5b9a\u65f6\u5668/\u8ba1\u6570\u56680\uff08\u4f4e8\u4f4d\uff09 SBUF 99H \u4e32\u884c\u53e3\u9501\u5b58\u5668\uff08\u4e24\u4e2a\uff0c\u5199\u548c\u8bfb\uff09 <p>\uff0811\uff09\u4e2d\u65ad\u4f18\u5148\u7ea7\u63a7\u5236\u5bc4\u5b58\u5668IP 0BFH~0B8H</p> D7 D6 D5 D4 D3 D2 D1 D0 / / / PS PT1 PX1 PT0 PX0 \u4e32\u884c\u4e2d\u65ad\u4f18\u5148\u7ea7\u8bbe\u5b9a\u4f4d \u5b9a\u65f6\u4e2d\u65ad1\u4f18\u5148\u7ea7\u8bbe\u5b9a\u4f4d \u5916\u90e8\u4e2d\u65adl\u4f18\u5148\u7ea7\u8bbe\u5b9a\u4f4d \u5b9a\u65f6\u4e2d\u65ad0\u4f18\u5148\u7ea7\u8bbe\u5b9a\u4f4d \u5916\u90e8\u4e2d\u65ad0\u4f18\u5148\u7ea7\u8bbe\u5b9a\u4f4d X =0,  \u4f18\u5148\u7ea7\u4e3a\u4f4e\uff1bX=1, \u4f18\u5148\u7ea7\u4e3a\u9ad8\u3002 X =0,  \u4f18\u5148\u7ea7\u4e3a\u4f4e\uff1bX=1, \u4f18\u5148\u7ea7\u4e3a\u9ad8\u3002 X =0,  \u4f18\u5148\u7ea7\u4e3a\u4f4e\uff1bX=1, \u4f18\u5148\u7ea7\u4e3a\u9ad8\u3002 X =0,  \u4f18\u5148\u7ea7\u4e3a\u4f4e\uff1bX=1, \u4f18\u5148\u7ea7\u4e3a\u9ad8\u3002 X =0,  \u4f18\u5148\u7ea7\u4e3a\u4f4e\uff1bX=1, \u4f18\u5148\u7ea7\u4e3a\u9ad8\u3002 <p>\uff0812\uff09\u5806\u6808\u6307\u9488SP 81H</p> <p>\u5806\u6808\uff1a\u53ea\u5141\u8bb8\u5728\u5176\u4e00\u7aef\u8fdb\u884c\u6570\u636e\u63d2\u5165\u548c\u6570\u636e\u5220\u9664\u64cd\u4f5c\u7684\u7ebf\u6027\u8868\u3002RST\u521d\u59cb\u5316\u4e3a07H\u3002</p> <p>\u5806\u6808\u662f\u4e3a\u5b50\u7a0b\u5e8f\u8c03\u7528\u548c\u4e2d\u65ad\u64cd\u4f5c\u800c\u8bbe\u7acb\u7684\u3002</p> <p>\u5806\u6808\u7684\u529f\u80fd\uff1a\u4fdd\u62a4\u65ad\u70b9\u548c\u4fdd\u62a4\u73b0\u573a\uff0c\u4fdd\u62a4\u65ad\u70b9\uff1a  PC\uff0c\u4fdd\u62a4\u73b0\u573a\uff1a\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9\u3002</p> <p>\u4f20\u9001\u6570\u636e\u65b9\u5f0f\uff1a\u5165\u6808\uff1aPUSH \u51fa\u6808\uff1aPOP\u3002\u5806\u6808\u64cd\u4f5c\u7684\u6700\u5927\u7279\u70b9\uff1a\u201c\u540e\u8fdb\u5148\u51fa\u201d\u3002</p> <p>\u5806\u6808\u8981\u6c42\uff1a\u5177\u6709\u8db3\u591f\u7684\u5bb9\u91cf\uff08\u6216\u8005\u8bf4\u8db3\u591f\u7684\u5806\u6808\u6df1\u5ea6\uff09\u3002</p> <p>\u5806\u6808\u5f00\u8f9f\uff1a</p> <p>1\uff09\u5916\u5806\u6808\uff1a\u5728\u4e3b\u5b58\u50a8\u5668\u4e2d\u5f00\u8f9f\u5806\u6808\uff0e\u4f8b\u59828080\uff0cZ80\u7b49\u65e9\u671f\u7684\u5fae\u578b\u673a\u3002\u4e3b\u8981\u4f18\u70b9\u662f\u5806\u6808\u5bb9\u91cf\u5927\u3002\u4f46\u5916\u5806\u6808\u7684\u64cd\u4f5c\u901f\u5ea6\u8f83\u6162\u3002</p> <p>2\uff09\u5185\u5806\u6808\uff1a\u5728CPU\u82af\u7247\u5185\u90e8\u5b58\u50a8\u5668\u4e2d\u5f00\u8f9f\u3002MCS\uff0d51\u7684\u5806\u6808\u5c31\u662f\u5f00\u8f9f\u5728\u5185\u90e8RAM\u4e2d\u3002 \u70b9\u662f\u64cd\u4f5c\u901f\u5ea6\u5feb\uff0c\u4f46\u5806\u6808\u5bb9\u91cf\u6709\u9650\u3002</p> <p>\u5806\u6808\u4f7f\u7528\u65b9\u5f0f\uff1a</p> <p>1)\uff1a\u81ea\u52a8\u65b9\u5f0f\uff1a\uff08\u4fdd\u62a4\u65ad\u70b9\uff09 </p> <p>\u5728\u8c03\u7528\u5b50\u7a0b\u5e8f\u6216\u4e2d\u65ad\u65f6\uff0c\u8fd4\u56de\u5730\u5740\uff08\u65ad\u70b9\uff09\u81ea\u52a8\u8fdb\u6808\u3002\u7a0b\u5e8f\u8fd4\u56de\u65f6\uff0c\u65ad\u70b9\u518d\u81ea\u52a8\u5f39\u56dePC.</p> <p>\u64cd\u4f5c\u7684\u7279\u70b9\uff1a\u5806\u6808\u64cd\u4f5c\u65e0\u9700\u7528\u6237\u5e72\u9884--  \u81ea\u52a8\u65b9\u5f0f\u3002</p> <p>2)\uff1a\u6307\u4ee4\u65b9\u5f0f\uff08\u4fdd\u62a4\u73b0\u573a\uff09</p> <p>\u8fdb\u6808\u6307\u4ee4:  PUSH\u51fa\u6808\u6307\u4ee4:  POP\u3002</p> <p>\u9012\u589e\u6ee1\u5806\u6808</p> <p>\uff0813\uff09\u6c47\u603b</p> \u7b26\u53f7 \u5730\u5740 \u529f\u80fd\u4ecb\u7ecd B F0H B\u5bc4\u5b58\u5668 ACC E0H \u7d2f\u52a0\u5668 PSW D0H \u7a0b\u5e8f\u72b6\u6001\u5b57 IP B8H \u4e2d\u65ad\u4f18\u5148\u7ea7\u63a7\u5236\u5bc4\u5b58\u5668 P3 B0H P3\u53e3\u9501\u5b58\u5668 IE A8H \u4e2d\u65ad\u5141\u8bb8\u63a7\u5236\u5bc4\u5b58\u5668 P2 A0H P2\u53e3\u9501\u5b58\u5668 SBUF 99H \u4e32\u884c\u53e3\u9501\u5b58\u5668 SCON 98H \u4e32\u884c\u53e3\u63a7\u5236\u5bc4\u5b58\u5668 P1 90H P1\u53e3\u9501\u5b58\u5668 TH1 8DH \u5b9a\u65f6\u5668/\u8ba1\u6570\u56681\uff08\u9ad88\u4f4d\uff09 TH0 8CH \u5b9a\u65f6\u5668/\u8ba1\u6570\u56681\uff08\u4f4e8\u4f4d\uff09 TL1 8BH \u5b9a\u65f6\u5668/\u8ba1\u6570\u56680\uff08\u9ad88\u4f4d\uff09 TL0 8AH \u5b9a\u65f6\u5668/\u8ba1\u6570\u56680\uff08\u4f4e8\u4f4d\uff09 TMOD 89H \u5b9a\u65f6\u5668/\u8ba1\u6570\u5668\u65b9\u5f0f\u63a7\u5236\u5bc4\u5b58\u5668 TCON 88H \u5b9a\u65f6\u5668/\u8ba1\u6570\u5668\u63a7\u5236\u5bc4\u5b58\u5668 DPH 83H \u6570\u636e\u5730\u5740\u6307\u9488\uff08\u9ad88\u4f4d\uff09 DPL 82H \u6570\u636e\u5730\u5740\u6307\u9488\uff08\u4f4e8\u4f4d\uff09 SP 81H \u5806\u6808\u6307\u9488 P0 80H P0\u53e3\u9501\u5b58\u5668 PCON 87H \u7535\u6e90\u63a7\u5236\u5bc4\u5b58\u5668 &gt; \u6ce8\uff1aSFR\u53ef\u4ee5\u4f4d\u5bfb\u5740\u7684\u8981\u6c42\u4e3a\u5730\u5740\u4ee50\u62168\u7ed3\u5c3e\u3002"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_2","title":"\u5e76\u884c\u8f93\u5165/\u8f93\u51fa\u7aef\u53e3\u7ed3\u6784","text":"<p>1\u3001P0\u53e3</p> <p>I/O\u53e3\u5e94\u7528\u65f6\uff1a\u201c\u63a7\u5236\u201d=0\uff1b\u6570\u636e/\u5730\u5740\u65f6\uff1a\u201c\u63a7\u5236\u201d=1\u3002</p> <p>\u7528\u4f5c\u8f93\u5165\u53e3\u65f6\uff0c\u9700\u5148\u7ed9P0.x\u53e3\u8f93\u51fa\u9ad8\u7535\u5e73\u3002MOV  P0\uff0c #0FFH</p> <p></p> <p>2\u3001P1\u53e3</p> <p>\u5f53\u7528\u4f5c\u8f93\u5165\u65f6\uff0c\u5fc5\u987b\u5148\u8f93\u51fa1\uff1bP1\u53e3\u4e3a\u51c6\u53cc\u5411\u53e3\uff1b\u5916\u63a5\u7535\u8def\u4e00\u822c\u91c7\u7528\u5171\u9633\u6781\u3002</p> <p></p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#cpu","title":"\u65f6\u949f\u7535\u8def\u4e0eCPU\u65f6\u5e8f","text":"<p>\u65f6\u949f\u7535\u8def\uff1a\u7528\u4e8e\u4ea7\u751f\u5355\u7247\u673a\u5de5\u4f5c\u6240\u9700\u8981\u7684\u65f6\u949f\u4fe1\u53f7\uff1b</p> <p>\u65f6\u5e8f\uff1a\u6307\u4ee4\u6267\u884c\u4e2d\u5404\u4fe1\u53f7\u4e4b\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\u3002</p> <p>1\u3001\u65f6\u949f\u7535\u8def (1) \u5185\u90e8\u65f6\u949f\u65b9\u5f0f</p> <p>\u200b   \u82af\u7247\u5185\u90e8\u7684\u9ad8\u589e\u76ca\u53cd\u5411\u653e\u5927\u5668\u548c\u5728\u5f15\u811aXTAL1\u548cXTAL2\u4e24\u7aef\u8de8\u63a5\u6676\u4f53\u632f\u8361\u5668\u548c\u5fae\u8c03\u7535\u5bb9\uff0c\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u7a33\u5b9a\u7684\u81ea\u6fc0\u632f\u8361\u5668\uff0c\u5176\u53d1\u51fa\u7684\u8109\u51b2\u76f4\u63a5\u8f93\u5165\u5355\u7247\u673a\u7684\u5185\u90e8\u65f6\u949f\u7535\u8def\u3002</p> <p>(2)  \u5916\u90e8\u65f6\u949f\u65b9\u5f0f</p> <p>\u200b   HMOS\u548cCHMOS\u578b\u5355\u7247\u673a\u7684\u5916\u90e8\u65f6\u949f\u7535\u8def</p> <p>\u200b   HMOS XTAL2--OUT\u65f6\u949f\u6e90 XTAL1---\u5730</p> <p>\u200b   CHMOS XTAL2--\u60ac\u7a7a XTAL1--OUT\u65f6\u949f\u6e90</p> <p>2\u3001CPU\u65f6\u5e8f</p> <p>MCS-51\u7684\u65f6\u5e8f\u5b9a\u65f6\u5355\u4f4d\u5171\u67094\u4e2a\uff0c\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u662f\uff1a\u62cd\u8282\uff0c\u72b6\u6001\u3001\u673a\u5668\u5468\u671f\u3001\u6307\u4ee4\u5468\u671f\u3002</p> <p>(1) \u62cd\u8282\u4e0e\u72b6\u6001</p> <p>\u62cd\u8282\uff08P\uff09\uff1a\u632f\u8361\u8109\u51b2\u7684\u5468\u671f\uff0c\u53c8\u79f0\u632f\u8361\u5468\u671f\u3002</p> <p>\u72b6\u6001\uff08S\uff09:  \u65f6\u949f\u4fe1\u53f7\u7684\u5468\u671f\uff0c\u53c8\u79f0\u65f6\u949f\u5468\u671f\u3002</p> <p>\u5173\u7cfb\uff1a\u632f\u8361\u9891\u7387\uff1d2\u500d\u65f6\u949f\u9891\u7387</p> <p>\u200b            \u65f6\u949f\u5468\u671f\uff1d2\u500d\u632f\u8361\u5468\u671f\uff0c</p> <p>\u5373  1S=2P\uff08\u62cd\u82821\uff08P1\uff09\uff0c\u62cd\u82822\uff08P2\uff09\uff09\u3002</p> <p>(2) \u673a\u5668\u5468\u671f</p> <p>\u673a\u5668\u5468\u671f: \u6307CPU\u8bbf\u95ee\u5b58\u50a8\u5668\u4e00\u6b21\u6240\u9700\u8981\u7684\u65f6\u95f4\u3002\u4f8b\u5982\u53d6\u6307\u4ee4\uff0c\u8bfb\u5b58\u50a8\u5668\u3001\u5199\u5b58\u50a8\u5668\u7b49\u3002</p> <p>MCS-51\u7684\u4e00\u4e2a\u673a\u5668\u5468\u671f\u5305\u62ec12\u4e2a\u632f\u8361\u5468\u671f\uff0812P\uff09\uff1d6S</p> <p>\u53736\u4e2a\u72b6\u6001\uff1aS1\uff5eS6\u3002</p> <p>\u800c\u6bcf\u4e2a\u72b6\u6001\u53c8\u5206\u4e3a\u4e24\u62cd\uff0c\u79f0\u4e3aP1\u548cP2\u3002</p> <p>\u56e0\u6b64\uff0c\u4e00\u4e2a\u673a\u5668\u5468\u671f\u4e2d\u768412\u4e2a\u632f\u8361\u5468\u671f\u8868\u793a\u4e3aS1P1\u3001S1P2\u3001S2P1\u2026\u2026\u3001S6P2\u3002</p> <p>(3) \u6307\u4ee4\u5468\u671f</p> <p>\u5b9a\u4e49\uff1a \u6267\u884c\u4e00\u6761\u6307\u4ee4\u6240\u9700\u8981\u7684\u65f6\u95f4\u79f0\u4e4b\u4e3a\u6307\u4ee4\u5468\u671f\u3002</p> <p>\u6700\u5927\u7684\u65f6\u5e8f\u5b9a\u65f6\u5355\u4f4d\uff0c\u65e0\u56fa\u5b9a\u503c\u3002</p> <p>\u6307\u4ee4\u4e0d\u540c\uff0c\u6307\u4ee4\u5468\u671f\u4e0d\u540c\u3002</p> <p>MCS-51\u7684\u6307\u4ee4\u5305\u542b\u4e00\u3001\u4e8c\u3001\u56db\u4e2a\u673a\u5668\u5468\u671f\u3002</p> <p>\u4f8b\u5982: \u5916\u63a5\u6676\u632f\u9891\u7387fOSC\u4e3a12 MHz\u65f6, MCS\u201451\u5355\u7247\u673a\u76844\u4e2a\u65f6\u95f4\u5468\u671f\u503c\u4e3a: </p> <p>\u200b            \u632f\u8361\u5468\u671f  P=1/fosc\uff1d1/12 \u03bcs; </p> <p>\u200b            \u72b6\u6001\u5468\u671f  S=2P\uff1d\u2159 \u03bcs; </p> <p>\u200b            \u673a\u5668\u5468\u671f  =6S\uff1d12P\uff1d1 \u03bcs;</p> <p>\u200b            \u6307\u4ee4\u5468\u671f  =1\u30012\u30014 \u03bcs\u3002</p> <p>3\u3001\u5178\u578b\u6307\u4ee4\u7684\u65f6\u5e8f</p> <p>\u6839\u636e\u6307\u4ee4\u4ee3\u7801\u6240\u5360\u7684\u5b57\u8282\u4e0d\u540c\uff1a\u5355\u5b57\u8282\u3001\u53cc\u5b57\u8282\u3001\u4e09\u5b57\u8282\u3002</p> <p>\u6839\u636e\u6307\u4ee4\u6267\u884c\u65f6\u95f4\u7684\u4e0d\u540c\uff1a\u5355\u673a\u5668\u5468\u671f\u3001\u53cc\u673a\u5668\u5468\u671f\u56db\u673a\u5668\u5468\u671f\u3002</p> <p>\u6267\u884c\u6307\u4ee4\u7684\u4e24\u4e2a\u9636\u6bb5\uff1a\u53d6\u6307\u4ee4\u548c\u6267\u884c\u6307\u4ee4\u3002</p> <p>ALE\uff1a\u5730\u5740\u9501\u5b58\u5141\u8bb8\u4fe1\u53f7\uff0c\u6bcf\u6709\u6548\u4e00\u6b21\u5bf9\u5e94\u5355\u7247\u673a\u8fdb\u884c\u7684\u4e00\u6b21\u8bfb\u6307\u4ee4\u64cd\u4f5c\uff0c \u53d6\u6307\u6709\u6548\u65f6\u95f4\uff1aS1P2\u548cS2P1\uff0cS4P2\u548cS5P1\u3002ALE\u51fa\u73b0\u9891\u7387\u4e3a\u632f\u8361\u8109\u51b2\u9891\u7387\u7684\u2159\u3002S1P2\u548cS2P1\u4e3a\u8bbf\u95ee\u5b58\u50a8\u5668\u53d6\u6307\u3001S4P2\u548cS5P1\u4e3a\u8bbf\u95ee\u5b58\u50a8\u5668\u6267\u884c\u8bfb\u6216\u5199\u64cd\u4f5c\u6570\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_3","title":"\u590d\u4f4d\u7535\u8def","text":"<p>1\u3001\u590d\u4f4d\uff1a \u5355\u7247\u673a\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u3002</p> <p>\u590d\u4f4d\u7684\u529f\u80fd\uff1a</p> <p>\uff081\uff09 \u8fdb\u5165\u7cfb\u7edf\u7684\u6b63\u5e38\u521d\u59cb\u5316\uff1b \uff08PC\uff09\uff1d0000H\uff0c \u5355\u7247\u673a\u4ece0000H\u5355\u5143\u6267\u884c\u7a0b\u5e8f\uff1b</p> <p>\uff082\uff09 \u4f7f\u7cfb\u7edf\u6446\u8131\u56f0\u5883\u3002</p> <p>\u590d\u4f4d\u4fe1\u53f7\u8981\u6c42\uff1a</p> <p>\u9ad8\u7535\u5e73\uff1b \u5e94\u6301\u7eed24\u4e2a\u632f\u8361\u5468\u671f\uff08\u5373\u4e24\u4e2a\u673a\u5668\u5468\u671f\u4ee5\u4e0a\uff09\u3002</p> SFR\u540d\u79f0 \u521d\u59cb\u72b6\u6001 SFR\u540d\u79f0 \u521d\u59cb\u72b6\u6001 ACC 00H TMOD 00H B 00H TCON 00H PSW 00H TH0 00H SP 07H TL0 00H DPL 00H TH1 00H DPH 00H TL1 00H P0~P3 FFH SBUF \u4e0d\u786e\u5b9a IP XXX00000B SCON 00H IE 0XX00000B PCON 0XXX0000B <p>2\u3001\u6389\u7535\u4fdd\u62a4\u65b9\u5f0f</p> <p>\u6570\u636e\u8f6c\u5b58\uff1a\u6570\u636e\u8f6c\u5b58\u662f\u901a\u8fc7\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u5b8c\u6210\u7684\uff0c\u5373\u901a\u5e38\u6240\u8bf4\u7684\u201c\u6389\u7535\u4e2d\u65ad\u201d \u3002</p> <p>\u63a5\u901a\u5907\u7528\u7535\u6e90\uff1a\u5907\u7528\u7535\u6e90\u7531\u5355\u7247\u673a\u7684RST/VPD\u5f15\u811a\u63a5\u5165\uff0c\u8981\u6c42\u7cfb\u7edf\u4e2d\u5177\u6709\u5907\u7528\u7535\u6e90\u4e0e\u7535\u6e90\u7535\u538b\u7684\u81ea\u52a8\u5207\u6362\u7535\u8def \u3002 </p> <p>3\u3001\u4f4e\u529f\u8017\u5de5\u4f5c\u65b9\u5f0f \uff08\u7531PCON\u4e2d\u7684PD\u548cIDL\u63a7\u5236\uff09</p> <p>\u7a7a\u95f2\u6a21\u5f0f(\u5f85\u673a\u6a21\u5f0f) \u6389\u7535\u4fdd\u62a4\u6a21\u5f0f(\u4f11\u7720\u6a21\u5f0f)</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_4","title":"\u5c0f\u7ed3","text":"<p>8051\u5355\u7247\u673a\u75318\u4f4d\u5fae\u5904\u7406\u5668\u3001128B\u6570\u636e\u5b58\u50a8\u5668\u30014KB\u63a9\u819c\u7a0b\u5e8f\u5b58\u50a8\u5668\u30014\u4e2a8\u4f4d\u5e76\u884cI/O\u53e3\u30011\u4e2a\u4e32\u884c\u53e3\u30012\u4e2a16\u4f4d\u7684\u5b9a\u65f6/\u8ba1\u6570\u5668\u4ee5\u53ca\u7279\u6b8a\u529f\u80fd\u5668\u7b49\u6784\u6210\u3002</p> <p>4\u4e2a8\u4f4d\u5e76\u884cI/O\u53e3\u662fP0\u3001P1\u3001P2\u548cP3\u53e3\u3002P1\u53e3\u662f\u552f\u4e00\u7684\u5355\u529f\u80fd\u53e3\uff0c\u4ec5\u80fd\u4f5c\u901a\u7528\u7684\u6570\u636eI/O\u53e3\u4f7f\u7528\uff0cP0\u3001P2\u548cP3\u53e3\u5747\u6709\u7b2c\u4e8c\u529f\u80fd\u3002</p> <p>8051\u5355\u7247\u673a\u7684\u65f6\u949f\u7535\u8def\u6709\u5185\u90e8\u65f6\u949f\u548c\u5916\u90e8\u65f6\u949f\u4e8c\u79cd\u65b9\u5f0f\u3002\u6676\u632f\u5468\u671f(\u62cd\u8282)\u3001\u65f6\u949f\u5468\u671f(\u72b6\u6001)\u3001\u673a\u5668\u5468\u671f\u548c\u6307\u4ee4\u5468\u671f\u662f\u5355\u7247\u673a\u7684\u57fa\u672c\u65f6\u5e8f\u5355\u4f4d\u3002</p> <p>\u590d\u4f4d\u64cd\u4f5c\u4f7f\u5355\u7247\u673a\u8fdb\u5165\u521d\u59cb\u5316\u72b6\u6001\u3002\u590d\u4f4d\u64cd\u4f5c\u6709\u4e0a\u7535\u81ea\u52a8\u590d\u4f4d\u548c\u6309\u952e\u624b\u52a8\u590d\u4f4d\u4e24\u79cd\u65b9\u5f0f\u3002\u590d\u4f4d\u540e\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668PC\u4e3a0\uff0cP0\uff5eP3\u4e3a0FFH\uff0cSP\u4e3a07H\uff0cSBUF\u4e0d\u5b9a\uff0cIP\u3001IE\u548cPCON\u7684\u6709\u6548\u4f4d\u4e3a0\uff0c\u5176\u4f59\u7279\u6b8a\u529f\u80fd\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u5747\u4e3a0\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#4-mcs-51","title":"\u7b2c4\u7ae0 MCS-51\u7684\u6307\u4ee4\u7cfb\u7edf","text":""},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_5","title":"\u8ba1\u7b97\u673a\u8bed\u8a00","text":"<p>\uff081\uff09\u673a\u5668\u8bed\u8a00:\u662f\u7528\u4e8c\u8fdb\u5236\u4ee3\u7801\u8868\u793a\u7684\uff0c\u80fd\u88ab\u8ba1\u7b97\u673a\u76f4\u63a5\u8bc6\u522b\u548c\u6267\u884c\u7684\u4e00\u79cd\u673a\u5668\u6307\u4ee4\u7684\u96c6\u5408\u3002</p> <p>\u4f18\u70b9\uff1a\u7075\u6d3b\u3001\u80fd\u88ab\u8ba1\u7b97\u673a\u76f4\u63a5\u6267\u884c\u3001\u901f\u5ea6\u5feb\u7b49\u3002 </p> <p>\u7f3a\u70b9\uff1a\u76f4\u89c2\u6027\u5dee\uff0c\u5f88\u5bb9\u6613\u51fa\u9519\uff0c\u901a\u7528\u6027\u5f88\u5dee\u3002</p> <p>\uff082\uff09\u6c47\u7f16\u8bed\u8a00\uff1a\u662f\u4e00\u79cd\u7528\u52a9\u8bb0\u7b26\u8868\u793a\u7684\u4ecd\u7136\u9762\u5411\u673a\u5668\u7684\u8ba1\u7b97\u673a\u8bed\u8a00\uff0c\u53c8\u5c06\u5176\u79f0\u4e3a\u7b26\u53f7\u8bed\u8a00\u3002</p> <p>\u4f18\u70b9\uff1a\u7528\u7b26\u53f7\u4ee3\u66ff\u4e86\u673a\u5668\u6307\u4ee4\u4ee3\u7801\uff0c\u7b80\u5316\u4e86\u7f16\u7a0b\u8fc7\u7a0b\uff0c\u800c\u4e14\u52a9\u8bb0\u7b26\u4e0e\u6307\u4ee4\u4ee3\u7801\u4e00\u4e00\u5bf9\u5e94\uff0c\u57fa\u672c\u4fdd\u7559\u4e86\u673a\u5668\u8bed\u8a00\u7684\u7075\u6d3b\u6027\u3002\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u5c11\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\u3002      </p> <p>\u7f3a\u70b9\uff1a \u5fc5\u987b\u5bf9\u7f16\u5199\u7684\u7a0b\u5e8f\u8fdb\u884c\u52a0\u5de5\u548c\u7ffb\u8bd1\uff0c\u624d\u80fd\u53d8\u6210\u80fd\u591f\u88ab\u8ba1\u7b97\u673a\u8bc6\u522b\u548c\u5904\u7406\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u7a0b\u5e8f\u3002\u4ecd\u7136\u662f\u9762\u5411\u673a\u5668\u7684\u8bed\u8a00\uff0c\u4f7f\u7528\u8d77\u6765\u8fd8\u662f\u6bd4\u8f83\u7e41\u7410\u8d39\u65f6\uff0c\u901a\u7528\u6027\u5dee\u3002</p> <p>\u7528\u6c47\u7f16\u8bed\u8a00\u7b49\u975e\u673a\u5668\u8bed\u8a00\u4e66\u5199\u597d\u7684\u7b26\u53f7\u7a0b\u5e8f\u79f0\u6c47\u7f16\u8bed\u8a00\u6e90\u7a0b\u5e8f\u3002</p> <p>\uff083\uff09\u9ad8\u7ea7\u8bed\u8a00\uff1a\u4e0e\u81ea\u7136\u8bed\u8a00\u76f8\u8fd1\u5e76\u4e3a\u8ba1\u7b97\u673a\u6240\u63a5\u53d7\u548c\u6267\u884c\u7684\u8ba1\u7b97\u673a\u8bed\u8a00\u79f0\u4e3a\u9ad8\u7ea7\u8bed\u8a00\uff0c\u5b83\u662f\u9762\u5411\u7528\u6237\u7684\u8bed\u8a00\u3002</p> <p>\u4f18\u70b9\uff1a\u7f16\u7a0b\u5bb9\u6613\uff0c\u4e0d\u9700\u8981\u7f16\u7a0b\u8005\u5bf9\u673a\u5668\u786c\u4ef6\u6709\u8f83\u597d\u7684\u4e86\u89e3\u3002</p> <p>\u7f3a\u70b9\uff1a\u6267\u884c\u901f\u5ea6\u6bd4\u673a\u5668\u8bed\u8a00\u548c\u6c47\u7f16\u8bed\u8a00\u6162\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_6","title":"\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u8bed\u53e5\u683c\u5f0f","text":"<p>1\u3001\u6c47\u7f16\u6307\u4ee4\u7531\u64cd\u4f5c\u7801\u6216\u4f2a\u64cd\u4f5c\u7801\u3001\u76ee\u7684\u64cd\u4f5c\u6570\u548c\u6e90\u64cd\u4f5c\u6570\u6784\u6210\uff0c\u6807\u51c6\u4e66\u5199\u683c\u5f0f\u5982\u4e0b\uff1a</p> <p>[\u6807\u53f7:]   \u64cd\u4f5c\u7801/\u4f2a\u64cd\u4f5c\u7801  [\u64cd\u4f5c\u6570]  [\uff1b\u6ce8\u91ca]</p> <p>\u6807\u53f7\uff1a\u53c8\u79f0\u6307\u4ee4\u5730\u5740\u7b26\u53f7\u3002\u5b83\u662f\u7528\u6237\u8bbe\u5b9a\u7684\u7b26\u53f7\uff0c\u4ee3\u8868\u7740\u8be5\u6761\u6307\u4ee4\u6240\u5728\u7684\u5730\u5740\u3002\u6807\u53f7\u5fc5\u987b\u4ee5\u5b57\u6bcd\u5f00\u5934\uff0c\u5176\u540e\u8ddf1~8\u4e2a\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u5e76\u4ee5\u201c\uff1a\u201d\u7ed3\u5c3e\u3002\u6807\u53f7\u4e0d\u80fd\u4e3a\u6307\u4ee4\u7cfb\u7edf\u4e2d\u7684\u6307\u4ee4\u52a9\u8bb0\u7b26\u3001CPU\u7684\u5bc4\u5b58\u5668\u540d\u4ee5\u53ca\u4f2a\u6307\u4ee4\u7b49\uff0c\u4e14\u540c\u4e00\u7a0b\u5e8f\u5185\u6807\u53f7\u5fc5\u987b\u4e92\u4e0d\u76f8\u540c\u3002 </p> <p>\u64cd\u4f5c\u7801/\u4f2a\u64cd\u4f5c\u7801\uff1a\u662f\u7528\u82f1\u6587\u7f29\u5199\u7684\u6307\u4ee4\u52a9\u8bb0\u7b26\u3002</p> <p>\u64cd\u4f5c\u7801\uff1a\u89c4\u5b9a\u4e86\u6307\u4ee4\u7684\u64cd\u4f5c\u529f\u80fd\uff0c\u5b83\u6240\u5bf9\u5e94\u7684\u6c47\u7f16\u8bed\u53e5\u79f0\u4e3a\u6307\u4ee4\u6027\u8bed\u53e5\u3002    </p> <p>\u5982\uff1aMOV  50H\uff0c#10H</p> <p>\u673a\u5668\u7801\uff1a75H\uff0c50H\uff0c10H\u3002</p> <p>\u4f2a\u64cd\u4f5c\u7801\uff1a\u8bf4\u660e\u6c47\u7f16\u7a0b\u5e8f\u5982\u4f55\u5b8c\u6210\u6c47\u7f16\u5de5\u4f5c\uff0c\u5b83\u6240\u5bf9\u5e94\u7684\u8bed\u53e5\u79f0\u4e3a\u6307\u793a\u6027\u8bed\u53e5\uff0c\u5728\u6c47\u7f16\u540e\u6ca1\u6709\u76ee\u6807\u4ee3\u7801\u3002</p> <p>\u5982\uff1aORG\uff0c END\uff0c EQU \u7b49\u3002 </p> <p>\u64cd\u4f5c\u6570\uff1a\u6307\u53c2\u52a0\u64cd\u4f5c\u7684\u6570\u636e\u6216\u6570\u636e\u6240\u5728\u7684\u5730\u5740\u3002\u5728MCS-51\u5355\u7247\u673a\u4e2d\uff0c\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f1\u30012\u30013\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u6ca1\u6709\u3002</p> <p>\u89c4\u5b9a\uff1a\u64cd\u4f5c\u7801/\u4f2a\u64cd\u4f5c\u7801\u548c\u64cd\u4f5c\u6570\u4e4b\u95f4\u5fc5\u987b\u7528\u7a7a\u683c\u5206\u5f00\uff0c\u64cd\u4f5c\u6570\u4e0e\u64cd\u4f5c\u6570\u4e4b\u95f4\u5fc5\u987b\u7528\u9017\u53f7\u5206\u5f00\u3002</p> <p>\u6ce8\u91ca\uff1a\u589e\u52a0\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\uff0c\u4ee5\u201c\uff1b\u201d\u53f7\u5f00\u5934\u3002 </p> <p>2\u3001\u64cd\u4f5c\u6570\u7684\u7c7b\u578b</p> <p>\u7acb\u5373\u6570 #30H</p> <p>\u5bc4\u5b58\u5668\u64cd\u4f5c\u6570 A\uff0cR0</p> <p>\u5b58\u50a8\u5668\u64cd\u4f5c\u6570 20H</p> <p>3\u3001MCS-51\u7cfb\u5217\u5355\u7247\u673a\u6307\u4ee4\u683c\u5f0f\u53ca\u5206\u7c7b</p> <p>\u5355\u5b57\u8282\u6307\u4ee4\u3001\u53cc\u5b57\u8282\u6307\u4ee4\u3001\u4e09\u5b57\u8282\u6307\u4ee4</p> <p>4\u3001MCS-51\u6c47\u7f16\u8bed\u8a00\u4f2a\u6307\u4ee4</p> <p>4.1 ORG\uff08Origin\uff09  \u6c47\u7f16\u8d77\u59cb\u5730\u5740\u547d\u4ee4</p> <p>\u529f\u80fd\uff1a\u7528\u4e8e\u89c4\u5b9a\u76ee\u6807\u7a0b\u5e8f\u7684\u8d77\u59cb\u5730\u5740\u3002</p> <p>[\u6807\u53f7\uff1a]  ORG   \u5730\u5740</p> <p>\u5730\u5740\u9879\uff1a16\u4f4d\u7edd\u5bf9\u5730\u5740\uff0c\u4e5f\u53ef\u4ee5\u7528\u6807\u53f7\u6216\u8868\u8fbe\u5f0f\u8868\u793a\u3002       </p> <p>\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u4e2d\uff0c\u53ef\u591a\u6b21\u4f7f\u7528ORG\u6307\u4ee4\u4ee5\u89c4\u5b9a\u4e0d\u540c\u7a0b\u5e8f\u6bb5\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\u5730\u5740\u5e94\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u6392\u5217\uff0c\u4e0d\u5141\u8bb8\u91cd\u53e0\u3002</p> <p>4.2 END\uff08END of assembly\uff09\u6c47\u7f16\u7ec8\u6b62\u547d\u4ee4            </p> <p>\u529f\u80fd\uff1a\u7528\u4e8e\u7ec8\u6b62\u6e90\u7a0b\u5e8f\u7684\u6c47\u7f16\u5de5\u4f5c\u3002</p> <p>\u683c\u5f0f\uff1a  [\u6807\u53f7\uff1a]   END   [\u8868\u8fbe\u5f0f]</p> <p>\u6ce8\u610f\uff1a\u53ea\u6709\u4e3b\u7a0b\u5e8f\u6a21\u5757\u624d\u6709\u201c\u8868\u8fbe\u5f0f\u201d \u9879\uff0c\u4e14\u201c\u8868\u8fbe\u5f0f\u201d\u7684\u503c\u7b49\u4e8e\u8be5\u7a0b\u5e8f\u6a21\u5757\u7684\u5165\u53e3\u5730\u5740\u3002\u800c\u5176\u4ed6\u7a0b\u5e8f\u6a21\u5757\u5c31\u6ca1\u6709\u201c\u8868\u8fbe\u5f0f\u201d\u9879\u3002\u201c\u6807\u53f7\uff1a\u201d\u4e5f\u662f\u9009\u62e9\u9879\u3002</p> <p>\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u53ea\u80fd\u6709\u4e00\u4e2aEND\u547d\u4ee4\u3002</p> <p>4.3 DB\uff08Define Byte\uff09  \u5b9a\u4e49\u6570\u636e\u5b57\u8282\u547d\u4ee4</p> <p>\u529f\u80fd\uff1a\u7528\u4e8e\u4ece\u6307\u5b9a\u7684\u5730\u5740\u5355\u5143\u5f00\u59cb\uff0c\u5728\u7a0b\u5e8f\u5b58\u50a8\u5668\u4e2d\u5b9a\u4e49\u5b57\u8282\u6570\u636e\u3002    </p> <pre><code>ORG  8100H\nTAB\uff1a DB     0C0H,  0F9H,  0A4H,  0B0H\n</code></pre> <p>4.4 DW\uff08Define Word\uff09 \u5b9a\u4e49\u6570\u636e\u5b57\u547d\u4ee4</p> <p>\u529f\u80fd\uff1a\u7528\u4e8e\u4ece\u6307\u5b9a\u5730\u5740\u5f00\u59cb\uff0c\u5728\u7a0b\u5e8f\u5b58\u50a8\u5668\u5355\u5143\u4e2d\u5b9a\u4e4916\u4f4d\u7684\u6570\u636e\u5b57\u3002</p> <p>\u5b58\u653e\u89c4\u5219\uff1a\u9ad88\u4f4d\u5728\u524d\uff08\u4f4e\u5730\u5740\uff09\uff0c\u4f4e8\u4f4d\u5728\u540e\uff08\u9ad8\u5730\u5740\uff09\u3002</p> <pre><code>ORG  1100H\nDATA2:  DW     3478H, 10H, -1\n</code></pre> <p>\u6ce8\u610f\uff1aDB\u548cDW\u5b9a\u4e49\u7684\u6570\u8868\uff0c\u6570\u7684\u4e2a\u6570\u4e0d\u5f97\u8d85\u8fc780\u4e2a\u3002\u5982\u679c\u6570\u636e\u7684\u6570\u76ee\u8f83\u591a\u65f6\uff0c\u53ef\u4f7f\u7528\u591a\u4e2a\u5b9a\u4e49\u547d\u4ee4\u3002\u5728 MCS-51\u7a0b\u5e8f\u8bbe\u8ba1\u5e94\u7528\u4e2d\uff0c\u5e38\u4ee5DB\u5b9a\u4e49\u6570\u636e\uff0c\u4ee5DW\u5b9a\u4e49\u5730\u5740\u3002</p> <p>4.5 DS\uff08Define Storage\uff09  \u5b9a\u4e49\u5b58\u50a8\u533a\u547d\u4ee4</p> <p>\u529f\u80fd\uff1a\u7528\u4e8e\u4ece\u6307\u5b9a\u5730\u5740\u5f00\u59cb\uff0c\u4fdd\u7559\u6307\u5b9a\u6570\u76ee\u7684\u5b57\u8282\u5355\u5143\u4e3a\u5b58\u50a8\u533a\uff0c\u4f9b\u7a0b\u5e8f\u8fd0\u884c\u4f7f\u7528\u3002\u6c47\u7f16\u65f6\u5bf9\u8fd9\u4e9b\u5355\u5143\u4e0d\u8d4b\u503c\u3002</p> <p>\u683c\u5f0f\uff1a         [\u6807\u53f7\uff1a]      DS      16\u4f4d\u6570\u8868</p> <pre><code>ORG   8100H\nDS    08H\n</code></pre> <p>\u6ce8\u610f\uff1a\u5bf9MSC-51\u5355\u7247\u673a\u6765\u8bf4\uff0cDB\u3001DW\u3001DS\u547d\u4ee4\u53ea\u80fd\u5bf9\u7a0b\u5e8f\u5b58\u50a8\u5668\u4f7f\u7528\uff0c\u4e0d\u80fd\u5bf9\u6570\u636e\u5b58\u50a8\u5668\u4f7f\u7528\u3002</p> <p>4.6 EQU\uff08Equate\uff09  \u8d4b\u503c\u547d\u4ee4</p> <p>\u529f\u80fd\uff1a\u7528\u4e8e\u7ed9\u5b57\u7b26\u540d\u79f0\u8d4b\u4e88\u4e00\u4e2a\u7279\u5b9a\u503c\u3002\u8d4b\u503c\u4ee5\u540e\uff0c\u5176\u503c\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u6709\u6548\u3002</p> <p>\u683c\u5f0f\uff1a\u5b57\u7b26\u540d\u79f0    EQU    \u8d4b\u503c\u9879</p> <p>\u201c\u8d4b\u503c\u9879\u201d\uff1a\u53ef\u4ee5\u662f\u5e38\u6570\u3001\u5730\u5740\u3001\u6807\u53f7\u6216\u8868\u8fbe\u5f0f\u3002 </p> <p>4.7 DATA  \u6570\u636e\u5730\u5740\u8d4b\u503c\u547d\u4ee4</p> <p>\u683c\u5f0f\uff1a\u5b57\u7b26\u540d\u79f0    DATA   \u9879</p> <p>\u529f\u80fd\uff1a\u4e0eEQU\u57fa\u672c\u7c7b\u4f3c\uff0c\u4f46\u6709\u4ee5\u4e0b\u5dee\u522b\u3002</p> <p>EQU\u5b9a\u4e49\u7684\u5b57\u7b26\u540d\u79f0\u5fc5\u987b\u5148\u5b9a\u4e49\u540e\u4f7f\u7528\uff0c\u800cDATA\u5b9a\u4e49\u7684\u5b57\u7b26\u540d\u53ef\u4ee5\u5148\u4f7f\u7528\u540e\u5b9a\u4e49\u3002</p> <p>\u7528EQU\u53ef\u4ee5\u628a\u4e00\u4e2a\u6c47\u7f16\u7b26\u53f7\u8d4b\u7ed9\u5b57\u7b26\u540d\u79f0\uff0c\u5982\u4e0a\u4f8b\u4e2d\u7684R1\uff0c\u800cDATA\u53ea\u80fd\u628a\u6570\u636e\u8d4b\u7ed9\u5b57\u7b26\u540d\u3002</p> <p>4.8 BIT   \u4f4d\u5b9a\u4e49\u547d\u4ee4</p> <p>\u529f\u80fd\uff1a    \u7528\u4e8e\u7ed9\u5b57\u7b26\u540d\u79f0\u8d4b\u4ee5\u4f4d\u5730\u5740\u3002</p> <p>\u683c\u5f0f\uff1a    \u5b57\u7b26\u540d\u79f0    BIT    \u4f4d\u5730\u5740</p> <p>\u5176\u4e2d\u201c\u4f4d\u5730\u5740\u201d\u53ef\u4ee5\u662f\u7edd\u5bf9\u5730\u5740\uff0c\u4e5f\u53ef\u4ee5\u662f\u7b26\u53f7\u5730\u5740\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_7","title":"\u5bfb\u5740\u65b9\u5f0f","text":"<p>\u5bfb\u5740\uff1a\u83b7\u5f97\u64cd\u4f5c\u6570\u6240\u5728\u7684\u5730\u5740\u7684\u65b9\u6cd5\u3002</p> <p>7\u79cd\u5bfb\u5740\u65b9\u5f0f\uff1a\u7acb\u5373\u5bfb\u5740\u3001\u5bc4\u5b58\u5668\u5bfb\u5740\u3001\u76f4\u63a5\u5bfb\u5740\u3001\u5bc4\u5b58\u5668\u95f4\u63a5\u5bfb\u5740\u3001\u57fa\u5740\u52a0\u53d8\u5740\u5bfb\u5740\u3001\u76f8\u5bf9\u5bfb\u5740\u3001\u4f4d\u5bfb\u5740\u3002</p> <p>1\u3001\u7acb\u5373\u5bfb\u5740</p> <p>\u6307\u4ee4\u4e2d\u76f4\u63a5\u7ed9\u51fa\u64cd\u4f5c\u6570\u7684\u5bfb\u5740\u65b9\u5f0f\u3002</p> <p>\u7acb\u5373\u6570\uff1a8\u4f4d\u621616\u4f4d\u3002</p> <p>2\u3001\u76f4\u63a5\u5bfb\u5740</p> <p>\u6307\u4ee4\u4e2d\u76f4\u63a5\u7ed9\u51fa\u64cd\u4f5c\u6570\u6240\u5728\u5730\u5740\u7684\u5bfb\u5740\u65b9\u5f0f\u3002</p> <p>\u64cd\u6240\u6570\u6240\u5728\u533a\u57df\uff1a</p> <p>\uff081\uff09\u5185\u90e8RAM\u7684\u4f4e128\u5355\u5143\uff1b</p> <p>\uff082\uff09\u7279\u6b8a\u529f\u80fd\u5bc4\u5b58\u5668\u3002</p> <p>3\u3001\u5bc4\u5b58\u5668\u5bfb\u5740</p> <p>\u4ee5\u901a\u7528\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u4e3a\u64cd\u4f5c\u6570\u7684\u5bfb\u5740\u65b9\u5f0f\u3002</p> <p>\u4f8b\u5982\uff1aMOV  20H\uff0cA       \uff1b 20H \u2190\uff08 A \uff09</p> <p>\u53ef\u7528\u7684\u5bc4\u5b58\u5668\uff1a\u901a\u7528\u5bc4\u5b58\u5668R0~R7\u548c\u82e5\u5e72SFR\uff0c\u4f8b\u5982\uff0cA\uff0cB\u548cDPTR\u3002</p> <p>\u5176\u4e2dB\u4ec5\u5728\u4e58\u9664\u6cd5\u6307\u4ee4\u4e2d\u4e3a\u5bc4\u5b58\u5668\u5bfb\u5740\uff0c\u5728\u5176\u4ed6\u6307\u4ee4\u4e2d\u4e3a\u76f4\u63a5\u5bfb\u5740\u3002A\u65e2\u53ef\u4ee5\u662f\u76f4\u63a5\u5bfb\u5740\uff0c\u4e5f\u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u5bfb\u5740\u3002 </p> <p>\u76f4\u63a5\u5bfb\u5740\u548c\u5bc4\u5b58\u5668\u5bfb\u5740\u7684\u5dee\u522b\u5728\u4e8e\u76f4\u63a5\u5bfb\u5740\u662f\u4ee5\u64cd\u4f5c\u6570\u6240\u5728\u7684\u5355\u5143\u5730\u5740(\u5360\u4e00\u4e2a\u5b57\u8282)\u51fa\u73b0\u5728\u6307\u4ee4\u7801\u4e2d\uff0c\u800c\u5bc4\u5b58\u5668\u5bfb\u5740\u662f\u5bc4\u5b58\u5668\u7f16\u7801\u51fa\u73b0\u5728\u6307\u4ee4\u7801\u4e2d\u3002\u7531\u4e8e\u53ef\u7528\u4f5c\u5bc4\u5b58\u5668\u5bfb\u5740\u7684\u5bc4\u5b58\u5668\u5c11\u3001\u7f16\u7801\u4f4d\u6570\u5c11(\u5c11\u4e8e\u4e09\u4f4d\u4e8c\u8fdb\u5236\u6570)\uff0c\u901a\u5e38\u64cd\u4f5c\u7801\u548c\u5bc4\u5b58\u5668\u7f16\u7801\u5408\u7528\u4e00\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u5bc4\u5b58\u5668\u5bfb\u5740\u7684\u6307\u4ee4\u673a\u5668\u7801\u77ed\uff0c\u6267\u884c\u5feb\u3002</p> <p>4\u3001\u5bc4\u5b58\u5668\u95f4\u63a5\u5bfb\u5740</p> <p>\u4ee5\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9\u4e3a\u5730\u5740\uff0c\u4ee5\u8be5\u5730\u5740\u4e2d\u7684\u5185\u5bb9\u4e3a\u64cd\u4f5c\u6570\u7684\u5bfb\u5740\u65b9\u5f0f\u79f0\u4e3a\u5bc4\u5b58\u5668\u95f4\u63a5\u5bfb\u5740\u3002</p> <p>\u53ef\u7528\u7684\u5bc4\u5b58\u5668\uff1aR0\u3001R1\u548cDPTR\u3002</p> <p>MOV A\uff0c\uff20R0   \uff1bA\u2190((R0))</p> <p>\u5bc4\u5b58\u5668\u95f4\u63a5\u5bfb\u5740\u7684\u5bfb\u5740\u8303\u56f4\u4e3a\u7247\u5185RAM\u548c\u7247\u5916RAM\u3002</p> <p>\u5bc4\u5b58\u5668\u95f4\u63a5\u5bfb\u5740\u7684\u5bfb\u5740\u8303\u56f4\uff1a\u7247\u5185RAM\u548c\u7247\u5916RAM\u3002</p> <p>\u5f53\u5bfb\u5740\u7247\u5185RAM\u65f6\uff0c\u4f7f\u7528R0\u6216R1\u4f5c\u95f4\u5740\u5bc4\u5b58\u5668\uff0c\u5176\u901a\u7528\u5f62\u5f0f\u4e3a @Ri\uff08i=0\u62161\uff09 \u3002</p> <p>\u5f53\u5bfb\u5740\u7247\u5916RAM\u65f6\uff0c\u4f7f\u7528DPTR\u4f5c\u95f4\u5740\u5bc4\u5b58\u5668\uff0c\u5176\u901a\u7528\u5f62\u5f0f\u4e3a @DPTR\u3002</p> <p>5\u3001\u53d8\u5740\u5bfb\u5740(\u6216\u57fa\u5740\u52a0\u53d8\u5740\u5bfb\u5740)</p> <p>\u4ee5DPTR\u6216PC\u4f5c\u57fa\u5740\u5bc4\u5b58\u5668\uff0c\u7d2f\u52a0\u5668A\u4f5c\u53d8\u5740\u5bc4\u5b58\u5668\uff0c\u5e76\u4ee5\u4e24\u8005\u5185\u5bb9\u76f8\u52a0\u5f62\u6210\u768416\u4f4d\u5730\u5740\u4f5c\u4e3a\u64cd\u4f5c\u6570\u5730\u5740\u7684\u5bfb\u5740\u65b9\u5f0f\u79f0\u4e3a\u53d8\u5740\u5bfb\u5740\uff0c\u6216\u57fa\u5740\u52a0\u53d8\u5740\u5bfb\u5740\u65b9\u5f0f\u3002</p> <p>\u5bfb\u5740\u7a7a\u95f4\uff1a\u7a0b\u5e8f\u5b58\u50a8\u5668ROM\u3002</p> <p>\u6307\u4ee4\uff1aMOVC</p> <p>\u53d8\u5740\u5bfb\u5740\u65b9\u5f0f\u53ea\u80fd\u5bf9\u7a0b\u5e8f\u5b58\u50a8\u5668\u8fdb\u884c\u5bfb\u5740\uff0c\u6216\u8005\u8bf4\u5b83\u662f\u4e13\u95e8\u9488\u5bf9\u7a0b\u5e8f\u5b58\u50a8\u5668\u7684\u5bfb\u5740\u65b9\u5f0f\u3002</p> <p>\u53d8\u5740\u5bfb\u5740\u7684\u6307\u4ee4\u53ea\u6709\u4e09\u6761</p> <p>MOVC    A\uff0c\uff20A\uff0bDPTR   MOVC    A\uff0c\uff20A\uff0bPC    JMP  \uff20A\uff0bDPTR</p> <p>\u5176\u4e2d\u524d\u4e24\u6761\u662f\u7a0b\u5e8f\u5b58\u50a8\u5668\u8bfb\u6307\u4ee4\uff0c\u540e\u4e00\u6761\u662f\u65e0\u6761\u4ef6\u8f6c\u79fb\u6307\u4ee4\u3002</p> <p>\u5c3d\u7ba1\u53d8\u5740\u5bfb\u5740\u65b9\u5f0f\u64cd\u4f5c\u8f83\u4e3a\u590d\u6742\uff0c\u4f46\u53d8\u5740\u5bfb\u5740\u6307\u4ee4\u90fd\u662f\u4e00\u5b57\u8282\u6307\u4ee4\u3002 </p> <p>6\u3001\u76f8\u5bf9\u5bfb\u5740 </p> <p>\u5bfb\u5740\u65b9\u5f0f\u4e3b\u8981\u7528\u4e8e\u901a\u8fc7\u4fee\u6539PC\u503c\u800c\u5b9e\u73b0\u7a0b\u5e8f\u7684\u5206\u652f\u8f6c\u79fb\u3002 </p> <p>\u5728\u6c47\u7f16\u8bed\u8a00\u4e2d\uff0c\u76f8\u5bf9\u8f6c\u79fb\u6307\u4ee4\u540e\u7ed9\u51fa\u7684\u5730\u5740\u5373\u4e3a\u7a0b\u5e8f\u7684\u76ee\u6807\u5730\u5740. </p> <p>\u6ce8\u610f: \u5728\u673a\u5668\u8bed\u8a00\u4e2d\u76f8\u5bf9\u8f6c\u79fb\u6307\u4ee4\u6307\u4ee4\u4ee3\u7801\u540e\u8ddf\u7684\u4e0d\u662f\u6c47\u7f16\u8bed\u8a00\u4e2d\u7ed9\u51fa\u7684\u76ee\u6807\u5730\u5740\uff0c\u800c\u662f\u8be5\u76ee\u6807\u5730\u5740\u548c\u7a0b\u5e8f\u8ba1\u6570\u5668PC\u7684\u5f53\u524d\u503c\uff08\u6307\u8df3\u8f6c\u6307\u4ee4\u7684\u4e0b\u6761\u6307\u4ee4\u7684\u5730\u5740\uff09\u4e4b\u95f4\u7684\u76f8\u5bf9\u504f\u5deerel\u3002 </p> <p>7\u3001\u4f4d\u5bfb\u5740\u65b9\u5f0f</p> <p>\u5728\u8fdb\u884c\u4f4d\u64cd\u4f5c\u65f6\uff0c\u501f\u52a9\u4e8e\u8fdb\u4f4d\u4f4dC\u4f5c\u4e3a\u64cd\u4f5c\u7d2f\u52a0\u5668\u3002</p> <p>\u5bf9\u4e8e\u7279\u6b8a\u529f\u80fd\u5bc4\u5b58\u5668\u4e2d\u5177\u6709\u4f4d\u5730\u5740\u548c\u4f4d\u540d\u79f0\u7684\u4f4d\uff0c\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u56db\u79cd\u65b9\u6cd5\u8868\u793a.</p> <p>(1) \u4f4d\u540d\u79f0\u8868\u793a\u65b9\u6cd5\uff1aCLR  CY</p> <p>(2) \u4f4d\u5730\u5740\u8868\u793a\u6cd5\uff1aCLR  0D7H</p> <p>(3) \u5355\u5143\u5730\u5740\u52a0\u4f4d\u7684\u8868\u793a\u65b9\u6cd5\uff1aCLR  0D0H.7 </p> <p>(4) \u4e13\u7528\u5bc4\u5b58\u5668\u7b26\u53f7\u52a0\u4f4d\u7684\u8868\u793a\u65b9\u6cd5\uff1aCLR  PSW.7</p> <p>\u6ce8\uff1a\u6e90\u64cd\u4f5c\u6570\u548c\u76ee\u7684\u64cd\u4f5c\u6570\u5404\u6709\u81ea\u5df1\u7684\u5bfb\u5740\u65b9\u5f0f\u3002          MOV 50H\uff0c R1</p> <p>\u6e90\u64cd\u4f5c\u6570\uff1a\u5bc4\u5b58\u5668\u5bfb\u5740\u65b9\u5f0f\uff0c</p> <p>\u76ee\u7684\u64cd\u4f5c\u6570\uff1a\u76f4\u63a5\u5bfb\u5740\u65b9\u5f0f\uff0c</p> <p>\u6307\u4ee4\u7684\u529f\u80fd\uff1a\u628a\u6309\u5bc4\u5b58\u5668\u5bfb\u5740\u53d6\u51fa\u7684R1\u5185\u5bb9\u518d\u4ee5\u76f4\u63a5\u5bfb\u5740\u65b9\u5f0f\u5b58\u653e\u4e8e\u5185\u90e8RAM\u768450H\u5355\u5143\u4e2d\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_8","title":"\u6307\u4ee4\u7cfb\u7edf","text":"<p>\u4e94\u5927\u7c7b\uff1a\u6570\u636e\u4f20\u9001\u7c7b\u6307\u4ee4\u3001\u7b97\u672f\u8fd0\u7b97\u7c7b\u6307\u4ee4\u3001\u903b\u8f91\u8fd0\u7b97\u53ca\u79fb\u4f4d\u7c7b\u6307\u4ee4\u3001\u63a7\u5236\u8f6c\u79fb\u7c7b\u6307\u4ee4\u4f4d\u64cd\u4f5c\u7c7b\u6307\u4ee4\u3002</p> <p>1\u3001\u6570\u636e\u4f20\u9001\u7c7b\u6307\u4ee4</p> <p>\u6307\u4ee4\u529f\u80fd\uff1a\u4e00\u822c\u662f\u628a\u6e90\u64cd\u4f5c\u6570\u4f20\u8f93\u5230\u76ee\u7684\u64cd\u4f5c\u6570\uff0c\u6307\u4ee4\u6267\u884c\u540e\uff0c\u6e90\u64cd\u4f5c\u6570\u4e0d\u53d8\uff0c\u800c\u76ee\u7684\u64cd\u4f5c\u6570\u4fee\u6539\u4e3a\u6e90\u64cd\u4f5c\u6570\u3002 </p> <p>\u5bf9\u5916\u90e8RAM\u6570\u636e\u4f20\u9001\u6307\u4ee4\u4f5c\u5982\u4e0b\u8bf4\u660e\uff1a</p> <p>\u2460  \u5916\u90e8\u6570\u636e\u5b58\u50a8\u5668\u6570\u636e\u4f20\u9001\u6307\u4ee4\u5c31\u662f\u5916\u90e8RAM\u7684\u8bfb\u5199\u6307\u4ee4\u3002</p> <p>\u2461  \u5916\u90e8RAM\u6570\u636e\u4f20\u9001\u6307\u4ee4\u4e0e\u5185\u90e8RAM\u6570\u636e\u4f20\u9001\u6307\u4ee4\u7684\u52a9\u8bb0\u7b26\u4e0d\u540c\u3002</p> <p>\u200b   \u5185\u90e8RAM\uff1aMOV\uff0c</p> <p>\u200b   \u5916\u90e8RAM\uff1aMOVX\u3002    \u589e\u52a0\u7684\u201cX\u201d\u8868\u793a\u5916\u90e8\u4e4b\u610f\u3002</p> <p>\u2462 \u5916\u90e8RAM\u4f20\u9001\uff0c\u53ea\u80fd\u901a\u8fc7\u7d2f\u52a0\u5668A\u8fdb\u884c\u3002 </p> <p>MOX \u5916\u90e8RAM</p> <p>MOV \u5185\u90e8RAM</p> <p>MOVC  A\uff0c@A+PC\uff1bPC\u7684\u67e5\u8868\u8303\u56f4\u5728256B\u5185\uff0c\u79f0\u8fd1\u7a0b\u67e5\u8868\u3002</p> <p>MOVC  A\uff0c@A+DPTR \uff1bDPTR\u53ef\u6307\u541164KB\u7a7a\u95f4\uff0c\u79f0\u8fdc\u7a0b\u67e5\u8868\u3002</p> <p>\u6574\u5b57\u8282\u4ea4\u6362\u6307\u4ee4 XCH</p> <p>\u534a\u5b57\u8282\u4ea4\u6362\u6307\u4ee4 XCHD</p> <p>\u7d2f\u52a0\u5668\u9ad8\u4f4e\u534a\u5b57\u8282\u4ea4\u6362\u6307\u4ee4 SWAP</p> <p>PUSH    direct    \uff1bSP\u2190\uff08SP\uff09+1\uff0c\uff08SP\uff09\u2190\uff08direct\uff09</p> <p>POP     direct    \uff1bdirect\u2190((SP))\uff0cSP\u2190\uff08SP\uff09\uff0d1</p> <p>\u6ce8\u610f\uff1a\u4f7f\u7528\u5806\u6808\u524d\uff0c\u9700\u8bbe\u5b9aSP\u7684\u521d\u59cb\u503c\u3002</p> <p>\u5bfb\u5740\u65b9\u5f0f\uff1a \u4ee5SP\u4e3a\u95f4\u5740\u5bc4\u5b58\u5668\u7684\u95f4\u63a5\u5bfb\u5740\u65b9\u5f0f\u3002</p> <p>\u6ce8\uff1a\u6570\u636e\u4f20\u9001\u7c7b\u6307\u4ee4\u4e00\u822c\u4e0d\u5f71\u54cd\u7a0b\u5e8f\u72b6\u6001\u5b57PSW\uff0c \u4f46\u5806\u6808\u6307\u4ee4\uff08PUSH\u548cPOP\uff09\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u72b6\u6001\u5b57PSW\u3002</p> <p>2\u3001\u7b97\u672f\u8fd0\u7b97\u7c7b\u6307\u4ee4</p> <p>2.1 \u52a0\u6cd5\u6307\u4ee4\u7ec4\uff08ADD\uff09</p> <p>\u52a0\u6cd5\u8fd0\u7b97\u5f71\u54cdPSW\u4f4d\u7684\u72b6\u6001\u3002\u5982\u679c\u4f4d3\u6709\u8fdb\u4f4d\uff0c\u5219\u8f85\u52a9\u4f4d\u6807\u5fd7AC\u7f6e1\uff0c\u5426\u5219AC\u6e050\uff1b\u5982\u679c\u4f4d7\u6709\u8fdb\u4f4d\uff0c\u5219\u8fdb\u4f4d\u6807\u5fd7CY\u7f6e1\uff0c\u5426\u5219CY\u6e050\u3002\u4e24\u4e2a\u5e26\u7b26\u53f7\u6570\u76f8\u52a0\uff0c\u8fd8\u6709\u6ea2\u51fa\u7684\u95ee\u9898\u3002\u5982\u679c\u8fd0\u7b97\u7ed3\u679c\u4f7f\u6ea2\u51fa\u6807\u5fd7OV\u7f6e1\uff0c\u5219\u8868\u793a\u6709\u6ea2\u51fa\u51fa\u73b0\u3002</p> <p>2.2 \u5e26\u8fdb\u4f4d\u52a0\u6cd5\u6307\u4ee4\u7ec4 ADDC</p> <p>\u4e09\u4e2a\u6570\u53c2\u52a0\u8fd0\u7b97\uff1a\u7d2f\u52a0\u5668A\uff0c\u4e0d\u540c\u5bfb\u5740\u65b9\u5f0f\u7684\u52a0\u6570\uff0c\u4ee5\u53ca==\u8fdb\u4f4d\u6807\u5fd7\u4f4dCY==\uff0c\u8fd0\u7b97\u7ed3\u679c\u9001\u7d2f\u52a0\u5668A\u3002</p> <p>2.3 \u5e26\u501f\u4f4d\u51cf\u6cd5\u6307\u4ee4\u7ec4</p> <p>SUBB    A\uff0cRn        \uff1b A\u2190\uff08A\uff09\uff0d\uff08Rn\uff09\uff0d\uff08CY\uff09</p> <p>\u82e5\u8fdb\u884c\u4e0d\u5e26\u501f\u4f4d\u7684\u51cf\u6cd5\u8fd0\u7b97\uff0c\u9700\u7528CLR  C \u628a\u8fdb\u4f4d\u6807\u5fd7\u4f4d\u6e050\u5373\u53ef\u3002</p> <p>\u5e26\u501f\u4f4d\u51cf\u6cd5\u6307\u4ee4\u5f71\u54cdPSW\u7684\u72b6\u6001:</p> <p>\u5982\u679c\u4f4d3\u6709\u501f\u4f4d\uff0c\u5219AC\u7f6e1\uff0c\u5426\u5219\u6e050\uff1b</p> <p>\u5982\u679c\u4f4d7\u6709\u501f\u4f4d\uff0c\u5219CY\u7f6e1\uff0c\u5426\u5219CY\u6e050\uff1b</p> <p>\u53e6\u5916\uff0c\u4e24\u4e2a\u5e26\u7b26\u53f7\u6570\u76f8\u51cf\u4e5f\u6709\u6ea2\u51fa\u7684\u95ee\u9898\uff0c\u5982\u6ea2\u51fa\uff0c\u5219OV\u7f6e1\uff0c\u5426\u5219\uff0c\u6e050\u3002</p> <p>2.4 \u52a01/\u51cf1/\u4e58\u9664\u6307\u4ee4\u7ec4</p> <p>INC   DPTR</p> <p>\u52a01\u6307\u4ee4\u7684\u64cd\u4f5c\u4e0d\u5f71\u54cd\u7a0b\u5e8f\u72b6\u6001\u5b57PSW\u7684\u72b6\u6001, \u9664INC A\u5bf9P\u5916\u3002p \u2194 \u5947\u5076\u6821\u9a8c\u4f4d</p> <p>\u51cf1\u6307\u4ee4\u7684\u64cd\u4f5c\u4e0d\u5f71\u54cd\u7a0b\u5e8f\u72b6\u6001\u5b57PSW\u7684\u72b6\u6001, \u9664DEC A\u5bf9P\u5916\u3002</p> <p>51\u6307\u4ee4\u7cfb\u7edf\u4e2d\uff0c\u53ea\u6709\u6570\u636e\u6307\u9488DPTR\u52a01\u6307\u4ee4\uff0c\u800c\u6ca1\u6709DPTR\u51cf1\u6307\u4ee4\u3002</p> <p>\u82e5\u4e58\u79ef &lt; 0FFH\uff08\u5373\uff08B\uff09=0\uff09\uff0c\u5219OV\uff1d0\uff0c\u5426\u5219OV\uff1d1\uff0c\u8be5\u8fd0\u7b97\u603b\u4f7fCY\uff1d0\u3002</p> <p>\u5f53\u9664\u6570\u4e3a0\uff08B\uff1d0\uff09\u65f6\uff0cOV\uff1d1\uff0c\u8868\u660e\u9664\u6cd5\u65e0\u610f\u4e49\uff0c\u65e0\u6cd5\u8fdb\u884c\uff1b\u5176\u5b83\u60c5\u51b5\u4e0b\uff0c OV\uff1d0\u3002\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c CY\uff1d0\u3002</p> <p>\u4e58\u9664\u6cd5\u8fd0\u7b97\u5f71\u54cdPSW\u7684\u72b6\u6001\u3002</p> <p>2.5 \u5341\u8fdb\u5236\u8c03\u6574\u6307\u4ee4\uff1a</p> <p>DA      A</p> <pre><code>MOV A, #48H\nADD A, #79H\nDA  A;  A == #27H\n</code></pre> <p>\u4e00\u4e2a\u5341\u8fdb\u5236\u6570\u7528\u56db\u4f4d\u4e8c\u8fdb\u5236\u7f16\u7801\u8868\u793a\uff0c\u5373\u4e8c\u8fdb\u5236\u7f16\u7801\u7684==\u5341\u8fdb\u5236\u6570==\uff0c\u7b80\u79f0BCD\u7801\u3002</p> <p>BCD\u7801\u7684\u4fee\u6b63\uff08\u4e86\u89e3\uff09</p> <p>(1) \u5982\u679c\u4efb\u4f55\u4e24\u4e2a\u5bf9\u5e94\u4f4dBCD\u6570\u76f8\u52a0\u7684\u7ed3\u679c\u5411\u9ad8\u4e00\u4f4d\u65e0\u8fdb\u4f4d\u65f6\uff0c\u82e5\u5f97\u5230\u7684\u7ed3\u679c\u5c0f\u4e8e\u6216\u7b49\u4e8e 9\uff0c\u5219\u8be5\u4f4d\u4e0d\u9700\u4fee\u6b63\uff1b\u82e5\u5f97\u5230\u7684\u7ed3\u679c\u5927\u4e8e 9 \u4e14\u5c0f\u4e8e 16 \u4f4d\uff0c\u5219\u8be5\u4f4d\u8fdb\u884c\u52a0 6 \u4fee\u6b63\u3002      </p> <p>(2) \u5982\u679c\u4efb\u4f55\u4e24\u4e2a\u5bf9\u5e94\u4f4dBCD\u6570\u76f8\u52a0\u7684\u7ed3\u679c\u5411\u9ad8\u4e00\u4f4d\u6709\u8fdb\u4f4d\u65f6(\u5373\u7ed3\u679c\u5927\u4e8e\u6216\u7b49\u4e8e 16)\uff0c\u8be5\u4f4d\u8fdb\u884c\u52a0 6 \u4fee\u6b63\u3002      </p> <p>(3) \u4f4e\u4f4d\u4fee\u6b63\u7ed3\u679c\u4f7f\u9ad8\u4f4d\u5927\u4e8e 9 \u65f6\uff0c \u9ad8\u4f4d\u8fdb\u884c\u52a0 6 \u4fee\u6b63\u3002</p> <p>3\u3001\u903b\u8f91\u8fd0\u7b97\u53ca\u79fb\u4f4d\u7c7b\u6307\u4ee4</p> <p>3.1 \u903b\u8f91\u4e0e\u8fd0\u7b97\u6307\u4ee4\u7ec4</p> <p>\u7d2f\u52a0\u5668A\u5faa\u73af\u5de6\u79fb\u6307\u4ee4  RL  A       </p> <p>\u7d2f\u52a0\u5668A\u5faa\u73af\u53f3\u79fb\u6307\u4ee4 RR  A </p> <p>\u7d2f\u52a0\u5668A\u5e26\u8fdb\u4f4d\u5faa\u73af\u5de6\u79fb\u6307\u4ee4 RLC  A</p> <p>\u7d2f\u52a0\u5668A\u5e26\u8fdb\u4f4d\u5faa\u73af\u53f3\u79fb\u6307\u4ee4 RRC  A   </p> <p>3.2 \u8df3\u8f6c\u6307\u4ee4</p> <p>\u95f4\u63a5\u8f6c\u79fb\u6307\u4ee4</p> <p>JMP    @A+DPTR      \uff1bPC\u2190\uff08A\uff09+\uff08DPTR\uff09</p> <p>\u8be5\u6307\u4ee4\u53ef\u4ee3\u66ff\u4f17\u591a\u7684\u5224\u522b\u8df3\u8f6c\u6307\u4ee4\uff0c\u5177\u6709\u6563\u8f6c\u529f\u80fd\uff08\u53c8\u79f0\u6563\u8f6c\u6307\u4ee4\uff09\u3002\u952e\u76d8\u8bd1\u7801\u7a0b\u5e8f\u5c31\u662f\u672c\u6307\u4ee4\u7684\u4e00\u4e2a\u5178\u578b\u5e94\u7528\u3002</p> <p>3.3 \u4f4d\u64cd\u4f5c\u6307\u4ee4</p> <p>\u5728MCS-51\u4e2d\u6ca1\u6709\u4e13\u95e8\u7684\u6570\u503c\u6bd4\u8f83\u6307\u4ee4\uff0c\u4e24\u4e2a\u6570\u7684\u6570\u503c\u6bd4\u8f83\u53ef\u5229\u7528\u8fd9\u56db\u6761\u6307\u4ee4\u6267\u884c\u540eCY\u7684\u72b6\u6001\u6765\u5224\u65ad\u6570\u503c\u5927\u5c0f\u3002</p> <p>\u82e5\uff08CY\uff09\uff1d0\uff0c\u5219\u5de6\u64cd\u4f5c\u6570\uff1e\u53f3\u64cd\u4f5c\u6570</p> <p>\u82e5\uff08CY\uff09\uff1d1\uff0c\u5219\u5de6\u64cd\u4f5c\u6570\uff1c\u53f3\u64cd\u4f5c\u6570</p> <p>\u6ce8\uff1aCJNE\u53ef\u914d\u5408JC\u548cJNC\u4f7f\u7528\u5224\u65ad\u6b63\u8d1f\u3002</p> <p>\u4e24\u4e2a\u5bfb\u5740\u4f4d\u95f4\u4e0d\u80fd\u5b9e\u73b0\u76f4\u63a5\u4f20\u9001\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#5-mcs-51","title":"\u7b2c5\u7ae0   MCS-51\u7684\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u5171\u6709\u56db\u79cd\u7ed3\u6784\u5f62\u5f0f\uff1a\u987a\u5e8f\u7ed3\u6784\u3001\u5faa\u73af\u7ed3\u6784\u3001\u5206\u652f\u7ed3\u6784\u548c\u5b50\u7a0b\u5e8f\u7ed3\u6784\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_9","title":"\u67e5\u8868\u6307\u4ee4","text":"<pre><code>     ORG 0\n     MOV    A\uff0c30H     \n     MOV DPTR\uff0c#TAB      \uff1b\u5730\u5740\u4fee\u6b63\n     MOVC A\uff0c@A+DPTR     \n     MOV 31H\uff0cA          \uff1b\u53cc\u5b57\u8282\u6307\u4ee4\nTAB\uff1aDB 3FH\uff0c06H\uff0c5BH\uff0c4FH\uff0c66H\uff1b\u5b57\u5f62\u4ee3\u7801\u8868\n     DB 6DH\uff0c7DH\uff0c07H\uff0c7FH\uff0c6FH \n     END\n</code></pre> <p>\u6ce8\uff1aJBC\u6307\u4ee4</p> <p>JBC bit NEXT</p> <p>\u5355\u7247\u673a\u6307\u4ee4\uff0c\u68c0\u6d4b\u67d0\u4e2a\u4f4d\u662f\u5426\u4e3a1\uff0c\u82e5\u4e3a1\uff0c\u5219\u6e05\u96f6\uff0c\u5e76\u8df3\u8f6c\u5230NEXT\uff0c\u82e5\u4e3a\u96f6\uff0c\u5219\u6267\u884c\u4e0b\u4e00\u6761\u8bed\u53e5\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_10","title":"\u6563\u8f6c\u6307\u4ee4","text":"<p>JMP  @A+DPTR</p> <pre><code>        MOV DPTR\uff0c#TAB\n        JMP @A+DPTR\n        NOP\nTAB\uff1a    AJMP      ADDM      \uff1b\u6563\u8f6c\u8868\n        AJMP      SUBM\n        AJMP      MULM\n        AJMP      DIVM \n</code></pre> <p>\u5728\u4f7f\u7528JMP  @A+DPTR\u6784\u6210\u591a\u5206\u652f\u7a0b\u5e8f\u65f6\u7684\u6ce8\u610f\u4e8b\u9879\uff1a</p> <p>\u2460 \u7531\u4e8eA\u662f8\u4f4d\u5bc4\u5b58\u5668\uff0c\u5982\u679c\u5206\u652f\u7a0b\u5e8f\u7684\u4e2a\u6570\u5927\u4e8e128\uff0c\u5219\u5730\u5740\u4fee\u6b63\u503c\u5927\u4e8e256\u3002\u4e3a\u4e86\u83b7\u5f97\u6b63\u786e\u7684\u5730\u5740\uff0c\u9700\u5bf9\u6570\u636e\u6307\u9488\u7684\u9ad88\u4f4dDPH\u8fdb\u884c\u4fee\u6b63\u3002</p> <p>\u2461 \u6563\u8f6c\u70b9\u6570\u4e0d\u5f97\u8d85\u8fc7256\uff0c\u8fd9\u662f\u7531A\u7684\u5bb9\u91cf\u786e\u5b9a\u7684\u3002</p> <p>\u2462 AJMP\u6307\u4ee4\u7684\u8df3\u8f6c\u8303\u56f4\u4e3a2KB\uff0c\u8fd9\u5c31\u9650\u5236\u4e86\u5404\u5206\u652f\u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\u548c\u8f6c\u79fb\u8868\u9996\u5730\u5740TAB\u4f4d\u4e8e\u540c\u4e00\u4e2a2KB\u7684\u7a7a\u95f4\u8303\u56f4\u5185\u3002\u4e3a\u4e86\u514b\u670d\u8fd9\u79cd\u5c40\u9650\uff0c\u53ef\u4ee5\u91c7\u7528LJMP\u6307\u4ee4\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_11","title":"\u5b50\u7a0b\u5e8f\u7ed3\u6784\uff1a","text":"<p>\u6307\u4ee4\uff1a RET\u6216RETI\u3002</p> <p>\u6ce8\u610f\u4e8b\u9879\uff1a</p> <p>\uff081\uff09\u5b50\u7a0b\u5e8f\u6709\u81ea\u5df1\u7684\u540d\u5b57;</p> <p>\uff082\uff09\u4fdd\u62a4\u73b0\u573a\u548c\u6062\u590d\u73b0\u573a\uff1b</p> <p>\uff083\uff09\u6b63\u786e\u5730\u4f20\u9012\u53c2\u6570\uff1b</p> <p>\uff084\uff09\u5b50\u7a0b\u5e8f\u548c\u4e3b\u7a0b\u5e8f\u662f\u76f8\u5bf9\u7684\u4e24\u4e2a\u6982\u5ff5\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#7","title":"\u7b2c7\u7ae0  \u4e2d\u65ad\u7cfb\u7edf","text":""},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#io","title":"\u5355\u7247\u673a\u4e2dI/O\u4f20\u9001\u65b9\u5f0f","text":"<p>\u4e09\u79cd\u63a7\u5236\u65b9\u5f0f\uff1a</p> <p>1\uff09\u65e0\u6761\u4ef6\u4f20\u9001\u65b9\u5f0f 2\uff09\u67e5\u8be2\u65b9\u5f0f 3\uff09\u4e2d\u65ad\u65b9\u5f0f</p> <p>1\u3001\u65e0\u6761\u4ef6\u4f20\u9001\u65b9\u5f0f</p> <p>MOV P1, #30H; MOV A, P1</p> <p>\u9002\u7528\u8303\u56f4\uff1a</p> <p>\uff081\uff09\u5177\u6709\u5e38\u9a7b\u7684\u6216\u53d8\u5316\u7f13\u6162\u6570\u636e\u4fe1\u53f7\u7684\u5916\u90e8\u8bbe\u5907\uff0c</p> <p>\uff082\uff09\u5de5\u4f5c\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u8db3\u4ee5\u548cCPU\u540c\u6b65\u5de5\u4f5c\u7684\u5916\u90e8\u8bbe\u5907\u3002 \u4f8b\u5982\uff1a\u6570/\u6a21\u8f6c\u6362\u5668DAC\u3002</p> <p>2\u3001\u7a0b\u5e8f\u67e5\u8be2\u65b9\u5f0f</p> <p>\u7279\u70b9\uff1a\u8f93\u5165\u8f93\u51fa\u5b8c\u5168\u7531CPU\u63a7\u5236\uff1b\u786c\u4ef6\u7535\u8def\u6bd4\u8f83\u7b80\u5355\u3002</p> <p>\u7f3a\u70b9\uff1a\u6d6a\u8d39CPU\u7684\u65f6\u95f4\u3002</p> <p>3\u3001\u4e2d\u65ad\u65b9\u5f0f</p> <p>\u4e2d\u65ad\u65b9\u5f0f\u4e0e\u67e5\u8be2\u65b9\u5f0f\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff1a\u5982\u4f55\u77e5\u9053\u5916\u8bbe\u662f\u5426\u4e3a\u6570\u636e\u7684\u4f20\u9001\u4f5c\u597d\u4e86\u51c6\u5907\u3002</p> <p>\u67e5\u8be2\u65b9\u5f0f\u662fCPU\u7684\u4e3b\u52a8\u5f62\u5f0f\uff0c\u800c\u4e2d\u65ad\u65b9\u5f0f\u5219\u662fCPU\u7b49\u5f85\u901a\u77e5\uff08\u4e2d\u65ad\u8bf7\u6c42\uff09\u7684\u88ab\u52a8\u65b9\u5f0f\u3002</p> <p>3.1 \u4e2d\u65ad\u7684\u57fa\u672c\u6982\u5ff5</p> <p>\u6307CPU\u5728\u5904\u7406\u67d0\u4ef6\u4e8b\u60c5\u7684\u65f6\u5019\uff0c\u5916\u90e8\u53d1\u751f\u4e86\u67d0\u4e00\u4e8b\u4ef6\u8bf7\u6c42CPU\u8fc5\u901f\u53bb\u5904\u7406\uff0c\u4e8e\u662fCPU\u6682\u65f6\u4e2d\u65ad\u5f53\u524d\u7684\u5de5\u4f5c\uff0c\u8f6c\u5165\u5904\u7406\u6240\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u4e2d\u65ad\u8bbf\u95ee\u5904\u7406\u5b8c\u540e\uff0c\u518d\u56de\u5230\u539f\u6765\u88ab\u4e2d\u65ad\u7684\u5730\u65b9\uff0c\u7ee7\u7eed\u539f\u6765\u7684\u5de5\u4f5c\u7684\u8fc7\u7a0b\u79f0\u4e3a\u4e2d\u65ad\u3002</p> <p>\u4e2d\u65ad\u7cfb\u7edf\uff08\u4e2d\u65ad\u673a\u6784\uff09\uff1b\u5b9e\u73b0\u4e2d\u65ad\u529f\u80fd\u7684\u90e8\u4ef6</p> <p>\u4e2d\u65ad\u6e90\uff1a\u4ea7\u751f\u4e2d\u65ad\u7684\u8bf7\u6c42\u6e90\u3002</p> <p>\u4e94\u4e2a\u4e2d\u65ad\u6e90\uff1a2\u4e2a\u5916\u90e8\u4e2d\u65ad\uff0c INT0\u548cINT1\u30012\u4e2a\u5b9a\u65f6/\u8ba1\u6570\u5668\u4e2d\u65ad\uff0c T0\u548cT1\u30011\u4e2a\u4e32\u884c\u4e2d\u65ad\u3002</p> <p>3.2 \u4e2d\u65ad\u4f18\u5148\u7ea7</p> <p>CPU\u5fc5\u987b\u5177\u5907\u533a\u5206\u54ea\u4e2a\u4e2d\u65ad\u6e90\u66f4\u4e3a\u91cd\u8981\uff0c\u4ece\u800c\u786e\u5b9a\u4f18\u5148\u5904\u7406\u54ea\u4e2a\u4e8b\u4ef6\u7684\u80fd\u529b\uff0c\u8fd9\u5c31\u662f\u4e2d\u65ad\u4f18\u5148\u7ea7\u3002 \u4e00\u822c\u6839\u636e\u4e2d\u65ad\u6e90\u7684\u8f7b\u91cd\u7f13\u6025\u6392\u961f\uff0c\u4f18\u5148\u5904\u7406\u6700\u7d27\u6025\u4e8b\u4ef6\u7684\u4e2d\u65ad\u8bf7\u6c42\u3002</p> <p>MCS-51\u7cfb\u5217\u5355\u7247\u673a\u4e2d\uff0c\u4e2d\u65ad\u6e90\u6709\u4e24\u4e2a\u4f18\u5148\u7ea7\uff0c\u5373\u4f4e\u4f18\u5148\u7ea7\u548c\u9ad8\u4f18\u5148\u7ea7\u3002</p> <p>3.3 \u4e2d\u65ad\u5d4c\u5957</p> <p>\u5f53CPU\u6b63\u5728\u5904\u7406\u67d0\u4e00\u4e2d\u65ad\u8bf7\u6c42\u65f6\uff0c\u53c8\u6709\u4f18\u5148\u7ea7\u522b\u66f4\u9ad8\u7684\u4e2d\u65ad\u6e90\u53d1\u51fa\u4e2d\u65ad\u8bf7\u6c42\uff0c\u5219CPU\u4e2d\u6b62\u6b63\u5728\u8fdb\u884c\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u8f6c\u53bb\u5904\u7406\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u4e2d\u65ad\u8bf7\u6c42\u3002\u5f85\u5904\u7406\u5b8c\u540e\uff0c\u518d\u7ee7\u7eed\u6267\u884c\u88ab\u4e2d\u6b62\u4e86\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u8fd9\u6837\u7684\u8fc7\u7a0b\u79f0\u4e3a\u4e2d\u65ad\u5d4c\u5957\uff0c\u8be5\u4e2d\u65ad\u7cfb\u7edf\u79f0\u4e3a\u591a\u7ea7\u4e2d\u65ad\u7cfb\u7edf\u3002\u6ca1\u6709\u4e2d\u65ad\u5d4c\u5957\u529f\u80fd\u7684\u4e2d\u65ad\u7cfb\u7edf\u79f0\u4e3a\u5355\u7ea7\u4e2d\u65ad\u7cfb\u7edf\u3002</p> <p>3.4 \u4e2d\u65ad\u7684\u5141\u8bb8\u4e0e\u7981\u6b62</p> <p>\u5f53CPU\u6b63\u5728\u6267\u884c\u4e3b\u7a0b\u5e8f\u65f6\uff0c\u67d0\u4e2a\u4e2d\u65ad\u6e90\u53d1\u51fa\u4e2d\u65ad\u8bf7\u6c42\uff0c\u5982\u679cCPU\u63a5\u53d7\u8be5\u4e2d\u65ad\u800c\u8f6c\u53bb\u5904\u7406\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\uff0c\u5219\u79f0CPU\u5141\u8bb8\u6b64\u4e2d\u65ad\u6216\u5f00\u4e2d\u65ad\u3002\u5982\u679c\u6709\u4e2d\u65ad\u8bf7\u6c42\uff0c\u4f46CPU\u5e76\u4e0d\u63a5\u6536\u6b64\u4e2d\u65ad\uff0c\u5219\u79f0CPU\u7981\u6b62\u4e2d\u65ad\u3001\u5c4f\u853d\u4e2d\u65ad\u6216\u5173\u4e2d\u65ad\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_12","title":"\u4e2d\u65ad\u7cfb\u7edf\u7ed3\u6784\u53ca\u4e2d\u65ad\u63a7\u5236","text":"<p>1\u3001\u4e2d\u65ad\u7cfb\u7edf\u7ed3\u6784\u548c\u4e2d\u65ad\u6e90</p> <p></p> <p>\u5f53IT0=0\u65f6\uff0c\u5916\u90e8\u4e2d\u65ad\u7a0b\u5e8f\u4f4d\u7535\u5e73\u89e6\u53d1\u65b9\u5f0f\uff0c\u4f4e\u7535\u5e73\u6709\u6548\uff0c\u5f53IT0=1\u65f6\uff0c\u5916\u90e8\u4e2d\u65ad\u4e3a\u8109\u51b2\u89e6\u53d1\u65b9\u5f0f\uff0c\u8d1f\u8df3\u53d8\u65f6\u6709\u6548\u3002</p> <p>\u4e2d\u65ad\u4f18\u5148\u7ea7\u662f\u4e3a\u4e2d\u65ad\u5d4c\u5957\u670d\u52a1\u7684\uff0cMCS\u201451\u4e2d\u65ad\u4f18\u5148\u7ea7\u7684\u63a7\u5236\u539f\u5219\u662f\uff1a</p> <p>\u2460  \u4f4e\u4f18\u5148\u7ea7\u4e2d\u65ad\u8bf7\u6c42\u4e0d\u80fd\u6253\u65ad\u9ad8\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u670d\u52a1\uff1b\u4f46\u9ad8\u4f18\u5148\u7ea7\u4e2d\u65ad\u8bf7\u6c42\u53ef\u4ee5\u6253\u65ad\u4f4e\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u670d\u52a1\uff0c\u4ece\u800c\u5b9e\u73b0\u4e2d\u65ad\u5d4c\u5957\u3002</p> <p>\u2461  \u5982\u679c\u4e00\u4e2a\u4e2d\u65ad\u8bf7\u6c42\u5df2\u88ab\u54cd\u5e94\uff0c\u5219\u540c\u7ea7\u7684\u5176\u5b83\u4e2d\u65ad\u54cd\u5e94\u5c06\u88ab\u7981\u6b62\u3002</p> <p>\u2462  \u5982\u679c\u540c\u7ea7\u7684\u591a\u4e2a\u4e2d\u65ad\u8bf7\u6c42\u540c\u65f6\u51fa\u73b0\uff0c\u5219\u6309CPU\u8bbe\u5b9a\u7684\u81ea\u7136\u4f18\u5148\u7ea7\u786e\u5b9a\u90a3\u4e2a\u4e2d\u65ad\u8bf7\u6c42\u88ab\u54cd\u5e94\u3002\u5176\u81ea\u7136\u4f18\u5148\u7ea7\u7531\u9ad8\u5230\u4f4e\u4f9d\u6b21\u4e3a\uff1a\u5916\u90e8\u4e2d\u65ad0\u2192\u5b9a\u65f6\u4e2d\u65ad0\u2192\u5916\u90e8\u4e2d\u65ad1\u2192\u5b9a\u65f6\u4e2d\u65ad1\u2192\u4e32\u884c\u4e2d\u65ad\uff0c\u8fd9\u5176\u5b9e\u662fCPU\u67e5\u8be2\u5404\u4e2d\u65ad\u7684\u6b21\u5e8f\u3002</p> <p>\u4e2d\u65ad\u54cd\u5e94\u8fc7\u7a0b  </p> <p>MCS-51\u5355\u7247\u673a\u7684CPU\u5728\u6bcf\u4e2a\u673a\u5668\u5468\u671f\u7684S5P2\u65f6\u523b\u91c7\u6837\u4e2d\u65ad\u6807\u5fd7\u3002\u5f53\u53d1\u73b0\u6709\u4e2d\u65ad\u8bf7\u6c42\u65f6\uff0c\u9996\u5148\u5c06\u8fd9\u4e9b\u4e2d\u65ad\u8bf7\u6c42\u9501\u5b58\u5728\u5404\u81ea\u7684\u4e2d\u65ad\u6807\u5fd7\u4f4d\u4e2d\uff0c\u5e76\u5728\u4e0b\u4e00\u4e2a\u673a\u5668\u5468\u671f\u7684S6\u671f\u95f4\u67e5\u8be2\u6240\u6709\u4e2d\u65ad\u6807\u5fd7\uff0c\u540c\u65f6\u6309\u7167\u4f18\u5148\u7ea7\u7531\u9ad8\u5230\u4f4e\u6392\u961f\uff0c\u4e4b\u540e\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u4e2d\u65ad\u54cd\u5e94\u7684\u6761\u4ef6\uff0c\u82e5\u6ee1\u8db3\uff0c\u5219\u5728\u4e0b\u4e00\u4e2a\u673a\u5668\u5468\u671fS1\u671f\u95f4\u6309\u7167\u4f18\u5148\u7ea7\u8fdb\u884c\u4e2d\u65ad\u5904\u7406\u3002</p> <p>\u54cd\u5e94\u4e2d\u65ad\u7684\u6761\u4ef6 </p> <p>\u2460 \u8be5\u4e2d\u65ad\u6e90\u53d1\u51fa\u4e2d\u65ad\u8bf7\u6c42\uff1b</p> <p>\u2461  CPU\u5f00\u4e2d\u65ad\uff0c\u5373\u4e2d\u65ad\u603b\u5141\u8bb8\u4f4dEA=1\uff1b</p> <p>\u2462 \u7533\u8bf7\u4e2d\u65ad\u7684\u4e2d\u65ad\u6e90\u7684\u4e2d\u65ad\u5141\u8bb8\u4f4d\u4e3a1\uff0c\u5373\u8be5\u4e2d\u65ad\u6ca1\u6709\u88ab\u5c4f\u853d\uff1b</p> <p>\u2463 \u65e0\u540c\u7ea7\u6216\u662f\u66f4\u9ad8\u7ea7\u4e2d\u65ad\u6b63\u5728\u88ab\u670d\u52a1\u3002 </p> <p>\u4e2d\u65ad\u54cd\u5e94\u8fc7\u7a0b\u88ab\u963b\u65ad\u7684\u6761\u4ef6</p> <p>\u2460  \u540c\u7ea7\u6216\u9ad8\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u5df2\u5728\u8fdb\u884c\u4e2d\uff1b </p> <p>\u2461  \u5f53\u524d\u7684\u673a\u5668\u5468\u671f\u8fd8\u4e0d\u662f\u6b63\u5728\u6267\u884c\u6307\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u673a\u5668\u5468\u671f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6b63\u5728\u6267\u884c\u7684\u6307\u4ee4\u5b8c\u6210\u524d\uff0c\u4efb\u4f55\u4e2d\u65ad\u8bf7\u6c42\u90fd\u5f97\u4e0d\u5230\u54cd\u5e94\uff1b</p> <p>\u2462 \u6b63\u5728\u6267\u884c\u7684\u662f\u4e00\u6761RET\u6216RETI\uff0c\u6216\u8005\u8bbf\u95ee\u7279\u6b8a\u529f\u80fd\u5bc4\u5b58\u5668 IE\u6216 IP\u7684\u6307\u4ee4\u3002\u6267\u884c\u8fd9\u4e9b\u6307\u4ee4\u4e4b\u540e\uff0c\u4e0d\u4f1a\u9a6c\u4e0a\u54cd\u5e94\u4e2d\u65ad\u8bf7\u6c42\uff0c\u81f3\u5c11\u8981\u6267\u884c\u4e00\u6761\u5176\u5b83\u6307\u4ee4\u4e4b\u540e\u624d\u80fd\u54cd\u5e94\u4e2d\u65ad\u3002 </p> <p>\u54cd\u5e94\u4e2d\u65ad\u540e\uff0c\u786c\u4ef6\u5b8c\u6210\u7684\u529f\u80fd\uff1a</p> <p>\u2460 \u6839\u636e\u54cd\u5e94\u7684\u4e2d\u65ad\u6e90\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\uff0c\u4f7f\u76f8\u5e94\u7684\u4f18\u5148\u7ea7\u72b6\u6001\u89e6\u53d1\u5668\u7f6e1\uff1b </p> <p>\u2461 \u8c03\u7528\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f, \u5e76\u628a\u5f53\u524d\u7a0b\u5e8f\u8ba1\u6570\u5668PC\u7684\u5185\u5bb9\u538b\u5165\u5806\u6808\uff1b</p> <p>\u2462 \u6e05\u9664\u76f8\u5e94\u7684\u4e2d\u65ad\u8bf7\u6c42\u6807\u5fd7\u4f4d\uff08\u4e32\u884c\u53e3\u4e2d\u65ad\u8bf7\u6c42\u6807\u5fd7RI\u548cTI\u9664\u5916\uff09\uff1b</p> <p>\u2463 \u628a\u88ab\u54cd\u5e94\u7684\u4e2d\u65ad\u6e90\u6240\u5bf9\u5e94\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\u9001\u5165PC\uff0c\u4ece\u800c\u6267\u884c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u3002 </p> <p>\u4e2d\u65ad\u54cd\u5e94\u65f6\u95f4:  3~8\u4e2a\u673a\u5668\u5468\u671f.</p> <p>\u4e3b\u7a0b\u5e8f\u7684\u521d\u59cb\u5316\uff1a</p> <p>\u521d\u59cb\u5316\u5305\u62ec\uff1a\u76f8\u5e94\u4e2d\u65ad\u6e90\u5f00\u4e2d\u65ad\uff1b\u8bbe\u5b9a\u6240\u6d89\u53ca\u4e2d\u65ad\u6e90\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\uff1b\u82e5\u4e3a\u5916\u90e8\u4e2d\u65ad\uff0c\u5e94\u89c4\u5b9a\u5176\u89e6\u53d1\u65b9\u5f0f\u3002</p> <p>\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u6700\u540e\u4e00\u6761\u6307\u4ee4\u662fRETI\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_13","title":"\u5b9a\u65f6/\u8ba1\u6570\u5668\u7684\u7ed3\u6784\u548c\u5bc4\u5b58\u5668","text":"<p>\u5b9a\u65f6/\u8ba1\u6570\u5668\u7684\u539f\u7406\u7ed3\u6784\u6846\u56fe</p> <p></p> <p>1\u3001\u5b9a\u65f6/\u8ba1\u6570\u5668\u7684\u5b9a\u65f6\u548c\u8ba1\u6570\u529f\u80fd</p> <p>\u5b9a\u65f6\u8ba1\u6570\u5668\u7684\u529f\u80fd\uff1a\u5b9a\u65f6\u548c\u8ba1\u6570</p> <p>1\uff09\u8ba1\u6570\u529f\u80fd</p> <p>\u8ba1\u6570\uff1a\u5bf9\u5916\u90e8\u4e8b\u4ef6\u8fdb\u884c\u8ba1\u6570\u3002\u5916\u90e8\u4e8b\u4ef6\u7684\u53d1\u751f\u4ee5\u8f93\u5165\u8109\u51b2\u8868\u793a\u3002</p> <p>\u8ba1\u6570\u8f93\u5165\u7aef\uff1aT0\uff08P3.4\uff09\u548cT1\uff08P3.5\uff09\uff0c\u8109\u51b2\u5728\u8d1f\u8df3\u53d8\u65f6\u8ba1\u6570\u5668\u52a01\uff08\u52a0\u6cd5\u8ba1\u6570\uff09\u3002</p> <p>2\uff09\u5b9a\u65f6\u529f\u80fd</p> <p>\u5b9e\u73b0\u65b9\u6cd5\uff1a\u901a\u8fc7\u8ba1\u6570\u5668\u7684\u8ba1\u6570\u5b9e\u73b0\u3002</p> <p>\u4e0e\u8ba1\u6570\u529f\u80fd\u7684\u4e0d\u540c\u4e4b\u5904\uff1a</p> <p>\u8ba1\u6570\u8109\u51b2\u6765\u81ea\u5355\u7247\u673a\u7684\u5185\u90e8\uff0c\u5373\u6bcf\u4e2a\u673a\u5668\u5468\u671f\u4ea7\u751f\u4e00\u4e2a\u8ba1\u6570\u8109\u51b2\uff0c\u5373\u6bcf\u4e2a\u673a\u5668\u5468\u671f\u8ba1\u6570\u5668\u52a01\u3002      </p> <p>\u82e5\uff1a\u5355\u7247\u673a\u6676\u632f\uff1d6MHz\uff0c\u673a\u5668\u5468\u671f\u4e3a2\u5fae\u79d2\u3002</p> <p>2\u3001\u5b9a\u65f6\u5668/\u8ba1\u6570\u5668\u7684\u521d\u59cb\u5316</p> <p>\u5c06\u63a7\u5236\u5b57\u5199\u5165\u5b9a\u65f6\u5668/\u8ba1\u6570\u5668\u7684\u8fc7\u7a0b\u53eb\u5b9a\u65f6\u5668/\u8ba1\u6570\u5668\u7684\u521d\u59cb\u5316\u3002</p> <p>\u521d\u59cb\u5316\u5185\u5bb9\uff1a</p> <p>\u89c4\u5b9aT0\u3001T1\u7684\u5de5\u4f5c\u65b9\u5f0f\uff1b  \u89c4\u5b9aT0\u3001T1\u7684\u5de5\u4f5c\u72b6\u6001\uff1b \u8d4b\u5b9a\u65f6/\u8ba1\u6570\u521d\u503c\u3002</p> <p>3\u3001\u5b9a\u65f6/\u8ba1\u6570\u5668\u521d\u503c\u7684\u786e\u5b9a</p> <p>\u5b9a\u65f6\u5668/\u8ba1\u6570\u5668\u4ee5\u52a01\u65b9\u5f0f\u8ba1\u6570\uff0c\u5047\u5b9a\u8981\u6c42\u7684\u8ba1\u6570\u957f\u5ea6\u4e3aN\uff0c\u5219\u5e94\u88c5\u5165\u5b9a\u65f6\u5668/\u8ba1\u6570\u5668\u7684\u521d\u503cX\uff1d2^{13}\uff0dN\u3002</p> <p>4\u3001\u5199\u5165\u63a7\u5236\u5b57\u7684\u6b21\u5e8f\uff1a</p> <p>\u200b   1\uff09 \u628a\u5de5\u4f5c\u65b9\u5f0f\u63a7\u5236\u5b57\u5199\u5165TMOD\u5bc4\u5b58\u5668\uff1b</p> <p>\u200b   2\uff09\u628a\u5b9a\u65f6/\u8ba1\u6570\u521d\u503c\u88c5\u5165TL0\u3001TH0\uff08\u6216TL1\u3001TH1\uff09\uff1b</p> <p>\u200b    3\uff09\u7f6e\u4f4dET0\uff08\u6216ET1\uff09\u5141\u8bb8\u5b9a\u65f6\u5668/\u8ba1\u6570\u5668\u4e2d\u65ad\uff08\u5982\u679c\u9700\u8981\uff09\uff1b</p> <p>\u200b   4\uff09\u7f6e\u4f4dEA\u4f7fCPU\u5f00\u653e\u4e2d\u65ad\u3002</p> <p>\u200b   7\uff09\u7f6e\u4f4dTR0\uff08\u6216TR1\uff09\u4ee5\u542f\u52a8\u8ba1\u6570</p> <p>5\u3001\u65b9\u5f0f0</p> <p></p> <p>6\u3001\u65b9\u5f0f1</p> <p></p> <p>7\u3001\u65b9\u5f0f2</p> <p></p> <p>8\u3001\u65b9\u5f0f3\u4e0b\uff0cT0\u548cT1\u7684 \u5de5\u4f5c\u7684\u8bbe\u7f6e\u548c\u4f7f\u7528\u662f\u4e0d\u540c\u7684\u3002</p> <p></p> <p>T0\u7684\u5404\u63a7\u5236\u4f4d\u3001\u5f15\u811a\u548c\u4e2d\u65ad\u6e90\uff0c\u5373GATE\u3001TR0\u3001TF0\u3001C/T\u548cT0\uff08P3.4\uff09\u5f15\u811a\u3001INT0\uff08P3.2\uff09\u5f15\u811a\u5168\u5f52TL0\u4f7f\u7528\u3002\u5176\u529f\u80fd\u548c\u64cd\u4f5c\u4e0e\u65b9\u5f0f1\u62160\u5b8c\u5168\u76f8\u540c\u3002</p> <p>\u6240\u4ee5\uff1a\u5728\u5de5\u4f5c\u65b9\u5f0f3\u4e0b\uff0cT0\u88ab\u62c6\u6210\u4e24\u4e2a\u72ec\u7acb\u76848\u4f4d\u8ba1\u6570\u5668TL0\u548cTH0\u3002\u5176\u4e2dTL0\u65e2\u53ef\u4ee5\u4f5c\u8ba1\u6570\u4f7f\u7528\uff0c\u53c8\u53ef\u4ee5\u4f5c\u5b9a\u65f6\u4f7f\u7528\u3002</p> <p>TH0\u53ea\u597d\u501f\u7528\u5b9a\u65f6\u5668/\u8ba1\u6570\u56681\u7684\u63a7\u5236\u4f4dTR1\u548cTF1\uff0c\u5373\u4ee5\u8ba1\u6570\u6ea2\u51fa\u53bb\u7f6e\u4f4dTF1\uff0c\u800c\u5b9a\u65f6\u7684\u542f\u52a8\u548c\u505c\u6b62\u5219\u53d7TR1\u7684\u72b6\u6001\u63a7\u5236\u3002</p> <p>\u6240\u4ee5\uff1a\u65b9\u5f0f3\u4e0bT0\u53ef\u4ee5\u4f5c\u4e24\u4e2a8\u4f4d\u7684\u5b9a\u65f6\u5668\u6216\u4e00\u4e2a\u5b9a\u65f6\u5668\u548c\u4e00\u4e2a\u8ba1\u6570\u5668\u3002</p> <p>\u5de5\u4f5c\u65b9\u5f0f3\u4e0b\u7684T1</p> <p>\u200b   \u5982\u679cT0\u5df2\u5de5\u4f5c\u5728\u5de5\u4f5c\u65b9\u5f0f3\uff0c\u5219T1\u53ea\u80fd\u5de5\u4f5c\u5728\u65b9\u5f0f0\u30011\u6216\u65b9\u5f0f2\u4e0b\uff0c\u5b83\u7684\u8fd0\u884c\u63a7\u5236\u4f4dTR1\u53ca\u8ba1\u6570\u6ea2\u51fa\u6807\u5fd7\u4f4dTF1\u5df2\u88abT0\u501f\u7528\u3002</p> <p></p> <p>\u6b64\u65f6\uff0cT1\u901a\u5e38\u662f\u4f5c\u4e3a\u4e32\u884c\u53e3\u7684\u6ce2\u7279\u7387\u53d1\u751f\u5668\u4f7f\u7528\uff0c\u4ee5\u786e\u5b9a\u4e32\u884c\u901a\u4fe1\u7684\u901f\u7387\u3002\u56e0\u4e3a\u5df2\u7ecf\u6ca1\u6709\u8ba1\u6570\u6ea2\u51fa\u6807\u5fd7\u4f4dTF1\u53ef\u4f9b\u4f7f\u7528\uff0c\u56e0\u6b64\u53ea\u80fd\u628a\u8ba1\u6570\u6ea2\u51fa\u76f4\u63a5\u9001\u7ed9\u4e32\u884c\u53e3\u3002\u82e5\u5c06T1\u5f3a\u884c\u8bbe\u7f6e\u4e3a\u6a21\u5f0f3\uff0c\u5c31\u4f1a\u4f7fT1\u7acb\u5373\u505c\u6b62\u5de5\u4f5c\u3002</p> <p>9\u3001\u95e8\u63a7\u4f4d\u7684\u5e94\u7528\u4e3e\u4f8b</p> <p>\u5f53\u95e8\u63a7\u4f4dGATE=1\u65f6\uff0c\u5982\u679cTR0\uff08TR1\uff09=1\u4e14/INT0\uff08/INT1\uff09=1\u624d\u80fd\u542f\u52a8\u5b9a\u65f6/\u8ba1\u6570\u5668\uff0c\u5f53/INT0\uff08/INT1\uff09=0\u65f6\u53c8\u4f7f\u5b9a\u65f6/\u8ba1\u6570\u5668\u505c\u6b62\u3002\u53ef\u5229\u7528\u8fd9\u4e00\u7279\u6027\u6d4b\u91cf\u5916\u90e8\u8f93\u5165\u8109\u51b2\u7684\u5bbd\u5ea6\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_14","title":"\u5c0f\u7ed3","text":"<p>\u5728\u5b9a\u65f6\u65b9\u5f0f\u4e0b\u88ab\u8ba1\u5bf9\u8c61\u662f\u5355\u7247\u673a\u5185\u90e8\u7684\u673a\u5668\u5468\u671f\u6570\uff1b\u800c\u5728\u8ba1\u6570\u65b9\u5f0f\u4e0b\uff0c\u88ab\u8ba1\u5bf9\u8c61\u662f\u5916\u90e8\u4e8b\u4ef6\u7684\u6570\u91cf\uff08\u7531\u9ad8\u7535\u5e73\u5230\u4f4e\u7535\u5e73\u7684\u8fb9\u6cbf\u6570\uff09\u3002</p> <p>\u65e0\u8bba\u662f\u5b9a\u65f6\u8fd8\u662f\u8ba1\u6570\uff0c\u5f53\u8ba1\u6570\u5668\u6ea2\u51fa\u65f6\u4f1a\u81ea\u52a8\u7f6e\u4f4dTF0\u6216TF1\u3002\u5728\u67e5\u8be2\u65b9\u5f0f\u4e0b\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5TF\u7684\u72b6\u6001\u5224\u65ad\u662f\u5426\u8ba1\u6ee1\uff1b\u5728\u5141\u8bb8\u4e2d\u65ad\u7684\u60c5\u51b5\u4e0b\uff0cCPU\u81ea\u52a8\u8fdb\u5165\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u3002\u91c7\u7528\u4e2d\u65ad\u65b9\u5f0f\u53ef\u5927\u5927\u63d0\u9ad8CPU\u7684\u5229\u7528\u7387\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#8","title":"\u7b2c8\u7ae0 \u5b58\u50a8\u5668\u7684\u6269\u5c55","text":""},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_15","title":"\u5b58\u50a8\u5668\u6982\u8ff0","text":"<p>1\u3001\u5b58\u50a8\u5668\u7684\u5206\u7c7b     </p> <p>\u6309\u7167\u5b58\u53d6\u901f\u5ea6\u548c\u7528\u9014\uff1a\u5185\u5b58\u548c\u5916\u5b58 \u5185\u5b58\u4e00\u822c\u90fd\u4f7f\u7528\u534a\u5bfc\u4f53\u5b58\u50a8\u5668</p> <p>2\u3001\u534a\u5bfc\u4f53\u5b58\u50a8\u5668\u7684\u5206\u7c7b</p> <p>\u6309\u5b58\u53d6\u65b9\u5f0f\u4e0d\u540c\uff0c\u5206\u4e3a:\u968f\u673a\u8bfb\u5199\u5b58\u50a8\u5668RAM(Random Access Memory)\uff1b\u53ea\u8bfb\u5b58\u50a8\u5668ROM (Read Only Memory)\u3002</p> <p>\u6309\u5236\u9020\u5de5\u827a\u4e0d\u540c\uff0c\u5206\u4e3a\uff1a\u53cc\u6781\u578b\u3001CMOS\u578b\u548cHMOS\u578b\u3002 </p> <p></p> <p>3\u3001\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff08RAM\uff09</p> <p>\u200b       \u6309\u4fe1\u606f\u5b58\u50a8\u65b9\u5f0f\u53ef\u5206\u4e3aSRAM, DRAM.</p> <p>\u200b       1\uff09\u9759\u6001RAM(Static RAM, \u7b80\u79f0SRAM)\uff1a</p> <p>\u200b           \u5b58\u50a8\u5355\u5143\uff1a\u53cc\u7a33\u6001\u89e6\u53d1\u5668\u3002</p> <p>\u200b           \u4f18\u70b9\uff1a\u4fe1\u606f\u4fdd\u5b58\u7a33\u5b9a\uff0c\u4e0d\u6613\u5931\uff0c \u7f3a\u70b9\uff1a \u96c6\u6210\u5ea6\u4f4e\u3002</p> <p>\u200b       2\uff09\u52a8\u6001RAM(Dynamic RAM, \u7b80\u79f0DRAM)\uff1a</p> <p>\u200b            \u5b58\u50a8\u5355\u5143\uff1a\u7535\u5bb9\u3002</p> <p>\u200b            \u4f18\u70b9: \u7535\u8def\u7b80\u5355\uff0c \u96c6\u6210\u5ea6\u9ad8\uff0c    \u7f3a\u70b9\uff1a \u7535\u5bb9\u6613\u6f0f\u7535\u3002</p> <p>\u200b       3\uff09\u975e\u6613\u5931RAM\uff1a\u6216\u6389\u7535\u81ea\u4fdd\u62a4RAM\uff0c\u5373NVRAM\uff08Non volative RAM\uff09 NVRAM=SRAM+EEPROM</p> <p>4\u3001\u53ea\u8bfb\u5b58\u50a8\u5668\uff1a</p> <p>\u200b       1\uff09 \u63a9\u819cROM</p> <p>\u200b       2\uff09 \u53ef\u7f16\u7a0bROM \uff08PROM\uff09</p> <p>\u200b       3\uff09 \u53ef\u64e6\u9664\u7684PROM \uff08EPROM\uff0d Erasable Programmable ROM)\uff0c \u7d2b\u5916\u7ebf\u64e6\u9664 (UV EPROM)</p> <p>\u200b       4\uff09 \u7535\u64e6\u9664\u7684PROM \uff08EEPROM \uff1aE2PROM\uff0dElectrically Erasable PROM\uff09</p> <p>5\u3001\u5b58\u50a8\u5bb9\u91cf</p> <p>\u200b       \u5b58\u50a8\u5bb9\u91cf\u662f\u6307\u5b58\u50a8\u5668\u53ef\u4ee5\u5b58\u50a8\u7684\u4e8c\u8fdb\u5236\u4fe1\u606f\u91cf\uff0c\u4ee5\u4f4d\u4e3a\u5355\u4f4d\u3002</p> <p>\u200b       \u5b83\u4e00\u822c\u662f\u4ee5\u80fd\u5b58\u50a8\u7684\u5b57\u6570\u4e58\u4ee5\u5b57\u957f\u8868\u793a\u7684\u3002\u5373</p> <p>\u200b       \u5b58\u50a8\u5bb9\u91cf=\u5355\u5143\u6570\u00d7\u6570\u636e\u7ebf\u7684\u4f4d\u6570</p> <p>\u200b      \u6570\u636e\u7ebf\u7684\u4f4d\u6570\uff1a 1, 2, 4, 8 \u4f4d</p> <p>\u6700\u5927\u5b58\u53d6\u65f6\u95f4\uff1a\u6307\u4eceCPU\u7ed9\u51fa\u6709\u6548\u7684\u5b58\u50a8\u5668\u5730\u5740\u5230\u5b58\u50a8\u5668\u7ed9\u51fa\u6709\u6548\u6570\u636e\u6240\u9700\u7684\u65f6\u95f4\u3002 </p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_16","title":"\u5355\u7247\u673a\u7684\u6269\u5c55\u7ed3\u6784","text":"<p>1\u3001\u5355\u7247\u673a\u7684\u6269\u5c55\u7ed3\u6784</p> <p>\u5355\u7247\u673a\u6269\u5c55\u901a\u5e38\u91c7\u7528\u603b\u7ebf\u7ed3\u6784\u5f62\u5f0f\uff0c\u4e0b\u56fe\u662f\u5178\u578b\u7684\u5355\u7247\u673a\u6269\u5c55\u7ed3\u6784\u3002\u6574\u4e2a\u7cfb\u7edf\u4ee5\u5355\u7247\u673a\u4e3a\u6838\u5fc3\uff0c\u901a\u8fc7\u603b\u7ebf\u8fde\u63a5\u8d77\u6269\u5c55\u90e8\u4ef6\u3002</p> <p></p> <p>\u603b\u7ebf\u662f\u5355\u7247\u673a\u5404\u79cd\u529f\u80fd\u90e8\u4ef6\u4e4b\u95f4\u4f20\u9001\u4fe1\u606f\u7684\u516c\u5171\u901a\u4fe1\u5e72\u7ebf\uff0c\u5b83\u662f\u7531\u5bfc\u7ebf\u7ec4\u6210\u7684\u4f20\u8f93\u7ebf\u675f\uff0c\u662f\u4e00\u7c7b\u4fe1\u53f7\u7ebf\u7684\u96c6\u5408\u3002</p> <p>\u6309\u7167\u5355\u7247\u673a\u6240\u4f20\u8f93\u7684\u4fe1\u606f\u79cd\u7c7b\uff0c\u603b\u7ebf\u53ef\u4ee5\u5212\u5206\u4e3a\u6570\u636e\u603b\u7ebf\u3001\u5730\u5740\u603b\u7ebf\u3001\u63a7\u5236\u603b\u7ebf</p> <p>1\uff09\u6570\u636e\u603b\u7ebfDB</p> <p>\u200b    \u6570\u636e\u603b\u7ebf\u7528\u4e8e\u4f20\u9001\u6570\u636e\u4fe1\u606f\u3002\u6570\u636e\u603b\u7ebf\u662f\u53cc\u5411\u4e09\u6001\u5f62\u5f0f\u7684\u603b\u7ebf\uff0c\u5373\u5b83\u65e2\u53ef\u4ee5\u628aCPU\u7684\u6570\u636e\u4f20\u9001\u5230\u5b58\u50a8\u5668\u6216I/O\u63a5\u53e3\u7b49\u5176\u5b83\u90e8\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u5b83\u90e8\u4ef6\u7684\u6570\u636e\u4f20\u9001\u5230CPU\u3002\u6570\u636e\u603b\u7ebf\u7684\u4f4d\u6570\u662f\u5fae\u578b\u8ba1\u7b97\u673a\u7684\u4e00\u4e2a\u91cd\u8981\u6307\u6807\uff0c\u901a\u5e38\u4e0e\u5fae\u5904\u7406\u5668\u7684\u5b57\u957f\u76f8\u4e00\u81f4\u3002\u598251\u5355\u7247\u673a\u5b57\u957f8\u4f4d\uff0c\u5176\u6570\u636e\u603b\u7ebf\u5bbd\u5ea6\u4e5f\u662f8\u4f4d\u3002\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u6570\u636e\u7684\u542b\u4e49\u662f\u5e7f\u4e49\u7684\uff0c\u5b83\u53ef\u4ee5\u662f\u771f\u6b63\u7684\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u662f\u6307\u4ee4\u4ee3\u7801\u6216\u72b6\u6001\u4fe1\u606f\uff0c\u6709\u65f6\u751a\u81f3\u662f\u4e00\u4e2a\u63a7\u5236\u4fe1\u606f\u3002\u56e0\u6b64\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6570\u636e\u603b\u7ebf\u4e0a\u4f20\u9001\u7684\u5e76\u4e0d\u4e00\u5b9a\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u6570\u636e\u3002</p> <p>2\uff09\u5730\u5740\u603b\u7ebfAB</p> <p>\u200b   \u5730\u5740\u603b\u7ebf\u7528\u4e8e\u4f20\u9001\u5730\u5740\u4fe1\u53f7\u3002\u5730\u5740\u603b\u7ebf\u603b\u662f\u5355\u5411\u4e09\u6001\u7684\u3002\u5730\u5740\u603b\u7ebf\u7684\u4f4d\u6570\u51b3\u5b9a\u4e86CPU\u53ef\u76f4\u63a5\u5bfb\u5740\u7684\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\u3002\u6bd4\u5982Intel\u76848080\u662f8\u4f4d\u5fae\u5904\u7406\u5668\uff0c\u5730\u5740\u603b\u7ebf\u4e3a16\u4f4d\uff0c\u5219\u5176\u6700\u5927\u53ef\u5bfb\u5740\u7a7a\u95f4\u4e3a216=64KB\uff0cIntel\u76848088\u662f16\u4f4d\u5fae\u578b\u673a\uff0c\u5730\u5740\u603b\u7ebf\u4e3a20\u4f4d\uff0c\u5176\u53ef\u5bfb\u5740\u7a7a\u95f4\u4e3a220B=1MB\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u82e5\u5730\u5740\u603b\u7ebf\u4e3an\u4f4d\uff0c\u5219\u53ef\u5bfb\u5740\u7a7a\u95f4\u4e3a2n\u4e2a\u5b57\u8282\u3002</p> <p>3\uff09\u63a7\u5236\u603b\u7ebfCB\uff08control bus\uff09</p> <p>\u200b      \u63a7\u5236\u603b\u7ebf\u7528\u4e8e\u4f20\u9001\u63a7\u5236\u4fe1\u53f7\u548c\u65f6\u5e8f\u4fe1\u53f7\u3002\u63a7\u5236\u4fe1\u53f7\u4e2d\uff0c\u6709\u7684\u662f\u5fae\u5904\u7406\u5668\u9001\u5f80\u5b58\u50a8\u5668\u548cI/O\u63a5\u53e3\u7535\u8def\u7684\uff0c\u5982\u8bfb/\u5199\u4fe1\u53f7\uff0c\u7247\u9009\u4fe1\u53f7\u3001\u4e2d\u65ad\u54cd\u5e94\u4fe1\u53f7\u7b49\uff1b\u4e5f\u6709\u662f\u5176\u5b83\u90e8\u4ef6\u53cd\u9988\u7ed9CPU\u7684\uff0c\u6bd4\u5982\uff1a\u4e2d\u65ad\u7533\u8bf7\u4fe1\u53f7\u3001\u590d\u4f4d\u4fe1\u53f7\u3001\u603b\u7ebf\u8bf7\u6c42\u4fe1\u53f7\u3001\u8bbe\u5907\u5c31\u7eea\u4fe1\u53f7\u7b49\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\u63a7\u5236\u4fe1\u53f7\uff0c\u5176\u53ea\u53ef\u80fd\u662f\u4e00\u4e2a\u65b9\u5411\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u7c7b\u4fe1\u53f7\uff0c\u5219\u662f\u53cc\u5411\u7684\u3002\u63a7\u5236\u603b\u7ebf\u7684\u4f4d\u6570\u8981\u6839\u636e\u7cfb\u7edf\u7684\u5b9e\u9645\u63a7\u5236\u9700\u8981\u800c\u5b9a\u3002 </p> <p>2\u3001\u5355\u7247\u673a\u6269\u5c55\u7684\u5b9e\u73b0</p> <p></p> <p>3\u3001\u5e76\u884c\u5b58\u50a8\u5668\u7684\u6269\u5c55</p> <p>\u6309\u529f\u80fd\u4e0d\u540c\u5b58\u50a8\u5668\u53c8\u53ef\u5206\u4e3a \u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\u3001\u53ea\u8bfb\u5b58\u50a8\u5668\u3001\u53ef\u8bfb\u5199ROM</p> <p>\u6309\u7167\u6570\u636e\u4f20\u9001\u65b9\u5f0f\u4e0d\u540c\u5206 \u5e76\u884c\u5b58\u50a8\u5668\u3001\u4e32\u884c\u5b58\u50a8\u5668</p> <p>\u6309\u7167\u5236\u9020\u5de5\u827a\u7684\u4e0d\u540cROM\u53ef\u5206\u4e3a\u63a9\u6a21ROM\u3001\u53ef\u7f16\u7a0bROM (PROM)\u3001\u5149\u53ef\u6aab\u9664\u7684ROM\uff08EPROM\uff09\u3001\u7535\u53ef\u64e6\u9664\u7684ROM\uff08E2PROM\uff09\u3001\u5feb\u64e6\u5199ROM\uff08Flash ROM\uff09</p> <p>**EPROM**\u7684\u5178\u578b\u82af\u7247\u662fIntel\u516c\u53f8\u768427\u7cfb\u5217\u4ea7\u54c1\uff0c\u6309\u5b58\u50a8\u5bb9\u91cf\u4e0d\u540c\u6709\u591a\u79cd\u578b\u53f7\uff0c\u4f8b\u59822716\uff082Kx8b\uff09\u30012732\uff084Kx8b\uff09\u30012764\uff088Kx8b\uff09\u300127128\uff0816Kx8b\uff09\u300127256\uff0832Kx8b\uff09\u7b49\u3002</p> <p>MOVC\u6307\u4ee4\u8bbf\u95ee\u3002</p> <p></p> <p>A0~A14\uff1a\u5730\u5740\u8f93\u5165\u7ebf</p> <p>D0~D7\uff1a\u6570\u636e\u7ebf</p> <p>CE\uff1a\u7247\u9009\u4fe1\u53f7\u7ebf</p> <p>OE\uff1a\u8bfb\u9009\u901a\u4fe1\u53f7\u7ebf</p> <p>PGM\uff1a\u7f16\u7a0b\u8109\u51b2\u8f93\u5165\u7aef</p> <p>Vpp\uff1a\u7f16\u7a0b\u65f6\u7f16\u7a0b\u7535\u538b\u8f93\u5165\u7aef</p> <p>\u5355\u7247\u673a\u7684\u7247\u5185\u548c\u7247\u5916ROM\u662f\u7edf\u4e00\u7f16\u5740\u7684\u3002\u5f53\u63a5\u5730\u65f6\uff0c\u53ea\u80fd\u8bfb\u5916\u90e8ROM\uff0c\u5f53\u63a5\u9ad8\u7535\u5e73\u65f6\uff0c\u4ece\u5185\u90e8ROM\u5f00\u59cb\u8bfb\uff0c\u5f53\u5730\u5740\u8d85\u8fc70FFFH\u65f6\uff0c\u8bfb\u5916\u90e8ROM\u3002\u5728\u8bbf\u95ee\u5916\u90e8ROM\u65f6\uff0c\u63a7\u5236\u4fe1\u53f7\u6709ALE\u548cPSEN\u3002</p> <p>\u7f16\u5740\u65b9\u6cd5\uff1a</p> <p>\u7ebf\u9009\u6cd5\uff1a\u4ee5\u7cfb\u7edf\u7684\u67d0\u9ad8\u4f4d\u5730\u5740\u7ebf\u4f5c\u4e3a\u5b58\u50a8\u82af\u7247\u7684\u7247\u9009\u4fe1\u53f7\uff0c\u4e3a\u6b64\u53ea\u9700\u628a\u9ad8\u4f4d\u5730\u5740\u7ebf\u4e0e\u5b58\u50a8\u82af\u7247\u7684\u7247\u9009\u4fe1\u53f7\u76f4\u63a5\u76f8\u8fde </p> <p>\u8bd1\u7801\u6cd5\uff1a\u4f7f\u7528\u8bd1\u7801\u5668\u5bf9MCS-51\u5355\u7247\u673a\u7684\u9ad8\u4f4d\u5730\u5740\u7ebf\u8fdb\u884c\u8bd1\u7801\uff0c\u4ee5\u8bd1\u7801\u8f93\u51fa\u4f5c\u4e3a\u5b58\u50a8\u5668\u82af\u7247\u7684\u7247\u9009\u4fe1\u53f7 </p> <p>\u91c7\u7528\u7ebf\u9009\u6cd5\u65f6\u6bcf\u4e2a\u5b58\u50a8\u5668\u82af\u7247\u7684\u5730\u5740\u8303\u56f4\u662f\u552f\u4e00\u7684\uff0c\u4f46\u5404\u82af\u7247\u7684\u5730\u5740\u8303\u56f4\u4e0d\u8fde\u7eed\uff0c\u8fd9\u5c06\u7ed9\u5b58\u50a8\u7a0b\u5e8f\u5e26\u6765\u5f88\u5927\u7684\u4e0d\u4fbf\u3002\u591a\u7247\u5b58\u50a8\u82af\u7247\u6269\u5c55\u4e2d\uff0c\u5730\u5740\u8303\u56f4\u7684\u4e0d\u8fde\u7eed\u662f\u7ebf\u9009\u6cd5\u7684\u53e6\u4e00\u4e2a\u7f3a\u70b9\u3002\u4e3a\u4e86\u4f7f\u5404\u5b58\u50a8\u5668\u82af\u7247\u7684\u5730\u5740\u8303\u56f4\u552f\u4e00\u4e14\u8fde\u7eed\uff0c\u53ef\u4ee5\u91c7\u7528\u8bd1\u7801\u6cd5\u3002 </p> <p>4\u3001\u5e76\u884c\u6570\u636e\u5b58\u50a8\u5668\u7684\u6269\u5c55</p> <p></p> <p>A0~A14\uff1a\u5730\u5740\u8f93\u5165\u7ebf</p> <p>D0~D7\uff1a\u6570\u636e\u7ebf</p> <p>CE\uff1a\u7247\u9009\u4fe1\u53f7\u7ebf</p> <p>OE\uff1a\u8bfb\u9009\u901a\u4fe1\u53f7\u7ebf</p> <p>WE\uff1a\u5199\u9009\u901a\u4fe1\u53f7\u7ebf</p> <p>CS\uff1a\u9009\u901a\u7aef\uff1b</p> <p>NC\uff1a\u7a7a\u811a</p> <p>5\u3001\u5e76\u884c\u7a0b\u5e8f\u5b58\u50a8\u5668\u548c\u6570\u636e\u5b58\u50a8\u5668\u7684\u6df7\u5408\u6269\u5c55</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#i2ci2cat","title":"I2C\u603b\u7ebf\u53caI2C\u603b\u7ebf\u7684AT\u5b58\u50a8\u5668\u6269\u5c55","text":"<p>TODO</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_17","title":"\u5c0f\u7ed3","text":"<p>\u200b      \u5b58\u50a8\u5668\u6309\u7167\u529f\u80fd\u53ef\u5206\u4e3a\u4e24\u5927\u7c7b\uff1aROM\u548cRAM\u3002ROM\u4e3b\u8981\u5b58\u653e\u7a0b\u5e8f\u548c\u5e38\u7528\u6570\u636e\uff0c\u53ea\u80fd\u8bfb\u53d6\u3002RAM\u4e3b\u8981\u5b58\u653e\u5404\u79cd\u6570\u636e\uff0c\u968f\u673a\u5b58\u53d6\u3002ROM\u53ef\u5206\u4e3a\u63a9\u6a21ROM\u3001PROM\u3001EPROM\u3001E2PROM\u548cFlash ROM\u3002\u76ee\u524d\uff0c\u5355\u7247\u673a\u7cfb\u7edf\u5e38\u7528\u7684\u6709Intel 27\u7cfb\u5217\u7684EPROM\u548c28\u7cfb\u5217\u7684E2PROM\u3002RAM\u53ef\u5206\u4e3aSRAM\u548cDRAM\uff0c\u5e38\u7528\u7684\u6709Intel\u768462\u7cfb\u5217\u82af\u7247\u3002</p> <p>\u200b      I2C\u603b\u7ebf\u5668\u4ef6\u548c\u5355\u7247\u673a\u8fde\u63a5\u53ea\u9700\u8981SDA\u548cSCL\u4e24\u6839\u7ebf\uff0c\u56e0\u8282\u7701I/O\u53e3\u3001\u7535\u8def\u8fde\u63a5\u7b80\u5355\u5f97\u5230\u4e86\u8f83\u4e3a\u5e7f\u6cdb\u7684\u5e94\u7528\u3002I2C\u603b\u7ebf\u7684AT\u7cfb\u5217\u5b58\u50a8\u5668\u56e0\u5176\u65ad\u7535\u540e\u6570\u636e\u4e0d\u6d88\u5931\u800c\u6df1\u53d7\u6b22\u8fce\uff0c\u5728\u4f7f\u7528\u4e0a\u5e94\u4e25\u683c\u6309\u7167\u65f6\u5e8f\u8fdb\u884c\u5404\u7c7b\u4fe1\u53f7\u53ca\u6570\u636e\u7684\u4f20\u9001\u3002 </p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#9-mcs-51","title":"\u7b2c9\u7ae0 MCS-51\u5355\u7247\u673a\u4e32\u884c\u63a5\u53e3","text":""},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_18","title":"\u4e32\u884c\u901a\u4fe1\u6982\u8ff0","text":"<p>\u4e32\u884c\u901a\u4fe1\u6709\u4e24\u79cd\u57fa\u672c\u901a\u4fe1\u65b9\u5f0f\uff0c\u5206\u522b\u662f\u5f02\u6b65\u901a\u4fe1\u548c\u540c\u6b65\u901a\u4fe1\u3002</p> <p>1\u3001\u5f02\u6b65\u901a\u4fe1ASYNC (asynchronous data communication)</p> <p>\u5f02\u6b65\u901a\u4fe1\u7684\u6570\u636e\u662f\u6309\u4e00\u5b9a\u7684\u5e27\u683c\u5f0f\u4f20\u9001\u7684\u3002\u5e27\u683c\u5f0f\u4e2d\uff0c\u4e00\u4e2a\u5b57\u7b26\u7531\u56db\u90e8\u5206\u7ec4\u6210\uff1a\u8d77\u59cb\u4f4d\uff0c\u6570\u636e\u4f4d\uff0c\u5947\u5076\u6821\u9a8c\u4f4d\u548c\u505c\u6b62\u4f4d\u3002\u9996\u5148\u662f\u4e00\u4e2a\u8d77\u59cb\u4f4d\uff080\uff09\uff0c\u7136\u540e\u662f5\u52308\u4f4d\u6570\u636e\u4f4d\uff08\u4e00\u822c\u89c4\u5b9a\u4f4e\u4f4d\u5728\u524d\uff0c\u9ad8\u4f4d\u5728\u540e\uff09\uff0c\u63a5\u4e0b\u6765\u662f\u5947\u5076\u6821\u9a8c\u4f4d\uff08\u53ef\u7701\uff09\uff0c\u6700\u540e\u662f\u505c\u6b62\u4f4d\uff081\uff09\u3002</p> <p>2\u3001\u540c\u6b65\u901a\u4fe1SYNC(synchronous data communication) </p> <p>\u540c\u6b65\u901a\u4fe1\u4e2d\uff0c\u5728\u6570\u636e\u5f00\u59cb\u4f20\u9001\u524d\u7528\u540c\u6b65\u5b57\u7b26\u6765\u6307\u793a\uff08\u5e38\u7ea6\u5b9a\u4e3a1~2\u4e2a\u540c\u6b65\u5b57\u7b26\uff09\uff0c\u5e76\u7531\u540c\u6b65\u65f6\u949f\u6765\u5b9e\u73b0\u53d1\u9001\u7aef\u548c\u63a5\u6536\u7aef\u540c\u6b65\uff0c\u5373\u68c0\u6d4b\u5230\u89c4\u5b9a\u7684\u540c\u6b65\u5b57\u7b26\u540e\uff0c\u5c31\u8fde\u7eed\u6309\u987a\u5e8f\u4f20\u9001\u6570\u636e\uff0c\u76f4\u5230\u901a\u4fe1\u544a\u4e00\u6bb5\u843d\u3002\u540c\u6b65\u4f20\u9001\u65f6\uff0c\u5b57\u7b26\u4e0e\u5b57\u7b26\u95f4\u6ca1\u6709\u95f4\u9699\uff0c\u4e5f\u6ca1\u6709\u8d77\u59cb\u4f4d\u548c\u505c\u6b62\u4f4d\uff0c\u4ec5\u5728\u6570\u636e\u5757\u5f00\u59cb\u65f6\u7528\u540c\u6b65\u5b57\u7b26\u6765\u6307\u793a\u3002</p> <p>3\u3001\u4e32\u884c\u901a\u4fe1\u7684\u7ebf\u8def\u4f20\u8f93\u65b9\u5f0f</p> <p>\uff081\uff09\u5355\u5de5\u4f20\u8f93\u65b9\u5f0f</p> <p>\uff082\uff09\u534a\u53cc\u5de5\u4f20\u8f93\u65b9\u5f0f</p> <p>\uff083\uff09\u5168\u53cc\u5de5\u4f20\u8f93\u65b9\u5f0f</p> <p>4\u3001\u6ce2\u7279\u7387</p> <p>\u4e32\u884c\u901a\u4fe1\u4e2d\uff0c\u6570\u636e\u4f20\u9001\u901f\u7387\u6709\u4e24\u4e2a\u6d4b\u91cf\u5355\u4f4d\uff0c\u5373\u6bd4\u7279\u7387\u548c\u6ce2\u7279\u7387\u3002\u6bd4\u7279\u7387\uff08bit rate\uff09\u8868\u793a\u6bcf\u79d2\u4f20\u9001\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u4f4d\u6570\uff0c\u5355\u4f4d\u4e3ab/s\uff08\u6709\u65f6\u5019\u4e5f\u5199\u6210bps\uff0c\u5373bit per second\uff09\u3002 </p> <p>\u5728\u6570\u636e\u901a\u4fe1\u4e2d\u5e38\u7528\u6ce2\u7279\u7387\u8868\u793a\u6bcf\u79d2\u4f20\u9001\u7684\u7b26\u53f7\u6570\uff0c\u5355\u4f4d\u4e3a\u6ce2\u7279\uff08baud\uff09\u3002\u5bf9\u4e8e\u4e00\u6b21\u53d1\u9001\u4e00\u4f4d\u7684\u88c5\u7f6e\uff0c\u5982PC\u673a\u548cMCS-51\u5355\u7247\u673a\u7684\u4e32\u884c\u53e3\uff0c\u6bd4\u7279\u7387\u548c\u6ce2\u7279\u7387\u662f\u4e00\u6837\u7684\uff0c\u53731 baud\uff1d1b/s\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#mcs-51","title":"MCS-51\u5355\u7247\u673a\u4e32\u884c\u53e3","text":"<p>MCS-51\u7cfb\u5217\u5355\u7247\u673a\u5185\u90e8\u6709\u4e00\u4e2a\u91c7\u7528\u5f02\u6b65\u901a\u4fe1\u5de5\u4f5c\u65b9\u5f0f\u7684\u53ef\u7f16\u7a0b\u5168\u53cc\u5de5\u4e32\u884c\u901a\u4fe1\u63a5\u53e3\uff0c\u901a\u8fc7\u8f6f\u4ef6\u7f16\u7a0b\uff0c\u53ef\u4ee5\u7528\u4f5cUART\uff0c\u4e5f\u53ef\u505a\u540c\u6b65\u79fb\u4f4d\u5bc4\u5b58\u5668\u7528\u3002\u5176\u5e27\u683c\u5f0f\u53ef\u67098\u4f4d\u300110\u4f4d\u548c11\u4f4d\u51e0\u79cd\uff0c\u5e76\u80fd\u8bbe\u7f6e\u6ce2\u7279\u7387\uff0c\u5728\u4f7f\u7528\u4e0a\u7075\u6d3b\u65b9\u4fbf\u3002 </p> <p>1\u3001\u4e32\u884c\u53e3\u7ed3\u6784\u53ca\u5de5\u4f5c\u539f\u7406 </p> <p>\uff081\uff09\u4e32\u884c\u53e3\u7684\u7ed3\u6784</p> <p>\u5b83\u4e3b\u8981\u7531\u4e24\u4e2a\u6570\u636e\u7f13\u51b2\u5668SBUF\u3001\u4e00\u4e2a9\u4f4d\u7684\u8f93\u5165\u79fb\u4f4d\u5bc4\u5b58\u5668\u548c\u4e00\u4e2a\u4e32\u884c\u63a7\u5236\u5bc4\u5b58\u5668SCON\u7b49\u7ec4\u6210\u3002 </p> <p></p> <p>\u6ce8\uff1aTH1\u548cTL1\u4e3a\u65f6\u949f1\u7684\u6ea2\u51fa\u901f\u7387</p> <p>3\u3001\u4e32\u884c\u53e3\u7684\u5de5\u4f5c\u539f\u7406</p> <p>\u4e32\u884c\u53e3\u7684\u53d1\u9001\u548c\u63a5\u6536\u90fd\u662f\u4ee5\u7279\u6b8a\u529f\u80fd\u5bc4\u5b58\u5668SBUF\u7684\u540d\u4e49\u8fdb\u884c\u8bfb/\u5199\u7684\u3002\u5f53\u5411SBUF\u5199\u64cd\u4f5c\u65f6\uff08\u5373\u6267\u884cMOV SBUF, A\u6307\u4ee4\uff09 ,\u5219\u5411\u53d1\u9001\u7f13\u51b2\u5668SBUF\u88c5\u8f7d\u6570\u636e\u5e76\u7531TXD\u5f15\u811a\u5411\u5916\u53d1\u9001\u4e00\u5e27\u6570\u636e ,\u53d1\u9001\u5b8c\u4fbf\u4f7f\u53d1\u9001\u4e2d\u65ad\u6807\u5fd7\u4f4dTI=1\u3002 </p> <p>\u5728\u4e32\u884c\u53e3\u5141\u8bb8\u63a5\u6536\uff08REN=1\uff09\u65f6\uff0c\u5c31\u53ef\u63a5\u6536\u4e00\u5e27\u6570\u636e\u8fdb\u5165\u79fb\u4f4d\u5bc4\u5b58\u5668(9\u4f4d)\uff0c\u5982\u679c\u6ee1\u8db3\u63a5\u6536\u4e2d\u65ad\u6807\u5fd7\u4f4dRI=0\u7684\u6761\uff0c\u5219\u5c06\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u636e\u88c5\u8f7d\u5230\u63a5\u6536SBUF\u4e2d\uff0c\u540c\u65f6\u4f7fRI=1\u3002\u5982\u679c\u5141\u8bb8\u4e2d\u65ad\uff0cCPU\u5728\u6267\u884c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u65f6\u518d\u63a5\u53d7\u4e0b\u4e00\u5e27\u6570\u636e\uff1b\u5982\u679c\u7981\u6b62\u4e2d\u65ad\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u8be2RI\u4f4d\u7684\u72b6\u6001\u6765\u5224\u65ad\u662f\u5426\u63a5\u53d7\u5b8c\u6bd5\u3002\u5f53\u53d1\u51fa\u8bfbSBUF\u547d\u4ee4\u65f6\uff08MOV  A, SBUF\uff09\uff0c\u4fbf\u5c06\u63a5\u6536SBUF\u4e2d\u7684\u6570\u636e\u901a\u8fc7\u5185\u90e8\u603b\u7ebf\u8bfb\u5165\u5230\u7d2f\u52a0\u5668\u4e2d\u6216\u6307\u5b9a\u7684\u5185\u90e8RAM\u4e2d\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_19","title":"\u4e32\u884c\u901a\u4fe1\u5de5\u4f5c\u65b9\u5f0f","text":"<p>1\u3001\u65b9\u5f0f0\u2014\u2014\u540c\u6b65\u79fb\u4f4d\u5bc4\u5b58\u5668\u8f93\u5165/\u8f93\u51fa\u65b9\u5f0f\uff0c\u5176\u4e32\u884c\u6570\u636e\u901a\u8fc7RXD\u8f93\u5165\u6216\u8f93\u51fa\uff0cTXD\u8f93\u51fa\u79fb\u4f4d\u65f6\u949f\uff0c\u4e0e\u5916\u56f4\u5668\u4ef6\u76f8\u8fde\u65f6\u4f5c\u4e3a\u5916\u56f4\u5668\u4ef6\u7684\u540c\u6b65\u4fe1\u53f7\u3002\u8fd9\u79cd\u65b9\u5f0f\u5e38\u7528\u4e8e\u6269\u5c55I/O\u53e3\u3002 </p> <p></p> <p>2\u3001\u65b9\u5f0f1 \u2014\u201410\u4f4d\u5f02\u6b65\u901a\u4fe1\u65b9\u5f0f \uff0c\u5728\u8be5\u65b9\u5f0f\u4e0b\uff0cTXD\u548cRXD\u5206\u522b\u7528\u4e8e\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u3002</p> <p>\u63a5\u6536\u6570\u636e\u65f6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\uff1a \u2460 REN=1\uff08\u5148\u51b3\u6761\u4ef6\uff09\uff1b\u2461 RI=0 \uff1b\u2462 SM2=0\u6216\u63a5\u6536\u5230\u7684\u505c\u6b62\u4f4d\uff08\u7b2c\u4e5d\u4f4d\uff09\u4e3a1\u3002</p> <p>3\u3001\u65b9\u5f0f2\u548c\u65b9\u5f0f3\u2014\u2014\u8fd9\u4e24\u79cd\u65b9\u5f0f\u5747\u4e3a11\u4f4d\u5f02\u6b65\u901a\u4fe1\u65b9\u5f0f\uff0c\u7531TXD\u548cRXD\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u3002\u4e24\u79cd\u65b9\u5f0f\u7684\u64cd\u4f5c\u8fc7\u7a0b\u5b8c\u5168\u4e00\u6837\uff0c\u6240\u4e0d\u540c\u7684\u53ea\u662f\u6ce2\u7279\u7387\u3002\u6bcf\u5e2711\u4f4d\uff0c\u5305\u62ec1\u4f4d\u8d77\u59cb\u4f4d\u30018\u4f4d\u6570\u636e\u4f4d\u30011\u4f4d\u53ef\u7f16\u7a0b\u7684\u7b2c9\u4f4d\u548c1\u4f4d\u505c\u6b62\u4f4d\u3002</p> <p>\u63a5\u6536\u6570\u636e\u65f6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\uff1a \u2460 REN=1\uff08\u5148\u51b3\u6761\u4ef6\uff09\uff1b\u2461 RI=0 \uff1bSM2=0\uff08\u6216\u63a5\u6536\u5230\u7684\u7b2c9\u4e2a\u6570\u636e\u4f4d\u4e3a1\uff09\u3002  </p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#10-io","title":"\u7b2c10\u7ae0 \u5355\u7247\u673a\u5e76\u884cI/O\u63a5\u53e3\u6269\u5c55","text":""},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#io_1","title":"I/O\u63a5\u53e3\u6280\u672f\u6982\u8ff0","text":"<p>1\u3001\u9700\u8981I/O\u63a5\u53e3\u7535\u8def\u7684\u539f\u56e0</p> <p>\u63a5\u53e3\uff1a  \u5b58\u50a8\u5668\u63a5\u53e3\uff1a\u4e09\u603b\u7ebf\u8fde\u63a5\u7b80\u5355</p> <p>\u200b              I/O\u63a5\u53e3\uff1a      \u590d\u6742</p> <p>2\u3001\u5176\u590d\u6742\u6027\u4e3b\u8981\u8868\u73b0\u5728\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a  </p> <p>1\uff09\u5916\u90e8\u8bbe\u5907\u7684\u5de5\u4f5c\u901f\u5ea6\u5feb\u6162\u5dee\u5f02\u5f88\u5927\u3002</p> <p>2\uff09\u5916\u90e8\u8bbe\u5907\u79cd\u7c7b\u7e41\u591a\uff0c\u65e2\u6709\u673a\u68b0\u5f0f\u7684\uff0c\u53c8\u6709\u673a\u7535\u5f0f\u7684\uff0c\u8fd8\u6709\u7535\u5b50\u5f0f\u7684\u3002\u4e0d\u540c\u79cd\u7c7b\u7684\u5916\u90e8\u8bbe\u5907\u4e4b\u95f4\u6027\u80fd\u5404\u5f02\u3002</p> <p>3\uff09\u5916\u90e8\u8bbe\u5907\u7684\u6570\u636e\u4fe1\u53f7\u662f\u591a\u79cd\u591a\u6837\u7684\u3002 \u65e2\u6709\u7535\u538b\u4fe1\u53f7\uff0c\u4e5f\u6709\u7535\u6d41\u4fe1\u53f7; \u65e2\u6709\u6570\u5b57\u5f62\u5f0f\uff0c\u8fd8\u6709\u6a21\u62df\u5f62\u5f0f\u3002 </p> <p>4\uff09\u5916\u8bbe\u7684\u6570\u636e\u4f20\u9001\u6709\u8fd1\u8ddd\u79bb\u7684\uff0c\u4e5f\u6709\u8fdc\u8ddd\u79bb\u7684\u3002  \u8fd1\u8ddd\u79bb\uff1a \u5e76\u884c\u4f20\u9001\uff1b\u8fdc\u8ddd\u79bb\uff1a\u4e32\u884c\u4f20\u9001\u3002\u4f20\u9001\u65b9\u5f0f\u7684\u8f6c\u6362\u3002</p> <p>\u6b63\u662f\u7531\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0c\u4f7f\u6570\u636e\u7684I/O\u64cd\u4f5c\u53d8\u5f97\u5341\u5206\u590d\u6742\uff0c\u65e0\u6cd5\u5b9e\u73b0\u5916\u90e8\u8bbe\u5907\u4e0eCPU\u8fdb\u884c\u76f4\u63a5\u7684\u540c\u6b65\u6570\u636e\u4f20\u9001\uff0c\u800c\u5fc5\u987b\u5728CPU\u548c\u5916\u8bbe\u4e4b\u95f4\u8bbe\u7f6e\u4e00\u4e2a\u63a5\u53e3\u7535\u8def\uff0c\u901a\u8fc7\u63a5\u53e3\u7535\u8def\u5bf9CPU\u4e0e\u5916\u8bbe\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u9001\u8fdb\u884c\u534f\u8c03\u3002</p> <p>4\u3001\u5728\u6570\u636e\u7684I/O\u4f20\u9001\u4e2d\uff0c\u63a5\u53e3\u7535\u8def\u4e3b\u8981\u6709\u5982\u4e0b\u51e0\u9879\u529f\u80fd;</p> <p>\u200b     1\uff09\u901f\u5ea6\u534f\u8c03</p> <p>\u200b     2\uff09\u6570\u636e\u9501\u5b58</p> <p>\u200b    \u5728\u63a5\u53e3\u7535\u8def\u4e2d\u9700\u8bbe\u7f6e\u6570\u636e\u9501\u5b58\u5668\uff0c\u4ee5\u4fdd\u5b58\u8f93\u51fa\u6570\u636e\u76f4\u81f3\u4e3a\u8f93\u51fa\u8bbe\u5907\u6240\u63a5\u6536\u3002</p> <p>\u200b     3\uff09\u4e09\u6001\u7f13\u51b2</p> <p>\u200b    \u6570\u636e\u8f93\u5165\u65f6\uff0c\u8f93\u5165\u8bbe\u5907\u5411CPU\u4f20\u9001\u7684\u6570\u636e\u4e5f\u8981\u901a\u8fc7\u6570\u636e\u603b\u7ebf\uff0c\u4f46\u6570\u636e\u603b\u7ebf\u662f\u7cfb\u7edf\u7684\u516c\u7528\u6570\u636e\u901a\u9053\uff0c\u4e0a\u9762\u53ef\u80fd\u201c\u6302\u201d\u7740\u8bb8\u591a\u6570\u636e\u6e90\uff0c\u5de5\u4f5c\u5341\u5206\u7e41\u5fd9\u3002\u4e3a\u4e86\u7ef4\u62a4\u6570\u636e\u603b\u7ebf\u4e0a\u6570\u636e\u4f20\u9001\u7684\u201c\u79e9\u5e8f\u201d\uff0c\u56e0\u6b64\u53ea\u5141\u8bb8\u5f53\u524d\u65f6\u523b\u6b63\u5728\u8fdb\u884c\u6570\u636e\u4f20\u9001\u7684\u6570\u636e\u6e90\u4f7f\u7528\u6570\u636e\u603b\u7ebf\uff0c\u5176\u4f59\u6570\u636e\u6e90\u90fd\u5fc5\u987b\u4e0e\u6570\u636e\u603b\u7ebf\u5904\u4e8e\u9694\u79bb\u72b6\u6001\u3002\u4e3a\u6b64\u8981\u6c42\u63a5\u53e3\u7535\u8def\u80fd\u4e3a\u6570\u636e\u8f93\u5165\u63d0\u4f9b\u4e09\u6001\u7f13\u51b2\u529f\u80fd\u3002</p> <p>5\u3001\u6570\u636e\u8f6c\u6362</p> <p>CPU\u8f93\u5165\u3001\u8f93\u51fa\u4fe1\u53f7\u7684\u5f62\u5f0f\uff1a\u5e76\u884c\uff0c\u6570\u5b57\u4fe1\u53f7\uff08\u4ee5\u7535\u538b\u5f62\u5f0f\u4f53\u73b0\uff09\u3002</p> <p>\u5305\u62ec\uff1a\u6a21\u4e00\u6570\u8f6c\u6362\u3001\u6570\uff0d\u6a21\u8f6c\u6362\u3001 \u4e32\uff0d\u5e76\u8f6c\u6362\u3001\u5e76\uff0d\u4e32\u8f6c\u6362\u7b49\u3002</p> <p>\u63a5\u53e3\u7535\u8def\u4e5f\u5c31\u6210\u4e3aI/O\u6570\u636e\u4f20\u9001\u7684\u6838\u5fc3\u5185\u5bb9\uff0c\u662f\u8ba1\u7b97\u673a\u4e2d\u4e0d\u53ef\u7f3a\u5c11\u7684\u7ec4\u6210\u90e8\u5206\u3002</p> <p>6\u3001\u63a5\u53e3\u4e0e\u7aef\u53e3</p> <p>\u63a5\u53e3\uff1a\u7279\u6307\u8ba1\u7b97\u673a\u4e0e\u5916\u8bbe\u4e4b\u95f4\u5728\u6570\u636e\u4f20\u9001\u65b9\u9762\u7684\u8054\u7cfb\u3002</p> <p>\u5176\u529f\u80fd\u4e3b\u8981\u662f\u901a\u8fc7\u7535\u8def\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u79f0\u4e4b\u4e3a\u63a5\u53e3\u7535\u8def\u3002</p> <p>\u5728\u63a5\u53e3\u7535\u8def\u4e2d\u5e94\u8be5\u5305\u542b\uff1a</p> <p>\u6570\u636e\u5bc4\u5b58\u5668\uff1a\u4fdd\u5b58\u8f93\u5165\u8f93\u51fa\u6570\u636e</p> <p>\u72b6\u6001\u5bc4\u5b58\u5668\uff1a\u4fdd\u5b58\u5916\u8bbe\u7684\u72b6\u6001\u4fe1\u606f</p> <p>\u547d\u4ee4\u5bc4\u5b58\u5668\uff1a\u4fdd\u5b58\u6765\u81eaCPU\u7684\u6709\u5173\u6570\u636e\u4f20\u9001\u7684\u63a7\u5236\u547d\u4ee4\u3002</p> <p>\u8fd9\u4e9b\u5bc4\u5b58\u5668\u90fd\u662f\u53ef\u8bfb\u5199\u7684\u7f16\u5740\u5bc4\u5b58\u5668\uff0c\u5bf9\u5b83\u4eec\u50cf\u5b58\u50a8\u5355\u5143\u4e00\u6837\u8fdb\u884c\u7f16\u5740\u3002</p> <p>\u628a\u63a5\u53e3\u7535\u8def\u4e2d\u8fd9\u4e9b\u5df2\u7f16\u5740\u5e76\u80fd\u8fdb\u884c\u8bfb\u6216\u5199\u64cd\u4f5c\u7684\u5bc4\u5b58\u5668\u79f0\u4e4b\u4e3a\u7aef\u53e3\uff08port\uff09\uff0c\u6216\u7b80\u79f0\u53e3\u3002</p> <p>7\u3001\u5355\u7247\u673a\u4e0e\u5916\u8bbe\u7684I/O\u63a5\u53e3\u57fa\u672c\u7ed3\u6784</p> <p></p> <p>8\u3001I/O\u64cd\u4f5c\u65b9\u5f0f</p> <p>\uff081\uff09 \u7f16\u5740</p> <p>I/O\u64cd\u4f5c\u5bf9\u8c61\uff1a\u5b58\u50a8\u5668\u5355\u5143\uff0cI/O\u7aef\u53e3</p> <p>\u51e1\u9700\u8981\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u7684\u8bbe\u5907\u90fd\u5b58\u5728\u5730\u5740\u3002</p> <p>\u7f16\u5740\uff1a\u7ed9\u5355\u5143\u5b89\u6392\u5730\u5740</p> <p>\u5bf9\u7aef\u53e3\u7f16\u5740\u662f\u4e3aI/O\u64cd\u4f5c\u800c\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u4e5f\u79f0\u4e3aI/O\u7f16\u5740\u3002\u8ba1\u7b97\u673a\u4e2d\u5e38\u7528\u7684I/O\u7f16\u5740\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u72ec\u7acb\u7f16\u5740\u65b9\u5f0f\u548c\u7edf\u4e00\u7f16\u5740\u65b9\u5f0f\u3002</p> <p>\u72ec\u7acb\u7f16\u5740\uff1a\u628aI/O\u548c\u5b58\u50a8\u5668\u5206\u5f00\u8fdb\u884c\u7f16\u5740\uff0c\u5373\u5404\u7f16\u5404\u7684\u5730\u5740\u3002\u5728\u4f7f\u7528\u72ec\u7acb\u7f16\u5740\u65b9\u5f0f\u7684\u8ba1\u7b97\u673a\u6307\u4ee4\u7cfb\u7edf\u4e2d\uff0c\u9664\u5b58\u50a8\u5668\u8bfb\u5199\u6307\u4ee4\u4e4b\u5916\uff0c\u8fd8\u6709\u4e13\u95e8\u7684I/O\u6307\u4ee4\u4ee5\u8fdb\u884c\u6570\u636e\u7684\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c\u3002\u6b64\u5916\u5728\u786c\u4ef6\u65b9\u9762\u8fd8\u9700\u8981\u5b9a\u4e49\u4e00\u4e9b\u4e13\u7528\u7684\u4fe1\u53f7\u5982Z80\uff0c8088/8086\u7684CPU\u4e5f\u91c7\u7528\u72ec\u7acb\u7f16\u5740\u65b9\u5f0f\u3002 </p> <p>\u7edf\u4e00\u7f16\u5740\uff1a\u7edf\u4e00\u7f16\u5740\u5c31\u662f\u628a\u7cfb\u7edf\u4e2d\u7684I/O\u53e3\u548c\u5b58\u50a8\u5668\u7edf\u4e00\u8fdb\u884c\u7f16\u5740\u3002\u5728\u8fd9\u79cd\u7f16\u5740\u65b9\u5f0f\u4e2d\uff0c\u628aI/O\u63a5\u53e3\u4e2d\u7684\u5bc4\u5b58\u5668\uff08\u7aef\u53e3\uff09\u5f53\u505a\u5b58\u50a8\u5668\u5355\u5143\u5bf9\u5f85\u3002\u5bf9\u4e8e51\u7cfb\u5217\u5355\u7247\u673a\uff0c\u91c7\u7528\u7edf\u4e00\u7f16\u5740\u65b9\u5f0f\u3002\u5bf9I/O\u53e3\u7684\u64cd\u4f5c\uff0c\u5e76\u4e0d\u9700\u8981\u5355\u72ec\u7684\u6307\u4ee4\uff0c\u7528MOVX\u6307\u4ee4\u5373\u53ef\u3002</p> <p>\uff082\uff09I/O\u53e3\u7684\u64cd\u4f5c</p> <p>\u5728\u5355\u7247\u673a\u4e2d\u628aI/O\u63a5\u53e3\u4e2d\u7684\u5bc4\u5b58\u5668\u4e0e\u5916\u90e8RAM\u4e2d\u7684\u5b58\u50a8\u5355\u5143\u540c\u7b49\u5bf9\u5f85\u3002</p> <p>\u5bf9I/O\u7aef\u53e3\u7684\u64cd\u4f5c\u91c7\u7528\u4e0e\u5916\u90e8RAM\u64cd\u4f5c\u76f8\u540c\u7684\u6307\u4ee4\u7528MOVX\uff0c\u5373\uff1a     </p> <pre><code>MOVX  @DPTR,  A \uff1bI/O\u53e3\u8f93\u51fa\u6307\u4ee4\nMOVX  @Ri,  A \n\nMOVX  A, @DPTR  \uff1bI/O\u53e3\u8f93\u5165\u6307\u4ee4\nMOVX  A, @Ri \n</code></pre>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#io_2","title":"\u7b80\u5355I/O\u63a5\u53e3\u7684\u6269\u5c55\u65b9\u6cd5","text":"<p>MCS-51\u7cfb\u5217\u5355\u7247\u673a\u5e76\u884cI/O\u63a5\u53e3\u7684\u6269\u5c55\u65b9\u6cd5\u7075\u6d3b\u591a\u6837\uff0c\u4f46\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a\u91c7\u7528\u4e0d\u53ef\u7f16\u7a0b\u82af\u7247\u548c\u91c7\u7528\u53ef\u7f16\u7a0b\u5e76\u884c\u63a5\u53e3\u82af\u7247\u8fdb\u884c\u6269\u5c55\u4e24\u7c7b\u3002</p> <p>\u4e0d\u53ef\u7f16\u7a0b\u7684\u82af\u7247\uff1a\u670974LS244\u300174LS245\u300174LS273\u300174LS373\u300174LS367\u300174LS377\u3001CD4014\u3001CD4094\u7b49\uff1b</p> <p>\u53ef\u7f16\u7a0b\u5e76\u884c\u63a5\u53e3\u82af\u7247\uff1a\u67098155\u30018255A\u7b49\u3002 </p> <p>\u7b80\u5355I/O\u63a5\u53e3\u7684\u6269\u5c55\u5305\u62ec\u8f93\u5165\u6269\u5c55\u548c\u8f93\u51fa\u6269\u5c55\u4e24\u4e2a\u90e8\u5206\u3002</p> <p>1\uff0e\u7b80\u5355\u8f93\u5165\u63a5\u53e3\u6269\u5c55</p> <p>\u7b80\u5355\u8f93\u5165\u6269\u5c55\u53ea\u89e3\u51b3\u6570\u636e\u8f93\u5165\u7684\u7f13\u51b2\u95ee\u9898\u3002</p> <p>\u6570\u636e\u603b\u7ebf\u8981\u6c42\u6570\u636e\u6e90\u5fc5\u987b\u5177\u6709\u4e09\u6001\u7f13\u51b2\u529f\u80fd\uff0c\u56e0\u6b64\u7b80\u5355\u8f93\u5165\u6269\u5c55\u5b9e\u9645\u4e0a\u5c31\u662f\u6269\u5c55\u6570\u636e\u7f13\u51b2\u5668\u3002</p> <p>\u5176\u4f5c\u7528\u662f\u5f53\u8f93\u5165\u8bbe\u5907\u88ab\u9009\u901a\u65f6\uff0c\u4f7f\u6570\u636e\u6e90\u80fd\u4e0e\u6570\u636e\u603b\u7ebf\u76f4\u63a5\u6c9f\u901a;\u800c\u5f53\u8f93\u5165\u8bbe\u5907\u5904\u4e8e\u975e\u9009\u901a\u72b6\u6001\u65f6\uff0c\u628a\u6570\u636e\u6e90\u4e0e\u6570\u636e\u603b\u7ebf\u9694\u79bb\uff0c\u5373\u7f13\u51b2\u5668\u8f93\u51fa\u4e3a\u9ad8\u963b\u6297\u72b6\u6001\u3002</p> <p>2\u3001\u4e09\u6001\u7f13\u51b2\u7535\u8def</p> <p>\u4e09\u6001\u7f13\u51b2\u7535\u8def\u5c31\u662f\u5177\u6709\u4e09\u6001\u8f93\u51fa\u7684\u95e8\u7535\u8def\uff0c\u56e0\u6b64\u4e5f\u79f0\u4e3a\u4e09\u6001\u95e8\u3002</p> <p></p> <p>\u5178\u578b\u82af\u7247:74LS244\u548c74LS245</p> <p></p> <p></p> 74LS245\u903b\u8f91\u529f\u80fd\u8868\uff08DIR\uff1d1\uff09 \u8f93\u5165 \u8f93\u51fa OE A B 0 0 0 0 1 1 1 X \u9ad8\u963b <p>\u4e14DIR=\u201c0\u201d\u65f6\uff0c\u4fe1\u53f7\u7531B\u5411A\u4f20\u8f93\uff1b \u5f53DIR=\u201c1\u201d\u65f6\uff0c\u4fe1\u53f7\u7531A\u5411B\u4f20\u8f93\uff1b</p> <p>2\u3001\u7b80\u5355\u8f93\u51fa\u63a5\u53e3\u6269\u5c55 </p> <p>\u8f93\u51fa\u89e3\u51b3\u7684\u95ee\u9898\uff1a\u9501\u5b58\u3002</p> <p>\u5e38\u7528\u4e09\u6001\u9501\u5b58\u5668\uff1a74LS273\u300174LS373\u548c74LS377\u3002 </p> <p></p> <p></p> 74LS373\u7684\u903b\u8f91\u529f\u80fd\u8868 \u8f93\u5165 \u8f93\u51fa OE G D Q 0 1 1 1 0 1 0 0 0 0 \u00d7 \u4e0d\u53d8 1 \u00d7 \u00d7 \u9ad8\u963b"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#intel-8155","title":"\u53ef\u7f16\u7a0b\u5e76\u884c\u63a5\u53e3\u82af\u7247Intel 8155","text":"<p>8155\u5185\u6709\uff1a\u4e24\u4e2a8\u4f4d\u5e76\u884cI/O\u7aef\u53e3\u3001\u4e00\u4e2a6\u4f4d\u5e76\u884cI/O\u7aef\u53e3\u3001256B\u7684\u9759\u6001RAM\u3001\u4e00\u4e2a14\u4f4d\u7684\u51cf\u6cd5\u5b9a\u65f6/\u8ba1\u6570\u5668\u3002</p> <p>1\u30018155\u7684\u7ed3\u6784\u548c\u5f15\u811a</p> <p></p> <p></p> <p>CS\uff1a\u7247\u9009\u7ebf\uff0c\u4f4e\u7535\u5e73\u6709\u6548\u3002</p> <p>IO/M\uff1aRAM\u6216I/O\u53e3\u7684\u9009\u62e9\u7ebf\u3002</p> <p>\u5f53CS=0\uff0cIO/M=0\u65f6\uff0c8155\u53ea\u80fd\u505a\u7247\u5916RAM\u4f7f\u7528\uff0c\u5171256B\u3002\u5176\u5bfb\u5740\u8303\u56f4\u7531\u4ee5\u53caAD0\uff5eAD7\u7684\u63a5\u6cd5\u51b3\u5b9a\uff0c\u8fd9\u548c\u7b2c8\u7ae0\u8bb2\u5230\u7684\u7247\u5916RAM\u7684\u6269\u5c55\u65b9\u6cd5\u76f8\u540c\u3002\u540c\u65f6\uff0c\u5bf98155\u5185RAM\u7684\u64cd\u4f5c\u4e5f\u4f7f\u7528\u7247\u5916RAM\u7684\u8bfb/\u5199\u6307\u4ee4\u201cMOVX\u201d\u3002\u5f53\u5bf9\u7cfb\u7edf\u540c\u65f6\u6269\u5c55\u7247\u5916RAM\u82af\u7247\u548c8155\u7684RAM\u65f6\uff0c\u8981\u6ce8\u610f\u4e8c\u8005\u7684\u7f16\u5740\u95ee\u9898\u3002</p> <p>TIMER IN\u3001TIMER OUT\uff1a\u5b9a\u65f6/\u8ba1\u6570\u5668\u7684\u8109\u51b2\u8f93\u5165\u3001\u8f93\u51fa\u7ebf\u3002TIMER IN\u662f\u8109\u51b2\u8f93\u5165\u7ebf\uff0c\u5176\u8f93\u5165\u6bcf\u4e00\u4e2a\u8109\u51b2\u5bf98155\u5185\u90e8\u768414\u4f4d\u5b9a\u65f6/\u8ba1\u6570\u5668\u51cf1\uff1bTIMER OUT\u4e3a\u8f93\u51fa\u7ebf\uff0c\u5f53\u8ba1\u6570\u5668\u8ba1\u6ee1\u56de0\u65f6\uff0c8155\u4ece\u8be5\u7ebf\u8f93\u51fa\u8109\u51b2\u6216\u65b9\u6ce2\uff0c\u6ce2\u5f62\u5f62\u72b6\u7531\u8ba1\u6570\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u51b3\u5b9a\u3002 </p> <p>2\u3001I/O\u53e3\u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f</p> <p>1\uff09\u5bc4\u5b58\u5668\u5730\u5740\u5206\u914d</p> <p>\u5f53CS=0\uff0cIO/M=1 \u65f6\uff0c\u5bf93\u4e2aI/O\u7aef\u53e3\u4ee5\u53ca\u547d\u4ee4/\u72b6\u6001\u5bc4\u5b58\u5668\u548c\u5b9a\u65f6/\u8ba1\u6570\u5668\u8fdb\u884c\u64cd\u4f5c\u3002  \u5185\u90e8\u5bc4\u5b58\u5668\u5171\u67096\u4e2a\u3002</p> 8155\u7684\u53e3\u5730\u5740\u5206\u914d AD7\uff5eAD0 \u9009\u4e2d\u7684\u5bc4\u5b58\u5668 AD7 AD6 AD5 AD4 AD3 AD2 AD1 AD0 \u00d7 \u00d7 \u00d7 \u00d7 \u00d7 0 0 0 \u547d\u4ee4/\u72b6\u6001\u5bc4\u5b58\u5668 \u00d7 \u00d7 \u00d7 \u00d7 \u00d7 0 0 1 A\u53e3 \u00d7 \u00d7 \u00d7 \u00d7 \u00d7 0 1 0 B\u53e3 \u00d7 \u00d7 \u00d7 \u00d7 \u00d7 0 1 1 C\u53e3 \u00d7 \u00d7 \u00d7 \u00d7 \u00d7 1 0 0 \u5b9a\u65f6\\\u8ba1\u6570\u5668\u4f4e8\u4f4d\u5bc4\u5b58\u5668 \u00d7 \u00d7 \u00d7 \u00d7 \u00d7 1 0 1 \u5b9a\u65f6\\\u8ba1\u6570\u9ad88\u4f4d\u5bc4\u5b58\u5668 <p>2\uff09\u547d\u4ee4/\u72b6\u6001\u5b57</p> <p></p> <p>\u2461 \u72b6\u6001\u5b57</p> <p>\u72b6\u6001\u5b57\u4e5f\u662f8\u4f4d\uff0c\u4f46\u5b9e\u9645\u4e0a\u53ea\u4f7f\u7528\u4e867\u4f4d\u3002\u72b6\u6001\u5b57\u7528\u4e8e\u5bc4\u5b58\u5404\u7aef\u53e3\u53ca\u5b9a\u65f6/\u8ba1\u6570\u5668\u7684\u5de5\u4f5c\u72b6\u6001\u3002 </p> <p></p> <p>3\u3001I/O\u53e3\u7684\u5de5\u4f5c\u65b9\u5f0f</p> <p>A\u53e3\u548cB\u53e3\uff1a\u901a\u7528\u8f93\u5165/\u8f93\u51fa\u53e3\uff0c\u4e3b\u8981\u7528\u4e8e\u6570\u636e\u7684I/O\u4f20\u9001\uff0c\u5b83\u4eec\u90fd\u662f\u6570\u636e\u53e3\uff0c\u56e0\u6b64\u53ea\u6709\u8f93\u5165\u548c\u8f93\u51fa\u4e24\u79cd\u5de5\u4f5c\u65b9\u5f0f\u3002</p> <p>C\u53e3\uff1a6\u4f4d\u53e3\uff0c\u5b83\u65e2\u53ef\u4ee5\u7528\u4e8e\u6570\u636e\u7684\u8f93\u5165/\u8f93\u51fa\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u63a7\u5236\u53e3\uff0c\u7528\u4e8e\u4f20\u9001\u5bf9A\u53e3\u548cB\u53e3I/O\u64cd\u4f5c\u65f6\u7684\u63a7\u5236\u4fe1\u53f7\u6216\u72b6\u6001\u4fe1\u53f7\u3002</p> <p>C\u53e3\u6709\u56db\u79cd\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5206\u522b\u662f\uff1a</p> <p>\u65b9\u5f0f0\uff1a\u8f93\u5165\u65b9\u5f0f\uff1b</p> <p>\u65b9\u5f0f1\uff1a\u8f93\u51fa\u65b9\u5f0f\uff1b</p> <p>\u65b9\u5f0f2\uff1aA\u53e3\u63a7\u5236\u7aef\u53e3\u65b9\u5f0f\uff1b</p> <p>\u65b9\u5f0f3\uff1aA\u53e3\u548cB\u53e3\u63a7\u5236\u7aef\u53e3\u65b9\u5f0f\u3002</p> <p>\u5f53A\u53e3\u548cB\u53e3\u4ee5\u4e2d\u65ad\u65b9\u5f0f\u8fdb\u884c\u6570\u636e\u4f20\u9001\u65f6\uff0c\u6240\u9700\u7684\u8054\u7edc\u4fe1\u53f7\u7531C\u53e3\u63d0\u4f9b\u3002INTR\uff1a\u4e2d\u65ad\u8bf7\u6c42\u4fe1\u53f7\uff08\u8f93\u51fa\uff09\uff0c\u9ad8\u7535\u5e73\u6709\u6548\u3002BF\uff1a\u7f13\u51b2\u5668\u6ee1\u72b6\u6001\u4fe1\u53f7\uff08\u8f93\u51fa\uff09\uff0c\u9ad8\u7535\u5e73\u6709\u6548\u3002STB\uff1a\u9009\u901a\u4fe1\u53f7\uff08\u8f93\u5165\uff09\uff0c\u4f4e\u7535\u5e73\u6709\u6548\u3002  </p> **C**\u53e3\u7ebf\u4e0d\u540c\u5de5\u4f5c\u65b9\u5f0f\u7684\u529f\u80fd **\u65b9\u5f0f**1 **\u65b9\u5f0f**2 **\u65b9\u5f0f**3 \u65b9\u5f0f4 PC0 PC1 PC2 PC3 PC4 PC5 \u5168\u90e8\u4e3a \u8f93\u5165 \u5168\u90e8\u4e3a \u8f93\u51fa AINTR ABF ASTB \u8f93\u51fa \u8f93\u51fa \u8f93\u51fa AINTR ABF ASTB BINTR BBF BSTB <p>4\u30018155\u7684\u5b9a\u65f6/\u8ba1\u6570\u5668</p> <p>1\uff09\u5b9a\u65f6/\u8ba1\u6570\u5668\u7684\u5bc4\u5b58\u5668\u683c\u5f0f\uff1a14\u4f4d\u7684\u51cf\u6cd5\u8ba1\u6570\u5668\u3002</p> <p></p> <p>\u5728TIMER IN\u7aef\u8f93\u5165\u8ba1\u6570\u8109\u51b2\uff0c\u8ba1\u6ee1\u65f6\u7531TIMER OUT\u8f93\u51fa\u8109\u51b2\u6216\u65b9\u6ce2\uff0c\u8f93\u51fa\u65b9\u5f0f\u7531\u5b9a\u65f6/\u8ba1\u6570\u5668\u9ad88\u4f4d\u5bc4\u5b58\u5668\u4e2d\u7684M2\u548cM1\u51b3\u5b9a\u3002</p> <p>\u5f53TIMER IN\u5916\u63a5\u8109\u51b2\u65f6\u4e3a\u8ba1\u6570\u65b9\u5f0f\uff0c\u5916\u63a5\u7cfb\u7edf\u65f6\u949f\u65f6\u4e3a\u5b9a\u65f6\u65b9\u5f0f\u3002 </p> <p></p> <p>2\uff098155\u5b9a\u65f6/\u8ba1\u6570\u5668\u4e0eMCS-51\u5355\u7247\u673a\u5b9a\u65f6/\u8ba1\u6570\u5668\u7684\u5dee\u5f02</p> <p>\u2460 8155\u7684\u5b9a\u65f6/\u8ba1\u6570\u5668\u662f\u51cf\u6cd5\u8ba1\u6570\uff0c\u800cMCS-51\u5355\u7247\u673a\u7684\u5b9a\u65f6/\u8ba1\u6570\u5668\u662f\u52a0\u6cd5\u8ba1\u6570\uff0c\u56e0\u6b64\uff0c\u4e8c\u8005\u786e\u5b9a\u521d\u59cb\u503c\u7684\u65b9\u6cd5\u4e0d\u540c\u3002</p> <p>\u2461 8155\u7684\u5b9a\u65f6/\u8ba1\u6570\u5668\u53ea\u6709\u4e00\u79cd\u5de5\u4f5c\u65b9\u5f0f\uff0c\u537314\u4f4d\u7684\u8ba1\u6570\u5668\uff0c\u800cMCS-51\u7684\u5355\u7247\u673a\u6709\u591a\u79cd\u5de5\u4f5c\u65b9\u5f0f\u3002</p> <p>\u2462 8155\u548cMCS-51\u7684\u5b9a\u65f6/\u8ba1\u6570\u5668\u90fd\u6709\u5b9a\u65f6\u548c\u8ba1\u6570\u4e24\u79cd\u529f\u80fd\uff0c\u4f46\u5bf9\u4e8e8155\u7684\u5b9a\u65f6/\u8ba1\u6570\u5668\uff0c\u4e0d\u7ba1\u662f\u5b9a\u65f6\uff0c\u8fd8\u662f\u8ba1\u6570\uff0c\u5176\u8ba1\u6570\u8109\u51b2\u90fd\u7531\u5916\u90e8\u63d0\u4f9b\uff0c\u5373\u7531TIMER IN\u8f93\u5165\u3002</p> <p>\u2463 \u5f53MCS-51\u7684\u5b9a\u65f6/\u8ba1\u6570\u5668\u8ba1\u6ee1\u65f6\u7f6e\u4f4d\u6ea2\u51fa\u6807\u5fd7\u4f4dTF\uff0c\u800c8155\u7684\u5b9a\u65f6/\u8ba1\u6570\u5668\u5728\u8ba1\u6ee1\u540e\u7531TIMER OUT \u8f93\u51fa\u4e0d\u540c\u5f62\u5f0f\u7684\u6ce2\u5f62\u3002 </p> <p>3\uff09\u5b9a\u65f6/\u8ba1\u6570\u5668\u7684\u521d\u59cb\u5316</p> <p>\u2460 \u8bbe\u7f6e\u5b9a\u65f6/\u8ba1\u6570\u5668\u521d\u59cb\u503c</p> <p>\u5b9a\u65f6/\u8ba1\u6570\u5668\u768414\u4f4d\u521d\u59cb\u503c\uff080~214-1\uff09\u7531CPU\u5206\u522b\u5199\u51658155\u5b9a\u65f6/\u8ba1\u6570\u5668\u7684\u4f4e8\u4f4d\u548c\u9ad88\u4f4d\u5bc4\u5b58\u5668\u3002</p> <p>\u2461 \u8bbe\u7f6e\u8f93\u51fa\u65b9\u5f0f</p> <p>\u8f93\u51fa\u65b9\u5f0f\u7684\u8bbe\u7f6e\u5982\u524d\u9762\u8868\u4e2d\u3002</p> <p>\u2462 \u8bbe\u7f6e\u5de5\u4f5c\u72b6\u6001</p> <p>\u5b9a\u65f6/\u8ba1\u6570\u5668\u7684\u5de5\u4f5c\u72b6\u6001\u75318155\u547d\u4ee4\u5b57\u7684\u6700\u9ad8\u4e24\u4f4d\u2014\u2014TM2\u548cTM1\u4f4d\u51b3\u5b9a\u3002</p> <p>\u5f53TM2\u3001TM1 =00\u65f6\uff1a\u7a7a\u64cd\u4f5c\uff0c\u65e0\u4efb\u4f55\u52a8\u4f5c\uff0c\u4e0d\u5f71\u54cd\u8ba1\u6570\u5668\u7684\u5de5\u4f5c\u3002</p> <p>\u200b                       =01\u65f6\uff1a\u505c\u6b62\u8ba1\u6570\u3002</p> <p>\u200b                       =10\u65f6\uff1a\u5982\u679c\u8ba1\u6570\u5668\u672a\u542f\u52a8\uff0c\u5219\u7a7a\u64cd\u4f5c\uff1b\u82e5\u8ba1\u6570\u5668\u6b63\u5728\u5de5\u4f5c\uff0c\u5219\u8ba1\u6570\u5668\u7ee7\u7eed\u5de5\u4f5c\u81f3\u51cf\u52300\u65f6\u505c\u6b62\uff1b</p> <p>\u200b                       =11\u65f6\uff1a\u542f\u52a8\u8ba1\u6570\u5668\u3002</p> <p>8155\u4f7f\u7528\u65f6\uff0c\u901a\u5e38\u662f\u5148\u9001\u8ba1\u6570\u957f\u5ea6\u548c\u8f93\u51fa\u65b9\u5f0f\u7684\u4e24\u4e2a\u5b57\u8282\uff0c\u7136\u540e\u518d\u9001\u547d\u4ee4\u5b57\u5230\u547d\u4ee4\u5bc4\u5b58\u5668\u63a7\u5236\u8ba1\u6570\u5668\u7684\u542f\u505c\u3002</p> <p>5\u3001MCS-51\u5355\u7247\u673a\u4e0e8155\u7684\u8fde\u63a5</p> <p></p> <p>\u6ce8\uff1a\u56e0\u4e3a8155\u662f\u51cf\u6570\u8ba1\u6570\u5668\uff0c\u6240\u4ee5100\u5206\u9891\u65f6\uff0c\u5e94\u51cf\u6570\u7684\u521d\u503c\u4e3a100\uff0c\u6bcf\u8ba1\u6570\u8fbe\u5230100\u65f6\u8f93\u51fa\u4e00\u4e2a\u7535\u5e73\u6052\u5b9a\u7684\u4fe1\u53f7\uff0c\u5728\u4e0b\u4e00\u4e2a100\u8ba1\u6ee1\u65f6\uff0c\u8f93\u51fa\u7535\u5e73\u53d6\u53cd\uff0c\u5219\u8f93\u51fa\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u65b9\u6ce2\uff0c\u6545M2M1=01\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#ledlcd","title":"LED\u548cLCD\u663e\u793a\u63a5\u53e3\u6280\u672f","text":"<p>\u5355\u7247\u673a\u7cfb\u7edf\u4e2d\u5e38\u7528\u7684\u663e\u793a\u5668\u6709\uff1a \u53d1\u5149\u4e8c\u6781\u7ba1LED (Light Emitting Diode)\u663e\u793a\u5668\u3001\u6db2\u6676LCD (Liquid Crystal Display)\u663e\u793a\u5668\u3001CRT\u663e\u793a\u5668\u7b49\u3002 LED\u3001LCD\u663e\u793a\u5668\u6709\u4e24\u79cd\u663e\u793a\u7ed3\u6784\uff1a \u6bb5\u663e\u793a: 7\u6bb5 (\u201c8\u201d\u5b57\u5f62)\u3001\u201c\u7c73\u201d\u5b57\u578b\u7b49; \u70b9\u9635\u663e\u793a\uff085\u00d78\u30018\u00d78\u70b9\u9635\u7b49\uff09\u3002</p> <p>1\u3001LED\u663e\u793a\u63a5\u53e3</p> <p>LED\u663e\u793a\u5668\u6709\u5171\u9634\u6781\u548c\u5171\u9633\u6781\u4e24\u79cd\u3002</p> <p>\u5171\u9634\u6781\u5c31\u662f\u628a\u53d1\u5149\u4e8c\u6781\u7ba1\u7684\u9634\u6781\u8fde\u5728\u4e00\u8d77\u6784\u6210\u516c\u5171\u9634\u6781\uff0c\u4f7f\u7528\u65f6\u516c\u5171\u9634\u6781\u63a5\u5730\uff0c\u67d0\u7aef\u63a5\u9ad8\u7535\u5e73\u65f6\u624d\u53d1\u4eae\u3002</p> <p>\u5171\u9633\u6781\u5219\u662f\u628a\u53d1\u5149\u4e8c\u6781\u7ba1\u7684\u9633\u6781\u8fde\u5728\u4e00\u8d77\u6784\u6210\u516c\u5171\u9633\u6781\uff0c\u4f7f\u7528\u65f6\u516c\u5171\u9633\u6781\u63a5\u53415V\u7aef\u3002\u67d0\u7aef\u63a5\u4f4e\u7535\u5e73\u65f6\u624d\u53d1\u4eae\u3002 </p> <p>1\uff09\u9759\u6001\u663e\u793a\u65b9\u5f0f</p> <p>\u9759\u6001\u663e\u793a\u7684\u7279\u70b9\u662f\u6bcf\u4e2a\u6570\u7801\u7ba1\u7684\u6bb5\u9009\u5fc5\u987b\u63a5\u4e00\u4e2a8\u4f4d\u6570\u636e\u7ebf\u6765\u4fdd\u6301\u663e\u793a\u7684\u5b57\u5f62\u7801\u3002\u5f53\u9001\u5165\u4e00\u6b21\u5b57\u5f62\u7801\u540e\uff0c\u663e\u793a\u5b57\u5f62\u53ef\u4e00\u76f4\u4fdd\u6301\uff0c\u76f4\u5230\u9001\u5165\u65b0\u5b57\u5f62\u7801\u4e3a\u6b62\u3002</p> <p>2\uff09\u52a8\u6001\u663e\u793a\u65b9\u5f0f</p> <p>\u52a8\u6001\u663e\u793a\u662f\u4e00\u4f4d\u4e00\u4f4d\u5730\u8f6e\u6d41\u70b9\u4eae\u5404\u4f4d\u6570\u7801\u7ba1\uff0c\u8fd9\u79cd\u9010\u4f4d\u70b9\u4eae\u663e\u793a\u5668\u7684\u65b9\u5f0f\u79f0\u4e3a\u4f4d\u626b\u63cf\u3002</p> <p>2\u3001LCD\u663e\u793a\u63a5\u53e3\u6280\u672f</p> <p>\u6db2\u6676\u662f\u4e00\u79cd\u65e2\u5177\u6709\u6db2\u4f53\u7684\u6d41\u52a8\u6027\u53c8\u5177\u6709\u5149\u5b66\u7279\u4ef6\u7684\u6709\u673a\u5316\u5408\u7269\u3002\u5b83\u7684\u900f\u660e\u5ea6\u548c\u5448\u73b0\u7684\u989c\u8272\u53d7\u5916\u52a0\u7535\u573a\u7684\u5f71\u54cd\uff0c\u5229\u7528\u8fd9\u4e00\u7279\u70b9\u4fbf\u53ef\u4f5c\u6210\u5b57\u7b26\u663e\u793a\u5668\u3002</p> <p>1\uff09 LCD\u663e\u793a\u5668\u7ed3\u6784\u4e0e\u663e\u793a\u539f\u7406</p> <p>LCD\u7684\u7279\u70b9\uff1a</p> <p>\u540cLED\u663e\u793a\u5668\u76f8\u6bd4\uff0c\u6db2\u6676\u663e\u793a\u5668\uff08LCD\uff09\u5177\u6709\u663e\u793a\u529f\u8017\u4f4e\u3001\u4f53\u79ef\u5c0f\u3001\u91cd\u91cf\u8f7b\u3001\u8d85\u8584\u7b49\u8bb8\u591a\u4f18\u70b9\u3002</p> <p>\u5404\u79cd\u578b\u53f7\u7684\u6db2\u6676\u901a\u5e38\u662f\u6309\u7167\u663e\u793a\u5b57\u7b26\u7684\u884c\u6216\u6db2\u6676\u70b9\u9635\u7684\u884c\u3001\u5217\u6570\u6765\u547d\u540d\u7684\u3002\u4f8b\u5982\uff1a</p> <p>1602\uff1a\u6bcf\u884c\u663e\u793a16\u5b57\u7b26\uff0c\u51712\u884c\u3002</p> <p>\u7c7b\u4f3c\u7684\u6709\uff1a 0801\u30010802\u30011601\u7b49\u3002</p> <p>\u5e94\u7528\u573a\u5408\uff1a\u53ea\u80fd\u663e\u793aASCII\u7801\u5b57\u7b26\uff0c\u5982\u6570\u5b57\u3001\u5927\u5c0f\u5199\u5b57\u6bcd\u3001\u5404\u79cd\u7b26\u53f7\u7b49\u3002</p> <p>\u56fe\u5f62\u578b\u6db2\u6676\uff1a\u70b9\u9635\u6bd4\u8f83\u591a\u3002</p> <p>12232\uff1a 122\u884c\uff0c32\u5217\uff0c\u5171122\u00d732\u4e2a\u70b9</p> <p>12864\u300119264\u3001192128\u3001320240\u7b49\u3002</p> <p>\u6bb5\u578b\u663e\u793a\u5668\u7684\u9a71\u52a8\u65b9\u5f0f\uff1a\u9759\u6001\u663e\u793a\u9a71\u52a8\u548c\u52a8\u6001\u663e\u793a\u9a71\u52a8\u4e24\u79cd\u3002</p> <p>\u9759\u6001\u9a71\u52a8\u662f\u6bb5\u578bLCD\u6700\u5e38\u7528\u7684\u9a71\u52a8\u65b9\u6cd5\u3002\u4e3a\u4e86\u9a71\u52a8LCD\uff0c\u9700\u8981\u6709\u9a71\u52a8\u7535\u8def\u3002\u9a71\u52a8\u7535\u8def\u7684\u529f\u80fd\u662f\u5c06\u8ba1\u7b97\u673a\u8f93\u51fa\u7684\u4e8c\u8fdb\u5236\u6570\u6216BCD\u7801\u8f6c\u6362\u6210\u9a71\u52a8LCD\u7684\u4e03\u6bb5\u5b57\u5f62\u4ee3\u7801\u3002</p> <p>TODO</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_20","title":"\u952e\u76d8\u63a5\u53e3","text":"<p>\u952e\u76d8\u5206\u7f16\u7801\u952e\u76d8\u548c\u975e\u7f16\u7801\u952e\u76d8\u3002</p> <p>\u7f16\u7801\u952e\u76d8\uff1a\u7531\u4e13\u7528\u7684\u786c\u4ef6\u8bd1\u7801\u5668\u8bc6\u522b\u3002</p> <p>\u975e\u7f16\u7801\u952e\u76d8\uff1a\u9760\u8f6f\u4ef6\u8bc6\u522b\u3002</p> <p>\u952e\u76d8\u53ef\u5206\u4e3a\u72ec\u7acb\u5f0f\u548c\u884c\u5217\u5f0f\uff08\u77e9\u9635\u5f0f\uff09\u4e24\u7c7b\u3002\u6bcf\u4e00\u7c7b\u6309\u5176\u8bd1\u7801\u65b9\u6cd5\u53c8\u90fd\u5206\u4e3a\u7f16\u7801\u952e\u76d8\u548c\u975e\u7f16\u7801\u952e\u76d8\u3002 </p> <p>1\u3001\u72ec\u7acb\u5f0f\u975e\u7f16\u7801\u952e\u76d8\u63a5\u53e3\u53ca\u5904\u7406\u7a0b\u5e8f </p> <p></p> <p>2\u3001\u884c\u5217\u5f0f\u952e\u76d8\u63a5\u53e3\u53ca\u5de5\u4f5c\u539f\u7406 </p> <p></p> <p>\u5e38\u7528\u7684\u952e\u8bc6\u522b\u65b9\u6cd5\u6709\u4e24\u79cd\uff1a\u5e38\u7528\u7684\u9010\u884c\uff08\u6216\u9010\u5217\uff09\u626b\u63cf\u6cd5\uff0c\u901f\u5ea6\u8f83\u5feb\u7684\u7ebf\u53cd\u8f6c\u6cd5\u3002    </p> <p>\u73b0\u4ee54\u884c\u00d78\u5217\u952e\u76d8\u4e3a\u4f8b\u8bf4\u660e\u884c\uff08\u5217\uff09\u626b\u63cf\u6cd5\u8bc6\u522b\u952e\u7684\u5168\u8fc7\u7a0b\u3002</p> <p>\uff081\uff09 \u6d4b\u8bd5\u662f\u5426\u6709\u952e\u6309\u4e0b\uff1a </p> <p>\u5217\u7ebf\u62c9\u4f4e\uff0c\u8bfb\u53d6\u884c\u7ebf\u662f\u5426\u51681</p> <p>\uff082\uff09 \u6d88\u6296\u52a8\uff1a \u5373\u5ef6\u65f610ms </p> <p>\uff083\uff09 \u626b\u63cf\u952e\u76d8\u4ee5\u786e\u5b9a\u88ab\u6309\u952e\u7684\u7269\u7406\u4f4d\u7f6e </p> <p></p> <p>\uff084\uff09 \u8ba1\u7b97\u952e\u7801</p> <p>\u5404\u884c\u7684\u9996\u952e\u53f7\u4f9d\u6b21\u662f00H\u300108H\u300110H\u300118H\uff0c\u5217\u7ebf\u63090\uff5e7\u7684\u987a\u5e8f\u7f16\u53f7\u3002\u952e\u7801\u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a \u952e\u7801= \u9996\u952e\u53f7 \u5341 \u5217\u53f7</p> <p>\uff085\uff09 \u7b49\u5f85\u548c\u5224\u5b9a\u952e\u91ca\u653e</p> <p>\u518d\u5224\u65ad\u6309\u952e\uff0c\u518d\u5ef6\u65f610ms\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_21","title":"\u5c0f\u7ed3","text":"<p>1\u3001\u5355\u7247\u673a\u4e0e\u5916\u8bbe\u7684I/O\u63a5\u53e3\u7535\u8def\u4e2d\u4e00\u822c\u5305\u542b:\u6570\u636e\u7aef\u53e3\u3001\u72b6\u6001\u7aef\u53e3\u548c\u63a7\u5236\u7aef\u53e3\uff0c\u5206\u522b\u7528\u4e8e\u5728CPU\u4e0e\u5916\u8bbe\u95f4\u4f20\u9001\u4e0d\u540c\u7684\u4fe1\u606f\u3002</p> <p>2\u3001\u8ba1\u7b97\u673a\u4e2d\u5e38\u7528\u7684I/O\u7f16\u5740\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u5206\u522b\u662f\u7edf\u4e00\u7f16\u5740\u65b9\u5f0f\u548c\u72ec\u7acb\u7f16\u5740\u65b9\u5f0f\uff0cMCS-51\u5355\u7247\u673a\u91c7\u7528\u7684\u662f\u7edf\u4e00\u7f16\u5740\u65b9\u5f0f\u3002   </p> <p>3\u3001\u7b80\u5355\u8f93\u5165\u8f93\u51fa\u63a5\u53e3\u6269\u5c55\u4e2d\uff1a</p> <p>74LS244\u621674LS245\u7b49\u6269\u5c55\u8f93\u5165\u7aef\u53e3\uff0c</p> <p>74LS273\u300174LS373\u548c74LS377\u6269\u5c55\u8f93\u51fa\u63a5\u53e3\u3002</p> <p>4\u3001 8155A\u82af\u7247\u5185\u90e8\u5305\u542b3\u4e2a\u5e76\u884c\u7aef\u53e3\uff0c\u5206\u522b\u662f\u7aef\u53e3A\u3001B\u548cC\u3002A\u548cB\u53e3\u662f8\u4f4d\uff0cC\u53e3\u662f6\u4f4d\u3002</p> <p>8155\u7684A\u548cB\u53e3\u67092\u79cd\u5de5\u4f5c\u65b9\uff0cC\u53e3\u67094\u79cd\u65b9\u5f0f\u3002</p> <p>\u5728\u4f7f\u75288255A\u524d\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u7f16\u7a0b\uff0c\u5373\u521d\u59cb\u5316\u547d\u4ee4\u5b57\u3002 </p> <p>5\u3001\u663e\u793a\u5668\uff1aLED\u548cLCD</p> <p>LED\u663e\u793a\u5668\u4e2d\u4e24\u79cd\u63a5\u6cd5\uff1a</p> <p>\u663e\u793a\u65b9\u6cd5\uff1a\u9759\u6001\u548c\u52a8\u6001\u4e24\u79cd</p> <p>\u6839\u636e\u663e\u793a\u5f62\u5f0f\u7684\u4e0d\u540c\uff0cLCD\u6709\u6bb5\u578b\u3001\u70b9\u9635\u5b57\u7b26\u578b\u548c\u70b9\u9635\u56fe\u5f62\u578b\u3002 </p> <p>6\u3001 \u5bf9\u53e3\u7684\u6c47\u7f16\u8bed\u8a00\u64cd\u4f5c\u6307\u4ee4\uff1a</p> <p>\u8bfb\uff1a MOVX  A\uff0c@DPTR\uff0c\u6b64\u65f6/RD\u6709\u6548\uff1b</p> <p>\u5199\uff1aMOVX  @DPTR\uff0cA\uff0c \u6b64\u65f6/WR\u6709\u6548\uff1b</p> <p>7\u3001\u952e\u76d8\uff1a\u7f16\u7801\u952e\u76d8\u548c\u975e\u7f16\u7801\u952e\u76d8\u3002\u5355\u7247\u673a\u4e2d\u5e38\u7528\u884c\u5217\u5f0f\u975e\u7f16\u7801\u952e\u76d8\u3002</p> <p>\u5728\u8bc6\u522b\u952e\u65f6\u5fc5\u987b\u6d88\u9664\u6296\u52a8\uff0c\u952e\u6570\u8f83\u5c11\u65f6\uff0c\u53ef\u7528\u786c\u4ef6\u65b9\u6cd5\u6d88\u9664\u952e\u6296\u52a8\u3002\u5982\u679c\u952e\u6570\u8f83\u591a\uff0c\u7528\u8f6f\u4ef6\u5ef6\u65f6\u65b9\u6cd5\u53bb\u6296\u52a8\u3002</p> <p>\u9010\u884c\uff08\u6216\u9010\u5217\uff09\u626b\u63cf\u67e5\u8be2\u6cd5\u6216\u7ebf\u53cd\u8f6c\u6cd5\u662f\u8bc6\u522b\u952e\u7684\u5e38\u7528\u65b9\u6cd5\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#11-adda","title":"\u7b2c11\u7ae0  A/D\u4e0eD/A\u8f6c\u6362\u5668\u53ca\u63a5\u53e3\u6280\u672f","text":""},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#da","title":"D/A\u8f6c\u6362\u5668\u53ca\u63a5\u53e3\u6280\u672f","text":"<p>D/A\u8f6c\u6362\u5668\u662f\u628a\u6570\u5b57\u91cf\u8f6c\u6362\u6210\u6a21\u62df\u91cf\u7684\u7ebf\u6027\u7535\u8def\u5668\u4ef6\u3002\u7531\u4e8e\u5b9e\u73b0D/A\u8f6c\u6362\u7684\u539f\u7406\u3001\u7535\u8def\u7ed3\u6784\u3001\u8f6c\u6362\u7cbe\u5ea6\u3001\u8f6c\u6362\u901f\u5ea6\u53ca\u5de5\u827a\u6280\u672f\u6709\u6240\u4e0d\u540c\uff0c\u56e0\u800c\u51fa\u73b0\u4e86\u5404\u79cd\u5404\u6837\u7684D/A\u8f6c\u6362\u5668\u3002D/A\u8f6c\u6362\u5668\u4e3a\u5fae\u673a\u7cfb\u7edf\u6240\u5904\u7406\u7684\u6570\u5b57\u4fe1\u53f7\u4e0e\u5916\u90e8\u73af\u5883\u7684\u6a21\u62df\u4fe1\u53f7\u63d0\u4f9b\u4e86\u4e00\u79cd\u63a5\u53e3\uff0c\u56e0\u800c\u5e7f\u6cdb\u5730\u5e94\u7528\u5728\u6570\u636e\u91c7\u96c6\u4e0e\u6a21\u62df\u8f93\u5165/\u8f93\u51fa\u7cfb\u7edf\u4e2d\u3002</p> <p>1\u3001D/A\u8f6c\u6362\u5668\u7684\u4e3b\u8981\u53c2\u6570</p> <p>1\uff09\u5206\u8fa8\u7387</p> <p>\u5206\u8fa8\u7387\u7528\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u7801\u7684\u4f4d\u6570\u7ed9\u51fa\u3002\u53e6\u5916\u4e5f\u53ef\u4ee5\u7528D/A\u8f6c\u6362\u5668\u80fd\u591f\u5206\u8fa8\u51fa\u6765\u7684\u6700\u5c0f\u8f93\u51fa\u7535\u538b\u4e0e\u6700\u5927\u8f93\u51fa\u7535\u538b\u4e4b\u6bd4\u7ed9\u51fa\u3002\u4f8b\u5982\uff0c\u5728\u5206\u8fa8\u7387\u4e3a10\u4f4d\u7684D/A\u8f6c\u6362\u5668\u4e2d\uff0c\u5176\u5206\u8fa8\u7387\u4e5f\u53ef\u4ee5\u8868\u793a\u4e3a \u3002\u82e5n\u4f4dD/A\u8f6c\u6362\u5668\u8f6c\u6362\u540e\u7684\u7535\u538b\u6ee1\u91cf\u7a0b\u4e3a5V\uff0c\u5219\u5b83\u80fd\u5206\u8fa8\u7684\u6700\u5c0f\u7535\u538b\u4e3a\\frac{5}{2^n}V\u3002\u4f8b\u5982\uff0c8\u4f4dD/A\u8f6c\u6362\u5668\u7684\u6700\u5c0f\u5206\u8fa8\u7535\u538b\u4e3a19.53mV\uff0c\u800c10\u4f4dD/A\u8f6c\u6362\u5668\u7684\u6700\u5c0f\u5206\u8fa8\u7535\u538b\u4e3a4.88mV\u3002</p> <p>2\uff09\u8f6c\u6362\u8bef\u5dee</p> <p>\u6307D/A\u8f6c\u6362\u5668\u5b9e\u9645\u8f93\u51fa\u7684\u6a21\u62df\u91cf\u4e0e\u7406\u8bba\u8f93\u51fa\u6a21\u62df\u91cf\u4e4b\u95f4\u7684\u5dee\u503c\u3002</p> <p>\u8f6c\u6362\u8bef\u5dee\u7684\u6765\u6e90\u5f88\u591a\uff0c\u5982\u8f6c\u6362\u5668\u4e2d\u5404\u5143\u4ef6\u53c2\u6570\u503c\u7684\u8bef\u5dee\u3001\u57fa\u51c6\u7535\u6e90\u7684\u4e0d\u7a33\u5b9a\u3001\u8fd0\u7b97\u653e\u5927\u5668\u7684\u96f6\u6f02\u7b49\u90fd\u662f\u8bef\u5dee\u7684\u6765\u6e90\u3002D/A\u8f6c\u6362\u5668\u7684\u7edd\u5bf9\u8bef\u5dee\uff08\u6216\u7edd\u5bf9\u7cbe\u5ea6\uff09\u662f\u6307\u52a0\u5165\u6700\u5927\u6570\u5b57\u91cf\uff08\u51681\uff09\u65f6D/A\u8f6c\u6362\u5668\u7684\u7406\u8bba\u503c\u4e0e\u5b9e\u9645\u503c\u4e4b\u5dee\uff0c\u8be5\u8bef\u5dee\u503c\u5e94\u5c0f\u4e8eLSB/2\u3002</p> <p>3\uff09\u5efa\u7acb\u65f6\u95f4</p> <p>\u200b      \u6307\u4ece\u8f93\u5165\u7684\u6570\u5b57\u91cf\u53d1\u751f\u7a81\u53d8\u5f00\u59cb\uff0c\u76f4\u5230\u8f93\u51fa\u7535\u538b\u8fdb\u5165\u4e0e\u7a33\u6001\u503c\u76f8\u5dee\u00b1 \u00bd LSB\u8303\u56f4\u4ee5\u5185\u7684\u8fd9\u6bb5\u65f6\u95f4\u79f0\u4e3a\u5efa\u7acb\u65f6\u95f4\uff0c\u4e5f\u53ef\u79f0\u4e4b\u4e3a\u8f6c\u6362\u65f6\u95f4\u3002</p> <p>\u200b     \u4e0d\u540c\u7c7b\u578bD/A\u8f6c\u6362\u5668\u7684\u5efa\u7acb\u65f6\u95f4\u662f\u4e0d\u540c\u7684\u3002\u7535\u6d41\u578bD/A\u8f6c\u6362\u5668\u8f6c\u6362\u8f83\u5feb\uff0c\u4e00\u822c\u5728\u51e0\u5fae\u79d2\u81f3\u51e0\u767e\u5fae\u79d2\u4e4b\u95f4\uff1b\u7535\u538b\u578b\u8f6c\u6362\u5668\u7684\u901f\u5ea6\u8f83\u6162\uff0c\u4e3b\u8981\u53d6\u51b3\u4e8e\u8fd0\u7b97\u653e\u5927\u5668\u7684\u54cd\u5e94\u65f6\u95f4\u3002</p> <p>\u200b      \u7531\u4e8e\u8ba1\u7b97\u673a\u7684\u8fd0\u884c\u901f\u5ea6\u9ad8\u4e8eD/A\u8f6c\u6362\u65f6\u95f4\uff0c\u56e0\u6b64\u65e0\u8bba\u662f\u4ec0\u4e48\u7c7b\u578b\u7684D/A\u8f6c\u6362\u5668\uff0c\u90fd\u5fc5\u987b\u5728\u63a5\u53e3\u4e2d\u5b89\u7f6e\u9501\u5b58\u5668\uff0c\u9501\u5b58\u77ed\u6682\u7684\u8f93\u51fa\u4fe1\u53f7\uff0c\u4e3aD/A\u8f6c\u6362\u5668\u63d0\u4f9b\u8db3\u591f\u65f6\u95f4\u7684\u3001\u7a33\u5b9a\u7684\u6570\u5b57\u4fe1\u53f7\u3002</p> <p>2\u3001D/A\u8f6c\u6362\u5668\u7684\u8f93\u5165/\u8f93\u51fa\u7279\u6027</p> <p>\u53cd\u6620D/A\u8f6c\u6362\u5668\u7684\u8f93\u5165/\u8f93\u51fa\u7279\u6027\u7684\u65b9\u9762\u6709\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u3002</p> <p>\u2460 \u8f93\u5165\u7f13\u51b2\u80fd\u529b</p> <p>\u200b    D/A\u8f6c\u6362\u5668\u662f\u5426\u5e26\u6709\u4e09\u6001\u7f13\u51b2\u5668\u6765\u4fdd\u5b58\u8f93\u5165\u6570\u5b57\u91cf\uff0c\u8fd9\u5bf9D/A\u8f6c\u6362\u5668\u4e0e\u5fae\u673a\u63a5\u53e3\u7684\u8bbe\u8ba1\u662f\u5f88\u91cd\u8981\u7684\u3002</p> <p>\u2461 \u8f93\u5165\u6570\u636e\u7684\u5bbd\u5ea6</p> <p>\u200b    D/A\u8f6c\u6362\u5668\u901a\u5e38\u67098\u4f4d\u300110\u4f4d\u300112\u4f4d\u300114\u4f4d\u548c16\u4f4d\u4e4b\u5206\u3002\u5f53D/A\u8f6c\u6362\u5668\u7684\u4f4d\u6570\u9ad8\u4e8e\u8ba1\u7b97\u673a\u7cfb\u7edf\u603b\u7ebf\u7684\u5bbd\u5ea6\u65f6\uff0c\u9700\u89812\u6b21\u5206\u522b\u8f93\u5165\u6570\u5b57\u91cf\u3002</p> <p>\u2462 \u7535\u6d41\u578b\u8fd8\u662f\u7535\u538b\u578b</p> <p>\u200b    \u5373D/A\u8f6c\u6362\u5668\u8f93\u51fa\u7684\u662f\u7535\u538b\u8fd8\u662f\u7535\u6d41\u3002\u5bf9\u7535\u6d41\u8f93\u51fa\u578b\uff0c\u5728\u51e0\u6beb\u5b89\u5230\u51e0\u5341\u6beb\u5b89\uff1b\u5bf9\u7535\u538b\u8f93\u51fa\u578b\uff0c\u7535\u538b\u4e00\u822c\u57285\uff5e10V\u4e4b\u95f4\uff0c\u6709\u4e9b\u9ad8\u7535\u538b\u578b\u53ef\u8fbe24\uff5e30V\u3002</p> <p>\u2463 \u8f93\u5165\u7801\u5236</p> <p>\u200b    \u5373D/A\u8f6c\u6362\u5668\u80fd\u63a5\u53d7\u54ea\u4e9b\u7801\u5236\u7684\u6570\u5b57\u91cf\u8f93\u5165\u3002\u4e00\u822c\u5bf9\u5355\u6781\u6027\u8f93\u51fa\u7684D/A\u8f6c\u6362\u5668\u53ea\u80fd\u63a5\u53d7\u4e8c\u8fdb\u5236\u7801\u6216BCD\u7801\uff1b\u5bf9\u53cc\u6781\u6027\u8f93\u51fa\u7684D/A\u8f6c\u6362\u5668\uff0c\u53ea\u80fd\u63a5\u53d7\u504f\u79fb\u4e8c\u8fdb\u5236\u7801\u6216\u8865\u7801\u3002</p> <p>\u2464 \u5355\u6781\u6027\u8fd8\u662f\u53cc\u6781\u6027\u8f93\u51fa</p> <p>\u200b      \u6307\u8f93\u51fa\u7535\u538b\u662f\u4e00\u79cd\u6781\u6027\uff08\u6b63\u6216\u8d1f\u6781\u6027\uff09\u8fd8\u662f\u6b63\u3001\u8d1f\u4e24\u79cd\u6781\u6027\u3002\u5bf9\u4e00\u4e9b\u9700\u8981\u6b63\u8d1f\u7535\u538b\u63a7\u5236\u7684\u8bbe\u5907\uff0c\u5e94\u8be5\u4f7f\u7528\u53cc\u6781\u6027D/A\u8f6c\u6362\u5668\uff0c\u6216\u5728\u8f93\u51fa\u7535\u8def\u4e2d\u91c7\u53d6\u76f8\u5e94\u63aa\u65bd\uff0c\u4f7f\u8f93\u51fa\u7535\u538b\u6709\u6781\u6027\u53d8\u5316\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#dadac0832","title":"\u5e76\u884cD/A\u8f6c\u6362\u5668DAC0832\u7b80\u4ecb","text":"<p>1\u3001DAC0832\u7684\u5185\u90e8\u7ed3\u6784\u53ca\u5f15\u811a\u7279\u6027</p> <p>DAC0832\u662f\u7f8e\u56fd\u56fd\u5bb6\u534a\u5bfc\u4f53\u516c\u53f8\uff08NSC\uff09\u7684\u4ea7\u54c1\uff0c\u662f\u4e00\u79cd\u5177\u6709\u4e24\u4e2a\u8f93\u5165\u6570\u636e\u5bc4\u5b58\u5668\u76848\u4f4d\u7535\u6d41\u8f93\u51fa\u578bD/A\u8f6c\u6362\u5668\uff0c\u7535\u6d41\u5efa\u7acb\u65f6\u95f4\u4e3a1\u03bcs\u3002\u91c7\u7528\u5355\u4e00\u7535\u6e90\u4f9b\u7535\uff08+5V\uff5e+15V\uff09\uff0c\u80fd\u76f4\u63a5\u4e0eMCS-51\u5355\u7247\u673a\u76f8\u63a5\uff0c\u4e0d\u9700\u8981\u9644\u52a0\u4efb\u4f55\u5176\u5b83I/O\u63a5\u53e3\u82af\u7247\u3002\u540cDAC0832\u529f\u80fd\u76f8\u540c\u7684\u6709DAC0830\u3001DAC0831\u7b49\uff0c\u5c5e\u4e8eDAC0830\u7cfb\u5217\uff0c\u90fd\u662f8\u4f4dD/A\u8f6c\u6362\u5668\uff0c\u53ef\u4ee5\u76f8\u4e92\u4ee3\u6362\u3002</p> <p></p> <p>DAC0832\u7531\u4e09\u5927\u90e8\u5206\u7ec4\u6210\uff0c\u5206\u522b\u662f1\u4e2a8\u4f4d\u8f93\u5165\u5bc4\u5b58\u5668\u30011\u4e2a8\u4f4dDAC\u5bc4\u5b58\u5668\u548c1\u4e2a8\u4f4dD/A\u8f6c\u6362\u5668\u3002\u5728D/A\u8f6c\u6362\u5668\u4e2d\u91c7\u7528T\u578bR-2R\u7535\u963b\u7f51\u7edc\u5b9e\u73b0\u6570\u5b57\u91cf\u5230\u6a21\u62df\u91cf\u7684\u8f6c\u6362\u3002\u91c7\u75288\u4f4d\u8f93\u5165\u5bc4\u5b58\u5668\u548c8\u4f4dDAC\u5bc4\u5b58\u5668\u4e24\u6b21\u7f13\u51b2\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5728D/A\u8f93\u51fa\u7684\u540c\u65f6\uff0c\u9001\u5165\u4e0b\u4e00\u4e2a\u6570\u636e\uff0c\u4ee5\u4fbf\u63d0\u9ad8\u8f6c\u6362\u901f\u5ea6\u3002</p> <p>\u5f53\u5404\u5bc4\u5b58\u5668\u7684LE\uff1d1\u65f6\uff0c\u5bc4\u5b58\u5668\u7684\u8f93\u51fa\u8ddf\u968f\u8f93\u5165\u53d8\u5316\uff1b\u5f53 LE \uff1d0\u65f6\uff0c\u6570\u636e\u9501\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u800c\u4e0d\u968f\u8f93\u5165\u6570\u636e\u53d8\u5316\u3002\u5bf9\u4e8e\u8f93\u5165\u5bc4\u5b58\u5668\uff0cLE1=ILE\u00b7CS\u00b7WR1\uff0c\u56e0\u6b64\uff0c\u5f53ILE=1\uff0cCS=WR1=0 \u65f6\uff0cLE1=1 \uff0c\u8f93\u5165\u5bc4\u5b58\u5668\u7684\u8f93\u51fa\u8ddf\u968f\u8f93\u5165\uff1b\u5bf9\u4e8eDAC\u5bc4\u5b58\u5668\uff0cLE2=WR2\u00b7 XFER\uff0c\u56e0\u6b64\u5f53XFER=WR2=0\u65f6\uff0cDAC\u5bc4\u5b58\u5668\u7684\u8f93\u51fa\u8ddf\u968f\u8f93\u5165\u3002</p> <p>DAC0832\u7684\u53cc\u5217\u76f4\u63d2\u5c01\u88c5\u5f0f\u5f15\u811a\u6392\u5217\u6240\u793a\uff0c\u5404\u5f15\u811a\u7684\u542b\u4e49\u5982\u4e0b\uff1a</p> <p>CS\uff1a\u7247\u9009\u4fe1\u53f7\uff0c\u4f4e\u7535\u5e73\u6709\u6548\u3002WR1\uff1a\u8f93\u5165\u5bc4\u5b58\u5668\u7684\u5199\u9009\u901a\u8f93\u5165\u7aef\uff0c\u8d1f\u8109\u51b2\u6709\u6548\uff08\u8109\u51b2\u5bbd\u5ea6\u5e94\u5927\u4e8e500ns\uff09\u3002\u5f53CS\uff1d0\uff0cILE\uff1d1\uff0cWR1\u6709\u6548\u65f6\uff0cD0\uff5eD7\u7684\u72b6\u6001\u88ab\u4f20\u9001\u5230\u8f93\u5165\u5bc4\u5b58\u5668\u3002</p> <p>AGND\u3001DGND\uff1a\u6a21\u62df\u5730\u548c\u6570\u5b57\u5730\uff0c\u662f\u4e24\u79cd\u4e0d\u540c\u6027\u8d28\u7684\u5730\u3002\u6a21\u62df\u5730\u4e3a\u6a21\u62df\u4fe1\u53f7\u4e0e\u57fa\u51c6\u7535\u6e90\u53c2\u8003\u5730\uff0c\u6570\u5b57\u5730\u4e3a\u5de5\u4f5c\u7535\u6e90\u5730\u4e0e\u6570\u5b57\u903b\u8f91\u5730\u3002\u4e24\u5730\u6700\u597d\u5728\u57fa\u51c6\u7535\u6e90\u5904\u8fde\u5728\u4e00\u8d77\uff0c\u4ee5\u63d0\u9ad8\u6297\u5e72\u6270\u80fd\u529b\u3002</p> <p>D0\uff5eD7\uff1a\u6570\u636e\u8f93\u5165\u7aef\uff0cTTL\u7535\u5e73\uff0c\u6709\u6548\u65f6\u95f4\u5927\u4e8e90ns\u3002 </p> <p>ILE\uff1a\u6570\u636e\u8f93\u5165\u9501\u5b58\u5141\u8bb8\u4fe1\u53f7\uff0c\u9ad8\u7535\u5e73\u6709\u6548\u3002 </p> <p>V_{REF}\uff1a\u57fa\u51c6\u7535\u538b\u8f93\u5165\uff0c\u7535\u538b\u8303\u56f4-10\uff5e+10V\u3002</p> <p>R_{fb}\uff1a\u53cd\u9988\u7535\u963b\u7aef\u3002\u5728\u82af\u7247\u5185\u90e8\uff0c\u6b64\u7aef\u4e0eIOUT1\u63a5\u6709\u4e00\u4e2a15k\u03a9\u7684\u7535\u963b\u3002\u7531\u4e8eDAC0832\u662f\u7535\u6d41\u8f93\u51fa\u578b\uff0c\u800c\u7ecf\u5e38\u9700\u8981\u7684\u662f\u7535\u538b\u4fe1\u53f7\uff0c\u56e0\u6b64\uff0c\u5728\u8f93\u51fa\u7aef\u901a\u8fc7\u8fd0\u7b97\u653e\u5927\u5668\u548c\u53cd\u9988\u7535\u963b\u5c06\u8f93\u51fa\u7535\u6d41\u8f6c\u6362\u4e3a\u7535\u538b\u3002\u6ce8\u610f\uff0c\u7ecf\u5e38\u7528\u5185\u90e8\u7684Rfb\u5c06\u8f93\u51fa\u7535\u6d41\u8f6c\u6362\u4e3a\u7535\u538b\u3002</p> <p>IOUT1\uff1a\u7535\u6d41\u8f93\u51fa1\u7aef\uff0cI_{out1}=\\frac{V_{REF}}{15K\u03a9}*\\frac{D}{256}</p> <p>\u5f53DAC\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9\u4e3a\u51681\u65f6\uff0cIOUT1\u4e3a\u6700\u5927\u503c\uff1b\u5f53\u4e3a\u51680\u65f6\uff0cIOUT1\u4e3a0\u3002</p> <p>IOUT2\uff1a\u7535\u6d41\u8f93\u51fa2\u7aef\uff0cI_{out2}=\\frac{V_{REF}}{15K\u03a9}*\\frac{255-D}{256}</p> <p>IOUT1+IOUT2\uff1d\u5e38\u6570\uff0c\u8be5\u5e38\u6570\u7ea6\u4e3a330\u00b5A\u3002\u5728\u5355\u6781\u6027\u8f93\u51fa\u65f6\uff0cIOUT2\u901a\u5e38\u63a5\u5730\u3002</p> <p>XFER\uff1a\u6570\u636e\u4f20\u9001\u63a7\u5236\u4fe1\u53f7\u8f93\u5165\u7aef\uff0c\u4f4e\u7535\u5e73\u6709\u6548\u3002XFER\u4e0eWR2\u4e00\u8d77\u63a7\u5236DAC\u5bc4\u5b58\u5668\u5f00\u901a\uff0c\u6784\u6210\u7b2c\u4e8c\u7ea7\u9501\u5b58\u3002</p> <p>WR2\uff1aDAC\u5bc4\u5b58\u5668\u5199\u9009\u901a\u8f93\u5165\u7aef\uff0c\u8d1f\u8109\u51b2\u6709\u6548\uff08\u8109\u51b2\u5bbd\u5ea6\u5e94\u5927\u4e8e500ns\uff09\u3002\u5f53 XFER\uff1d0\u4e14WR2\u6709\u6548\u65f6\uff0c\u8f93\u5165\u5bc4\u5b58\u5668\u7684\u6570\u636e\u88ab\u4f20\u5230DAC\u5bc4\u5b58\u5668\u4e2d\u3002</p> <p>VCC\uff1a\u7535\u6e90\u7535\u538b\u7aef\uff0c\u7535\u538b\u8303\u56f4+5V\uff5e+15V\u3002</p> <p>2\u3001D/A\u8f6c\u6362\u5668\u7684\u8f93\u51fa\u7535\u8def</p> <p>D/A\u8f6c\u6362\u5668\u8f93\u51fa\u5206\u4e3a\u5355\u6781\u6027\u548c\u53cc\u6781\u6027\u4e24\u79cd\u5f62\u5f0f\u3002\u5176\u8f93\u51fa\u65b9\u5f0f\u53ea\u4e0e\u6a21\u62df\u91cf\u8f93\u51fa\u7aef\u7684\u8fde\u63a5\u65b9\u6cd5\u6709\u5173\uff0c\u800c\u4e0e\u5176\u4f4d\u6570\u65e0\u5173\u3002</p> <p>\u2460 \u5355\u6781\u6027\u8f93\u51fa</p> <p>\u5178\u578b\u7684\u5355\u6781\u6027\u8f93\u51fa\u7535\u8def\u5982\u56fe11-3\u6240\u793a\uff0c\u6b64\u65f6IOUT2\u63a5\u5730\uff0cIOUT1\u63a5\u5230\u8fd0\u7b97\u653e\u5927\u5668\u7684\u53cd\u76f8\u8f93\u5165\u7aef\u3002\u6b64\u65f6\uff0c\u8f93\u51fa\u6a21\u62df\u91cf\u7684\u7535\u538bVOUT\u4e0e\u88ab\u8f6c\u6362\u7684\u6570\u5b57\u91cfD\u7684\u5173\u7cfb\u4e3aV_{out}=-\\frac{D}{256}*V_{ref}</p> <p>\u2461\u53cc\u6781\u6027\u8f93\u51fa</p> <p>\u4e00\u822c\u9700\u8981\u4e24\u7ea7\u8fd0\u7b97\u653e\u5927\u5668\u624d\u80fd\u5c06\u5b9e\u73b0\u53cc\u6781\u6027\u8f93\u51fa\u3002\u5178\u578b\u7684\u53cc\u6781\u6027\u8f93\u51fa\u7535\u8def\u5982\u56fe11-4\u6240\u793a\u3002</p> <p>V_{out2}=-(\\frac{R_3}{R_2}*V_{out1}+\\frac{R_3}{R_1}*V_{ref})</p> <p>\u5f53R1=R2=R3=2R\u65f6\uff0cVOUT2\uff1d\uff0d(2*VOUT1+VREF)</p> <p>\u53c8\u56e0\u4e3a\uff0cV_{out1}=-(\\frac{D}{256}*V_{REF})</p> <p>\u6240\u4ee5\uff0c\u8f93\u51fa\u6a21\u62df\u91cfVOUT2\u4e0e\u88ab\u8f6c\u6362\u7684\u6570\u5b57\u91cfD\u7684\u5173\u7cfb\u4e3a\uff1aV_{out2}=\\frac{D-128}{128}*V_{REF}</p> <p>\u5f53D\uff1d0\uff0c80H\u548c0FFH\u65f6\uff0cVOUT2\u7684\u503c\u5206\u522b\u4e3a-VREF\uff0c0\u548c127VREF/128\u3002</p> <p></p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#dac0832","title":"DAC0832\u4e0e\u5355\u7247\u673a\u7684\u63a5\u53e3\u53ca\u7f16\u7a0b","text":"<p>\u6839\u636e\u5bf9DAC0832\u7684\u8f93\u5165\u5bc4\u5b58\u5668\u548cDAC\u5bc4\u5b58\u5668\u7684\u4e0d\u540c\u63a7\u5236\u65b9\u6cd5\uff0cDAC0832\u67093\u79cd\u5de5\u4f5c\u65b9\u5f0f\uff1a\u76f4\u901a\u578b\u3001\u5355\u7f13\u51b2\u578b\u548c\u53cc\u7f13\u51b2\u578b\u3002</p> <p>\u76f4\u901a\u578b\uff1a\u5f53DAC0832\u82af\u7247\u7684CS\u3001WR1\u3001WR2\u548cXFER\u5168\u90e8\u63a5\u5730\uff0c\u800cILE\u63a5+5V\u65f6\uff0cDAC0832\u82af\u7247\u5904\u4e8e\u76f4\u901a\u578b\u5de5\u4f5c\u65b9\u5f0f\u3002\u6570\u5b57\u91cf\u4e00\u65e6\u8f93\u5165\uff0c\u5c31\u76f4\u63a5\u8fdb\u5165D/A\u8f6c\u6362\u5668\u5f00\u59cb\u8f6c\u6362\u3002\u6b64\u65f6\u82e5\u8ba9\u82af\u7247\u8fde\u7eed\u8f6c\u6362\u7684\u8bdd\uff0c\u53ea\u9700\u8fde\u7eed\u6539\u53d8\u6570\u5b57\u8f93\u5165\u7aef\u7684\u6570\u5b57\u4fe1\u53f7\u5373\u53ef\u3002</p> <p>\u5355\u7f13\u51b2\u578b\uff1a\u5982\u679c\u53ea\u8ba9\u8f93\u5165\u5bc4\u5b58\u5668\u6216DAC\u5bc4\u5b58\u5668\u4e2d\u7684\u5176\u4e2d\u4e4b\u4e00\u76f4\u901a\uff08\u5373\u5404\u81ea\u7684\u4fe1\u53f7\u7535\u5e73\u6ee1\u8db3\u8981\u6c42\uff09\uff0c\u53e6\u4e00\u4e2a\u5904\u4e8e\u53d7\u63a7\u7684\u9501\u5b58\u65b9\u5f0f\uff0c\u6216\u8005\u4e24\u4e2a\u5bc4\u5b58\u5668\u540c\u65f6\u9009\u901a\u53ca\u9501\u5b58\uff0c\u8fd9\u79cd\u5de5\u4f5c\u65b9\u5f0f\u79f0\u4e3a\u5355\u7f13\u51b2\u578b\u3002</p> <p>\u53cc\u7f13\u51b2\u578b\uff1a\u5982\u679c\u8f93\u5165\u5bc4\u5b58\u5668\u548cDAC\u5bc4\u5b58\u5668\u7684\u9501\u5b58\u4fe1\u53f7\u90fd\u662f\u53d7\u63a7\u7684\uff0c\u800c\u4e14\u4e24\u4e2a\u5bc4\u5b58\u5668\u7684\u9501\u5b58\u4fe1\u53f7\u4e0d\u540c\u65f6\u6709\u6548\uff0c\u5219\u79f0\u4e3a\u53cc\u7f13\u51b2\u578b\u3002\u53cc\u7f13\u51b2\u578b\u4e3b\u8981\u7528\u4e8e\u540c\u65f6\u8f93\u51fa\u591a\u8def\u6a21\u62df\u4fe1\u53f7\u7684\u573a\u5408\u3002 </p> <p>\u200b       \u6839\u636eCS\u3001XFER\u548cILE\u662f\u5426\u8fde\u63a5\u4e8e\u5355\u7247\u673a\u7684\u5730\u5740\u7ebf\uff0c\u5bf9DAC0832\u7684\u7f16\u7a0b\u65b9\u6cd5\u6709\u4e24\u79cd\uff0c\u5206\u522b\u662f\u57fa\u4e8e\u65f6\u5e8f\u7684\u65b9\u6cd5\u548c\u57fa\u4e8e\u5730\u5740\u7684\u65b9\u6cd5\u3002\u4e0b\u9762\u5206\u522b\u8bf4\u660e\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7684\u5177\u4f53\u63a5\u53e3\u548c\u7f16\u7a0b\u65b9\u6cd5\u3002</p> <p>\uff081\uff09\u57fa\u4e8e\u65f6\u5e8f\u7684\u7f16\u7a0b\u65b9\u6cd5</p> <p>\u200b       DAC0832\u7684\u64cd\u4f5c\u65f6\u5e8f\u5982\u56fe11-6\u6240\u793a\u3002\u5f53CS\u3001WR\u3001XFER\u548cILE\u6ca1\u6709\u8fde\u63a5\u81f3\u5355\u7247\u673a\u7684\u5730\u5740\u7ebf\uff0c\u6216\u8005\u672a\u8fde\u63a5\u81f3\u7ecf\u5730\u5740\u7ebf\u8bd1\u7801\u540e\u7684\u8f93\u51fa\u7ebf\u65f6\uff0c\u6b64\u65f6\u5c31\u4e0d\u77e5\u9053DAC0832\u7684\u5730\u5740\uff0c\u56e0\u6b64\u53ef\u4ee5\u6839\u636eDAC0832\u7684\u64cd\u4f5c\u65f6\u5e8f\u5bf9DAC0832\u8fdb\u884c\u7f16\u7a0b\u3002 </p> <p>\u8fde\u7ebf\u56fe\uff1a</p> <p></p> <p>\uff082\uff09\u57fa\u4e8e\u5730\u5740\u7684\u7f16\u7a0b\u65b9\u6cd5</p> <p>\u200b      \u5982\u679cDAC0832\u82af\u7247\u7684CS\u3001XFER\u548cILE\u4e2d\u7684\u90e8\u5206\u5f15\u811a\u76f4\u63a5\u6216\u95f4\u63a5\uff08\u6307\u7ecf\u8bd1\u7801\u5668\u8f93\u51fa\u5f15\u811a\uff09\u8fde\u63a5\u5230\u5355\u7247\u673a\u7684\u9ad8\u4f4d\u5730\u5740\u7ebf\uff0c\u7531\u4e8e\u9ad8\u4f4d\u5730\u5740\u7ebf\u4e0e\u5730\u5740\u6709\u5173\uff0c\u8fd9\u5c31\u51b3\u5b9a\u4e86\u8be5\u82af\u7247\u6709\u4e00\u5b9a\u7684\u5730\u5740\u3002\u524d\u8ff0\uff0c\u5bf9\u8fd9\u4e9b\u5730\u5740\u7684\u64cd\u4f5c\u540c\u5bf9\u5916\u90e8RAM\u5355\u5143\u7684\u64cd\u4f5c\u662f\u76f8\u540c\u7684\u3002\u6b64\u65f6\uff0c\u5c06\u5355\u7247\u673a\u7684 WR\u548cDAC0832\u7684\u76f8\u5e94WR\u76f8\u8fde\u3002 </p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#12dadac1210","title":"12\u4f4d\u5e76\u884cD/A\u8f6c\u6362\u5668DAC1210","text":"<p>DAC1208\u7cfb\u5217D/A\u8f6c\u6362\u5668\u6709DAC1208\u3001DAC1209\u548cDAC1210\u4e09\u79cd\u7c7b\u578b\uff0c\u5b83\u4eec\u90fd\u662f\u4e0e\u5fae\u5904\u7406\u5668\u76f4\u63a5\u517c\u5bb9\u768412\u4f4dD/A\u8f6c\u6362\u5668\u3002\u5176\u57fa\u672c\u7ed3\u6784\u4e0eDAC0830\u7cfb\u5217\u76f8\u4f3c\uff0c\u4e5f\u662f\u7531\u4e24\u7ea7\u7f13\u51b2\u5bc4\u5b58\u5668\u7ec4\u6210\uff0c\u56e0\u6b64\u53ef\u4e0d\u6dfb\u52a0\u4efb\u4f55\u63a5\u53e3\u903b\u8f91\u800c\u76f4\u63a5\u4e0eCPU\u76f8\u8fde\uff0c\u4e14\u540cDAC0832\u4e00\u6837\u6709\u76f4\u901a\u578b\u3001\u5355\u7f13\u51b2\u578b\u548c\u53cc\u7f13\u51b2\u578b\u4e09\u79cd\u63a5\u6cd5\u3002DAC1208\u7cfb\u5217\u4e4b\u95f4\u7684\u5dee\u5f02\u4e3b\u8981\u662f\u7ebf\u6027\u8bef\u5dee\u4e0d\u540c\u3002     </p> <p>1\u3001DAC1210\u7684\u4e3b\u8981\u6027\u80fd\u53ca\u7279\u70b9</p> <p>DAC1210\u662f24\u5f15\u811a\u7684\u96c6\u6210\u7535\u8def\u82af\u7247\u3002\u8f93\u5165\u6570\u5b57\u4e3a12\u4f4d\u4e8c\u8fdb\u5236\u6570\u5b57\uff0c\u5206\u8fa8\u738712\u4f4d\uff0c\u7535\u6d41\u5efa\u7acb\u65f6\u95f41\u00b5s\uff0c\u4f9b\u7535\u7535\u6e90+5\uff5e+15V\uff08\u5355\u7535\u6e90\u4f9b\u7535\uff09\uff0c\u57fa\u51c6\u7535\u538bVREF\u8303\u56f4-10\uff5e+10V\u3002</p> <p></p> <p>DAC1210\u7684\u5185\u90e8\u7ed3\u6784\u5982\u56fe11-13\u6240\u793a\u3002\u7531\u56fe11-13\u53ef\u89c1\uff0c\u5176\u903b\u8f91\u7ed3\u6784\u4e0eDAC0832\u7c7b\u4f3c\uff0c\u6240\u4e0d\u540c\u7684\u662fDAC1210\u5177\u670912\u4f4d\u6570\u636e\u8f93\u5165\u7aef\uff0c\u4e00\u4e2a8\u4f4d\u8f93\u5165\u5bc4\u5b58\u5668\u548c\u4e00\u4e2a4\u4f4d\u8f93\u5165\u5bc4\u5b58\u5668\u7ec4\u621012\u4f4d\u7684\u6570\u636e\u8f93\u5165\u5bc4\u5b58\u5668\u3002\u4e24\u4e2a\u8f93\u5165\u5bc4\u5b58\u5668\u7684\u8f93\u5165\u5141\u8bb8\u63a7\u5236\u90fd\u8981\u6c42CS\u548cWR\u4e3a\u4f4e\u7535\u5e73\uff0c8\u4f4d\u8f93\u5165\u5bc4\u5b58\u5668\u7684\u6570\u636e\u8f93\u5165\u8fd8\u540c\u65f6\u8981\u6c42BYTE1/BYTE2\u4e3a\u9ad8\u7535\u5e73\u3002</p> <p>DAC1210\u7684\u90e8\u5206\u5f15\u811a\u8bf4\u660e</p> <p>WR1\u2014\u2014\u5199\u51651\uff08\u4f4e\u7535\u5e73\u6709\u6548\uff09\uff0c \u7528\u4e8e\u5c06\u6570\u5b57\u6570\u636e\u4f4d\uff08D1\uff09\u9001\u5230\u8f93\u5165\u9501\u5b58\u5668\u3002\u5f53 \u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u8f93\u5165\u9501\u5b58\u5668\u4e2d\u7684\u6570\u636e\u88ab\u9501\u5b58\u300212\u4f4d\u8f93\u5165\u9501\u5b58\u5668\u5206\u62102\u4e2a\u9501\u5b58\u5668\uff0c\u4e00\u4e2a\u5b58\u653e\u9ad88\u4f4d\u7684\u6570\u636e\uff0c\u800c\u53e6\u4e00\u4e2a\u5b58\u653e\u4f4e4\u4f4d\u3002 \u63a7\u5236\u811a\u4e3a\u9ad8\u7535\u5e73\u65f6\u9009\u62e9\u4e8c\u4e2a\u9501\u5b58\u5668\uff0c\u5904\u4e8e\u4f4e\u7535\u5e73\u65f6\u5219\u6539\u51994\u4f4d\u8f93\u5165\u9501\u5b58\u5668\u3002</p> <p>BYTE1/BYTE2\u2014\u2014\u5b57\u8282\u987a\u5e8f\u63a7\u5236\u3002\u5f53\u6b64\u63a7\u5236\u7aef\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u8f93\u5165\u9501\u5b58\u5668\u4e2d\u768412\u4e2a\u5355\u5143\u90fd\u88ab\u4f7f\u80fd\u3002\u5f53\u4e3a\u4f4e\u7535\u5e73\u65f6\uff0c\u53ea\u4f7f\u80fd\u8f93\u5165\u9501\u5b58\u5668\u4e2d\u7684\u6700\u4f4e4\u4f4d\u3002</p> <p>XFER\u2014\u2014\u4f20\u9001\u63a7\u5236\u4fe1\u53f7\uff08\u4f4e\u7535\u5e73\u6709\u6548\uff09\u3002\u8be5\u4fe1\u53f7\u4e0e \u7ed3\u5408\u65f6\uff0c\u80fd\u5c06\u8f93\u5165\u9501\u5b58\u5668\u4e2d\u768412\u4f4d\u6570\u636e\u8f6c\u79fb\u5230DAC\u5bc4\u5b58\u5668\u4e2d\u3002</p> <p>2\u3001DAC1210\u7684\u8f93\u5165\u4e0e\u8f93\u51fa</p> <p>\u4e3a\u4e86\u75288\u4f4d\u6570\u636e\u7ebf\uff08D0\uff5eD7\uff09\u4f20\u900112\u4f4d\u88ab\u8f6c\u6362\u6570\u636e\uff08DI0\uff5eDI11\uff09\uff0cCPU\u987b\u5206\u4e24\u6b21\u4f20\u9001\u88ab\u8f6c\u6362\u6570\u636e\u3002\u7b2c\u4e00\u6b65\u5148\u4f7fBYTE1/BYTE2\u4e3a\u9ad8\u7535\u5e73\uff0c\u5c06\u88ab\u8f6c\u6362\u7684\u9ad88\u4f4d\uff08DI4\uff5eDI11\uff09\u4f20\u9001\u7ed9\u9ad88\u4f4d\u8f93\u5165\u5bc4\u5b58\u5668\uff1b\u7b2c\u4e8c\u6b65\u4f7fBYTE1/BYTE2\u4e3a\u4f4e\u7535\u5e73\uff0c\u5c06\u4f4e4\u4f4d\uff08DI0\uff5eDI3\uff09\u4f20\u9001\u7ed9\u4f4e4\u4f4d\u8f93\u5165\u5bc4\u5b58\u5668\uff1b\u5728\u6b64\u4e24\u6b65\u4e2d\uff0c\u8fd8\u8981\u6c42CS\u548cWR1\u4e3a\u4f4e\u7535\u5e73\u3002\u4e3a\u907f\u514d\u4e24\u6b21\u8f93\u51fa\u6307\u4ee4\u4e4b\u95f4\u5728D/A\u8f6c\u6362\u5668\u7684\u8f93\u51fa\u7aef\u51fa\u73b0\u4e0d\u9700\u8981\u7684\u6270\u52a8\u6a21\u62df\u91cf\u8f93\u51fa\uff0c\u5c31\u5fc5\u987b\u4f7f\u4f4e8\u4f4d\u548c\u9ad84\u4f4d\u6570\u636e\u540c\u65f6\u9001\u5165DAC1210\u768412\u4f4d\u8f93\u5165\u5bc4\u5b58\u5668\u3002\u56e0\u6b64\uff0c\u7b2c\u4e09\u6b65\u4f7fWR2\u548cXFER\u6709\u6548\uff0c\u5c0612\u4f4d\u8f93\u5165\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u540c\u65f6\u4f20\u7ed912\u4f4dDAC\u5bc4\u5b58\u5668\uff0c\u5e76\u542f\u52a8D/A\u8f6c\u6362\u3002</p> <p>\u5728\u8f93\u51fa\u4e0a\uff0cDAC 1210\u540cDAC0832\u4e00\u6837\uff0c\u662f\u7535\u6d41\u8f93\u51fa\u578bD/A\u8f6c\u6362\u5668\uff0c\u5373IOUT2\uff0bIOUT2\uff1d\u5e38\u6570\u3002\u901a\u5e38\u4f7fIOUT2\u63a5\u5730\u3002\u5176\u5355\u6781\u6027\u8f93\u51fa\u548c\u53cc\u6781\u578b\u8f93\u51fa\u65f6\u7684\u7535\u8def\u63a5\u6cd5\u4e0eDAC0832\u76f8\u540c\u3002 </p> <p>3\u3001DAC1210 D/A\u8f6c\u6362\u5668\u4e0eMCS-51\u5355\u7247\u673a\u7684\u63a5\u53e3\u4e3e\u4f8b</p> <p></p> P2.7 P2.6 P2.5 \u9009\u901a\u7684\u5bc4\u5b58\u5668 \u88ab\u9009\u901a\u5bc4\u5b58\u5668\u7684\u5730\u5740 0 0 1 8\u8def\u8f93\u5165\u5bc4\u5b58\u5668 3FFFH 0 0 0 4\u8def\u8f93\u5165\u5bc4\u5b58\u5668 1FFFH 0 1 0 12\u4f4dDA\u8f6c\u6362\u5668 5FFFH"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#ad","title":"\u5e76\u884cA/D\u8f6c\u6362\u5668\u53ca\u63a5\u53e3\u6280\u672f","text":"<p>A/D\u8f6c\u6362\u5668\uff08ADC\uff09\u7528\u4e8e\u5b9e\u73b0\u5c06\u6a21\u62df\u91cf\u8f6c\u6362\u6210\u4e0e\u8f93\u5165\u91cf\u6210\u6bd4\u4f8b\u7684\u6570\u5b57\u91cf\u3002A/D\u8f6c\u6362\u8fc7\u7a0b\u4e3b\u8981\u5305\u62ec\u91c7\u6837\u3001\u91cf\u5316\u4e0e\u7f16\u7801\u4e09\u4e2a\u73af\u8282\u3002\u6839\u636e\u8f6c\u6362\u539f\u7406\uff0c\u53ef\u5c06A/D\u8f6c\u6362\u5668\u5206\u4e3a\u9010\u6b21\u903c\u8fd1\u5f0f\u3001\u53cc\u79ef\u5206\u5f0f\u3001\u5e76\u884c\u5f0f\u3001\u8ba1\u6570\u5f0f\u7b49\u3002\u76ee\u524d\u4f7f\u7528\u8f83\u591a\u7684\u662f\u524d\u4e09\u79cd\u3002\u672c\u8282\u5c06\u91cd\u70b9\u4ecb\u7ecdA/D\u8f6c\u6362\u7684\u4e3b\u8981\u6280\u672f\u6307\u6807\u3001\u5178\u578b\u7684\u9010\u6b21\u903c\u8fd1\u5f0fA/D\u8f6c\u6362\u5668ADC0809\u82af\u7247\u7684\u57fa\u672c\u7ed3\u6784\u3001\u5f15\u811a\u529f\u80fd\u53ca\u4e0eMCS-51\u7cfb\u5217\u5355\u7247\u673a\u7684\u63a5\u53e3\u6280\u672f\u548c\u4f7f\u7528\u65b9\u6cd5\u3002 </p> <p>1\u3001\u5206\u8fa8\u7387</p> <p>\u5206\u8fa8\u7387\u8bf4\u660eA/D\u8f6c\u6362\u5668\u5bf9\u8f93\u5165\u6a21\u62df\u4fe1\u53f7\u7684\u5206\u8fa8\u80fd\u529b\u3002A/D\u8f6c\u6362\u5668\u7684\u5206\u8fa8\u7387\u4ee5\u8f93\u51fa\u4e8c\u8fdb\u5236\u7684\u4f4d\u6570\u8868\u793a\u3002\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0cn\u4f4d\u4e8c\u8fdb\u5236\u6570\u8f93\u51fa\u7684A/D\u8f6c\u6362\u5668\u80fd\u533a\u52062n\u4e2a\u4e0d\u540c\u7b49\u7ea7\u7684\u6a21\u62df\u7535\u538b\uff0c\u80fd\u533a\u5206\u8f93\u5165\u6a21\u62df\u7535\u538b\u7684\u6700\u5c0f\u503c\u4e3a\u6ee1\u91cf\u7a0b\u8f93\u5165\uff08VFS\uff09\u76841/2^n \uff0c\u5373VFS/2n\u3002\u5f53VFS\u4e00\u5b9a\u65f6\uff0c\u8f93\u51fa\u4f4d\u6570\u8d8a\u591a\uff0c\u91cf\u5316\u5355\u4f4d\u8d8a\u5c0f\uff0c\u5219\u5206\u8fa8\u7387\u8d8a\u9ad8\u3002\u4f8b\u5982\uff0c\u82e5A/D\u8f6c\u6362\u5668\u7684VFS\u4e3a10V\uff0c\u5f53A/D\u8f6c\u6362\u5668\u7684\u8f93\u51fa\u4e3a8\u4f4d\u300110\u4f4d\u548c12\u4f4d\u6570\u5b57\u91cf\u65f6\uff0c\u5176\u53ef\u5206\u8fa8\u7684\u6700\u5c0f\u7535\u538b\u5206\u522b\u4e3a39.06mV\uff0c9.77mV\u548c2.44mV\u3002\u5f53\u7535\u538b\u7684\u53d8\u5316\u4f4e\u4e8e\u8fd9\u4e9b\u503c\u65f6\uff0cA/D\u8f6c\u6362\u5668\u4e0d\u80fd\u5206\u8fa8\u3002</p> <p>2\u3001\u8f6c\u6362\u8bef\u5dee</p> <p>\u8f6c\u6362\u8bef\u5dee\u8868\u793aA/D\u8f6c\u6362\u5668\u5b9e\u9645\u8f93\u51fa\u7684\u6570\u5b57\u91cf\u4e0e\u7406\u8bba\u8f93\u51fa\u6570\u5b57\u91cf\u4e4b\u95f4\u7684\u5dee\u522b\uff0c\u5373\u5b9e\u9645\u8f6c\u6362\u70b9\u504f\u79bb\u7406\u60f3\u7279\u6027\u7684\u8bef\u5dee\uff0c\u5e38\u7528\u6700\u4f4e\u6709\u6548\u4f4d\u7684\u500d\u6570\u8868\u793a\u3002\u5982\u7ed9\u51fa\u76f8\u5bf9\u8bef\u5dee\u2264\u00b1LSB/2\uff0c\u8868\u660e\u5b9e\u9645\u8f93\u51fa\u7684\u6570\u5b57\u91cf\u548c\u7406\u8bba\u4e0a\u5e94\u5f97\u5230\u7684\u8f93\u51fa\u6570\u5b57\u91cf\u4e4b\u95f4\u7684\u8bef\u5dee\u5c0f\u4e8e\u6700\u4f4e\u4f4d\u7684\u4e00\u534a\u3002</p> <p>\u6709\u65f6\u4e5f\u7528\u6ee1\u91cf\u7a0b\u8f93\u51fa\u7684\u767e\u5206\u6570\u7ed9\u51fa\u8f6c\u6362\u8bef\u5dee\u3002\u4f8b\u5982A/D\u8f6c\u6362\u5668\u7684\u8f93\u51fa\u4e3a\u5341\u8fdb\u5236\u7684\u4f4d\uff08\u5373\u6240\u8c13\u7684\u4e09\u4f4d\u534a\uff09\uff0c\u8f6c\u6362\u8bef\u5dee\u4e3a\u00b10.005\uff05VFS\uff0c\u5219\u6ee1\u91cf\u7a0b\u8f93\u51fa\u4e3a1999\uff0c\u6700\u5927\u8f93\u51fa\u8bef\u5dee\u5c0f\u4e8e\u6700\u4f4e\u4f4d\u76841\u3002</p> <p>3\u3001\u8f6c\u6362\u65f6\u95f4</p> <p>\u8f6c\u6362\u65f6\u95f4\u662f\u6307\u4ece\u8f6c\u6362\u5668\u4ece\u63a5\u5230\u8f6c\u6362\u542f\u52a8\u4fe1\u53f7\u5f00\u59cb\uff0c\u5230\u8f93\u51fa\u7aef\u5f97\u5230\u7a33\u5b9a\u7684\u6570\u5b57\u4fe1\u53f7\u6240\u7ecf\u8fc7\u7684\u65f6\u95f4\u3002A/D\u8f6c\u6362\u5668\u7684\u8f6c\u6362\u65f6\u95f4\u4e3b\u8981\u53d6\u51b3\u4e8e\u8f6c\u6362\u7535\u8def\u7684\u7c7b\u578b\uff0c\u4e0d\u540c\u7c7b\u578bA/D\u8f6c\u6362\u5668\u7684\u8f6c\u6362\u65f6\u95f4\u76f8\u5dee\u5f88\u5927\u3002\u5176\u4e2d\uff0c\u5e76\u884cA/D\u8f6c\u6362\u5668\u8f6c\u6362\u65f6\u95f4\u6700\u77ed\uff0c\u901f\u5ea6\u6700\u9ad8\uff0c\u4ec5\u9700\u51e0\u5341\u7eb3\u79d2\uff1b\u9010\u6b21\u903c\u8fd1\u578bA/D\u8f6c\u6362\u5668\u6b21\u4e4b\uff0c\u8f6c\u6362\u65f6\u95f4\u4e00\u822c\u5728\u51e0\u5341\u5fae\u79d2\uff1b\u53cc\u79ef\u5206\u5f0fA/D\u8f6c\u6362\u5668\u8f6c\u6362\u901f\u5ea6\u6700\u6162\uff0c\u8f6c\u6362\u65f6\u95f4\u4e00\u822c\u5728\u51e0\u5341\u81f3\u51e0\u767e\u6beb\u79d2\u3002</p> <p>\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5e94\u4ece\u7cfb\u7edf\u7684\u4f4d\u6570\u3001\u7cbe\u5ea6\u8981\u6c42\u3001\u8f93\u5165\u6a21\u62df\u4fe1\u53f7\u7684\u8303\u56f4\u53ca\u8f93\u5165\u4fe1\u53f7\u6781\u6027\u7b49\u65b9\u9762\u7efc\u5408\u8003\u8651ADC\u7684\u9009\u7528\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#adadc0808adc0809","title":"A/D\u8f6c\u6362\u5668ADC0808\u548cADC0809","text":"<p>ADC0808\u548cADC0809\u662f\u5178\u578b\u7684\u9010\u6b21\u903c\u8fd1\u5f0fA/D\u8f6c\u6362\u5668\uff0c\u9664\u7cbe\u5ea6\u7565\u6709\u5dee\u522b\u5916\uff08ADC0808\u7684\u7cbe\u5ea6\u662f8\u4f4d\uff0cADC0809\u7684\u7cbe\u5ea6\u662f7\u4f4d\uff09\uff0c\u5176\u4f59\u5404\u65b9\u9762\u5b8c\u5168\u76f8\u540c\u3002\u4e3b\u8981\u6280\u672f\u6307\u6807\u548c\u7279\u6027\u5982\u4e0b\uff1a</p> <p>1\u3001\u4e3b\u8981\u6280\u672f\u6307\u6807\u548c\u7279\u6027</p> <p>\u2022 \u5206\u8fa8\u7387\uff1a8\u4f4d\uff1b</p> <p>\u2022 \u603b\u7684\u4e0d\u53ef\u8c03\u8bef\u5dee\uff1aADC0808\u4e3a\u00b1\uff08\u00bd\uff09LSB\uff0cADC0809\u4e3a\u00b11LSB\uff1b</p> <p>\u2022 \u6a21\u62df\u91cf\u8f93\u5165\u901a\u9053\uff1a8\u8def\uff1b</p> <p>\u2022\u8f6c\u6362\u65f6\u95f4\uff1a\u53d6\u51b3\u4e8e\u82af\u7247\u7684\u65f6\u949f\u9891\u7387\uff0c\u5f53CLK\uff1d500kHz\u662f\uff0c\u8f6c\u6362\u65f6\u95f4\u4e3a128\u03bcs\uff1b</p> <p>\u2022\u5355\u4e00\u7535\u6e90\uff1a+5V\uff1b</p> <p>\u2022 \u6a21\u62df\u8f93\u5165\u7535\u538b\u8303\u56f4\uff1a\u5355\u6781\u60270\uff5e+5V\uff0c\u53cc\u6781\u6027\u00b15V\u6216\u00b110V\uff1b</p> <p>\u2022 \u5177\u6709\u53ef\u63a7\u4e09\u6001\u8f93\u51fa\u9501\u5b58\u5668\uff1b</p> <p>\u2022 \u542f\u52a8\u8f6c\u6362\u63a7\u5236\u4e3a\u8109\u51b2\u5f0f\uff08\u6b63\u8109\u51b2\uff09\u3002\u4e0a\u5347\u6cbf\u4f7f\u5185\u90e8\u6240\u6709\u5bc4\u5b58\u5668\u6e05\u201c0\u201d\uff0c\u4e0b\u964d\u6cbf\u4f7fA/D\u8f6c\u6362\u5f00\u59cb\uff1b</p> <p>\u2022 \u8f93\u51fa\u4e0eTTL\u517c\u5bb9\uff1b</p> <p>\u2022 \u4f7f\u7528\u65f6\u4e0d\u9700\u8981\u8fdb\u884c\u96f6\u70b9\u548c\u6ee1\u523b\u5ea6\u8c03\u8282\u3002 </p> <p>ADC0809(0808)\u539f\u7406\u56fe </p> <p></p> <p>\u5982\u56fe11-15\u6240\u793a\uff0cADC0809\u7531\u4e24\u90e8\u5206\u7ec4\u6210\u3002\u7b2c\u4e00\u90e8\u5206\u4e3a8\u901a\u9053\u591a\u8def\u6a21\u62df\u5f00\u5173\u4ee5\u53ca\u76f8\u5e94\u7684\u901a\u9053\u5730\u5740\u9501\u5b58\u4e0e\u8bd1\u7801\u7535\u8def\uff0c\u53ef\u4ee5\u5b9e\u73b08\u8def\u6a21\u62df\u4fe1\u53f7\u7684\u5206\u65f6\u91c7\u96c6\uff0c\u51768\u8def\u6a21\u62df\u8f93\u5165\u901a\u9053\u7684\u9009\u62e9\u5982\u886811-2\u6240\u793a\u3002\u4e09\u4e2a\u5730\u5740\u4fe1\u53f7ADDA\u3001ADDB\u548cADDC\u51b3\u5b9a\u662f\u54ea\u4e00\u8def\u6a21\u62df\u4fe1\u53f7\u88ab\u9009\u4e2d\uff0c\u5e76\u9001\u5230\u5185\u90e8A/D\u8f6c\u6362\u5668\u4e2d\u8fdb\u884c\u8f6c\u6362\u3002 </p> <p>\u7b2c\u4e8c\u90e8\u5206\u4e3a\u4e00\u4e2a\u9010\u6b21\u903c\u8fd1\u5f0fA/D\u8f6c\u6362\u5668\uff0c\u5b83\u7531\u6bd4\u8f83\u5668\u3001\u63a7\u5236\u903b\u8f91\u3001\u4e09\u6001\u8f93\u51fa\u7f13\u51b2\u5668\u3001\u9010\u4f4d\u903c\u8fd1\u5bc4\u5b58\u5668SAR\u4ee5\u53ca\u6811\u72b6\u5f00\u5173\u548c256R\u68af\u578b\u7535\u963b\u7f51\u7edc\u7ec4\u6210\u3002\u5176\u4e2d\u7531\u6811\u72b6\u5f00\u5173\u548c256R\u68af\u578b\u7535\u963b\u7f51\u7edc\u6784\u6210D/A\u8f6c\u6362\u5668\u3002 </p> <p>\u9010\u6b21\u903c\u8fd1\u5f0f\u7684\u8f6c\u6362\u539f\u7406\u662f\u201c\u9010\u4f4d\u6bd4\u8f83\u201d\uff0c\u5176\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u7528\u781d\u7801\u5728\u5929\u5e73\u4e0a\u79f0\u7269\u4f53\u8d28\u91cf\u3002\u63a7\u5236\u903b\u8f91\u7528\u6765\u63a7\u5236\u9010\u4f4d\u903c\u8fd1\u5bc4\u5b58\u5668\u4ece\u9ad8\u4f4d\u81f3\u4f4e\u4f4d\u9010\u4f4d\u53d6\u201c1\u201d\uff0c\u7136\u540e\u5c06\u6b64\u6570\u5b57\u91cf\u7ecfD/A\u8f6c\u6362\u540e\u8f93\u51fa\u4e00\u4e2a\u6a21\u62df\u7535\u538bVs\uff0cVs\u4e0e\u8f93\u5165\u6a21\u62df\u91cfVx\u5728\u6bd4\u8f83\u5668\u4e2d\u8fdb\u884c\u6bd4\u8f83\uff0c\u5f53Vs&gt;Vx\u65f6\uff0c\u8be5\u4f4dDi\uff1d0\uff0c\u82e5Vs\u2264Vx\u65f6\uff0c\u8be5\u4f4dDi\uff1d1\u3002\u56e0\u6b64\u4eceD7\u81f3D0\u9010\u4f4d\u903c\u8fd1\u5e76\u6bd4\u8f838\u6b21\uff0c\u9010\u4f4d\u903c\u8fd1\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u5b57\u91cf\uff0c\u5373\u4e3a\u4e0e\u6a21\u62df\u91cfVx\u6240\u5bf9\u5e94\u7684\u6570\u5b57\u91cf\u3002\u6b64\u6570\u5b57\u91cf\u9001\u5165\u8f93\u51fa\u9501\u5b58\u7f13\u51b2\u5668\uff0c\u5e76\u540c\u65f6\u53d1\u51fa\u8f6c\u6362\u7ed3\u675f\u4fe1\u53f7EOC\uff08\u9ad8\u7535\u5e73\u6709\u6548\uff0c\u7ecf\u53cd\u76f8\u5668\u540e\uff0c\u53ef\u5411CPU\u53d1\u4e2d\u65ad\u8bf7\u6c42\uff09\uff0c\u8868\u793a\u4e00\u6b21\u8f6c\u6362\u7ed3\u675f\u3002\u6b64\u65f6\uff0cCPU\u53d1\u51fa\u4e00\u4e2a\u8f93\u51fa\u5141\u8bb8\u547d\u4ee4OE\uff08\u9ad8\u7535\u5e73\u6709\u6548\uff09\u5373\u53ef\u8bfb\u53d6\u6570\u636e\u3002</p> <p>2\u3001\u5f15\u811a\u529f\u80fd</p> <p>IN0\uff5eIN7\uff1a8\u8def\u6a21\u62df\u91cf\u7684\u8f93\u5165\u7aef\u3002</p> <p>D0\uff5eD7\uff1aA/D\u8f6c\u6362\u540e\u7684\u6570\u636e\u8f93\u51fa\u7aef\uff0c\u4e3a\u4e09\u6001\u53ef\u63a7\u8f93\u51fa\uff0c\u53ef\u76f4\u63a5\u4e0e\u8ba1\u7b97\u673a\u6570\u636e\u7ebf\u76f8\u8fde\u3002</p> <p>\u6ce8\u610f\uff1a\u5bf9\u4e8eADC0809\uff0cD0\u4e3a\u6700\u4f4e\u6709\u6548\u4f4d\uff0cD7\u4e3a\u6700\u9ad8\u6709\u6548\u4f4d\uff0c\u800cADC0808\u4e2d\u6b63\u597d\u76f8\u53cd\uff0c\u5373D7\u4e3a\u6700\u4f4e\u6709\u6548\u4f4d\uff0cD0\u4e3a\u6700\u9ad8\u6709\u6548\u4f4d\u3002</p> <p>ADDA\u3001ADDB\u3001ADDC\uff1a\u6a21\u62df\u901a\u9053\u5730\u5740\u9009\u62e9\u7aef\uff0cADDC\u4e3a\u6700\u9ad8\u4f4d\uff0cADDA\u4e3a\u6700\u4f4e\u4f4d\u3002</p> <p>START\uff1a\u8f6c\u6362\u542f\u52a8\u4fe1\u53f7\u3002\u4e3a\u4e86\u542f\u52a8A/D\u8f6c\u6362\uff0c\u5e94\u5728\u6b64\u5f15\u811a\u52a0\u4e00\u4e2a\u6b63\u8109\u51b2\uff0c\u5728\u8109\u51b2\u7684\u4e0a\u5347\u6cbf\u65f6\u5c06\u5185\u90e8\u5bc4\u5b58\u5668\u5168\u90e8\u6e050\uff0c\u4e0b\u964d\u6cbf\u65f6\u5f00\u59cbA/D\u8f6c\u6362\u8fc7\u7a0b\u3002</p> <p>CLK\uff1a\u5b9e\u65f6\u65f6\u949f\uff0c\u6700\u9ad8\u5141\u8bb8\u503c\u4e3a640kHz\uff0c\u53ef\u901a\u8fc7\u5916\u63a5\u7535\u8def\u63d0\u4f9b\u9891\u7387\u4fe1\u53f7\uff0c\u4e5f\u53ef\u7528\u5355\u7247\u673aALE\u5f15\u811a\u4fe1\u53f7\u5206\u9891\u83b7\u5f97\u3002</p> <p>EOC\uff1a\u8f6c\u6362\u7ed3\u675f\u4fe1\u53f7\u3002\u8f6c\u6362\u5f00\u59cb\u65f6\uff0cEOC\u4fe1\u53f7\u53d8\u4e3a\u4f4e\u7535\u5e73\uff1b\u5f53\u8f6c\u6362\u7ed3\u675f\u540e\uff0c\u8f6c\u6362\u540e\u7684\u6570\u636e\u53ef\u4ee5\u8bfb\u51fa\u65f6\uff0cEOC\u53d8\u4e3a\u9ad8\u7535\u5e73\u3002</p> <p>\u6b64\u4fe1\u53f7\u53ef\u7528\u4f5cA/D\u8f6c\u6362\u662f\u5426\u5b8c\u6210\u7684\u67e5\u8be2\u4fe1\u53f7\u6216\u5411CPU\u8bf7\u6c42\u4e2d\u65ad\u7684\u4fe1\u53f7\u3002</p> <p>OE\uff1a\u8f93\u51fa\u5141\u8bb8\u4fe1\u53f7\u6216\u79f0\u4e3aA/D\u6570\u636e\u8bfb\u4fe1\u53f7\uff0c\u9ad8\u7535\u5e73\u6709\u6548\u3002OE\u53ef\u4e0e\u7cfb\u7edf\u8bfb\u9009\u901a\u4fe1\u53f7RD\u76f8\u8fde\u3002\u5f53\u8ba1\u7b97\u673a\u53d1\u51fa\u6b64\u4fe1\u53f7\u65f6\uff0cADC\u7684\u4e09\u6001\u95e8\u88ab\u6253\u5f00\uff0c\u6b64\u65f6\u53ef\u901a\u8fc7\u6570\u636e\u7ebf\u8bfb\u51fa\u8f6c\u6362\u7ed3\u679c\u3002\u7531\u4e8eOE\u4e0eRD\u7684\u6709\u6548\u7535\u5e73\u4e0d\u540c\uff0c\u56e0\u6b64\uff0c\u4f7f\u7528\u4e2d\u8981\u6ce8\u610f\u52a0\u975e\u95e8\u3002</p> <p>ALE\uff1a\u5730\u5740\u9501\u5b58\u5141\u8bb8\uff0c\u9ad8\u7535\u5e73\u6709\u6548\u3002\u9ad8\u7535\u5e73\u65f6\u628a\u7531ADDC\u3001ADDB\u3001ADDA\u7ec4\u6210\u7684\u5730\u5740\u4fe1\u53f7\u9001\u5165\u5730\u5740\u9501\u5b58\u5668\uff0c\u5e76\u7ecf\u8bd1\u7801\u540e\u5f97\u5230\u5730\u5740\u8f93\u51fa\uff0c\u4ee5\u9009\u62e9\u76f8\u5e94\u7684\u6a21\u62df\u8f93\u5165\u901a\u9053\u3002</p> <p>VREF(+)\uff0cVREF(-)\uff1a\u6b63\u3001\u8d1f\u53c2\u8003\u7535\u538b\u8f93\u5165\u7aef\uff0c\u7528\u4e8e\u63d0\u4f9b\u7247\u5185DAC\u7535\u963b\u7f51\u7edc\u7684\u57fa\u51c6\u7535\u538b\uff0c\u5176\u503c\u51b3\u5b9a\u4e86\u8f93\u5165\u6a21\u62df\u91cf\u7684\u91cf\u7a0b\u8303\u56f4\u3002\u5728\u5355\u6781\u6027\u8f93\u5165\u65f6\uff0c VREF(+)\u63a5+5V\uff0cVREF(-)\u63a5\u5730\uff0c\u4f46\u5728\u53cc\u6781\u6027\u8f93\u5165\u65f6\uff0c VREF(+)\u548cVREF(-)\u5206\u522b\u63a5\u6b63\u3001\u8d1f\u6781\u6027\u7684\u53c2\u8003\u7535\u538b\u3002</p> <p>Vcc\uff0cGND\uff1a\u7535\u6e90\u7535\u538bVcc\u63a5+5V\uff0cGND\u4e3a\u5730\u3002</p> <p>3\u3001\u57fa\u4e8e\u5730\u5740\u7684\u7f16\u7a0b\u65b9\u6cd5</p> <p></p> <p>\u200b     \u5f53MCS-51\u4ea7\u751fWR\u5199\u4fe1\u53f7\u65f6\uff0c\u7531WR\u548cP2.0\u7684\u6216\u975e\u8f93\u51fa\u4f5c\u4e3a\u8f6c\u6362\u5668\u7684START\u548cALE\uff08\u9ad8\u7535\u5e73\u6709\u6548\uff09\uff0c\u540c\u65f6\u5c06\u901a\u9053\u5730\u5740ADDA\u3001ADDB\u3001ADDC\u9001\u5730\u5740\u603b\u7ebf\uff0c\u6a21\u62df\u91cf\u901a\u8fc7\u88ab\u9009\u4e2d\u7684\u901a\u9053\u9001\u5230A/D\u8f6c\u6362\u5668\uff0c\u5e76\u5728START\u4e0b\u964d\u6cbf\u65f6\u5f00\u59cb\u9010\u4f4d\u8f6c\u6362\uff0c\u5f53\u8f6c\u6362\u7ed3\u675f\u65f6\uff0c\u8f6c\u6362\u7ed3\u675f\u4fe1\u53f7EOC\u53d8\u9ad8\u7535\u5e73\u3002\u7ecf\u53cd\u76f8\u5668\u53ef\u5411CPU\u53d1\u4e2d\u65ad\u8bf7\u6c42\uff0c\u4e5f\u53ef\u91c7\u7528\u67e5\u8be2\u65b9\u5f0f\u68c0\u67e5A/D\u8f6c\u6362\u662f\u5426\u7ed3\u675f\u3002</p> <p>\u5f53MCS-51\u4ea7\u751fRD\u8bfb\u4fe1\u53f7\u65f6\uff0c\u7531RD\u4e0eP2.0\u7684\u6216\u975e\u8f93\u51fa\u4ea7\u751f\u8f93\u51fa\u5141\u8bb8\u4fe1\u53f7OE\uff08\u9ad8\u7535\u5e73\u6709\u6548\uff09\uff0c\u4f7fA/D\u8f6c\u6362\u7ed3\u679c\u8bfb\u5165MCS-51\u5355\u7247\u673a\u3002</p> <p>\u2460 \u5b9a\u65f6\u91c7\u6837\u65b9\u5f0f---140\u03bcs\u5de6\u53f3</p> <p>\u2461 \u7a0b\u5e8f\u67e5\u8be2\u65b9\u5f0f</p> <p>\u2462 \u4e2d\u65ad\u91c7\u6837\u65b9\u5f0f</p> <p>3\u3001\u57fa\u4e8e\u5730\u5740\u7684\u7f16\u7a0b\u5b9e\u73b0</p> <p>\u2460 \u5b9a\u65f6\u91c7\u6837\u65b9\u5f0f---140\u03bcs\u5de6\u53f3</p> <p>\u2461 \u7a0b\u5e8f\u67e5\u8be2\u65b9\u5f0f</p> <p>\u2462 \u4e2d\u65ad\u91c7\u6837\u65b9\u5f0f</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#12adad574","title":"12\u4f4d\u5e76\u884cA/D\u8f6c\u6362\u5668AD574","text":"<p>AD574A/AD674A\u662f\u7f8e\u56fdAD\u516c\u53f8\u751f\u4ea7\u768412\u4f4d\u9010\u6b21\u903c\u8fd1\u578bADC\u82af\u7247\uff0c\u8f6c\u6362\u65f6\u95f4\u4e3a35\u03bcs\uff0c\u8f6c\u6362\u7cbe\u5ea6\u4e3a0.05%\uff0c\u7531\u4e8e\u82af\u7247\u5185\u6709\u4e09\u6001\u8f93\u51fa\u7f13\u51b2\u7535\u8def\uff0c\u56e0\u800c\u53ef\u76f4\u63a5\u4e0e\u5355\u7247\u673a\u7684\u6570\u636e\u603b\u7ebf\u76f8\u8fde\uff0c\u800c\u65e0\u987b\u9644\u52a0\u903b\u8f91\u63a5\u53e3\u7535\u8def\uff0c\u4e14\u80fd\u4e0eCMOS\u53caTTL\u7535\u8def\u517c\u5bb9\u3002\u7531\u4e8eAD574A\u7247\u5185\u5305\u542b\u9ad8\u7cbe\u5ea6\u7684\u53c2\u8003\u7535\u538b\u6e90\u548c\u65f6\u949f\u7535\u8def\uff0c\u4f7fAD574A\u5728\u4e0d\u9700\u4efb\u4f55\u5916\u90e8\u7535\u8def\u548c\u65f6\u949f\u4fe1\u53f7\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210A/D\u8f6c\u6362\u529f\u80fd\uff0c\u5e94\u7528\u975e\u5e38\u65b9\u4fbf\u3002</p> <p>AD574\u7684\u7ed3\u6784\u6846\u56fe\u56fe11-22 AD574\u7684\u7ed3\u6784\u6846\u56fe</p> <p>AD574\u7684\u7ed3\u6784\u6846\u56fe\u5982\u56fe11-22\u6240\u793a\u3002AD574A\u82af\u7247\u5185\u90e8\u6709\u6a21\u62df\u548c\u6570\u5b57\u4e24\u79cd\u7535\u8def\uff0c\u6a21\u62df\u7535\u8def\u4e3a12\u4f4dD/A\u8f6c\u6362\u5668\uff0c\u6570\u5b57\u7535\u8def\u5219\u5305\u62ec\u6bd4\u8f83\u5668\u3001\u9010\u6b21\u6bd4\u8f83\u5bc4\u5b58\u5668\u3001\u65f6\u949f\u7535\u8def\u3001\u903b\u8f91\u63a7\u5236\u7535\u8def\u548c\u6570\u636e\u4e09\u6001\u8f93\u51fa\u7f13\u51b2\u5668\uff0c\u53ef\u8fdb\u884c12\u4f4d\u62168\u4f4d\u8f6c\u6362\u300212\u4f4d\u7684\u8f93\u51fa\u53ef\u4e00\u6b21\u5b8c\u6210(\u4e0e16\u4f4d\u7684\u6570\u636e\u603b\u7ebf\u76f8\u8fde)\uff0c\u4e5f\u53ef\u5148\u8f93\u51fa\u9ad88\u4f4d\uff0c\u540e\u8f93\u51fa\u4f4e8\u4f4d\uff0c\u5206\u4e24\u6b21\u5b8c\u6210\u3002 </p> <p></p> <p>12/8\u2014\u2014\u6570\u636e\u8f93\u51fa\u65b9\u5f0f\u9009\u62e9\u3002\u9ad8\u7535\u5e73\u65f6\u53cc\u5b57\u8282\u8f93\u51fa\uff0c\u5373\u8f93\u51fa\u4e3a12\u4f4d\uff1b\u4f4e\u7535\u5e73\u65f6\u5355\u5b57\u8282\u8f93\u51fa\uff0c\u5206\u4e24\u6b21\u8f93\u51fa\u9ad88\u4f4d\u548c\u4f4e4\u4f4d\u3002</p> <p>CS\u2014\u2014\u7247\u9009\u4fe1\u53f7\u3002\u4f4e\u7535\u5e73\u6709\u6548\u3002</p> <p>A0\u2014\u2014\u8f6c\u6362\u6570\u636e\u957f\u5ea6\u9009\u62e9\u3002\u5728\u542f\u52a8\u8f6c\u6362\u7684\u60c5\u51b5\u4e0b\uff0cA0\u4e3a\u9ad8\u65f6\u8fdb\u884c8\u4f4d\u8f6c\u6362\uff0cA0\u4e3a\u4f4e\u65f6\u8fdb\u884c12\u4f4d\u8f6c\u6362\u3002</p> <p>R/C\u2014\u2014\u8bfb\u6570\u636e/\u8f6c\u6362\u63a7\u5236\u4fe1\u53f7\u3002\u9ad8\u7535\u5e73\u65f6\u53ef\u5c06\u8f6c\u6362\u540e\u7684\u6570\u636e\u8bfb\u51fa\uff0c\u4f4e\u7535\u5e73\u65f6\u542f\u52a8\u8f6c\u6362\u3002</p> <p>CE\u2014\u2014\u82af\u7247\u5141\u8bb8\u4fe1\u53f7\u3002\u7528\u6765\u63a7\u5236\u8f6c\u6362\u6216\u8bfb\u64cd\u4f5c\u3002</p> <p>VCC\u548cVEE\u2014\u2014\u6a21\u62df\u90e8\u5206\u4f9b\u7535\u7535\u8def\u7684\u6b63\u7535\u6e90\u548c\u8d1f\u7535\u6e90\uff0c\u5176\u8303\u56f4\u4e3a\u00b112V\u6216\u00b115V\u3002</p> <p>REF OUT\u2014\u2014+10V\u5185\u90e8\u53c2\u8003\u7535\u538b\u8f93\u51fa\uff0c\u5177\u67091.5mA\u7684\u5e26\u8d1f\u8f7d\u80fd\u529b\u3002</p> <p>AGND\u2014\u2014\u6a21\u62df\u4fe1\u53f7\u516c\u5171\u5730\u3002\u5b83\u662fAD574A\u7684\u5185\u90e8\u53c2\u8003\u70b9\uff0c\u5fc5\u987b\u4e0e\u7cfb\u7edf\u7684\u6a21\u62df\u53c2\u8003\u70b9\u76f8\u8fde\u3002</p> <p>REF IN\u2014\u2014\u53c2\u8003\u7535\u538b\u8f93\u5165\uff0c\u4e0eREF OUT\u76f8\u8fde\u53ef\u81ea\u884c\u63d0\u4f9b\u53c2\u8003\u7535\u538b\u3002</p> <p>BIP OFF\u2014\u2014\u8865\u507f\u8c03\u6574\uff0c\u63a5\u81f3\u6b63\u8d1f\u53ef\u8c03\u7684\u5206\u538b\u7f51\u7edc\uff0c\u4ee5\u8c03\u6574ADC\u8f93\u51fa\u7684\u96f6\u70b9\u3002</p> <p>10VIN\u2014\u2014\u6a21\u62df\u4fe1\u53f7\u8f93\u5165\u7aef\u3002\u8f93\u5165\u7535\u538b\u8303\u56f4\u662f\uff1a\u5355\u6781\u6027\u5de5\u4f5c\u65f6\u8f93\u51650\uff5e10V\uff0c\u53cc\u6781\u6027\u5de5\u4f5c\u65f6\u8f93\u5165-5\uff5e+5V\u3002</p> <p>20VIN\u2014\u2014\u6a21\u62df\u4fe1\u53f7\u8f93\u5165\u7aef\u3002\u8f93\u5165\u7535\u538b\u8303\u56f4\u662f\uff1a\u5355\u6781\u6027\u5de5\u4f5c\u65f6\u8f93\u51650\uff5e20V\uff0c\u53cc\u6781\u6027\u5de5\u4f5c\u65f6\u8f93\u5165-10\uff5e+10V\u3002</p> <p>DGND\u2014\u2014\u6570\u5b57\u4fe1\u53f7\u516c\u5171\u5730\u3002</p> <p>DB11\uff5eDB0\u2014\u2014\u6570\u5b57\u91cf\u8f93\u51fa\u3002</p> <p>STS\u2014\u2014\u8f6c\u6362\u72b6\u6001\u8f93\u51fa\u3002\u8f6c\u6362\u5f00\u59cb\u65f6\u53ca\u6574\u4e2a\u8f6c\u6362\u8fc7\u7a0b\u4e2d\uff0cSTS\u4e00\u76f4\u4fdd\u6301\u9ad8\u7535\u5e73\uff1b\u8f6c\u6362\u7ed3\u675f\uff0cSTS\u7acb\u5373\u8fd4\u56de\u4f4e\u7535\u5e73\u3002\u53ef\u7528\u67e5\u8be2\u65b9\u5f0f\u68c0\u6d4b\u6b64\u7535\u4f4d\u7684\u53d8\u5316\uff0c\u6765\u5224\u65ad\u8f6c\u6362\u662f\u5426\u7ed3\u675f\uff0c\u4e5f\u53ef\u5229\u7528\u5b83\u7684\u4e0b\u964d\u6cbf\u5411CPU\u53d1\u51fa\u4e2d\u65ad\u7533\u8bf7\uff0c\u901a\u77e5CPU A/D\u8f6c\u6362\u5df2\u7ecf\u5b8c\u6210\uff0c\u53ef\u4ee5\u8bfb\u53d6\u8f6c\u6362\u7ed3\u679c\u3002 </p> <p></p> <p>1\u3001D574A\u5355\u6781\u6027\u548c\u53cc\u6781\u6027\u7535\u8def</p> <p>\u200b       \u901a\u8fc7\u6539\u53d8AD574A\u5f15\u811a8\u300110\u300112\u7684\u5916\u63a5\u7535\u8def\uff0c\u53ef\u4f7fAD574A\u8fdb\u884c\u5355\u6781\u6027\u548c\u53cc\u6781\u6027\u6a21\u62df\u4fe1\u53f7\u7684\u8f6c\u6362\uff0c\u5176\u7535\u8def\u5982\u56fe11-24\u6240\u793a\u3002\u5176\u7cfb\u7edf\u6a21\u62df\u4fe1\u53f7\u5730\u5e94\u4e0e\u5f15\u811a9\u76f8\u8fde\uff0c\u4f7f\u5176\u5730\u7ebf\u63a5\u89e6\u7535\u963b\u5c3d\u53ef\u80fd\u7684\u5c0f\u3002</p> <p></p> <p>2\u3001AD574A\u4e0eMCS-51\u7cfb\u5217\u5355\u7247\u673a\u7684\u63a5\u53e3\u7535\u8def</p> <p>AD574A\u4e0eMCS-51\u7cfb\u5217\u5355\u7247\u673a\u5b9e\u7528\u63a5\u53e3\u7535\u8def\u5982\u56fe11-25\u6240\u793a\u3001\u7531\u4e8eAD574A\u7247\u5185\u6709\u65f6\u949f\uff0c\u6545\u65e0\u9700\u5916\u52a0\u65f6\u949f\u4fe1\u53f7\u8be5\u7535\u8def\u91c7\u7528\u53cc\u6781\u6027\u8f93\u5165\u53ef\u5bf9\u00b15V\u6216\u00b110V\u6a21\u62df\u4fe1\u53f7\u8fdb\u884c\u8f6c\u6362\u3002\u5f53AD574A\u4e0eMCS-51\u7cfb\u5217\u5355\u7247\u673a\u76f8\u8fde\u65f6\uff0c\u7531\u4e8eAD574A\u8f93\u51fa12\u4f4d\u6570\u5b57\u91cf\uff0c\u6240\u4ee5\u5f53\u5355\u7247\u673a\u8bfb\u53d6\u8f6c\u6362\u7ed3\u679c\u65f6\uff0c\u9700\u5206\u4e24\u6b21\u8fdb\u884c\uff1a\u5148\u9ad88\u4f4d\u3001\u540e\u4f4e4\u4f4d\u3002\u7531A0=0\u6216A0=1\u6765\u5206\u522b\u63a7\u5236\u8bfb\u53d6\u9ad88\u4f4d\u6216\u4f4e4\u4f4d\u3002</p> <p>\u5355\u7247\u673a\u53ef\u4ee5\u91c7\u7528\u5ef6\u65f6\u3001\u67e5\u8be2\u3001\u4e2d\u65ad\u65b9\u5f0f\u8bfb\u53d6AD574A\u7684\u8f6c\u6362\u7ed3\u679c\uff0c\u672c\u7535\u8def\u91c7\u7528\u67e5\u8be2\u65b9\u5f0f\uff0c\u5c06\u8f6c\u6362\u7ed3\u679c\u72b6\u6001\u7ebf\u4e0e\u5355\u7247\u673a\u7684P1.0\u7ebf\u76f8\u8fde\u3002\u5f53\u5355\u7247\u673a\u6267\u884c\u5bf9\u5916\u90e8\u6570\u636e\u5b58\u50a8\u5668\u7684\u5199\u6307\u4ee4\uff0c\u4f7fCE=1\uff0cCS=0\uff0cR/C=0\uff0cA0=0\uff0c\u4fbf\u542f\u52a8\u8f6c\u6362\u3002\u7136\u540e\u5355\u7247\u673a\u901a\u8fc7P1.0\u67e5\u8be2STS \u7684\u72b6\u6001\uff0c\u5f53STS=0\u8868\u793a\u8f6c\u6362\u7ed3\u675f\uff0c\u5355\u7247\u673a\u901a\u8fc7\u4e24\u6b21\u8bfb\u5916\u90e8\u6570\u636e\u5b58\u50a8\u5668\u64cd\u4f5c\uff0c\u8bfb\u53d612 \u4f4d\u8f6c\u6362\u7ed3\u679c\u3002\u8fd9\u65f6\uff0e\u5f53CE=1\uff0cCS=0\uff0cR/C=0\uff0cA0=0\uff0c\u8bfb\u53d6\u9ad88\u4f4d\uff1bCE=1\uff0cCS=0\uff0cR/C=1\uff0cA0=1\uff0c\u8bfb\u53d6\u4f4e4\u4f4d\u3002</p> <p></p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#12","title":"\u7b2c12\u7ae0 \u5355\u7247\u673a\u5e94\u7528\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u8c03\u8bd5","text":""},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_22","title":"\u5355\u7247\u673a\u7cfb\u7edf\u5f00\u53d1\u4e0e\u5de5\u5177","text":"<p>\u5355\u7247\u673a\u5e94\u7528\u7cfb\u7edf\u5305\u62ec\u786c\u4ef6\u7cfb\u7edf\u548c\u8f6f\u4ef6\u7cfb\u7edf\u4e24\u5927\u90e8\u5206\u3002</p> <p>\u786c\u4ef6\u7cfb\u7edf:\u6307\u5355\u7247\u673a\u53ca\u6269\u5c55\u7684\u5b58\u50a8\u5668\u3001\u5916\u56f4\u8bbe\u5907\u53ca\u5176\u63a5\u53e3\u7535\u8def\u7b49\u3002</p> <p>\u8f6f\u4ef6\u7cfb\u7edf:\u5305\u62ec\u76d1\u63a7\u7a0b\u5e8f\u548c\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f\u3002</p> <p>1\u3001\u5355\u7247\u673a\u7cfb\u7edf\u603b\u4f53\u65b9\u6848\u89c4\u5212</p> <p>\u5e94\u8be5\u660e\u786e\u63a7\u5236\u5bf9\u8c61\u6216\u8fc7\u7a0b\u4e2d\u7684\u6280\u672f\u6307\u6807\uff0c\u5236\u5b9a\u7cfb\u7edf\u4e2d\u4fe1\u53f7\u6216\u6570\u636e\u7684\u8f93\u5165\u3001\u5904\u7406\u3001\u5b58\u50a8\u548c\u8f93\u51fa\u7684\u683c\u5f0f\u548c\u8981\u6c42\u3002</p> <p>\u8981\u660e\u786e\u6570\u636e\u5904\u7406\u4e2d\u7684\u6570\u5b66\u6a21\u578b\uff0c\u4ee5\u7b80\u5316\u7cfb\u7edf\u7684\u8f6f\u786c\u4ef6\u8bbe\u8ba1\u3002</p> <p>\u5e94\u5408\u7406\u5212\u5206\u7cfb\u7edf\u8f6f\u786c\u4ef6\u7684\u529f\u80fd\u548c\u4efb\u52a1\uff0c\u505a\u5230\u8f6f\u786c\u4ef6\u7ed3\u5408\u4e92\u8865\uff0c\u964d\u4f4e\u7cfb\u7edf\u6210\u672c\uff0c\u63d0\u9ad8\u5176\u7a33\u5b9a\u6027\u3002</p> <p>2\u3001\u5355\u7247\u673a\u7cfb\u7edf\u786c\u4ef6\u8bbe\u8ba1 </p> <p>\u5355\u7247\u673a\u82af\u7247\u5177\u6709\u8f83\u5f3a\u7684\u529f\u80fd\uff0c\u4f46\u4ec5\u6b64\u4e0d\u80fd\u6ee1\u8db3\u5b9e\u9645\u5e94\u7528\u7cfb\u7edf\u7684\u529f\u80fd\u8981\u6c42\u3002\u786c\u4ef6\u7cfb\u7edf\u8bbe\u8ba1\u5185\u5bb9\u5305\u62ec\u6700\u5c0f\u7cfb\u7edf\u8bbe\u8ba1\u548c\u7cfb\u7edf\u6269\u5c55\u8bbe\u8ba1\u3002</p> <p>3\u3001\u5355\u7247\u673a\u7cfb\u7edf\u8f6f\u4ef6\u8bbe\u8ba1 </p> <p>\u5e94\u7528\u7cfb\u7edf\u8f6f\u4ef6\u8bbe\u8ba1\u662f\u6839\u636e\u7cfb\u7edf\u529f\u80fd\u8981\u6c42\uff0c\u91c7\u7528\u6c47\u7f16\u8bed\u8a00\u6216\u5176\u4ed6\u9ad8\u7ea7\u8bed\u8a00\u8fdb\u884c\u8bbe\u8ba1\u7684\u3002\u7cfb\u7edf\u8f6f\u4ef6\u8bbe\u8ba1\u662f\u5355\u7247\u673a\u5e94\u7528\u7cfb\u7edf\u8bbe\u8ba1\u7684\u7075\u9b42\u6240\u5728\uff0c\u8bbe\u8ba1\u4e2d\u5e94\u6ce8\u91cd\u7f16\u7a0b\u601d\u60f3\u7684\u8fd0\u7528\u548c\u7ecf\u5178\u7b97\u6cd5\u7684\u4f7f\u7528\u3002</p> <p>4\u3001\u7cfb\u7edf\u8c03\u8bd5</p> <p>\u7cfb\u7edf\u8c03\u8bd5\u5206\u786c\u4ef6\u8c03\u8bd5\u3001\u8f6f\u4ef6\u8c03\u8bd5\u548c\u7cfb\u7edf\u8054\u8c03\u4e09\u4e2a\u65b9\u9762\uff0c\u786c\u4ef6\u8c03\u8bd5\u548c\u8f6f\u4ef6\u8c03\u8bd5\u53ef\u7ed3\u5408\u786c\u4ef6\u8bbe\u8ba1\u548c\u8f6f\u4ef6\u8bbe\u8ba1\u8fdb\u884c\uff0c\u5e76\u6700\u7ec8\u901a\u8fc7\u7cfb\u7edf\u7684\u8054\u5408\u8c03\u8bd5\u6765\u68c0\u9a8c\u6574\u4f53\u7cfb\u7edf\u7684\u53ef\u9760\u6027\u3001\u7a33\u5b9a\u6027\u548c\u5b9e\u7528\u6027\u3002</p> <p>5\u3001\u5355\u7247\u673a\u5e94\u7528\u7cfb\u7edf\u5f00\u53d1\u5927\u81f4\u5206\u4e3a\u56db\u4e2a\u6b65\u9aa4\uff1a</p> <p>\uff081\uff09\u9700\u6c42\u5206\u6790\u3001\u65b9\u6848\u8ba8\u8bba\u548c\u603b\u4f53\u8bbe\u8ba1</p> <p>\uff082\uff09\u5668\u4ef6\u9009\u62e9\uff0c\u7535\u8def\u8bbe\u8ba1\u3001\u7a0b\u5e8f\u7f16\u7a0b</p> <p>\uff083\uff09\u7cfb\u7edf\u8c03\u8bd5\u4e0e\u7a33\u5b9a\u6027\u6d4b\u8bd5</p> <p>\uff084\uff09\u6587\u4ef6\u6574\u7406</p> <p>6\u3001\u786c\u4ef6\u7cfb\u7edf\u8bbe\u8ba1\u539f\u5219\uff1a</p> <p>\u2460 \u5728\u8003\u8651\u65b0\u6280\u672f\u7684\u524d\u63d0\u4e0b\uff0c\u6839\u636e\u5355\u7247\u673a\u5e38\u89c4\u7528\u6cd5\uff0c\u5c3d\u53ef\u80fd\u9009\u62e9\u7ecf\u5178\u901a\u7528\u7535\u8def\u3002</p> <p>\u2461 \u7cfb\u7edf\u6269\u5c55\u4e0e\u5916\u56f4\u8bbe\u5907\u914d\u7f6e\u7684\u6c34\u5e73\u5e94\u5145\u5206\u6ee1\u8db3\u5e94\u7528\u7cfb\u7edf\u5f53\u524d\u7684\u529f\u80fd\u8981\u6c42\u3002</p> <p>\u2462 \u786c\u4ef6\u7ed3\u6784\u8bbe\u8ba1\u5e94\u4e0e\u5e94\u7528\u8f6f\u4ef6\u65b9\u6848\u4e00\u5e76\u8003\u8651\u3002</p> <p>\u2463 \u6574\u4e2a\u7cfb\u7edf\u4e2d\u5404\u5668\u4ef6\u8981\u5c3d\u53ef\u80fd\u505a\u5230\u6027\u80fd\u5339\u914d\u3002</p> <p>\u2464 \u53ef\u9760\u6027\u53ca\u6297\u5e72\u6270\u8bbe\u8ba1\u662f\u786c\u4ef6\u8bbe\u8ba1\u4e2d\u4e0d\u53ef\u5ffd\u89c6\u7684\u4e00\u90e8\u5206\u3002</p> <p>\u2465 \u5355\u7247\u673a\u5916\u63a5\u7535\u8def\u8f83\u591a\u65f6\uff0c\u5fc5\u987b\u8003\u8651\u5176\u9a71\u52a8\u80fd\u529b\u3002</p> <p>\u2466 \u5c3d\u53ef\u80fd\u671d\u201c\u5355\u7247\u201d\u65b9\u5411\u8bbe\u8ba1\u786c\u4ef6\u7cfb\u7edf\u3002</p> <p>7\u3001\u5e94\u7528\u8f6f\u4ef6\u8bbe\u8ba1\u539f\u5219 \uff1a</p> <p>\u2460 \u8f6f\u4ef6\u7ed3\u6784\u6e05\u6670\u3001\u89c4\u8303\u3001\u7b80\u6d01\u3001\u6d41\u7a0b\u5408\u7406\u3001\u6ce8\u91cd\u7b97\u6cd5\u7684\u5de7\u5999\u5e94\u7528\u3002</p> <p>\u2461 \u5404\u529f\u80fd\u7a0b\u5e8f\u8981\u5b9e\u73b0\u6a21\u5757\u5316\u3001\u7cfb\u7edf\u5316\uff0c\u8fd9\u6837\u65e2\u4fbf\u4e8e\u8c03\u8bd5\u3001\u8fde\u63a5\uff0c\u53c8\u4fbf\u4e8e\u79fb\u690d\u3001\u4fee\u6539\u548c\u7ef4\u62a4\u3002</p> <p>\u2462 \u8003\u8651\u6240\u9009\u5355\u7247\u673aROM\u548cRAM\u5bb9\u91cf\u3002</p> <p>\u2463 \u8fd0\u884c\u72b6\u6001\u5b9e\u73b0\u6807\u5fd7\u5316\u7ba1\u7406\u3002</p> <p>\u2464 \u5b9e\u73b0\u5168\u9762\u8f6f\u4ef6\u6297\u5e72\u6270\u8bbe\u8ba1\u3002</p> <p>\u2465 \u4e3a\u4e86\u63d0\u9ad8\u8fd0\u884c\u7684\u53ef\u9760\u6027\uff0c\u5728\u5e94\u7528\u8f6f\u4ef6\u4e2d\u8bbe\u7f6e\u81ea\u8bca\u65ad\u7a0b\u5e8f\u3002</p> <p>\u6309\u7167\u4f7f\u7528\u5f00\u53d1\u5de5\u5177\u4e0d\u540c\uff0c\u5355\u7247\u673a\u5f00\u53d1\u7cfb\u7edf\u5305\u62ec\u56db\u79cd\u6a21\u5f0f\uff1a</p> <p>\uff081\uff09\u4eff\u771f\u5668\u578b\u5355\u7247\u673a\u5f00\u53d1\u7cfb\u7edf</p> <p>\uff082\uff09\u901a\u7528\u7f16\u7a0b\u5668\u578b\u5355\u7247\u673a\u5f00\u53d1\u7cfb\u7edf</p> <p>\uff083\uff09\u5728\u7cfb\u7edf\u8c03\u8bd5\u578b\u5f00\u53d1\u7cfb\u7edf</p> <p>\uff084\uff09\u8f6f\u4ef6\u4eff\u771f\u578b\u5355\u7247\u673a\u5f00\u53d1\u7cfb\u7edf</p> <p>8\u3001\u786c\u4ef6\u8c03\u8bd5</p> <p>\u786c\u4ef6\u7cfb\u7edf\u710a\u63a5\u5b8c\u6210\u540e\uff0c\u5728\u7cfb\u7edf\u52a0\u7535\u524d\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u6839\u636e\u7535\u8def\u539f\u7406\u56fe\u7b49\u4ed4\u7ec6\u68c0\u67e5\u786c\u4ef6\u7cfb\u7edf\uff0c\u89c2\u5bdf\u6709\u65e0\u865a\u710a\u3001\u6f0f\u710a\u73b0\u8c61\uff0c\u6838\u5bf9\u5143\u5668\u4ef6\u578b\u53f7\u3001\u89c4\u683c\u548c\u5b89\u88c5\u60c5\u51b5\u7b49\u662f\u5426\u7b26\u5408\u8bbe\u8ba1\u8981\u6c42\u3002\u68c0\u67e5\u7cfb\u7edf\u603b\u7ebf\u662f\u5426\u5b8c\u597d\uff0c\u6709\u65e0\u77ed\u8def\u6216\u4e32\u63a5\uff0c\u53ca\u5176\u4ed6\u4fe1\u53f7\u7ebf\u8def\u60c5\u51b5\u3002</p> <p>9\u3001\u8f6f\u4ef6\u8c03\u8bd5</p> <p>\u8c03\u8bd5\u4e00\u822c\u662f\u901a\u8fc7\u8ddf\u8e2a\u53d8\u91cf\u7684\u8d4b\u503c\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u67e5\u770b\u5185\u5b58\u6216\u5806\u6808\u7684\u5185\u5bb9\u7b49\u6765\u8fdb\u884c\u7cfb\u7edf\u8f6f\u4ef6\u903b\u8f91\u529f\u80fd\u7684\u9a8c\u8bc1\u548c\u67e5\u9519\u3002</p> <p>\u7b2c\u4e00\u79cd\u662f\u4f7f\u7528\u8f6f\u4ef6\u6a21\u62df\u8c03\u8bd5\u3002</p> <p>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u4eff\u771f\u5668\u8c03\u8bd5\u3002</p> <p>\u786c\u4ef6\u8c03\u8bd5\u548c\u8f6f\u4ef6\u8c03\u8bd5\u662f\u7d27\u5bc6\u8054\u7cfb\uff0c\u76f8\u8f85\u76f8\u6210\u7684\u3002</p>"},{"location":"course/%E5%8D%95%E7%89%87%E6%9C%BA/#_23","title":"\u529f\u7387\u6269\u5c55\u4e0e\u9694\u79bb\u6280\u672f","text":"<p>1\u3001\u529f\u7387\u6269\u5c55</p> <p>\u5355\u7247\u673a\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ee7\u7535\u5668\u8fdb\u884c\u529f\u7387\u6269\u5c55\u3002</p> <p>2\u3001\u9694\u79bb\u6280\u672f</p> <p>1\uff09\u7269\u7406\u9694\u79bb</p> <p>\u7269\u7406\u9694\u79bb\u662f\u6307\u5bf9\u5c0f\u4fe1\u53f7\u4f4e\u7535\u5e73\u7684\u9694\u79bb\u3002\u8981\u6c42\u7cfb\u7edf\u4fe1\u53f7\u8fde\u7ebf\u5e94\u5c3d\u91cf\u8fdc\u79bb\u9ad8\u7535\u5e73\u5927\u529f\u7387\u5bfc\u7ebf\uff0c\u4ee5\u51cf\u5c11\u566a\u58f0\u548c\u7535\u78c1\u573a\u5e72\u6270\u3002</p> <p>\u5728PCB\u8bbe\u8ba1\u65f6\uff0c\u4fe1\u53f7\u56de\u8def\u7684\u5370\u5237\u94dc\u7b94\u6761\u8981\u6709\u8db3\u591f\u7684\u95f4\u8ddd\u3002</p> <p>\u4fe1\u53f7\u7ebf\u5c3d\u91cf\u51cf\u5c11\u5e73\u884c\u5e03\u7f6e\u3002</p> <p>\u5bb9\u6613\u63a5\u53d7\u5e72\u6270\u7684\u4fe1\u53f7\u7ebf\uff0c\u4e0d\u80fd\u4e0e\u80fd\u591f\u4ea7\u751f\u5e72\u6270\u6216\u4f20\u9012\u5e72\u6270\u7684\u7ebf\u8def\u957f\u8ddd\u79bb\u8303\u56f4\u5185\u5e73\u884c\u94fa\u8bbe\u3002</p> <p>2\uff09\u5149\u7535\u9694\u79bb</p> <p>\u5149\u8026\u5408\u5668\u4ea6\u79f0\u5149\u7535\u9694\u79bb\u5668\u6216\u5149\u7535\u8026\u5408\u5668\uff0c\u7b80\u79f0\u5149\u8026\uff08optical coupler\uff0cOC\uff09\u3002</p> <p></p> <p>3\u3001\u5355\u7247\u673a\u5e94\u7528\u7cfb\u7edf\u7684\u6297\u5e72\u6270\u6280\u672f</p> <p>1\uff09\u5e72\u6270\u7684\u6765\u6e90</p> <p>\u7a7a\u95f4\u7535\u78c1\u5e72\u6270 \u4f9b\u7535\u7cfb\u7edf\u5e72\u6270 \u8fc7\u7a0b\u901a\u9053\u5e72\u6270 \u7cfb\u7edf\u5185\u90e8\u5e72\u6270</p> <p>2\uff09\u786c\u4ef6\u6297\u5e72\u6270\u6280\u672f</p> <p>\u200b   \uff081\uff09\u7cfb\u7edf\u4f9b\u7535\u6297\u5e72\u6270\u63aa\u65bd</p> <p>\u200b   \uff082\uff09\u63a5\u5730\u95ee\u9898</p> <p>\u200b       \u2460 \u5b89\u5168\u63a5\u5730</p> <p>\u200b       \u2461 \u5de5\u4f5c\u63a5\u5730</p> <p>\u200b   \uff083\uff09\u5c4f\u853d\u6280\u672f</p> <p>\u200b   \uff084\uff09\u5370\u5236\u677f\u7684\u6297\u5e72\u6270\u8bbe\u8ba1</p> <p>3\uff09\u8f6f\u4ef6\u6297\u5e72\u6270\u6280\u672f</p> <p>\u200b      \u8f6f\u4ef6\u6297\u5e72\u6270\u6280\u672f\u662f\u5f53\u7cfb\u7edf\u53d7\u5e72\u6270\u540e\uff0c\u4f7f\u7cfb\u7edf\u6062\u590d\u6b63\u5e38\u8fd0\u884c\u6216\u8f93\u5165\u4fe1\u53f7\u53d7\u5e72\u6270\u540e\u53bb\u4f2a\u5b58\u771f\u7684\u4e00\u79cd\u8f85\u52a9\u65b9\u6cd5\u3002</p> <p>\u200b      \u8f6f\u4ef6\u6297\u5e72\u6270\u6280\u672f\u6240\u7814\u7a76\u7684\u5185\u5bb9\u4e3b\u8981\u5305\u62ec:</p> <p>\u200b      1.\u662f\u91c7\u7528\u8f6f\u4ef6\u7684\u65b9\u6cd5\u6291\u5236\u53e0\u52a0\u5728\u6a21\u62df\u8f93\u5165\u4fe1\u53f7\u4e0a\u566a\u58f0\u7684\u5f71\u54cd\uff0c\u5982\u6570\u5b57\u6ee4\u6ce2\u5668\u6280\u672f\uff1b</p> <p>\u200b      2.\u662f\u5728\u5e72\u6270\u9020\u6210\u8fd0\u884c\u7a0b\u5e8f\u53d1\u751f\u6df7\u4e71\u3001\u7a0b\u5e8f\u4e71\u98de\u6216\u9677\u5165\u6b7b\u5faa\u73af\u65f6\uff0c\u91c7\u7528\u7a0b\u5e8f\u7684\u65b9\u6cd5\u5c06\u5176\u7eb3\u5165\u6b63\u89c4\uff0c\u5982\u8f6f\u4ef6\u5197\u4f59\u3001\u8f6f\u4ef6\u9677\u9631\u3001\u201c\u770b\u95e8\u72d7\u201d\u6280\u672f\u7b49\u3002</p> <p>3.1 \u8f6f\u4ef6\u6ee4\u6ce2</p> <p>\u200b       \u968f\u7740\u8ba1\u7b97\u673a\u6280\u672f\u7684\u8fc5\u901f\u53d1\u5c55\uff0c\u6570\u5b57\u6ee4\u6ce2\u5668\uff08DF-digital filter\uff09\u6b63\u83b7\u5f97\u6108\u6765\u6108\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u5b83\u901a\u8fc7\u8ba1\u7b97\u673a\u6267\u884c\u4e00\u6bb5\u76f8\u5e94\u7684\u7a0b\u5e8f\u6765\u6ee4\u9664\u5939\u6742\u5728\u6570\u5b57\u4fe1\u53f7\u4e2d\u7684\u5e72\u6270\u4fe1\u53f7\uff0c\u56e0\u6b64\u4e5f\u79f0\u4e3a\u8f6f\u4ef6\u6ee4\u6ce2\u5668\u3002\u5e38\u7528\u7684\u6570\u5b57\u6ee4\u6ce2\u7a0b\u5e8f\u5f88\u591a\uff0c\u6709\u7b97\u672f\u5e73\u5747\u503c\u6cd5\u3001\u8d85\u503c\u6ee4\u6ce2\u6cd5\u3001\u4e2d\u503c\u6cd5\u3001\u6bd4\u8f83\u53d6\u820d\u6cd5\u3001\u7ade\u8d5b\u8bc4\u5206\u6cd5\u3001\u53d6\u6781\u503c\u6cd5\u3001\u6ed1\u52a8\u7b97\u672f\u5e73\u5747\u6cd5\u548c\u4e00\u9636\u4f4e\u901a\u6ee4\u6ce2\u6cd5\u7b49\u3002</p> <p>3.2 \u6307\u4ee4\u5197\u4f59\u6280\u672f</p> <p>\u5b9e\u8df5\u8bc1\u660e\uff0c\u5728CPU\u53d7\u5230\u5916\u754c\u5e72\u6270\u540e\uff0cPC\u6307\u9488\u4f1a\u201c\u4e71\u8df3\u201d\uff0c\u5982\u679cPC\u6307\u9488\u521a\u597d\u8df3\u5230\u64cd\u4f5c\u6570\u7684\u5730\u5740\u4e0a\uff0cCPU\u4f1a\u8bef\u5c06\u64cd\u4f5c\u6570\u5f53\u6307\u4ee4\u7801\u6765\u6267\u884c\uff0c\u7531\u6b64\u9020\u6210PC\u6307\u9488\u7684\u8fdb\u4e00\u6b65\u201c\u8dd1\u98de\u201d\uff0c\u7a0b\u5e8f\u8fd0\u884c\u4f1a\u6df7\u4e71\uff0c\u8fd9\u65f6\u5fc5\u987b\u91c7\u7528\u63aa\u65bd\u5c06\u5176\u7eb3\u5165\u6b63\u8f68\u3002</p> <p>3.3 \u8f6f\u4ef6\u9677\u9631\u6280\u672f</p> <p>\u6240\u8c13\u8f6f\u4ef6\u9677\u9631\u5176\u5b9e\u662f\u4e00\u6761\u5f15\u5bfc\u6307\u4ee4\uff0c\u5b83\u5f3a\u884c\u5c06\u6355\u83b7\u7684\u7a0b\u5e8f\u5f15\u5411\u590d\u4f4d\u5165\u53e3\u5730\u57400000H\u6216\u4e00\u4e2a\u6307\u5b9a\u7684\u5730\u5740\uff0c\u5728\u6307\u5b9a\u5730\u5740\u90a3\u91cc\u6709\u4e00\u6bb5\u4e13\u95e8\u5bf9\u7a0b\u5e8f\u51fa\u9519\u8fdb\u884c\u5904\u7406\u7684\u7a0b\u5e8f\u3002\u6bd4\u5982\u8bf4\u51fa\u9519\u5904\u7406\u7a0b\u5e8f\u5165\u53e3\u6807\u53f7\u4e3aERROR\uff0c\u5219\u5f15\u5bfc\u6307\u4ee4\u4e3aLJMP  ERROR\u3002\u4e3a\u4e86\u5b89\u5168\uff0c\u5176\u524d\u9762\u8fd8\u53ef\u4ee5\u52a0\u4e24\u6761NOP\u6307\u4ee4\u3002</p> <p>3.4 \u201c\u770b\u95e8\u72d7\u201d\u6280\u672f</p> <p>\u201c\u770b\u95e8\u72d7\u201d\u6280\u672f\u5c31\u662f\u4e0d\u65ad\u76d1\u89c6\u7a0b\u5e8f\u5faa\u73af\u8fd0\u884c\u65f6\u95f4\uff0c\u82e5\u53d1\u73b0\u65f6\u95f4\u8d85\u8fc7\u5df2\u77e5\u7684\u5faa\u73af\u8bbe\u5b9a\u65f6\u95f4\uff0c\u5219\u8ba4\u4e3a\u7cfb\u7edf\u9677\u5165\u6b7b\u5faa\u73af\uff0c\u7136\u540e\u5f3a\u8feb\u7a0b\u5e8f\u8fd4\u56de\u52300000H\u5165\u53e3\uff0c\u4f7f\u7cfb\u7edf\u53ca\u65f6\u6062\u590d\u6b63\u5e38\u5de5\u4f5c\u3002</p> <p>\u786c\u4ef6\u201c\u770b\u95e8\u72d7\u201d\u548c\u8f6f\u4ef6\u201c\u770b\u95e8\u72d7\u201d</p>"},{"location":"course/%E5%9B%BE%E4%BC%98%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/","title":"\u56fe\u4f18\u7b97\u6cd5\u7b14\u8bb0","text":"<ul> <li>\u52a8\u6001\u56fe\u7684\u6d41\u5f0f\u5904\u7406\u5b9e\u8df5\uff1a\u6982\u5ff5\u3001\u6a21\u578b\u548c\u7cfb\u7edf<ul> <li>\u56fe\u76f8\u5173\u80cc\u666f\u77e5\u8bc6<ul> <li>\u56fe\u6a21\u578b\uff1a\u8fb9\u96c6\u3001\u70b9\u96c6\u3001\u8fb9\u6743\u3001\u5ea6</li> <li>\u56fe\u7684\u8868\u793a\uff1a\u90bb\u63a5\u8868\u3001\u90bb\u63a5\u77e9\u9635\u3001\u8fb9\u5217\u8868\u548c\u7a00\u758f\u538b\u7f29\u884c(CSR\u7b97\u6cd5)</li> <li>\u56fe\u7684\u8bbf\u95ee\uff1a\u56fe\u7684\u67e5\u8be2\u548c\u66f4\u65b0</li> </ul> </li> <li>\u76f8\u5173\u6982\u5ff5\u6f84\u6e05<ul> <li>\u52a8\u6001\u56fe\u548c\u6d41\u56fe\u7684\u5e94\u7528<ul> <li>\u6d41\u56fe\u3001\u52a8\u6001\u56fe\u548c\u65f6\u95f4\u6f14\u5316\u56fe<ul> <li>\u201c\u52a8\u6001\u201d\u662f\u6307\u4ee3\u6b63\u5728\u4fee\u6539\u7684\u56fe\u6570\u636e\u96c6\u3001\u201c\u6d41\"\u662f\u6307\u4f20\u5165\u56fe\u8bbf\u95ee\u6216\u66f4\u65b0\u7684\u5f62\u5f0f\u3001\u201c\u6279\u5904\u7406\u201d\u662f\u6307\u4e00\u6b21\u6444\u53d6\u4e00\u5b9a\u6570\u91cf\u7684\u56fe\u66f4\u65b0\u3002</li> </ul> </li> <li>\u56fe\u5f62\u6570\u636e\u5e93\u548cNoSQL \u5b58\u50a8</li> <li>\u5386\u53f2\u56fe\u5904\u7406</li> <li>\u65f6\u95f4\u56fe\u7b97\u6cd5</li> <li>\u901a\u7528\u6570\u636e\u6d41\u548c\u6d41\u7cfb\u7edf</li> </ul> </li> <li>\u52a8\u6001\u56fe\u548c\u6d41\u56fe\u7684\u7406\u8bba<ul> <li>\u6d41\u56fe\u7b97\u6cd5<ul> <li>\u6d41\u56fe\u7b97\u6cd5\u4e2d\uff0c\u4ece\u4e00\u7a7a\u767d\u7684\u56fe\u5f00\u59cb\uff0c\u5728\u6bcf\u4e2a\u7b97\u6cd5\u6b65\u9aa4\u4e2d\uff0c\u5c06\u65b0\u7684\u8fb9\u63d2\u5165\u5230\u56fe\u4e2d\uff0c\u6216\u8005\u5220\u9664\u73b0\u6709\u7684\u8fb9\u3002</li> <li>\u901a\u8fc7\u7a7a\u95f4\u590d\u6742\u5ea6\u3001\u66f4\u65b0\u65f6\u95f4\u3001\u67e5\u8be2\u65f6\u95f4\u3001\u8ba1\u7b97\u7ed3\u6784\u5c5e\u6027\u7684\u51c6\u786e\u6027\u548c\u9884\u5904\u7406\u65f6\u95f4\u6765\u5bf9\u7b97\u6cd5\u8fdb\u884c\u8bc4\u4f30\u3002</li> <li>\u76ee\u6807\u662f\u5f00\u53d1\u6700\u5c0f\u5316\u4e0d\u540c\u53c2\u6570\u503c\u7684\u7b97\u6cd5\uff0c\u7279\u522b\u5173\u6ce8\u6700\u5c0f\u5316\u56fe\u5f62\u6570\u636e\u7ed3\u6784\u7684\u5b58\u50a8\u3002</li> <li>\u867d\u7136\u7a7a\u95f4\u590d\u6742\u6027\u662f\u4e3b\u8981\u5173\u6ce8\u70b9\uff0c\u4f46\u5927\u91cf\u7684\u5de5\u4f5c\u81f4\u529b\u4e8e\u4f18\u5316 \u6d41\u4f20\u8f93\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4 \uff0c\u7279\u522b\u662f \u5904\u7406\u8fb9\u7f18\u66f4\u65b0\u7684\u65f6\u95f4\u4ee5\u53ca\u6062\u590d\u6700\u7ec8\u89e3\u7684\u65f6\u95f4\u3002</li> <li>\u5b9e\u7528\u8bbe\u7f6e\u4e2d\u7684\u9002\u7528\u6027\u5f53\u5bf9\u4fdd\u7559\u5904\u7406\u540e\u7684\u56fe\u5f62\u6240\u5141\u8bb8\u7684 \u6700\u5927\u7a7a\u95f4\u6709\u4e25\u683c\u9650\u5236\u5e76\u4e14\u9700\u8981\u975e\u5e38\u5feb\u901f\u5730\u66f4\u65b0\u6bcf\u6761\u8fb9 \u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6d41\u5f0f\u5904\u7406\u7b97\u6cd5\u3002</li> <li>\u8fd9\u4e9b\u7b97\u6cd5\u4e2d\u7684\u5927\u591a\u6570\u90fd\u9884\u5148\u5047\u8bbe\u4e86\u67d0\u4e9b\u7ed3\u6784\u56fe\u7684\u5c5e\u6027\uff0c\u6700\u5e38\u89c1\u7684\u662f\u9876\u70b9\u6570n\u3002</li> </ul> </li> <li>\u8349\u56fe\u7b97\u6cd5\u548c\u52a8\u6001\u56fe\u5f62\u6d41<ul> <li>HYPERLOGLOG \u6765\u5bf9\u56fe\u8fdb\u884c\u538b\u7f29\uff0c\u7528\u538b\u7f29\u540e\u7684\u56fe\u7684\u8fde\u901a\u6027\u3001\u5272\u70b9\u5272\u8fb9\u548c\u6700\u77ed\u8def\u7b49\u5c5e\u6027\u6765\u8fd1\u4f3c\u539f\u6709\u56fe\u7684\u5c5e\u6027\u3002</li> </ul> </li> <li>\u52a8\u6001\u56fe\u7b97\u6cd5<ul> <li>\u5728\u8fb9\u63d2\u5165\u548c\u5220\u9664\u4e0b\u8fd1\u4f3c\u611f\u5174\u8da3\u7684\u8f93\u5165\u56fe\u7684\u7ec4\u5408\u5c5e\u6027\uff08\u4f8b\u5982\u8fde\u901a\u6027\u3001\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u3001\u5207\u5272\u3001\u5149\u8c31\u5c5e\u6027\uff09\uff1b\u5c3d\u91cf\u51cf\u5c11\u8fdb\u884c\u56fe\u5f62\u66f4\u65b0\u7684\u65f6\u95f4\u3002</li> <li>\u5e76\u884c\u52a8\u6001\u56fe\u7b97\u6cd5<ul> <li>\u4e00\u4e2a\u56fe\u662f\u901a\u8fc7\u6279\u91cf\u66f4\u65b0\u6765\u4fee\u6539\u7684\u3002\u6279\u5904\u7406\u5927\u5c0f\u901a\u5e38\u662fn \u7684\u51fd\u6570\uff0c\u4f8b\u5982log n \u6216\u221an\u3002\u6bcf\u4e2a\u6279\u4e2d\u7684\u66f4\u65b0\u53ef\u4ee5\u5e76\u884c\u5730\u5e94\u7528\u4e8e\u4e00\u4e2a\u56fe\u3002</li> <li>\u4f7f\u7528\u6279\u5904\u7406\u7684\u52a8\u673a\u6709\u4e24\u4e2a\uff1a\u5c06\u5e76\u884c\u6027\u7eb3\u5165\u6444\u53d6\u66f4\u65b0\uff1b\u964d\u4f4e\u6bcf\u6b21\u66f4\u65b0\u7684\u6210\u672c\u3002</li> <li>MPC\uff08\u5927\u89c4\u6a21\u5e76\u884c\u8ba1\u7b97\uff09\u52a8\u6001\u7b97\u6cd5\uff1a\u7ed3\u5408MapReduce \u7b49\u5206\u5e03\u5f0f\u52a8\u6001\u6846\u67b6\u548c\u5e76\u884c\u6279\u5904\u7406\u52a8\u6001\u56fe\u7b97\u6cd5\u3002</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li>\u6846\u67b6\u5206\u7c7b\u6807\u51c6<ul> <li>\u83b7\u53d6\u66f4\u65b0\u3001\u7ef4\u62a4\u5386\u53f2\u6570\u636e\u3001\u52a8\u6001\u56fe\u5c55\u793a\u3001\u589e\u91cf\u66f4\u65b0\u3001\u7f16\u7a0bAPI\u548c\u6a21\u578b</li> <li>\u52a8\u6001\u56fe\u8868\u793a\u7684\u6846\u67b6\u7ed3\u6784<ul> <li>\u57fa\u672c\u56fe\u7684\u8868\u793a\uff1aAL\u3001EL\u3001CSR \u548cAM \u57fa\u672c\u56fe\u5f62\u8868\u793a\u65b9\u6cd5\u4e0e\u4e00\u4e9b\u5176\u4ed6\u57fa\u4e8e\u6811\u7684\u6570\u636e\u8868\u793a\uff08\u7528\u4e8e\u52a0\u901f\u52a8\u6001\u67e5\u8be2\uff09</li> <li>\u533a\u5757\u5212\u5206\u548c\u533a\u5757\u95f4\u8054\u7cfb\uff1a\u901a\u8fc7\u7ed3\u5408CSR \u548cAL \u7684\u65b9\u5f0f\uff0c\u65e2\u4fdd\u7559\u4e86AL \u4fbf\u4e8e\u4fee\u6539\u7684\u4f18\u70b9\uff0c\u53c8\u4fdd\u7559\u4e86CSR \u5c40\u90e8\u6027\u8f83\u597d\u7684\u4f18\u70b9\u3002</li> <li>\u652f\u6301\u7684\u9876\u70b9\u548c\u8fb9\u6570\u636e\u7c7b\u578b\uff1a\u8fb9\u6743\u548c\u70b9\u6743\u3001\u8fb9\u66f4\u65b0\u65f6\u95f4\u6233\u3002</li> <li>\u7d22\u5f15\u7ed3\u6784\uff1a\u589e\u52a0\u76f8\u5173\u67e5\u8be2\u7d22\u5f15\u6765\u52a0\u5feb\u56fe\u7ed3\u6784\u3001\u6570\u636e\u548c\u5386\u53f2\u76f8\u5173\u6570\u636e\u7684\u67e5\u8be2\u3002</li> </ul> </li> <li>\u56fe\u5b58\u50a8\u67b6\u6784\u548c\u7a81\u53d8<ul> <li>\u5e76\u53d1\u67e5\u8be2\u548c\u66f4\u6539<ul> <li>\u7c97\u7c92\u5ea6\u540c\u6b65\uff1a\u5feb\u7167\u6280\u672f\uff0c\u66f4\u65b0\u548c\u67e5\u8be2\u901a\u8fc7\u5728\u56fe\u6570\u636e\u7684\u4e24\u4e2a\u4e0d\u540c\u526f\u672c(\u5feb\u7167) \u4e0a\u6267\u884c\u800c\u76f8\u4e92\u9694\u79bb\uff1b\u5728\u67d0\u4e9b\u65f6\u5019\uff0c\u8fd9\u4e9b\u5feb\u7167\u88ab\u5408\u5e76\u5728\u4e00\u8d77\u3002\u5199\u65f6\u590d\u5236\u3001\u5893\u7891\u673a\u5236\uff1b\u5206\u6279\u63a5\u6536\u66f4\u65b0\u5e76\u4e14\u8d4b\u4e88ID \u8fdb\u884c\u6392\u5e8f\u3002</li> <li>\u7ec6\u7c92\u5ea6\u540c\u6b65\uff1a\u66f4\u65b0\u4e00\u5230\u8fbe\u5c31\u88ab\u5408\u5e76\u5230\u4e3b\u6570\u636e\u96c6\u4e2d\uff0c\u901a\u5e38\u4e0e\u67e5\u8be2\u4ea4\u7ec7\uff0c\u4f7f\u7528\u57fa\u4e8e\u7ec6\u7c92\u5ea6\u9501\u6216\u539f\u5b50\u64cd\u4f5c\u7684\u540c\u6b65\u534f\u8bae\u3002\u5dee\u5206\u6570\u636e\u6d41\u8bbe\u8ba1\u64cd\u4f5c\u7684\u662f\u5e26\u6709\u65f6\u95f4\u6233\u548c\u589e\u91cf\u503c\u7684\u952e\u503c\u5bf9\u96c6\u5408\u3002\u5b83\u5c06\u52a8\u6001\u6570\u636e\u89c6\u4e3a\u8f93\u5165\u96c6\u5408\u7684\u6dfb\u52a0\u6216\u5220\u9664\uff0c\u5e76\u4f7f\u7528\u903b\u8f91\u65f6\u95f4\u8ddf\u8e2a\u5b83\u4eec\u7684\u6f14\u53d8\u3002</li> </ul> </li> <li>\u56fe\u67e5\u8be2\u548c\u56fe\u66f4\u65b0\u53ef\u80fd\u975e\u5e76\u53d1\u6267\u884c\uff0c\u800c\u662f\u4ea4\u66ff\u6267\u884c\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u4f53\u7cfb\u7ed3\u6784\u53ef\u4ee5\u5b9e\u73b0\u9ad8\u6bd4\u7387\u7684\u66f4\u65b0\u6d88\u5316\uff0c\u65e0\u9700\u8003\u8651\u56fe\u4e00\u81f4\u6027\u3002</li> <li>\u4e8b\u52a1\u652f\u6301\uff1a\u80fd\u591f\u9694\u79bb\u5e76\u53d1\u8bbf\u95ee\u5e76\u4ece\u6f5c\u5728\u6545\u969c\u4e2d\u6b63\u786e\u6062\u590d\u7684\u5de5\u4f5c\u5355\u5143\uff0c\u5e76\u975e\u6240\u6709\u7cfb\u7edf\u90fd\u652f\u6301ACID\uff08\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u548c\u6301\u4e45\u6027\uff09\u4e8b\u52a1\u7ba1\u7406\u3002</li> </ul> </li> <li>\u5386\u53f2\u6570\u636e\u7ef4\u62a4\u6846\u67b6<ul> <li>\u5b58\u50a8\u5386\u53f2\u5feb\u7167\uff0c\u901a\u8fc7\u4fdd\u5b58\u5feb\u7167\u672c\u8eab\u6216\u8005\u7ef4\u62a4\u5bf9\u56fe\u7684\u66f4\u6539\u6765\u4fdd\u5b58\u5386\u53f2\u6570\u636e\uff1b\u4fdd\u5b58\u5feb\u7167\u7684\u65b9\u5f0f\u5b58\u50a8\u5f00\u9500\u8f83\u5927\uff0c\u7ef4\u62a4\u5bf9\u56fe\u7684\u66f4\u6539\u4f1a\u5bfc\u81f4\u6784\u5efa\u8017\u65f6\u8f83\u9ad8\u3002</li> <li>\u5386\u53f2\u56fe\u66f4\u65b0\u53ef\u89c6\u5316\uff0c\u5feb\u7167\u6a21\u5f0f\u3001\u6ed1\u52a8\u7a97\u53e3\u6a21\u5f0f\u548c\u8fb9\u7f18\u8870\u51cf\u6a21\u578b\uff0cpf (e) = f(t \u2212 t(e)) \u975e\u9012\u51cf\u8870\u51cf\u51fd\u6570\u3002</li> </ul> </li> <li>\u589e\u91cf\u8ba1\u7b97\u67b6\u6784<ul> <li>\u6d41\u5f0f\u6846\u67b6\u91c7\u7528\u4e00\u79cd\u79f0\u4e3a\u201c\u589e\u91cf\u66f4\u6539\u201d\u7684\u65b9\u6cd5\uff0c\u4ee5\u52a0\u5feb\u56fe\u5f62\u7b97\u6cd5\u7684\u6536\u655b\u901f\u5ea6\u3002</li> <li>\u589e\u91cf\u53d8\u5316\u80cc\u540e\u7684\u5173\u952e\u89c2\u5bdf\u662f\uff0c\u540e\u7eed\u7684\u56fe\u8868\u66f4\u65b0\u4e0d\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u6d3e\u751f\u7684\u9875\u9762\u6392\u540d\u503c\u53d1\u751f\u5927\u7684\u53d8\u5316\u3002</li> <li>\u79bb\u7ebf\u6a21\u5f0f\u7684\u589e\u91cf\u4fee\u6539\u662f\u901a\u8fc7\u91cd\u65b0\u8ba1\u7b97\u66f4\u65b0\u5206\u6790\u7ed3\u679c\uff1b\u5728\u7ebf\u6a21\u5f0f\u7684\u589e\u91cf\u4fee\u6539\u5219\u662f\u8ddf\u8e2a\u4fee\u6539\u503c\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff08\u5373\u65f6\uff09\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e9b\u4f9d\u8d56\u5173\u7cfb\u4ece\u503c\u53d7\u5230\u5f71\u54cd\u7684\u70b9\u5f00\u59cb\u7b80\u5355\u5730\u8c03\u6574\u5fc5\u987b\u66f4\u65b0\u7684\u503c\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u542f\u52a8\u8ba1\u7b97\u3002<ul> <li>\u8fd9\u91cc\u7c7b\u4f3c\u4e8ekickstat\u56fe\u4fee\u5efa\u7b97\u6cd5\uff0c\u901a\u8fc7\u5728\u8fb9\u63d2\u5165\u65f6\u8ba1\u7b97\u4f9d\u8d56\u5173\u7cfb\uff1b\u5728\u5220\u9664\u8fb9\u65f6\u67e5\u627e\u4f9d\u8d56\u5173\u7cfb\u5e76\u8fdb\u884c\u66f4\u65b0\uff0c\u76f4\u81f3\u56fe\u6536\u655b\u3002</li> </ul> </li> </ul> </li> <li>\u7f16\u7a0b\u652f\u6301\u7684API \u548c\u6a21\u5f0f<ul> <li>\u56fe\u66f4\u65b0API \u5305\u62ec\u57fa\u672c\u529f\u80fd\uff08\u8fb9\u7684\u63d2\u5165\uff09\u3001\u590d\u6742\u529f\u80fd\uff08\u5408\u5e76\u4e24\u5f20\u56fe\uff09\u3001\u7279\u5b9a\u66f4\u65b0\u65f6\u53d1\u751f\u7684\u89e6\u53d1\u4e8b\u4ef6\u7684API \u548c\u8bbf\u95ee\u64cd\u4f5c\u7b49\u5f85\u4e2d\u7684\u56fe\u66f4\u65b0\u3002</li> <li>\u56fe\u5206\u6790API \u662f\u7528\u4e8e\u5728\u7ef4\u62a4\u7684\u56fe\u4e4b\u4e0a\u8fd0\u884c\u56fe\u8ba1\u7b97\u7684\u51fd\u6570\uff0c\u5305\u62ec\u63a7\u5236\u56fe\u7684\u7b97\u6cd5\u5982PageRank\u3001\u5904\u7406\u56fe\u5f62\u5feb\u7167\u3001\u63a7\u5236\u5728\u8fc7\u53bb\u7684\u5feb\u7167\u4e4b\u4e0a\u8fd0\u884c\u7684\u6b64\u7c7b\u8ba1\u7b97\u548c\u589e\u91cf\u5904\u7406\u7684\u76f8\u5173API \u4e0e\u6a21\u578b\u3002</li> </ul> </li> <li>\u6846\u67b6\u7684\u4e00\u822c\u7279\u5f81<ul> <li>\u56fe\u6570\u636e\u7684\u5b58\u50a8\u4f4d\u7f6e\u5185\u5b58/\u663e\u5b58</li> <li>\u5206\u5e03\u5f0f</li> <li>\u76ee\u6807\u786c\u4ef6\u67b6\u6784CPUs/GPUs</li> <li>\u901a\u7528\u7cfb\u7edf/\u56fe\u5f62\u5206\u6790\u4e13\u7528\u7cfb\u7edf</li> </ul> </li> </ul> </li> <li>\u6846\u67b6\u5206\u6790<ul> <li>\u56fe\u5b58\u50a8\u67b6\u6784\u548c\u7a81\u53d8<ul> <li>\u5927\u591a\u6570\u6846\u67b6\u91c7\u7528\u5feb\u7167\u673a\u5236\uff0c\u5893\u7891\u673a\u5236\u3001\u5199\u65f6\u590d\u5236\u7b49\u6280\u672f</li> <li>\u67d0\u4e9b\u6846\u67b6\u91c7\u7528\u7ec6\u7c92\u5ea6\u9501\u673a\u5236\uff0c\u8fd9\u5bfc\u81f4\u4ec5\u5728\u7cbe\u7ec6\u8bfb\u53d6\u65b9\u9762\u652f\u6301\u66f4\u65b0\u548c\u8bfb\u53d6\u67e5\u8be2\u7684\u4ea4\u9519\uff0c\u4e0d\u80fd\u5728\u5168\u5c40\u67e5\u8be2\u8fc7\u7a0b\u4e2d\u5e76\u884c\u6444\u5165\u66f4\u65b0\u3002</li> <li>\u66f4\u65b0\u8c03\u5ea6\u7b56\u7565\uff0c\u7cfb\u7edf\u4f7f\u7528\u901a\u8fc7\u4e13\u95e8\u8c03\u5ea6\u7a0b\u5e8f\u589e\u5f3a\u7684\u7ec6\u7c92\u5ea6\u540c\u6b65\uff0c\u8be5\u8c03\u5ea6\u7a0b\u5e8f\u64cd\u7eb5\u5e94\u7528\u4f20\u5165\u66f4\u65b0\u7684\u987a\u5e8f\u548c\u65f6\u95f4\u4ee5\u6700\u5927\u5316\u541e\u5410\u91cf\u548c\u6700\u5c0f\u5316\u5ef6\u8fdf\u3002</li> <li>\u66f4\u65b0\u7684\u6444\u53d6\u4e0e\u67e5\u8be2\u4fe1\u606f\u7684\u4f20\u8f93\u91cd\u53e0\uff0c\u4f8b\u5982\u901a\u8fc7PCIe\u3002</li> <li>\u53ea\u6709\u5c11\u6570\u6846\u67b6\u652f\u6301ACID \u4e8b\u52a1\uff0c\u6027\u80fd\u548c\u9ad8\u8bfb\u53d6\u901f\u7387\u9ad8\u4e8e\u7cfb\u7edf\u5065\u58ee\u6027\u3002</li> </ul> </li> <li>\u5386\u53f2\u6570\u636e\u7ef4\u62a4\u6846\u67b6<ul> <li>Tegra \u91c7\u7528\u5206\u5e03\u5f0f\u5feb\u7167\u7d22\u5f15\u6280\u672f\u5c06\u4fdd\u5b58\u5feb\u7167\u548c\u7ef4\u62a4\u56fe\u66f4\u6539\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\uff0c\u4f18\u5316\u6027\u80fd\uff0c\u65e0\u9700\u5b58\u50a8\u4ece\u5f00\u59cb\u5230\u67d0\u4e00\u65f6\u523b\u7684\u5feb\u7167\u3002</li> <li>STINGER \u6216ZipG \u7b49\u7cfb\u7edf\u652f\u6301\u7ef4\u62a4\u56fe\u7a81\u53d8\u7684\u65f6\u95f4\u6233\uff0c\u8fd9\u6709\u52a9\u4e8e\u5728\u9009\u5b9a\u7684\u65f6\u95f4\u70b9\u4e0a\u83b7\u5f97\u56fe\u72b6\u6001\uff0c\u65e0\u76f8\u5e94\u7684API\u3002</li> <li>\u4fdd\u7559\u8fc7\u53bb\u5feb\u7167\u7684\u7cfb\u7edf\u901a\u5e38\u91c7\u7528\u4e00\u4e9b\u989d\u5916\u7684\u5f62\u5f0f\u6765\u8de8\u5feb\u7167\u91cd\u7528\u56fe\u5f62\u7ed3\u6784\uff0c\u4ee5\u51cf\u5c11\u5185\u5b58\u5f00\u9500\u3002</li> <li>GraphTau \u548cTegra \u7cfb\u7edf\u652f\u6301\u6ed1\u52a8\u7a97\u53e3\u6a21\u578b\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u53ef\u4ee5\u4fdd\u5b58\u5feb\u7167\u5e76\u4e14\u83b7\u5f97\u5feb\u7167\u4e4b\u95f4\u7684\u5dee\u5f02\u3002</li> <li>Kineograph \u552f\u4e00\u652f\u6301\u66f4\u65b0\u53ef\u89c1\u6027\u6307\u6570\u8870\u51cf\u6a21\u578b\u7684\u7cfb\u7edf\u3002</li> </ul> </li> <li>\u56fe\u8868\u793a\u7684\u6846\u67b6\u7ed3\u6784<ul> <li>CSR+EL\uff1aEL \u7528\u4e8e\u5b58\u50a8\u5386\u53f2\u6570\u636e\u3002</li> <li>AL\uff1a\u56fe\u66f4\u65b0\u7075\u6d3b\u6027\uff0c\u4f46\u5c40\u90e8\u6027\u8f83\u5dee\u3002</li> <li>CSR \u5206\u5757\uff1a\u5c40\u90e8\u6027\u548c\u66f4\u65b0\u65f6\u95f4\u8fdb\u884c\u6743\u8861\uff1b\u5757\u8d8a\u5c0f\uff0c\u66f4\u65b0\u56fe\u5c31\u8d8a\u5bb9\u6613\uff0c\u4f46\u540c\u65f6\u904d\u5386\u9876\u70b9\u90bb\u57df\u9700\u8981\u66f4\u591a\u7684\u968f\u673a\u5185\u5b58\u8bbf\u95ee\u3002\u8f83\u5927\u7684\u5757\u53ef\u4ee5\u6539\u5584\u904d\u5386\u7684\u5c40\u90e8\u6027\uff0c\u4f46\u9700\u8981\u66f4\u591a\u65f6\u95f4\u6765\u66f4\u65b0\u56fe\u5f62\u7ed3\u6784\u3002</li> <li>\u5c11\u6570\u6846\u67b6\u91c7\u7528\u57fa\u4e8e\u6811\u7684\u56fe\u5b58\u50a8\u65b9\u5f0f\uff0c\u4f8b\u5982PMA\u3002</li> <li>\u5728\u66f4\u901a\u7528\u7684\u57fa\u7840\u8bbe\u65bd\u4e4b\u4e0a\u6784\u9020\u7684\u6846\u67b6\u4f7f\u7528\u5e95\u5c42\u7cfb\u7edf\u63d0\u4f9b\u7684\u8868\u793a\uff1b\u6846\u67b6\u7531\u901a\u7528\u5904\u7406\u7cfb\u7edf\u6216\u6570\u636e\u5e93\u5229\u7528\u7684\u6570\u636e\u8868\u793a\u3002</li> <li>\u7d22\u5f15\u7ed3\u6784\uff0c\u57fa\u4e8eCSR \u7684\u6846\u67b6\u7684\u6807\u51c6\u8bbe\u8ba1\u7b49\u3002</li> <li>\u6d41\u5f0f\u6846\u67b6\u4e0e\u56fe\u6570\u636e\u5e93\u4e0d\u540c\uff0c\u5b83\u66f4\u591a\u5730\u5173\u6ce8\u56fe\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u4e30\u5bcc\u7684\u9644\u52a0\u6570\u636e\u3002</li> </ul> </li> <li>\u589e\u91cf\u8ba1\u7b97\u4f53\u7cfb\u7ed3\u6784\u5206\u6790<ul> <li>\u8fd1\u534a\u6570\u7684\u6846\u67b6\u63d0\u4f9b\u589e\u91cf\u66f4\u6539\u7684\u652f\u6301\uff0c\u5e76\u4e14\u5927\u591a\u6570\u662f\u57fa\u4e8e\u79bb\u7ebf\u6a21\u5f0f\uff0c\u901a\u8fc7\u4e00\u5b9a\u673a\u5236\u6765\u786e\u5b9a\u90a3\u4e9b\u9876\u70b9\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u6765\u66f4\u65b0\u5206\u6790\u7ed3\u679c\uff0c\u4ee5\u53cd\u6620\u6700\u8fd1\u7684\u56fe\u7a81\u53d8\u3002</li> <li>Tegra \u4e3a\u8fc7\u53bb\u5feb\u7167\u5408\u5e76\u8fdb\u884c\u589e\u91cf\u8ba1\u7b97\uff0c\u6765\u4fdd\u5b58\u548c\u5206\u6790\u5386\u53f2\u6570\u636e\u3002</li> <li>\u6709\u4e00\u4e9b\u7cfb\u7edf\u662f\u5728\u7ebf\u6a21\u5f0f\u3002\u4f8b\u5982GraphBolt \u548cKickStarter \u90fd\u8ddf\u8e2a\u6b63\u5728\u8ba1\u7b97\u7684\u9876\u70b9\u503c\u4e0e\u8fb9\u4fee\u6539\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5728\u8bb8\u591a\u56fe\u5f62\u7b97\u6cd5\u4e2d\uff0c\u9876\u70b9\u503c\u53ea\u662f\u4ece\u4e00\u4e2a\u5355\u4e00\u7684\u4f20\u5165\u8fb9\u4e2d\u9009\u62e9\u7684\u3002\u6539\u8fdb\u7248\u672c\uff1aDZiG\u3001GraphInc \u548cRisGraph\u3002</li> <li>\u51e0\u4e4e\u6240\u6709\u652f\u6301\u589e\u91cf\u53d8\u5316\u7684\u7cfb\u7edf\u90fd\u5173\u6ce8\u4e8e\u5355\u8c03\u56fe\u7b97\u6cd5\uff0c\u5373\u8ba1\u7b97\u5c5e\u6027(\u4f8b\u5982\u9876\u70b9\u8ddd\u79bb) \u4e00\u81f4\u5730\u589e\u52a0\u6216\u51cf\u5c11\u7684\u7b97\u6cd5\u3002GraphBolt\u3001DZiG \u548cTegra \u4e5f\u6db5\u76d6\u4e86\u975e\u5355\u8c03\u7b97\u6cd5\u3002\u5982\u4fe1\u5ff5\u4f20\u64ad\u3001\u534f\u540c\u8bad\u7ec3\u671f\u671b\u6700\u5927\u5316\u6216\u534f\u540c\u8fc7\u6ee4\u3002</li> </ul> </li> <li>\u63d0\u4f9b\u7684\u7f16\u7a0bAPI \u548c\u6a21\u578b\u7684\u5206\u6790<ul> <li>\u56fe\u66f4\u65b0<ul> <li>\u6240\u6709\u56fe\u6846\u67b6\u5747\u652f\u6301\u4e00\u7b80\u5355API \u6765\u5b8c\u6210\u5bf9\u56fe\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u4f8b\u5982\u6dfb\u52a0\u548c\u5220\u9664\u8fb9\u3002</li> <li>Concerto \u7f16\u7a0b\u89e6\u53d1\u4e8b\u4ef6\uff0c\u4e8b\u4ef6\u5728\u67d0\u4e9b\u7279\u5b9a\u7684\u56fe\u5f62\u4fee\u6539\u540e\u81ea\u52a8\u53d1\u751f\u3002</li> <li>DeltaGraph \u5408\u5e76\u4e0d\u540c\u56fe\u5f62\u7684\u51fd\u6570\u3002</li> <li>GraphOne \u652f\u6301\u8bbf\u95ee\u548c\u5206\u6790\u4ecd\u5728\u7b49\u5f85\u88ab\u6444\u53d6\u5230\u4e3b\u56fe\u5f62\u7ed3\u6784\u4e2d\u7684\u66f4\u65b0\uff0c\u53ef\u7528\u4e8e\u9884\u5904\u7406/\u5206\u6790\u3002</li> </ul> </li> <li>\u56fe\u5206\u6790<ul> <li>\u5927\u90e8\u5206\u6846\u67b6\u4e0d\u652f\u6301\u52a8\u6001\u7684\u56fe\u5206\u6790\uff0c\u5176\u4ed6\u56fe\u6846\u67b6\u63d0\u4f9b\u5904\u7406\u4e3b\u5feb\u7167\u7684\u76f8\u5173API \u51fd\u6570\uff0c\u5927\u591a\u5229\u7528\u73b0\u6709\u7684\u7f16\u7a0b\u6a21\u578b\u4f8b\u5982BSP\u3002</li> <li>Tegra \u4e5f\u63d0\u4f9b\u4e86\u7528\u4e8e\u5728\u8fd9\u4e9b\u5feb\u7167\u4e0a\u8fd0\u884c\u5206\u6790\u7684api\uff0c\u9700\u8981\u7528\u6237\u6307\u5b9a\u7279\u5b9a\u8fc7\u53bb\u7684\u5feb\u7167\u3002</li> <li>\u90e8\u5206\u6846\u67b6\u63d0\u4f9b\u589e\u91cf\u5904\u7406\u7684\u76f8\u5173API\uff0c\u4e3b\u8981\u5305\u62ec\u8bc6\u522b\u90a3\u4e9b\u9876\u70b9\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u5e76\u7b5b\u9009\u51fa\u7684\u9876\u70b9\u8fdb\u884c\u91cd\u65b0\u8ba1\u7b97\u805a\u5408\u3002</li> <li>Tegra \u4e24\u4e2a\u51fd\u6570\uff0cdiff \u548cexpand\uff0c\u524d\u4e00\u4e2a\u8fd4\u56de\u524d\u540e\u5feb\u7167\u7684\u5dee\u503c\uff0c\u540e\u8005\u5bf9\u5b50\u56fe\u8fdb\u884c1 \u90bb\u57df\u6269\u5c55\u3002</li> <li>\u8865\u5145BSP \u76f8\u5173\u6982\u5ff5\uff1a\u8ba1\u7b97\u3001\u540c\u6b65\u3001\u4ea4\u6362\uff0c\u91cd\u590d\u4e0a\u8ff0\u4e09\u4e2a\u8fc7\u7a0b\uff0c\u51cf\u5c11\u7ade\u4e89\u3002</li> </ul> </li> </ul> </li> <li>\u652f\u6301\u7684\u56fe\u5f62\u66f4\u65b0\u7c7b\u578b<ul> <li>\u8fb9\u7684\u63d2\u5165\u4e0e\u5220\u9664\uff0c\u9876\u70b9\u7684\u63d2\u5165\u4e0e\u5220\u9664\uff1b\u7ed9\u5b9a\u9876\u70b9\u4e0e\u5176\u76f8\u90bb\u8fb9\u4e00\u8d77\u88ab\u79fb\u9664\u3002</li> </ul> </li> <li>\u5206\u5e03\u5f0f\u8bbe\u8ba1<ul> <li>\u6d41\u6846\u67b6\u4f9d\u8d56\u4e8e\u5e95\u5c42\u5206\u5e03\u5f0f\u6765\u652f\u6301\u66f4\u5927\u7684\u6570\u636e\u96c6\u4ee5\u53ca\u589e\u52a0\u541e\u5410\u91cf\u3002</li> </ul> </li> <li>\u8ba1\u7b97\u548c\u5b58\u50a8\u6bd4\u8f83<ul> <li>\u4e0d\u540c\u6846\u67b6\u5173\u6ce8\u70b9\u53ef\u80fd\u4e0d\u540c\uff0c\u4f8b\u5982\u8ba1\u7b97\u548c\u5b58\u50a8\u3002</li> </ul> </li> </ul> </li> <li>\u6846\u67b6\u7684\u9009\u62e9\u548c\u8ba8\u8bba<ul> <li>\u5927\u4f53\u6d4f\u89c8\u4e86\u4e00\u904d\uff0c\u6682\u672a\u505a\u7b14\u8bb0</li> </ul> </li> <li>\u53c2\u8003\u94fe\u63a5<ul> <li>Ligra: \u8f7b\u91cf\u7ea7\u5355\u673a\u5171\u4eab\u5185\u5b58\u56fe\u5904\u7406\u6846\u67b6</li> <li>PageRank \u7b97\u6cd5\u8be6\u89e3</li> <li>PageRank \u7b97\u6cd5\u8be6\u89e3</li> <li>Compressed Sparse Row\uff08CSR\uff09\u2014\u2014\u7a00\u758f\u77e9\u9635\u7684\u5b58\u50a8\u683c\u5f0f</li> <li>Count-min Sketch \u7b97\u6cd5</li> <li>\u5e03\u9686\u8fc7\u6ee4\u5668\u8be6\u89e3</li> <li>HyperLogLog</li> <li>\u4e8b\u52a1ACID \u7406\u89e3</li> <li>BSP\uff08\u6279\u91cf\u540c\u6b65\u5e76\u884c\u6267\u884c\uff09\u7684\u57fa\u672c\u77e5\u8bc6\uff1a\u5e76\u884c\u7b97\u6cd5\u7684\u7f16\u7a0b\u65b9\u6cd5</li> </ul> </li> </ul> </li> <li>KickStarter\uff1a\u901a\u8fc7\u4fee\u526a\u8fd1\u4f3c\u5bf9\u6d41\u56fe\u8fdb\u884c\u5feb\u901f\u51c6\u786e\u7684\u8ba1\u7b97<ul> <li>KickStarter\u7b97\u6cd5\u662f\u4e00\u79cd\u56fe\u4fee\u526a\u7b97\u6cd5\uff0c\u4e3b\u8981\u8981\u5b9e\u73b0\u7684\u662f\u5728\u52a8\u6001\u56fe\u5220\u9664\u8fb9\u65f6\u5feb\u901f\u5b8c\u6210\u5bf9\u56fe\u8fb9\u6743\u70b9\u6743\u7684\u6536\u655b\u8ba1\u7b97\uff0c\u7531\u4e8e\u56fe\u5728\u5220\u9664\u8fb9\u65f6\u70b9\u6743\u4f1a\u8f83\u591a\u70b9\u7684\u70b9\u6743\u53d7\u5230\u5f71\u54cd\uff0c\u5982\u679c\u4e3a\u4e86\u8ba1\u7b97\u7cbe\u786e\u7ed3\u679c\u800c\u5bf9\u6240\u6709\u70b9\u6743\u8fdb\u884c\u8ba1\u7b97\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff1b\u4e3a\u6b64\u63d0\u51fa\u4e86KickStarter\u7b97\u6cd5\uff0cKickStarter\u7b97\u6cd5\u901a\u8fc7\u52a8\u6001\u8ddf\u8e2a\u56fe\u63d2\u5165\u8fb9\u5e76\u52a8\u6001\u66f4\u65b0\u70b9\u6743\u4f9d\u8d56\u5173\u7cfb\uff0c\u5728\u5220\u9664\u8fb9\u65f6\u53ea\u9700\u8981\u67e5\u8be2\u76f8\u5173\u4f9d\u8d56\u88ab\u7834\u574f\u7684\u70b9\u5e76\u8ba1\u7b97\u5373\u53ef\uff0c\u4ece\u800c\u8fbe\u5230\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6548\u679c\u3002</li> <li>kcikstarter\u4e3b\u8981\u5229\u7528\u4e86\u5355\u8c03\u6027\u539f\u7406\u6765\u51cf\u5c11\u8fb9\u5220\u9664\u540e\u66f4\u65b0\u70b9\u6743\u7684\u8ba1\u7b97\u6b21\u6570\u3002</li> <li>KickStarter\u652f\u6301\u4e24\u79cd\u4fee\u526a\u65b9\u6cd5\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u4f7f\u7528\u6807\u8bb0\u673a\u5236\u8bc6\u522b\u53ef\u80fd\u53d7\u8fb9\u7f18\u5220\u9664\u5f71\u54cd\u7684\u9876\u70b9\u96c6\uff0c\u8be5\u6807\u8bb0\u673a\u5236\u8fd8\u5229\u7528\u7b97\u6cd5\u6d1e\u5bdf\u529b\u3002 </li> <li>\u5728\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u4e2d\uff0cKickStarter\u5728\u8ba1\u7b97\u53d1\u751f\u65f6\u5728\u7ebf\u8ddf\u8e2a\u9876\u70b9\u4e4b\u95f4\u7684\u52a8\u6001\u76f8\u5173\u6027\uff08\u5373\uff0c\u54ea\u4e2a\u9876\u70b9\u7684\u503c\u5bf9\u7ed9\u5b9a\u9876\u70b9\u7684\u503c\u7684\u8ba1\u7b97\u6709\u8d21\u732e\uff09\u3002 \u5bfb\u627e\u5b89\u5168\u7684\u8fd1\u4f3c\u503c\uff08\u6d88\u9664\u5faa\u73af\uff0c\u5bfb\u627e\u4e0d\u5305\u542b\u5728\u95ed\u5305\u4f9d\u8d56\u4e2d\u4f20\u5165\u8fb9\uff0c\u7ef4\u62a4\u7b49\u7ea7\uff09\uff1b\u4f55\u65f6\u505c\u6b62\uff08\u4e00\u65e6\u4e3a\u9876\u70b9\u627e\u5230\u5b89\u5168\u503c\uff0cKickStarter \u5c31\u4f1a\u68c0\u67e5\u8be5\u503c\u662f\u5426\u4f1a\u7834\u574f\u5355\u8c03\u6027\uff09  </li> </ul> </li> <li>GraphOne\uff1a\u7528\u4e8e\u5b9e\u65f6\u5206\u6790\u8fdb\u5316\u56fe\u7684\u6570\u636e\u5b58\u50a8<ul> <li>\u6279\u5206\u6790\u548c\u6d41\u5206\u6790\u6267\u884c\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u8bbf\u95ee\uff0c\u5373\u524d\u8005\u8bbf\u95ee\u6574\u4e2a\u56fe\uff0c\u800c\u540e\u8005\u4fa7\u91cd\u4e8e\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u6570\u636e\u3002</li> <li></li> <li>\u8fb9\u7f18\u65e5\u5fd7\u4ee5\u8fb9\u7f18\u5217\u8868\u683c\u5f0f\u4fdd\u7559\u6700\u65b0\u66f4\u65b0\uff0c\u65e8\u5728\u52a0\u901f\u6570\u636e\u6444\u53d6\u3002\u540c\u65f6\uff0c\u90bb\u63a5\u5b58\u50a8\u4ee5\u90bb\u63a5\u5217\u8868\u683c\u5f0f\u4fdd\u5b58\u65e7\u6570\u636e\u7684\u5feb\u7167\uff0c\u8fd9\u4e9b\u5feb\u7167\u4f1a\u5b9a\u671f\u4ece\u8fb9\u7f18\u65e5\u5fd7\u4e2d\u79fb\u52a8\uff0c\u5e76\u9488\u5bf9\u6279\u5904\u7406\u548c\u6d41\u5206\u6790\u8fdb\u884c\u4e86\u4f18\u5316\u3002</li> <li>GRAPHONE \u4f7f\u7528\u8fb9\u65e5\u5fd7\u7684\u65f6\u95f4\u7279\u6027\u5f3a\u5236\u6570\u636e\u6392\u5e8f\uff0c\u5e76\u5728\u90bb\u63a5\u5b58\u50a8\u4e2d\u4fdd\u6301\u6bcf\u4e2a\u9876\u70b9\u7684\u8fb9\u5230\u8fbe\u987a\u5e8f\u4e0d\u53d8\u3002\u7136\u540e\uff0c\u53cc\u7248\u672c\u63a7\u5236\u6280\u672f\u5229\u7528\u8fb9\u7f18\u5217\u8868\u683c\u5f0f\u7684\u7ec6\u7c92\u5ea6\u7248\u672c\u63a7\u5236\u548c\u90bb\u63a5\u5217\u8868\u683c\u5f0f\u7684\u7c97\u7c92\u5ea6\u7248\u672c\u63a7\u5236\u6765\u521b\u5efa\u5b9e\u65f6\u7248\u672c\u3002</li> <li>\u4e24\u79cd\u4f18\u5316\u6280\u672f\uff0c\u7f13\u5b58\u884c\u5927\u5c0f\u7684\u5185\u5b58\u5206\u914d\u548c\u5e42\u5f8b\u56fe\u7684\u9ad8\u5ea6\u9876\u70b9\u7684\u7279\u6b8a\u5904\u7406\uff0c\u4ee5\u51cf\u5c11\u7248\u672c\u5316\u90bb\u63a5\u5b58\u50a8\u7684\u5185\u5b58\u9700\u6c42\u3002</li> <li>\u652f\u6301\u4e24\u79cd\u7c7b\u578b\u7684 GraphView\uff1a(1) \u9759\u6001\u89c6\u56fe\u63d0\u4f9b\u6700\u65b0\u6570\u636e\u7684\u5b9e\u65f6\u7248\u672c\u63a7\u5236\uff0c\u7528\u4e8e\u6279\u91cf\u5206\u6790\uff1b (2) \u6d41\u89c6\u56fe\u652f\u6301\u5177\u6709\u6700\u65b0\u66f4\u65b0\u7684\u6d41\u5206\u6790\u3002\u8fd9\u4e9b\u89c6\u56fe\u5728\u4e24\u4e2a\u7c92\u5ea6\u7ea7\u522b\u63d0\u4f9b\u6570\u636e\u66f4\u65b0\u7684\u53ef\u89c1\u6027\u4ee5\u8fdb\u884c\u5206\u6790\uff0c\u5176\u4e2d\u8fb9\u7f18\u65e5\u5fd7\u7528\u4e8e\u5728\u8fb9\u7f18\u7ea7\u522b\u63d0\u4f9b\u5b83\uff0c\u800c\u90bb\u63a5\u5b58\u50a8\u4ee5\u7c97\u7c92\u5ea6\u7684\u66f4\u65b0\u63d0\u4f9b\u76f8\u540c\u7684\u4fe1\u606f\u3002</li> <li>\u4f7f\u7528\u8fb9\u7f18\u5217\u8868\u683c\u5f0f\u521b\u5efa\u7ec6\u7c92\u5ea6\u5feb\u7167\u3002\u56fe\u5f62\u5206\u6790\u548c\u67e5\u8be2\u5728\u6267\u884c\u671f\u95f4\u9700\u8981\u6700\u65b0\u6570\u636e\u7684\u4e0d\u53ef\u53d8\u5feb\u7167\u3002\u8fb9\u7f18\u5217\u8868\u683c\u5f0f\u4e3a\u7ec6\u7c92\u5ea6\u5feb\u7167\u521b\u5efa\u63d0\u4f9b\u4e86\u81ea\u7136\u652f\u6301\uff0c\u800c\u65e0\u9700\u521b\u5efa\u7269\u7406\u5feb\u7167\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u65f6\u95f4\u7279\u6027\uff0c\u56e0\u4e3a\u8ddf\u8e2a\u5feb\u7167\u53ea\u662f\u8bb0\u4f4f\u8fb9\u7f18\u5217\u8868\u4e2d\u7684\u504f\u79fb\u91cf\u3002\u540c\u65f6\uff0c\u90bb\u63a5\u5217\u8868\u683c\u5f0f\u901a\u8fc7\u5176\u7c97\u7c92\u5ea6\u5feb\u7167\u529f\u80fd [54, 26] \u7528\u4e8e\u8865\u5145\u8fb9\u5217\u8868\u3002</li> <li>\u5728\u6df7\u5408\u5b58\u50a8\u4e2d\u540c\u65f6\u4f7f\u7528\u8fb9\u7f18\u5217\u8868\u548c\u90bb\u63a5\u5217\u8868\u3002\u8fb9\u7f18\u5217\u8868\u683c\u5f0f\u4fdd\u7559\u4e86\u6570\u636e\u5230\u8fbe\u987a\u5e8f\u5e76\u4e3a\u5feb\u901f\u66f4\u65b0\u63d0\u4f9b\u4e86\u826f\u597d\u7684\u652f\u6301\uff0c\u56e0\u4e3a\u6bcf\u6b21\u66f4\u65b0\u90fd\u7b80\u5355\u5730\u9644\u52a0\u5230\u5217\u8868\u7684\u672b\u5c3e\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u90bb\u63a5\u8868\u4fdd\u7559\u4e86\u6e90\u9876\u70b9\u7d22\u5f15\u7684\u9876\u70b9\u7684\u6240\u6709\u90bb\u5c45\uff0c\u8fd9\u4e3a\u56fe\u5f62\u5206\u6790\u63d0\u4f9b\u4e86\u9ad8\u6548\u7684\u6570\u636e\u8bbf\u95ee\u3002\u56e0\u6b64\uff0c\u5b83\u5141\u8bb8 GRAPHONE \u5b9e\u73b0\u9ad8\u6027\u80fd\u56fe\u5f62\u8ba1\u7b97\uff0c\u540c\u65f6\u652f\u6301\u7ec6\u7c92\u5ea6\u66f4\u65b0\u3002</li> </ul> </li> <li>GraphBolt\uff1a\u6d41\u56fe\u7684\u4f9d\u8d56\u9a71\u52a8\u540c\u6b65\u5904\u7406<ul> <li>\u7b97\u6cd5\u793a\u610f\u56fe\uff0c\u9700\u8981\u7ef4\u62a4\u5386\u53f2\u503c\u548c\u4f9d\u8d56\u5173\u7cfb\u7f51 </li> <li>\u589e\u91cf\u7b97\u6cd5\u65e8\u5728\u901a\u8fc7\u91cd\u7528\u56fe\u7ed3\u6784\u53d1\u751f\u53d8\u5316\u4e4b\u524d\u8ba1\u7b97\u7684\u7ed3\u679c\u6765\u6700\u5c0f\u5316\u5197\u4f59\u8ba1\u7b97\u3002</li> <li>\u867d\u7136\u589e\u91cf\u5904\u7406\u4f7f\u7cfb\u7edf\u54cd\u5e94\u66f4\u5feb\uff0c\u4f46\u76f4\u63a5\u91cd\u7528\u4e2d\u95f4\u503c\u901a\u5e38\u4f1a\u5bfc\u81f4\u7b97\u6cd5\u4ea7\u751f\u4e0d\u6b63\u786e\u7684\u7ed3\u679c\u3002\u6b64\u5916\uff0c\u8fd9\u4e9b\u4e0d\u6b63\u786e\u7684\u7ed3\u679c\u6210\u4e3a\u6267\u884c\u540e\u7eed\u589e\u91cf\u5904\u7406\u7684\u57fa\u7840\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u8d8a\u6765\u8d8a\u4e0d\u51c6\u786e\u3002</li> <li>GraphIn \u548c KickStarter \u7b49\u89e3\u51b3\u65b9\u6848\u589e\u91cf\u8f6c\u6362\u4e2d\u95f4\u7ed3\u679c\uff0c\u9996\u5148\u4f7f\u5b83\u4eec\u4e0e\u66f4\u65b0\u7684\u56fe\u5f62\u4e00\u81f4\uff0c\u7136\u540e\u4f7f\u7528\u8f6c\u6362\u540e\u7684\u7ed3\u679c\u8ba1\u7b97\u6700\u7ec8\u7b54\u6848\u3002\u6b64\u7c7b\u8f6c\u6362\u901a\u5e38\u57fa\u4e8e \u5355\u8c03\u6536\u655b \uff08\u8def\u5f84\u957f\u5ea6\u6216\u7ec4\u4ef6 ID\uff09\u7b49\u7b97\u6cd5\u5c5e\u6027\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4eec\u9002\u7528\u4e8e\u56fe\u7b97\u6cd5\u7684\u9009\u5b9a\u5b50\u7c7b\uff08\u4f8b\u5982\uff0c\u5355\u8c03\uff09</li> <li>BSP\u8bed\u4e49\uff0c\u5373\u6279\u91cf\u540c\u6b65\u5e76\u884c \uff1bBSP\u5305\u542b\u4e09\u4e2a\u9636\u6bb5\uff1a\u8ba1\u7b97\uff0c\u540c\u6b65\u548c\u4ea4\u6362\u3002</li> <li>\u5dee\u5206\u6570\u636e\u6d41 [25] \u901a\u8fc7\u5dee\u5f02\uff08\u6216\u66f4\u6539\uff09\u53cd\u6620\u6d41\u4e2d\u53d8\u5316\u7684\u5f71\u54cd\u6765\u589e\u91cf\u5904\u7406\u5e7f\u4e49\u6d41\u3002\u5b83\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u7684\u5fae\u5206\u8fd0\u7b97\u7b26\u53ef\u4ee5\u6355\u83b7\u5e76\u76f4\u63a5\u8ba1\u7b97\u5dee\u5f02\uff0c\u5e76\u4e14\u8db3\u591f\u901a\u7528\u4ee5\u652f\u6301\u4efb\u4f55\u8fed\u4ee3\u589e\u91cf\u8ba1\u7b97\u3002</li> <li>\u6c34\u5e73\u4fee\u526a\u662f\u901a\u8fc7\u5728\u67d0\u4e9b\u8fed\u4ee3\u540e\u76f4\u63a5\u505c\u6b62\u5bf9\u805a\u5408\u503c\u7684\u8ddf\u8e2a\u6765\u5b9e\u73b0\u7684\u3002</li> <li>\u5782\u76f4\u4fee\u526a\u5728\u9876\u70b9\u7ea7\u522b\u8fdb\u884c\u64cd\u4f5c\uff0c\u5e76\u4e14\u901a\u8fc7\u4e0d\u4fdd\u5b58\u5df2\u7a33\u5b9a\u7684\u805a\u5408\u503c\u6765\u6267\u884c\u3002</li> </ul> </li> <li>STINGER\uff1a\u6d41\u56fe\u7684\u9ad8\u6027\u80fd\u6570\u636e\u7ed3\u6784<ul> <li>\u6570\u636e\u7ed3\u6784\u57fa\u4e8e\u5757\u7684\u94fe\u8868\u3002\u901a\u8fc7\u6dfb\u52a0\u989d\u5916\u7684\u9876\u70b9\u548c\u8fb9\u5757\uff0c\u9876\u70b9\u548c\u8fb9\u7684\u6570\u91cf\u53ef\u4ee5\u968f\u65f6\u95f4\u589e\u957f\u3002\u9876\u70b9\u548c\u8fb9\u90fd\u6709\u7c7b\u578b\uff0c\u4e00\u4e2a\u9876\u70b9\u53ef\u4ee5\u6709\u591a\u79cd\u7c7b\u578b\u7684\u5165\u5c04\u8fb9\u3002</li> <li>\u5165\u5c04\u5230\u7ed9\u5b9a\u9876\u70b9\u7684\u8fb9\u5b58\u50a8\u5728\u8fb9\u5757\u7684\u94fe\u8868\u4e2d\u3002\u8fb9\u8868\u793a\u4e3a\u76f8\u90bb\u9876\u70b9 ID\u3001\u7c7b\u578b\u3001\u6743\u91cd\u548c\u4e24\u4e2a\u65f6\u95f4\u6233\u7684\u5143\u7ec4\uff1b\u7ed9\u5b9a\u5757\u4e2d\u7684\u6240\u6709\u8fb9\u90fd\u5177\u6709\u76f8\u540c\u7684\u8fb9\u7c7b\u578b\uff1b\u8be5\u5757\u5305\u542b\u5143\u6570\u636e\uff0c\u4f8b\u5982\u6700\u4f4e\u548c\u6700\u9ad8\u65f6\u95f4\u6233\u4ee5\u53ca\u5757\u5185\u6709\u6548\u8fb9\u7f18\u7684\u9ad8\u6c34\u4f4d\u7ebf\u3002</li> <li>\u8fb9\u7f18\u7c7b\u578b\u6570\u7ec4 (ETA) \u662f\u6307\u5411\u7ed9\u5b9a\u7c7b\u578b\u7684\u6240\u6709\u8fb9\u7f18\u5757\u7684\u4e8c\u7ea7\u7d22\u5f15\u3002\u5728\u8fb9\u7f18\u5e76\u884c\u7684\u8fde\u63a5\u7ec4\u4ef6\u7b49\u7b97\u6cd5\u4e2d\uff0c\u8fd9\u79cd\u8bbf\u95ee\u6570\u636e\u7ed3\u6784\u7684\u9644\u52a0\u6a21\u5f0f\u5141\u8bb8\u5728\u5e76\u884c for \u5faa\u73af\u4e2d\u63a2\u7d22\u6240\u6709\u8fb9\u7f18\u5757\u3002/ STINGER \u63d0\u4f9b\u4e86\u8fb9\u7f18\u7c7b\u578b\u6570\u7ec4\uff08ETA\uff09\u7d22\u5f15\u6570\u636e\u7ed3\u6784\u3002 ETA \u5305\u542b\u6307\u5411\u5177\u6709\u7ed9\u5b9a\u7c7b\u578b\u8fb9\u7f18\u7684\u6240\u6709\u5757\u7684\u6307\u9488\uff0c\u4ee5\u52a0\u901f\u5728\u7279\u5b9a\u8fb9\u7f18\u7c7b\u578b\u4e0a\u8fd0\u884c\u7684\u7b97\u6cd5\u3002</li> <li>STINGER \u5fc5\u987b\u80fd\u591f\u54cd\u5e94\u65b0\u7684\u548c\u66f4\u65b0\u7684\u8fb9\u7f18\u3002\u63d0\u4f9b\u4e86\u5e76\u884c\u63d2\u5165\u3001\u5220\u9664\u3001\u9012\u589e\u548c\u63a5\u89e6\u8fb9\u7f18\u7684\u529f\u80fd\uff1b\u53ef\u4ee5\u67e5\u8be2\u56fe\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\uff0c\u4ee5\u53ca\u56fe\u4e2d\u9876\u70b9\u548c\u8fb9\u7684\u603b\u6570\u3002</li> <li>\u901a\u8fc7\u6279\u5904\u7406\u3001\u7ec6\u7c92\u5ea6\u9501\u6765\u5e76\u884c\u5904\u7406\uff0c\u52a0\u5feb\u5904\u7406\u901f\u5ea6\u3002</li> <li>DISTINGER\u662fSTINGER\u7684\u5206\u5e03\u5f0f\u7248\u672c\uff1bcuSTINGER\u6269\u5c55\u4e86CUDA GPU\u7684STINGER\u3002</li> <li>STINGER\u5b98\u65b9\u6587\u6863\uff1a http://www.stingergraph.com/index.php?id=documentation</li> </ul> </li> <li>Tornado\uff1a\u4e00\u4e2a\u5bf9\u4e0d\u65ad\u53d8\u5316\u7684\u6570\u636e\u8fdb\u884c\u5b9e\u65f6\u8fed\u4ee3\u5206\u6790\u7684\u7cfb\u7edf<ul> <li>\u6000\u7591\u4e0b\u5217\u516c\u5f0f\u6253\u9519\u4e86\uff0c \u200b\u200b\u200b\u200b\u200b\u200b </li> <li>\u5728\u4e3b\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u4e0d\u65ad\u6536\u96c6\u4f20\u5165\u6570\u636e\u5e76\u5728\u5f53\u524d\u65f6\u523b\u8fd1\u4f3c\u8ba1\u7b97\u7ed3\u679c\u3002\u4ee4 \u2206Si \u4e3a\u7b2c i \u6b21\u8fed\u4ee3\u4e2d\u6536\u96c6\u7684\u8f93\u5165\uff0c \u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b \u4e3a\u7b2c i \u6b21\u8fed\u4ee3\u4e2d\u7684\u8fd1\u4f3c\u503c\uff0c\u5219\u6211\u4eec\u6709 \u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b \uff0c\u5176\u4e2d g \u662f\u8fd1\u4f3c\u51fd\u6570\u3002 </li> <li>\u968f\u673a\u68af\u5ea6\u4e0b\u964d (SGD) \u901a\u8fc7\u4f7f\u7528\u89c2\u5bdf\u5b9e\u4f8b\u7684\u65e0\u504f\u91c7\u6837\u6765\u8fd1\u4f3c\u68af\u5ea6\uff0c\u4ece\u800c\u907f\u514d\u4e86\u6602\u8d35\u7684\u68af\u5ea6\u8ba1\u7b97\u3002\u65e0\u504f\u62bd\u6837\u901a\u5e38\u901a\u8fc7\u968f\u673a\u62bd\u6837\u6765\u5b8c\u6210\u3002</li> <li>\u8fed\u4ee3\u6a21\u578b </li> <li>\u5206\u5e03\u5f0f\u5feb\u7167\u7b97\u6cd5: Chandy-Lamport \u7b97\u6cd5</li> </ul> </li> <li>\u4f7f\u7528\u538b\u7f29\u7eaf\u51fd\u6570\u6811\u7684\u4f4e\u5ef6\u8fdf\u56fe\u6d41<ul> <li>C Tree </li> <li>\u56fe\u4e00\u662f\u666e\u901a\u7684\u56fe\u3001\u56fe\u4e8c\u4e3a\u8fb9\u6811\u3001\u56fe\u4e09\u4e3aCTree\u4f18\u5316\u7684\u8fb9\u6811\u3002 </li> </ul> </li> <li>\u63a7\u5236\u6709\u72b6\u6001\u6d41\u56fe\u5904\u7406\u7684\u5185\u5b58\u5360\u7528\uff08\u4e3b\u8981\u5bf9GraphBolt\u8fdb\u884c\u4f18\u5316\uff09<ul> <li>\u65e0\u72b6\u6001\u8fed\u4ee3\u6a21\u578b &amp; \u6709\u72b6\u6001\u8fed\u4ee3\u6a21\u578b ( KickStarter(\u53ea\u4fdd\u7559\u4e00\u6b21\u4e2d\u95f4\u72b6\u6001), GraphBolt(\u4fdd\u7559\u4ece\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u4e2d\u95f4\u72b6\u6001))</li> <li>\u9009\u62e9\u6027\u6709\u72b6\u6001\u8fed\u4ee3\u6a21\u578b<ul> <li>\u53ea\u9009\u62e9\u5176\u4e2d\u4e00\u90e8\u5206\u9876\u70b9\u6765\u8bb0\u5f55\u5176\u4e2d\u95f4\u72b6\u6001\uff08\u8ddf\u8e2a\u9876\u70b9\u548c\u672a\u8ddf\u8e2a\u9876\u70b9\uff09\uff0c\u51cf\u5c11\u5185\u5b58\u5f00\u9500\u3002</li> <li>\u8ddf\u8e2a\u6392\u540d\u6700\u9ad8\u7684\u524d k \u4e2a\u9876\u70b9\u7684\u4e2d\u95f4\u72b6\u6001\uff0c\u5229\u7528\u5927\u9876\u5806\u7ef4\u62a4\u3002</li> <li>\u5e94\u8be5\u8ddf\u8e2a\u591a\u5c11\u4e2a\u9876\u70b9\uff1fk\u662f\u8ddf\u8e2a\u72b6\u6001\u7684\u9876\u70b9\u6570\u3001state_size\u662f\u4e2d\u95f4\u9876\u70b9\u72b6\u6001\u7684\u5927\u5c0f\u3001mem_budget\u662f\u53ef\u7528\u5185\u5b58\u5bb9\u91cf\u3001base_size\u662f\u5176\u4ed6\u6d88\u8017\u7684\u5185\u5b58\u7cfb\u7edf\u4e2d\u7684\u6570\u636e\u7ed3\u6784 </li> <li>\u4f18\u5316\u5e03\u5c40\uff0c\u672a\u8ddf\u8e2a\u9876\u70b9\u548c\u8ddf\u8e2a\u9876\u70b9\u5206\u522b\u5355\u72ec\u5b58\u50a8 </li> <li>\u5982\u679c\u76ee\u6807\u9876\u70b9\u672a\u88ab\u8ddf\u8e2a\uff0c\u5219\u65e7\u503c\uff08\u6765\u81ea\u56fe\u7a81\u53d8\u4e4b\u524d\uff09\u548c\u65b0\u503c\uff08\u7531\u56fe\u7a81\u53d8\u4ea7\u751f\uff09\u90fd\u6cbf\u7740\u8fb9\u4f20\u64ad\u3002</li> <li>\u5bf9\u4e8e\u8ddf\u8e2a\u7684\u9876\u70b9\uff0c\u4e2d\u95f4\u72b6\u6001\u968f\u7740\u8fed\u4ee3\u5904\u7406\u7684\u8fdb\u884c\u800c\u9010\u6b65\u7ec6\u5316\u3002\u800c\u5bf9\u4e8e\u672a\u8ddf\u8e2a\u7684\u9876\u70b9\uff0c\u968f\u7740\u5904\u7406\u901a\u8fc7\u8fed\u4ee3\u8fdb\u884c\uff08\u7c7b\u4f3c\u4e8e\u4ece\u5934\u5f00\u59cb\u8ba1\u7b97\uff0c\u6ca1\u6709\u4e2d\u95f4\u72b6\u6001\uff09\uff0c\u5355\u4e2a\u5411\u91cf\u88ab\u7ef4\u62a4\u4ee5\u4fdd\u5b58\u5b83\u4eec\u7684\u6700\u65b0\u503c\u3002\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u8de8\u8fb9\u4f20\u64ad\u7684\u503c\u57fa\u4e8e\u76ee\u6807\u9876\u70b9\u662f\u88ab\u8ddf\u8e2a\u8fd8\u662f\u672a\u88ab\u8ddf\u8e2a\uff0c\u5982\u56fe 6b \u6240\u793a\u3002\u5982\u679c\u8ddf\u8e2a\u76ee\u6807\u9876\u70b9\uff0c\u5219\u503c\u7684\u5dee\u5f02\u5c06\u6cbf\u7740\u5176\u4f20\u5165\u8fb9\u4f20\u64ad\uff0c\u7c7b\u4f3c\u4e8e\u4f20\u7edf\u7684\u4f9d\u8d56\u9a71\u52a8\u589e\u91cf\u5904\u7406\u3002</li> <li>\u6839\u636e\u76ee\u6807\u9876\u70b9\u662f\u88ab\u8ddf\u8e2a\uff08\u7a81\u51fa\u663e\u793a\uff09\u8fd8\u662f\u672a\u88ab\u8ddf\u8e2a\u4f20\u64ad\u7684\u503c\u3002\u672a\u8ddf\u8e2a\u7684\u9876\u70b9\u63a5\u6536\u65e7\u503c\u548c\u65b0\u503c\uff0c\u800c\u8ddf\u8e2a\u7684\u9876\u70b9\u76f4\u63a5\u63a5\u6536\u503c\u7684\u5dee\u5f02 </li> </ul> </li> <li>\u6700\u5c0f\u72b6\u6001\u8fed\u4ee3\u6a21\u578b<ul> <li>\u4e13\u95e8\u9488\u5bf9\u67d0\u4e9b\u7b97\u6cd5\u8fdb\u884c\u589e\u91cf\u5904\u7406\uff0c\u4f8b\u5982PageRank\u7b49\uff0c\u6b64\u7c7b\u7b97\u6cd5\u53ef\u4ee5\u6839\u636e\u9876\u70b9\u7684\u4f20\u5165\u503c\u53d8\u5316\u76f4\u63a5\u8ba1\u7b97\u7ed9\u5b9a\u9876\u70b9\u7684\u4f20\u51fa\u503c\u53d8\u5316\uff08\u65b0\u9896\u7684\u5206\u5e03\u5f0f\u66f4\u65b0\u5c5e\u6027\uff09\u3002</li> <li>\u9488\u5bf9\u67d0\u4e9b\u56fe\u5f62\u7b97\u6cd5\u7684\u589e\u91cf\u5904\u7406\u6765\u79ef\u6781\u6d88\u9664\u4e2d\u95f4\u72b6\u6001\u7684\u8ddf\u8e2a\u3002</li> <li>\u2295\u662f\u5c06\u4f20\u5165\u503c\u7ec4\u5408\u5230\u9876\u70b9\u7684\u805a\u5408\u51fd\u6570\uff0cS\u662f\u5c06\u6e90\u503c\u8f6c\u6362\u4e3a\u805a\u5408\u7684\u51fd\u6570\uff0cA\u662f\u4f7f\u7528\u805a\u5408\u7ed3\u679c </li> <li>\u5206\u5e03\u5f0f\u66f4\u65b0\u5c5e\u6027\u6307\u51fa\u9876\u70b9\u503c\u7684\u8ba1\u7b97\u53ef\u4ee5\u4f5c\u4e3a\u5b50\u8ba1\u7b97\u5206\u5e03\u5728\u5176\u4f20\u5165\u90bb\u5c45\u7684\u503c\u4e0a\uff1b\u03b3 \u548c \u03b1 \u662f\u4ece A \u6d3e\u751f\u7684\u51fd\u6570 </li> <li>\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\u4e0d\u8ba1\u7b97\u4e2d\u95f4\u72b6\u6001\u7684\u60c5\u51b5\u4e0b\u4f20\u64ad\u5dee\u5f02\uff0c\u4f46\u8fd9\u4e9b\u5dee\u5f02\u9700\u8981\u4ee5\u67d0\u4e9b\u57fa\u7840\u4e3a\u57fa\u7840\u3002</li> </ul> </li> </ul> </li> <li>RisGraph\uff1a\u4e00\u4e2a\u7528\u4e8e\u8fdb\u5316\u56fe\u7684\u5b9e\u65f6\u6d41\u7cfb\u7edf\uff0c\u4ee5\u767e\u4e07\u6b21\u64cd\u4f5c/\u79d2\u7684\u901f\u5ea6\u652f\u6301\u4e9a\u6beb\u79d2\u7ea7\u6bcf\u6b21\u66f4\u65b0\u5206\u6790\uff08\u4e3b\u8981\u5bf9KickStarter\u8fdb\u884c\u4f18\u5316\uff09<ul> <li>\u672c\u5730\u5316\u6570\u636e\u8bbf\u95ee<ul> <li>\u672c\u5730\u5316\u6570\u636e\u8bbf\u95ee\u80cc\u540e\u7684\u57fa\u672c\u539f\u7406\u662f\u589e\u91cf\u8ba1\u7b97\u53ea\u9700\u8981\u8bbf\u95ee\u90e8\u5206\u9876\u70b9\uff0c\u4f46\u4e0d\u6b63\u786e\u7684\u6570\u636e\u7ed3\u6784\u5c06\u9700\u8981\u90e8\u5206\u8ba1\u7b97\u6765\u8bbf\u95ee\u6574\u4e2a\u56fe\u3002\u7cfb\u7edf\u5e94\u8be5\u4f7f\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u6765\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u64cd\u4f5c\u3002</li> <li>\u7a00\u758f\u6570\u7ec4\u548c\u5bc6\u96c6\u6570\u7ec4\u3001\u4f4d\u56fe\uff0c\u4f7f\u7528\u7a00\u758f\u6570\u7ec4\u8ddf\u8e2a\u6d3b\u52a8\u9876\u70b9\u548c\u66f4\u65b0\u7ed3\u679c\uff0c\u4ee5\u6d88\u9664\u626b\u63cf\u6240\u6709\u9876\u70b9\u7684\u5197\u4f59\u5f00\u9500</li> <li>\u8fb9\u5e76\u884c\u548c\u70b9\u5e76\u884c\u7b56\u7565\uff0c\u666e\u904d\u7ed3\u8bba \u70b9\u5e76\u884c\u4f18\u4e8e\u8fb9\u5e76\u884c\uff0c\u5c40\u90e8\u6027\u66f4\u597d </li> <li>\u7d22\u5f15\u90bb\u63a5\u5217\u8868 </li> </ul> </li> <li>\u5e76\u884c\u5904\u7406\u66f4\u65b0<ul> <li>\u4e00\u79cd\u7279\u5b9a\u4e8e\u57df\u7684\u5e76\u53d1\u63a7\u5236\u673a\u5236\uff0c\u4ee5\u4f4e\u5f00\u9500\u652f\u6301\u591a\u4e2a\u66f4\u65b0\u4e4b\u95f4\u7684\u5e76\u884c\u6027\uff0c\u4ece\u800c\u63d0\u9ad8\u541e\u5410\u91cf\u3002\u5b83\u5229\u7528\u589e\u91cf\u6a21\u578b\u548c\u4e2d\u95f4\u6570\u636e\u7ed3\u6784\u5728\u5904\u7406\u5b83\u4eec\u4e4b\u524d\u8bc6\u522b\u975e\u51b2\u7a81\u66f4\u65b0\u3002</li> <li>\u4e0d\u6539\u53d8\u4efb\u4f55\u7ed3\u679c\u7684\u66f4\u65b0\u547d\u540d\u4e3a\u5b89\u5168\u66f4\u65b0\u3002\u76f8\u5e94\u5730\uff0c\u4e0d\u5b89\u5168\u7684\u66f4\u65b0\u4f1a\u4fee\u6539\u7ed3\u679c\u6216\u4f9d\u8d56\u6811\u3002</li> <li>\u4e09\u79cd\u5b89\u5168\u72b6\u6001<ul> <li>(1) ins_vertex(v) \u6216 del_vertex(v) \u5bf9\u4e8e\u4efb\u4f55\u9876\u70b9\ud835\udc63\u3002\u8be5\u64cd\u4f5c\u4ec5\u5728\ud835\udc63\u4e3a\u5b64\u7acb\u9876\u70b9\u65f6\u6709\u6548\uff08\u7528\u6237\u5728\u5220\u9664\ud835\udc63\u4e4b\u524d\u5fc5\u987b\u5148\u5220\u9664\u4e0e\ud835\udc63\u76f8\u5173\u7684\u6240\u6709\u8fb9\uff09\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5f71\u54cd\u5355\u8c03\u7b97\u6cd5\u7684\u7ed3\u679c[77]\u3002</li> <li>(2) del_edge(e) for \ud835\udc52 \u2209 \ud835\udc38\ud835\udc47 \uff0c\u6bd4\u5982\u8fb9\u27e8\ud835\udc632\uff0c\ud835\udc633\u27e9\u3002\u8fd9\u4e9b\u5220\u9664\u4e0d\u4f1a\u4fee\u6539\u4f9d\u8d56\u6811\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u7ed3\u679c\u3002\u76f8\u53cd\uff0c\u5220\u9664\u27e8\ud835\udc631\u3001\ud835\udc632\u27e9\u6216\u27e8\ud835\udc631\u3001\ud835\udc633\u27e9\u5c06\u5206\u522b\u4f7f\ud835\udc632\u6216\ud835\udc633\u7684\u72b6\u6001\u65e0\u6548\u3002</li> <li>(3) ins_edge(e) for \ud835\udc52 = \u27e8\ud835\udc63\ud835\udc60 , \ud835\udc63\ud835\udc61 \u27e9 \u5f53 need_upd(vt, vt.data, gen_next(e, vs.data)) \u4e3a\u5047\u65f6\u3002\u4ee5\u8fb9\u63d2\u5165\u27e8\ud835\udc630\uff0c\ud835\udc632\u27e9\u4e3a\u4f8b\uff0c\u6211\u4eec\u9996\u5148\u4ece\u6e90\ud835\udc630\u548c\u65b0\u8fb9\ud835\udc52\u8ba1\u7b97\u51fa\u76ee\u6807\ud835\udc632\u7684\u65b0\u7ed3\u679c\u3002\u5982\u679c \ud835\udc52 \u4e0d\u80fd\u4ea7\u751f\u6bd4 \ud835\udc632 \u7684\u5f53\u524d\u7ed3\u679c\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u5219\u63d2\u5165\u662f\u5b89\u5168\u7684\u3002</li> </ul> </li> <li>RisGraph \u5c06\u66f4\u65b0\u5206\u4e3a\u5b89\u5168 (S)\u3001\u4e0d\u5b89\u5168 (U) \u548c\u4e0b\u4e00\u7eaa\u5143 (N)\u3002\u4e0d\u5b89\u5168\u66f4\u65b0\u540e\uff0c\u540c\u4e00\u4f1a\u8bdd\u4e2d\u7684\u6240\u6709\u66f4\u65b0\u90fd\u662f\u4e0b\u4e00\u7eaa\u5143\u66f4\u65b0\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5e94\u8be5\u5728\u4e0b\u4e00\u4e2a\u7eaa\u5143\u4e2d\u91cd\u65b0\u5206\u7c7b\uff0c\u56e0\u4e3a\u4efb\u4f55\u4e0d\u5b89\u5168\u64cd\u4f5c\u90fd\u53ef\u80fd\u4fee\u6539\u7ed3\u679c\u5e76\u66f4\u6539\u5176\u80cc\u540e\u66f4\u65b0\u7684\u5206\u7c7b\u3002 RisGraph \u5e76\u884c\u5904\u7406\u591a\u4e2a\u5b89\u5168\u66f4\u65b0\uff0c\u5229\u7528\u66f4\u65b0\u95f4\u5e76\u884c\u6027\u3002</li> <li>\u5982\u679c\u67d0\u4e9b\u4f1a\u8bdd\u6301\u7eed\u4ea7\u751f\u5b89\u5168\u66f4\u65b0\uff0cRisGraph \u5c06\u4f7f\u4e0d\u5b89\u5168\u7684\u66f4\u65b0\u5904\u4e8e\u9965\u997f\u72b6\u6001\uff0cRisGraph \u7684\u8c03\u5ea6\u5668\u63a7\u5236\u6bcf\u4e2a epoch \u7684\u5927\u5c0f\uff0c\u5e76\u5c3d\u53ef\u80fd\u6ee1\u8db3\u7528\u6237\u671f\u671b\u7684\u5c3e\u90e8\u5ef6\u8fdf\u3002</li> </ul> </li> </ul> </li> <li>Ligra\uff1a\u7528\u4e8e\u5171\u4eab\u5185\u5b58\u7684\u8f7b\u91cf\u7ea7\u56fe\u5f62\u5904\u7406\u6846\u67b6<ul> <li>EDGEMAP \u548c VERTEXMAP \u51fd\u6570</li> </ul> </li> <li>\u4f7f\u7528\u52a8\u6001\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u52a8\u6001\u7f51\u7edc\u7684\u57fa\u7840\u548c\u5efa\u6a21\uff1a\u4e00\u9879\u8c03\u67e5</li> <li>GraphBolt\u4ee3\u7801\u9605\u8bfb<ul> <li>GraphBolt\u76f8\u5173\u51fd\u6570<ul> <li>GraphBolt \u6846\u67b6\u7684\u4e00\u4e2a\u5173\u952e\u8bbe\u8ba1\u51b3\u7b56\u662f\u786e\u4fdd\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4fdd\u6301\u5bf9 GraphBolt \u5185\u90e8\u5fae\u5999\u4e4b\u5904\u7684\u65e0\u89c6\uff0c\u540c\u65f6\u4ecd\u7136\u63d0\u4f9b\u5feb\u901f\u6027\u80fd\u3002</li> <li>\u56e0\u6b64\uff0c\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u53ea\u9700\u8981\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u8868\u8fbe\u5176\u8ba1\u7b97\u3002</li> <li>AggregateValue \u548c VertexValue \u521d\u59cb\u5316\uff1a<ul> <li>initializeAggregationValue()</li> <li>initializeVertexValue()</li> <li>aggregationValueIdentity()<ul> <li>\u8fd4\u56de\u805a\u5408\u503c\u7684\u6807\u8bc6\u503c\u3002 \u5bf9\u4e8e\u6c42\u548c\uff0c\u6807\u8bc6\u503c\u4e3a 0\u3002\u5bf9\u4e8e\u6c42\u79ef\uff0c\u6807\u8bc6\u503c\u4e3a 1\u3002</li> </ul> </li> <li>vertexValueIdentity()<ul> <li>\u8fd4\u56de\u9876\u70b9\u503c\u7684\u6807\u8bc6\u503c\u3002 \u5bf9\u4e8e\u6c42\u548c\uff0c\u6807\u8bc6\u503c\u4e3a 0\u3002\u5bf9\u4e8e\u6c42\u79ef\uff0c\u6807\u8bc6\u503c\u4e3a 1\u3002</li> </ul> </li> <li>GraphBolt \u4ee5\u805a\u5408\u503c\u7684\u5f62\u5f0f\u5b58\u50a8\u6bcf\u4e2a\u9876\u70b9\u7684\u4fe1\u606f\u3002 \u56e0\u6b64\uff0c\u9996\u5148\uff0c\u7528\u6237\u5e94\u8be5\u786e\u5b9a\u7b97\u6cd5\u7684\u805a\u5408\u503c\u548c\u9876\u70b9\u503c\u3002 \u4f8b\u5982\u5728 PageRank \u4e2d\uff0c\u9876\u70b9\u503c\u662f\u5176 pagerank (PR)\uff0c\u805a\u5408\u503c\u662f\u5176\u6240\u6709 inNeighbors \u7684 (PR[u]/out_Degree[u]) \u503c\u4e4b\u548c\u3002</li> </ul> </li> <li>\u4e3a\u7ed9\u5b9a\u7684\u8fed\u4ee3\u6fc0\u6d3b\u9876\u70b9/\u8ba1\u7b97\u9876\u70b9\uff1a<ul> <li>forceActivateVertexForIteration()<ul> <li>\u7528\u4e8e\u786e\u5b9a\u5728\u7ed9\u5b9a\u8fed\u4ee3\u4e2d\u662f\u5426\u5e94\u5f3a\u5236\u9876\u70b9\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002 \u4f8b\u5982\uff0c\u5728 PageRank \u4e2d\uff0c\u6240\u6709\u9876\u70b9\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u90fd\u5e94\u8be5\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002 \u5728 CF (ALS) \u4e2d\uff0c\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6240\u6709 partition2 \u9876\u70b9\u90fd\u5e94\u8be5\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u5728\u7b2c\u4e8c\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6240\u6709 partition1 \u9876\u70b9\u90fd\u5e94\u8be5\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001</li> </ul> </li> <li>forceComputeVertexForIteration()<ul> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u4ece\u5176 inNeighbor \u63a5\u6536\u5230\u4e00\u4e9b\u53d8\u5316\u7684\u9876\u70b9\u90fd\u5c06\u8ba1\u7b97\u5b83\u7684\u503c\u3002 \u5bf9\u4e8e\u67d0\u4e9b\u7b97\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u9876\u70b9\u7684\u503c\uff0c\u800c\u4e0d\u7ba1\u8be5\u9876\u70b9\u662f\u5426\u5728\u8be5\u6b21\u8fed\u4ee3\u4e2d\u6536\u5230\u4efb\u4f55\u66f4\u6539\u3002 \u6b64\u51fd\u6570\u7528\u4e8e\u5728\u7ed9\u5b9a\u8fed\u4ee3\u4e2d\u5f3a\u5236\u8ba1\u7b97\u9876\u70b9\u3002</li> </ul> </li> <li>shouldUseDelta()<ul> <li>\u901a\u5e38\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u6b21\u8fed\u4ee3\uff0c\u9876\u70b9\u5c06\u6574\u4e2a\u503c\u4f20\u64ad\u5230\u5b83\u7684 outNeighbor\u3002 \u4f8b\u5982\uff0c\u6b64\u51fd\u6570\u5e94\u4e3a iter=1 \u8fd4\u56de false\uff0c\u5e76\u4e3a\u5176\u4ed6\u8fed\u4ee3\u8fd4\u56de true\u3002 \u5bf9\u4e8e CF\uff0c\u6211\u4eec\u6709 2 \u4e2a\u5206\u533a\u3002 \u56e0\u6b64\uff0c\u51fd\u6570\u5e94\u8be5\u4e3a iter=1 \u6216 iter=2 \u8fd4\u56de true\u3002 \u4f7f\u7528\u6b64\u51fd\u6570\u81ea\u5b9a\u4e49\u4f55\u65f6\u5e94\u6267\u884c\u57fa\u4e8e\u589e\u91cf\u7684\u589e\u91cf\u8ba1\u7b97</li> </ul> </li> <li>\u5728\u8fed\u4ee3\u56fe\u7b97\u6cd5\u4e2d\uff0c\u5728\u7ed9\u5b9a\u7684\u8fed\u4ee3 i \u4e2d\uff0c\u4e00\u7ec4\u9876\u70b9\u4f1a\u5c06\u4e00\u4e9b\u503c\u63a8\u9001\u5230\u5b83\u4eec\u7684 outNeighbors\u3002 \u8fd9\u4e9b\u662f\u8be5\u8fed\u4ee3\u7684\u6d3b\u52a8\u9876\u70b9\u3002 \u6536\u5230\u8fd9\u4e9b\u503c\u7684 outNeighbors \u5c06\u8ba1\u7b97\u5b83\u4eec\u7684\u66f4\u65b0\u503c\u3002 \u63d0\u4f9b\u4ee5\u4e0b\u51fd\u6570\u4ee5\u5f3a\u5236\u9876\u70b9\u5728\u7ed9\u5b9a\u8fed\u4ee3\u4e2d\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001/\u8ba1\u7b97\u72b6\u6001\u3002 \u4f8b\u5982\uff0c\u5728 Label Propagation \u4e2d\uff0c\u6240\u6709\u9876\u70b9\u90fd\u5e94\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u8ba1\u7b97\u5b83\u4eec\u7684\u503c\uff0c\u800c\u4e0d\u7ba1\u5b83\u4eec\u662f\u5426\u5728\u8be5\u8fed\u4ee3\u4e2d\u4ece\u5176 inNeighbors \u63a5\u6536\u5230\u4efb\u4f55\u65b0\u66f4\u6539\uff08\u8bf7\u53c2\u9605 apps/LabelPropagation.C\uff09\u3002</li> </ul> </li> <li>\u6dfb\u52a0\u5230\u805a\u5408\u6216\u4ece\u805a\u5408\u4e2d\u5220\u9664\uff1a<ul> <li>addToAggregation()</li> <li>addToAggregationAtomic()</li> <li>removeFromAggregation()</li> <li>removeFromAggregationAtomic()</li> <li>\u8fd9\u4e9b\u662f\u7528\u4e8e\u5411\u805a\u5408\u503c\u6dfb\u52a0\u503c\u6216\u4ece\u805a\u5408\u503c\u4e2d\u5220\u9664\u67d0\u4e9b\u503c\u7684\u51fd\u6570\u3002 \u5bf9\u4e8e sum\uff0c\u5b83\u53ea\u662f\u7b80\u5355\u5730\u4ece\u4f20\u9012\u7684\u805a\u5408\u503c\u4e2d\u6dfb\u52a0\u548c\u51cf\u53bb\u503c\u3002 \u8bf7\u6ce8\u610f\uff0caddToAggregationAtomic() \u548c removeFromAggregationAtomic() \u5c06\u7531\u591a\u4e2a\u7ebf\u7a0b\u5728\u540c\u4e00\u805a\u5408\u503c\u4e0a\u8c03\u7528\u3002 \u56e0\u6b64\uff0c\u5e94\u8be5\u4f7f\u7528 CAS \u4ee5\u539f\u5b50\u65b9\u5f0f\u6267\u884c\u66f4\u65b0\u3002</li> </ul> </li> <li>\u8fb9\u7f18\u529f\u80fd\uff1a<ul> <li>sourceChangeInContribution()<ul> <li>\u5bf9\u4e8e\u8fb9 (u,v)\uff0c\u8fb9\u51fd\u6570\u5206 3 \u4e2a\u6b65\u9aa4\u6267\u884c\uff1a(1) \u6e90\u9876\u70b9\u8d21\u732e\u7684\u53d8\u5316\uff0c\u5b83\u5904\u7406\u7279\u5b9a\u4e8e\u8be5\u6e90\u9876\u70b9\u7684\u8ba1\u7b97\uff0c(2) edgeFunction \u5408\u5e76\u4e86\u7279\u5b9a\u7684\u8ba1\u7b97 \u5230\u90a3\u6761\u8fb9\uff0c\u4ee5\u53ca (3) \u4f7f\u7528 addToAggregationAtomic \u5c06\u8fb9 (u, v) \u7684\u6700\u7ec8 change_in_contribution \u805a\u5408\u5230 v \u7684 aggregate_value \u4e2d\u3002</li> <li>\u5bf9\u4e8e\u9876\u70b9 u\uff0c\u7ed9\u5b9a\u5b83\u5728\u5f53\u524d\u8fed\u4ee3\u548c\u5148\u524d\u8fed\u4ee3\u4e2d\u7684\u503c\uff0c\u8ba1\u7b97 change_in_contribution\u3002 \u5bf9\u4e8e PageRank \u4e2d\u7684\u9876\u70b9 v\uff0c\u76f8\u540c\u7684\u503c (PR[v]/out_degree[v]) \u5fc5\u987b\u88ab\u63a8\u9001\u5230\u5b83\u7684\u6240\u6709 outNeighbors\u3002 \u5728\u57fa\u4e8e\u589e\u91cf\u7684\u8ba1\u7b97\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u63a8\u51fa (PR_curr[v] -PR_prev[v])/out_degree[v]\u3002 \u6ce8\u610f\uff1achange_in_contribution \u53ef\u4ee5\u76f4\u63a5\u5c31\u5730\u66f4\u65b0\u3002 \u66f4\u65b0 u_change_in_contribution \u4e0d\u9700\u8981 LOCKS/CAS</li> </ul> </li> <li>edgeFunction()<ul> <li>\u5bf9\u4e8e\u9876\u70b9 u\uff0c\u7ed9\u5b9a\u5176\u5728\u5f53\u524d\u8fed\u4ee3\u4e2d\u7684\u503c\u53ca\u5176\u8ba1\u7b97\u7684 change_in_contribution\uff0c\u66f4\u65b0\u7ed9\u5b9a\u8fb9 (u, v) \u7684 change_in_contribution\u3002 \u4f8b\u5982\uff0c\u5728Label Propagation\u4e2d\uff0c(u, v)\u7684edge_data\u4e58\u4ee5\u6bcf\u4e2afactor\u7684change_in_contribution\u3002 \u5982\u679c\u6765\u81ea u \u7684\u503c\u4e0d\u5e94\u5305\u542b\u5728 v \u7684\u805a\u5408\u503c\u4e2d\uff0c\u5219\u8fd4\u56de false\u3002\u5426\u5219\u8fd4\u56de true\u3002 \u6ce8\u610f\uff1a\u5bf9 change_in_contribution \u7684\u66f4\u6539\u5e94\u8be5\u5230\u4f4d\u3002 \u66f4\u65b0 u_change_in_contribution \u4e0d\u9700\u8981 LOCKS/CAS</li> </ul> </li> <li>edgeFunctionDelta()</li> <li>\u8fb9\u7f18\u64cd\u4f5c\u5206\u4e3a 3 \u4e2a\u9636\u6bb5\uff1a<ul> <li>\u786e\u5b9a\u6e90\u8d21\u732e - \u6b64\u5904\u6267\u884c\u4ec5\u4f9d\u8d56\u4e8e\u6e90\u503c\u7684\u7ed9\u5b9a\u9876\u70b9\u7684\u8ba1\u7b97\u3002 \u4f8b\u5982\uff0c\u5728 PageRank \u4e2d\uff0c\u9876\u70b9 u \u5c06\u503c PR[u]/out_degree[u] \u6dfb\u52a0\u5230\u5176\u6240\u6709 outNeighbors \u7684\u805a\u5408\u503c\u3002 \u7531\u4e8e PR[u]/out_degree[u] \u7684\u8ba1\u7b97\u5bf9\u4e8e\u5904\u7406 u \u7684\u6240\u6709 outEdges \u662f\u5e38\u89c1\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8ba1\u7b97\u4e00\u6b21\u8fd9\u4e2a\u503c\uff08\u6e90\u9876\u70b9\u7684\u8d21\u732e\uff09\u5e76\u5bf9\u6240\u6709 outEdges \u6267\u884c\u52a0\u6cd5\u3002</li> <li>\u6839\u636e\u8fb9\u6570\u636e\u8f6c\u6362\u8d21\u732e - \u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u6e90\u9876\u70b9\u8d21\u732e\u7531\u8fb9\u5c5e\u6027\u8f6c\u6362\u3002 \u4f8b\u5982\u5728\u52a0\u6743\u9875\u9762\u6392\u540d\u4e2d\uff0c\u8d21\u732e\u5c06\u4e58\u4ee5\u8fb9\u7f18\u6743\u91cd\u3002</li> <li>\u4f7f\u7528 addToAggregationAtomic() \u805a\u5408\u5bf9\u805a\u5408\u503c\u7684\u8d21\u732e\u3002</li> <li>\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b\u51fd\u6570\u4e0d\u9700\u8981 CAS \u6216\u9501\u3002 \u5728\u590d\u6742\u805a\u5408\u7684\u60c5\u51b5\u4e0b\uff0c\u5fc5\u987b\u5b9a\u4e49\u4e00\u4e2a\u989d\u5916\u7684 edgeFunctionDelta()\u3002 \u6709\u5173\u8fd9\u4e9b\u51fd\u6570\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 apps/GraphBoltEngine.h\u3001apps/GraphBoltEngine_complex.h\u3002</li> </ul> </li> </ul> </li> <li>\u9876\u70b9\u8ba1\u7b97\u51fd\u6570\u5e76\u786e\u5b9a\u8ba1\u7b97\u7ed3\u675f\uff1a<ul> <li>computeFunction()</li> <li>notDelZero()</li> <li>\u7ed9\u5b9a\u4e00\u4e2a\u805a\u5408\u503c\uff0ccomputeFunction() \u8ba1\u7b97\u5bf9\u5e94\u4e8e\u8be5\u805a\u5408\u503c\u7684\u9876\u70b9\u503c\u3002 \u4e3a\u4e86\u786e\u5b9a\u6536\u655b\u6761\u4ef6\uff0c\u4f7f\u7528 notDelZero() \u6765\u786e\u5b9a\u9876\u70b9\u7684\u503c\u4e0e\u5176\u4e4b\u524d\u7684\u503c\u76f8\u6bd4\u662f\u5426\u53d1\u751f\u4e86\u663e\u7740\u53d8\u5316\u3002 \u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u4e0d\u9700\u8981 CAS \u6216\u9501\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c06\u4ee5\u9876\u70b9\u5e76\u884c\u65b9\u5f0f\u8c03\u7528\u3002</li> </ul> </li> <li>\u786e\u5b9a\u8fb9\u7f18\u66f4\u65b0\u5982\u4f55\u5f71\u54cd\u6e90/\u76ee\u6807\uff1a<ul> <li>hasSourceChangedByUpdate()<ul> <li>\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8fb9\u6dfb\u52a0 (u, v)\uff0c\u5b9a\u4e49\u5b83\u5982\u4f55\u5f71\u54cd\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u7684\u6e90\u9876\u70b9\u3002 activateInCurrentIteration \u5b9a\u4e49\u6e90\u9876\u70b9\u662f\u5426\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002 \u4f8b\u5982\uff0c\u5728 PageRank \u4e2d\uff0c\u5982\u679c u \u7684 out_degree \u53d1\u751f\u4e86\u53d8\u5316\uff0c\u90a3\u4e48\u63a8\u9001\u5230\u5176\u6240\u6709 outNeighbors \u7684 u \u7684\u503c\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u66f4\u65b0\u56fe\u4e2d\u7684 out_degree(u) \u4e0d\u7b49\u4e8e\u5176\u5728\u5148\u524d\u7248\u672c\u56fe\u4e2d\u7684 out_degree\uff0c\u5219\u8fd4\u56de true\u3002 \u5426\u5219\uff0c\u8fd4\u56de\u5047\u3002 \u6ce8\u610f\uff1a\u786e\u4fdd\u5c06\u7ed9\u5b9a\u56fe\u5f62\u7248\u672c\u6240\u9700\u7684\u76f8\u5173\u4fe1\u606f\uff08\u7528\u4e8e\u7b97\u6cd5/\u5e94\u7528\u7a0b\u5e8f\uff09\u5b58\u50a8\u5728 global_info \u5bf9\u8c61\u4e2d\u3002 \u793a\u4f8b\uff1a\u5fc5\u987b\u4e3a\u7ed9\u5b9a\u56fe\u5f62\u5b58\u50a8\u6240\u6709\u9876\u70b9\u7684\u51fa\u5ea6\u3002 forceComputeInCurrentIteration \u5b9a\u4e49\u6e90\u9876\u70b9\u662f\u5426\u5fc5\u987b\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u91cd\u65b0\u8ba1\u7b97\u3002 \u4f8b\u5982\uff0c\u5728 COEM \u4e2d\uff0c\u5982\u679c\u9876\u70b9\u7684 inWeights \u603b\u548c\u53d1\u751f\u53d8\u5316\uff0c\u5219\u5e94\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u4e3a\u8be5\u9876\u70b9\u8c03\u7528 computeFuntion()\u3002</li> </ul> </li> <li>hasDestinationChangedByUpdate()<ul> <li>\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8fb9\u6dfb\u52a0 (u, v)\uff0c\u5b9a\u4e49\u76ee\u6807\u9876\u70b9\u662f\u5426\u5df2\u66f4\u6539\u3002 activateInCurrentIteration \u5b9a\u4e49\u76ee\u6807\u9876\u70b9\u662f\u5426\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002 \u6ce8\u610f\uff1a\u786e\u4fdd\u5c06\u7ed9\u5b9a\u56fe\u5f62\u7248\u672c\u6240\u9700\u7684\u76f8\u5173\u4fe1\u606f\uff08\u7528\u4e8e\u7b97\u6cd5/\u5e94\u7528\u7a0b\u5e8f\uff09\u5b58\u50a8\u5728 global_info \u5bf9\u8c61\u4e2d\u3002 \u793a\u4f8b\uff1a\u5fc5\u987b\u4e3a\u7ed9\u5b9a\u56fe\u5f62\u5b58\u50a8\u6240\u6709\u9876\u70b9\u7684\u51fa\u5ea6\u3002 forceComputeInCurrentIteration \u5b9a\u4e49\u662f\u5426\u5fc5\u987b\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u91cd\u65b0\u8ba1\u7b97\u76ee\u6807\u9876\u70b9\u3002</li> </ul> </li> <li>\u8fd9\u4e9b\u51fd\u6570\u7528\u4e8e\u5b9a\u4e49\u8fb9\u66f4\u65b0\u5982\u4f55\u5f71\u54cd\u6e90\u548c\u76ee\u6807\u9876\u70b9\uff0c\u5373\u662f\u5426\u5e94\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u6fc0\u6d3b\u9876\u70b9\u6216\u91cd\u65b0\u8ba1\u7b97\u5176\u503c\uff08\u4f7f\u7528 computeFuntion()\uff09\u3002 \u4f8b\u5982\uff0c\u5728 PageRank \u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u9876\u70b9\u7684 out_degree \u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u5b83\u5c06\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002 \u800c\u5728 COEM \u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u9876\u70b9\u7684 inWeights \u4e4b\u548c\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u5b83\u7684\u503c\u5e94\u8be5\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u8ba1\u7b97\u3002</li> </ul> </li> <li>\u8ba1\u7b97\u51fd\u6570<ul> <li>compute()</li> <li>\u8fd9\u662f\u5e94\u7528\u7a0b\u5e8f\u7684\u8d77\u70b9\u3002 GraphBolt \u5f15\u64ce\u5728\u6b64\u5904\u4f7f\u7528\u6240\u9700\u7684\u914d\u7f6e\u8fdb\u884c\u521d\u59cb\u5316\u5e76\u542f\u52a8\u3002</li> <li>\u9664\u4e86\u8fd9\u4e9b\u529f\u80fd\u4e4b\u5916\uff0c\u8be5\u7b97\u6cd5\u8fd8\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a Info \u7c7b\uff0c\u5176\u4e2d\u5305\u542b\u8be5\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u6240\u6709\u5168\u5c40\u53d8\u91cf/\u5e38\u91cf\u3002 \u5b83\u5e94\u8be5\u5b9e\u73b0\u4ee5\u4e0b\u529f\u80fd\uff1a</li> <li>copy()</li> <li>processUpdates()</li> <li>cleanup()</li> </ul> </li> </ul> </li> <li>KickStarter\u76f8\u5173\u51fd\u6570<ul> <li>KickStarter \u5f15\u64ce\u7528\u4e8e\u6d41\u5f0f\u4f20\u8f93\u57fa\u4e8e\u8def\u5f84\u7684/\u5355\u8c03\u56fe\u7b97\u6cd5\uff0c\u5982 SSSP\u3001BFS \u7b49\u3002</li> <li>\u4e0eGraphBolt\u5f15\u64ce\u7c7b\u4f3c\uff0cKickStarter\u5f15\u64ce\u4e5f\u63d0\u4f9b\u4e86\u8868\u8fbe\u7b97\u6cd5\u7684\u51fd\u6570\u3002</li> <li>\u9876\u70b9\u503c\u521d\u59cb\u5316\uff1a<ul> <li>initializeVertexValue()</li> </ul> </li> <li>\u4e3a\u7b2c\u4e00\u6b21\u8fed\u4ee3\u6fc0\u6d3b\u9876\u70b9/\u8ba1\u7b97\u9876\u70b9\uff1a<ul> <li>frontierVertex()</li> </ul> </li> <li>\u4e0e GraphBolt \u5f15\u64ce\u4e0d\u540c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u54ea\u4e9b\u9876\u70b9\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002</li> <li>\u8fb9\u7f18\u529f\u80fd\uff1a<ul> <li>edgeFunction()</li> <li>\u5bf9\u4e8e\u8fb9 (u, v)\uff0c\u6839\u636e u \u7684\u503c\u8ba1\u7b97 v \u7684\u503c\u3002 \u5982\u679c\u6765\u81ea u \u7684\u503c\u4e0d\u5e94\u7528\u4e8e\u66f4\u65b0 v \u7684\u503c\uff0c\u5219\u8fd4\u56de false\u3002\u5426\u5219\u8fd4\u56de true\u3002</li> </ul> </li> <li>\u4f20\u64ad\uff1a<ul> <li>shouldPropagate ()</li> <li>shouldPropagate \u6761\u4ef6\u7528\u4e8e\u786e\u5b9a\u9876\u70b9\u7684\u5355\u8c03\u6027\u662f\u5426\u4fdd\u6301\u7ed9\u5b9a\u7684 2 \u4e2a\u503c\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u7b97\u6cd5\u3002</li> </ul> </li> <li>\u8ba1\u7b97\u51fd\u6570<ul> <li>compute()</li> <li>\u5e94\u7528\u7a0b\u5e8f\u7684\u8d77\u70b9\u3002 KickStarter \u5f15\u64ce\u5728\u6b64\u5904\u4f7f\u7528\u6240\u9700\u7684\u914d\u7f6e\u8fdb\u884c\u521d\u59cb\u5316\u5e76\u542f\u52a8\u3002</li> </ul> </li> </ul> </li> <li>\u4f20\u7edf\u589e\u91cf\u8ba1\u7b97\u6a21\u578b<ul> <li>\u590d\u5236\uff0c\u590d\u5236\u4e0a\u4e00\u6b21\u8fed\u4ee3\u7684\u9876\u70b9\u503c\u3001\u805a\u5408\u503c\u548c\u589e\u91cf</li> <li>\u5982\u679c\u4e3a\u7b2c\u4e00\u6b21\u8fed\u4ee3\u5219\u8ba1\u7b97\u6240\u6709\u6d3b\u8dc3\u70b9\u7684\u805a\u5408\u503c</li> <li>\u6839\u636e\u4e0a\u6b21\u8fed\u4ee3\u7684 \u9876\u70b9\u6d3b\u8dc3\u60c5\u51b5 \u548c \u805a\u5408\u503c\u66f4\u65b0\u72b6\u51b5 \u5224\u65ad\u662f\u5426\u9700\u8981\u805a\u5408\u503c\u66f4\u65b0\u662f\u5426\u8981\u52a0\u5165\u5230\u6700\u7ec8\u66f4\u65b0 EdgeFunction</li> <li>\u5c06\u805a\u5408\u503c\u66f4\u65b0\u52a0\u5165\u5230\u9876\u70b9\u5e76\u6839\u636e\u9876\u70b9\u503c\u524d\u540e\u53d8\u5316\u60c5\u51b5\u5224\u65ad\u662f\u5426\u52a0\u5165\u4e0b\u4e00\u6b21\u6d3b\u8dc3\u9876\u70b9\u5e76\u8ba1\u7b97\u76f8\u5e94\u805a\u5408\u503c\u7528\u4e8e\u4e0b\u6b21\u8ba1\u7b97</li> <li>\u5224\u65ad\u6d3b\u8dc3\u70b9\u96c6\u662f\u5426\u4e3a\u7a7a\u548c\u6700\u5927\u8fed\u4ee3\u4e0a\u9650\u5224\u65ad\u662f\u5426\u8981\u9000\u51fa\u8fed\u4ee3</li> </ul> </li> <li>\u76f8\u5173\u8f93\u5165\u8f93\u51fa\u51fd\u6570<ul> <li>-s \uff1a\u6307\u793a\u4f7f\u7528\u5bf9\u79f0\uff08\u65e0\u5411\uff09\u56fe\u7684\u53ef\u9009\u53c2\u6570\u3002</li> <li>-streamPath\uff1a\u8f93\u5165\u6d41\u6587\u4ef6\u6216\u7ba1\u9053\u7684\u8def\u5f84\uff08\u6709\u5173\u8f93\u5165\u683c\u5f0f\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u7b2c 2.4 \u8282\uff09\u3002</li> <li>-numberOfUpdateBatches \uff1a\u53ef\u9009\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u8981\u8fdb\u884c\u7684\u8fb9\u7f18\u66f4\u65b0\u7684\u6570\u91cf\u3002 \u9ed8\u8ba4\u503c\u4e3a 1\u3002</li> <li>-nEdges\uff1a\u7ed9\u5b9a\u66f4\u65b0\u6279\u6b21\u4e2d\u8981\u5904\u7406\u7684\u8fb9\u7f18\u64cd\u4f5c\u6570\u3002</li> <li>-outputFile \uff1a\u7528\u4e8e\u6253\u5370\u7ed9\u5b9a\u7b97\u6cd5\u8f93\u51fa\u7684\u53ef\u9009\u53c2\u6570\u3002</li> <li>\u8f93\u5165\u56fe\u5f62\u6587\u4ef6\u8def\u5f84</li> </ul> </li> <li>\u8f93\u5165\u8f93\u51fa\u6587\u4ef6\u683c\u5f0f<ul> <li>SNAP \u8fb9\u8868\u683c\u5f0f\u548cAdjacencyGraph\u90bb\u63a5\u683c\u5f0f</li> <li>SNAP \u8fb9\u8868\u683c\u5f0f\uff1a\u7531\u4e00\u7cfb\u5217\u8fb9\u7ec4\u6210</li> <li>AdjacencyGraph\u683c\u5f0f<ul> <li>AdjacencyGraph</li> <li>\u9876\u70b9\u4e2a\u6570</li> <li>\u8fb9\u4e2a\u6570</li> <li>\u8fb9\u504f\u79fb\u91cf</li> <li>\u5bf9\u5e94\u8fb9</li> </ul> </li> </ul> </li> <li>\u6d41\u8f93\u5165\u6587\u4ef6\u5e94\u8be5\u5728\u5355\u72ec\u7684\u884c\u4e0a\u8fdb\u884c\u8fb9\u7f18\u64cd\u4f5c\uff08\u6dfb\u52a0/\u5220\u9664\uff09\u3002 \u8fb9\u7f18\u64cd\u4f5c\u7684\u683c\u5f0f\u5e94\u4e3a<code>[d/a] source destination</code>\uff0c\u5176\u4e2d<code>d</code>\u8868\u793a\u8fb9\u7f18\u5220\u9664\uff0c<code>a</code>\u8868\u793a\u8fb9\u7f18\u6dfb\u52a0\u3002 </li> <li>\u8fb9\u7f18\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528 tools/generators/streamGenerator.C \u901a\u8fc7\u7ba1\u9053\u6d41\u5f0f\u4f20\u8f93\u3002 \u5b83\u63a5\u53d7\u4ee5\u4e0b\u547d\u4ee4\u884c\u53c2\u6570\uff1a<ul> <li>-edgeOperationsFile\uff1a\u5305\u542b\u4e0a\u8ff0\u683c\u5f0f\u7684\u8fb9\u7f18\u64cd\u4f5c\u7684\u8f93\u5165\u6587\u4ef6\u3002</li> <li>-outputPipe \uff1a\u8fb9\u7f18\u6d41\u5f0f\u4f20\u8f93\u5230\u7684\u8f93\u51fa\u7ba1\u9053\u7684\u8def\u5f84\u3002</li> </ul> </li> <li>\u5e26\u6743\u91cd\u7684\u56fe SNAP\u548cAdjacencyGraph\u76f8\u540c\uff0cSNAP\u5728\u8fb9\u540e\u9762\u9644\u6709\u8fb9\u6743\uff0cAdjacencyGraph\u5728\u5bf9\u5e94\u8fb9\u540e\u9762\u589e\u52a0\u5bf9\u5e94\u6743\u503c</li> <li>\u6d41\u6444\u53d6\u5668 FIFO \u7531 -streamPath \u6307\u5b9a\u3002 \u53ef\u4ee5\u5c06\u8fb9\u6cbf\u64cd\u4f5c\u5199\u5165\u8be5 FIFO\u3002 -nEdges \u6307\u5b9a\u53ef\u4ee5\u5728\u5355\u4e2a\u6279\u6b21\u4e2d\u4f20\u9012\u7ed9 GraphBolt \u5f15\u64ce\u7684\u8fb9\u64cd\u4f5c\u7684\u6700\u5927\u6570\u91cf\u3002 GraphBolt \u5f15\u64ce\u5c06\u7ee7\u7eed\u4ece\u6d41\u6444\u53d6\u5668\u63a5\u6536\u8fb9\u7f18\u6279\u6b21\uff0c\u76f4\u5230\u6d41\u5173\u95ed\uff08\u5f53 FIFO \u4e0d\u518d\u6709\u5199\u5165\u5668\u65f6\uff09\u6216\u8d85\u8fc7 -numberOfBatches \u65f6\u3002 \u5982\u679cFIFO\u7684\u5199\u7aef\u6ca1\u6709\u6253\u5f00\uff0cGraphBolt\u5f15\u64ce\uff08\u4e5f\u5c31\u662f\u8bfb\u7aef\uff09\u4f1a\u963b\u585e\u7b49\u5f85\uff0c\u76f4\u5230\u6253\u5f00\u3002</li> <li>\u6709\u4e00\u4e9b\u53ef\u9009\u6807\u5fd7\u53ef\u4ee5\u5f71\u54cd\u884c\u4e3a\u5e76\u786e\u5b9a\u4f20\u9012\u7ed9\u547d\u4ee4\u884c\u53c2\u6570 -streamPath \u7684\u8fb9\u7f18\u64cd\u4f5c\u7684\u6709\u6548\u6027\uff1a<ul> <li>-fixedBatchSize\uff1a\u53ef\u9009\u6807\u5fd7\uff0c\u4ee5\u786e\u4fdd\u4e25\u683c\u9075\u5b88\u6279\u91cf\u5927\u5c0f\u3002 \u5982\u679c FIFO \u4e0d\u5305\u542b\u8db3\u591f\u7684\u8fb9\u7f18\uff0c\u6444\u53d6\u5668\u5c06\u963b\u585e\uff0c\u76f4\u5230\u5b83\u63a5\u6536\u5230\u7531 -nEdges \u6307\u5b9a\u7684\u8db3\u591f\u8fb9\u7f18\u6216\u76f4\u5230\u6d41\u5173\u95ed\u3002</li> <li>-enforceEdgeValidity\uff1a\u53ef\u9009\u6807\u5fd7\uff0c\u4ee5\u786e\u4fdd\u6279\u5904\u7406\u4e2d\u7684\u6240\u6709\u8fb9\u64cd\u4f5c\u90fd\u6709\u6548\u3002 \u4f8b\u5982\uff0c\u53ea\u6709\u5f53\u8981\u5220\u9664\u7684\u8fb9\u5b58\u5728\u4e8e\u56fe\u4e2d\u65f6\uff0c\u8fb9\u5220\u9664\u64cd\u4f5c\u624d\u6709\u6548\u3002 \u5728\u7b80\u5355\u56fe\u7684\u60c5\u51b5\u4e0b\uff08\u5982\u4e0b\u6240\u8ff0\uff09\uff0c\u4ec5\u5f53\u56fe\u4e2d\u5f53\u524d\u4e0d\u5b58\u5728\u8be5\u8fb9\u65f6\uff0c\u8fb9\u6dfb\u52a0\u64cd\u4f5c\u624d\u6709\u6548\u3002 \u5728\u8ba1\u7b97\u6279\u5904\u7406\u4e2d\u7684\u8fb9\u6570\u65f6\uff0c\u65e0\u6548\u8fb9\u5c06\u88ab\u4e22\u5f03\u5e76\u4e14\u4e0d\u5305\u62ec\u5728\u5185\u3002</li> <li>-simple\uff1a\u7528\u4e8e\u786e\u4fdd\u8f93\u5165\u56fe\u4fdd\u6301\u7b80\u5355\u56fe\uff08\u5373\u6ca1\u6709\u91cd\u590d\u8fb9\uff09\u7684\u53ef\u9009\u6807\u5fd7\u3002 \u68c0\u67e5\u8f93\u5165\u56fe\u4ee5\u5220\u9664\u6240\u6709\u91cd\u590d\u8fb9\u3002 \u6279\u5904\u7406\u4e2d\u4e0d\u5141\u8bb8\u91cd\u590d\u8fb9\uff0c\u5e76\u4e14\u68c0\u67e5\u8fb9\u6dfb\u52a0\u4ee5\u786e\u4fdd\u8981\u6dfb\u52a0\u7684\u8fb9\u5728\u56fe\u4e2d\u5c1a\u4e0d\u5b58\u5728\u3002</li> <li>-debug\uff1a\u53ef\u9009\u6807\u5fd7\uff0c\u7528\u4e8e\u6253\u5370\u88ab\u786e\u5b9a\u4e3a\u65e0\u6548\u7684\u8fb9\u7f18\u3002</li> </ul> </li> </ul> </li> <li>Tegra\uff1a\u8fdb\u5316\u56fe\u7684\u9ad8\u6548\u4e34\u65f6\u5206\u6790<ul> <li>\u5b9e\u4f53\u6269\u5c55\u589e\u91cf\u8ba1\u7b97<ul> <li>\u865a\u7ebf\u5706\u5708\u8868\u793a\u91cd\u65b0\u8ba1\u7b97\u7684\u9876\u70b9\uff0c\u53cc\u5706\u5708\u8868\u793a\u9700\u8981\u51fa\u73b0\u5728\u5b50\u56fe\u4e2d\u4ee5\u8ba1\u7b97\u6b63\u786e\u7b54\u6848\u4f46\u4e0d\u91cd\u65b0\u8ba1\u7b97\u72b6\u6001\u7684\u9876\u70b9\u3002 </li> <li>\u56db\u4e2a\u9636\u6bb5<ul> <li>\u521d\u59cb\u6267\u884c<ul> <li>\u5f53\u7b97\u6cd5\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\uff0cICE \u5b58\u50a8\u9876\u70b9\uff08\u548c\u8fb9\uff0c\u5982\u679c\u7b97\u6cd5\u8981\u6c42\u5b83\uff09\u4f5c\u4e3a\u56fe\u4e2d\u7684\u5c5e\u6027\u3002\u5728\u6bcf\u6b21\u8fed\u4ee3\u7ed3\u675f\u65f6\uff0c\u56fe\u8868\u7684\u5feb\u7167\u90fd\u4f1a\u6dfb\u52a0\u5230\u65f6\u5149\u5012\u6d41\u4e2d\u3002 ID \u662f\u4f7f\u7528\u56fe\u7684\u552f\u4e00 ID\u3001\u7b97\u6cd5\u6807\u8bc6\u7b26\u548c\u8fed\u4ee3\u6b21\u6570\u7684\u7ec4\u5408\u751f\u6210\u7684\u3002</li> </ul> </li> <li>\u5f15\u5bfc<ul> <li>\u5f53\u8981\u5728\u65b0\u7684\u5feb\u7167\u4e0a\u6267\u884c\u8ba1\u7b97\u65f6\uff0cICE \u9700\u8981\u5f15\u5bfc\u589e\u91cf\u8ba1\u7b97\u3002\u76f4\u89c2\u5730\uff0c\u5fc5\u987b\u5728\u5f15\u5bfc\u7a0b\u5e8f\u4e2d\u53c2\u4e0e\u8ba1\u7b97\u7684\u5b50\u56fe\u7531\u56fe\u7684\u66f4\u65b0\u4ee5\u53ca\u53d7\u66f4\u65b0\u5f71\u54cd\u7684\u5b9e\u4f53\u7ec4\u6210\u3002</li> <li>\u4f8b\u5982\uff0c\u5e94\u5305\u62ec\u4efb\u4f55\u65b0\u6dfb\u52a0\u6216\u66f4\u6539\u7684\u9876\u70b9\u3002\u7c7b\u4f3c\u5730\uff0c\u8fb9\u4fee\u6539\u5c06\u5bfc\u81f4\u6e90\u548c/\u6216\u76ee\u6807\u9876\u70b9\u88ab\u5305\u62ec\u5728\u8ba1\u7b97\u4e2d\u3002</li> <li>\u7136\u800c\uff0c\u53d7\u5f71\u54cd\u7684\u5b9e\u4f53\u672c\u8eab\u5e76\u4e0d\u8db3\u4ee5\u786e\u4fdd\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u56fe\u5e76\u884c\u6267\u884c\u4e2d\uff0c\u56fe\u5b9e\u4f53\u7684\u72b6\u6001\u53d6\u51b3\u4e8e\u5176\u90bb\u5c45\u7684\u96c6\u4f53\u8f93\u5165\u3002\u56e0\u6b64\uff0cICE \u8fd8\u5fc5\u987b\u5305\u62ec\u53d7\u5f71\u54cd\u5b9e\u4f53\u7684\u4e00\u8df3\u90bb\u5c45\uff0c\u56e0\u6b64\u81ea\u4e3e\u5b50\u56fe\u7531\u53d7\u5f71\u54cd\u5b9e\u4f53\u53ca\u5176\u4e00\u8df3\u90bb\u5c45\u7ec4\u6210\u3002 ICE \u4e3a\u6b64\u76ee\u7684\u4f7f\u7528\u6269\u5c55 API\u3002</li> </ul> </li> <li>\u8fed\u4ee3<ul> <li>\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0cICE \u90fd\u9700\u8981\u627e\u5230\u6b63\u786e\u7684\u5b50\u56fe\u6765\u6267\u884c\u8ba1\u7b97\u3002 ICE \u5229\u7528\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u56fe\u5e76\u884c\u62bd\u8c61\u7684\u6027\u8d28\u9650\u5236\u4e86\u8fed\u4ee3\u4e2d\u66f4\u65b0\u7684\u4f20\u64ad\u8ddd\u79bb\u3002\u76f4\u89c2\u5730\uff0c\u5728\u4efb\u4f55\u8fed\u4ee3\u4e2d\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u72b6\u6001\u7684\u56fe\u5b9e\u4f53\u5c06\u5305\u542b\u5728 ICE \u5df2\u7ecf\u4ece\u4e0a\u6b21\u8fed\u4ee3\u5f00\u59cb\u6267\u884c\u8ba1\u7b97\u7684\u5b50\u56fe\u4e2d\u3002</li> <li>\u5728\u521d\u59cb\u5f15\u5bfc\u7a0b\u5e8f\u4e4b\u540e\uff0cICE \u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u524d\u4e00\u6b21\u8fed\u4ee3\u5bf9\u5b50\u56fe\u7684\u66f4\u6539\uff08\u4f7f\u7528 diff\uff09\u5e76\u6269\u5c55\u5230\u53d7\u5f71\u54cd\u5b9e\u4f53\u7684\u5355\u8df3\u90bb\u57df\uff08\u4f7f\u7528 expand\uff09\u6765\u5728\u7ed9\u5b9a\u8fed\u4ee3\u4e2d\u627e\u5230\u65b0\u5b50\u56fe\u3002</li> <li>\u5bf9\u4e8e\u6ca1\u6709\u91cd\u65b0\u8ba1\u7b97\u72b6\u6001\u7684\u9876\u70b9/\u8fb9\uff0cICE \u53ea\u662f\u4ece\u65f6\u5149\u5012\u6d41\u4e2d\u590d\u5236\u72b6\u6001\uff08\u4f7f\u7528\u5408\u5e76\uff09\u3002</li> </ul> </li> <li>\u7ec8\u6b62<ul> <li>\u4e0e\u521d\u59cb\u6267\u884c\u76f8\u6bd4\uff0c\u5bf9\u56fe\u5f62\u7684\u4fee\u6539\u53ef\u80fd\u4f1a\u5bfc\u81f4\u66f4\u591a\uff08\u6216\u66f4\u5c11\uff09\u7684\u8fed\u4ee3\u6b21\u6570\u3002\u4e0e\u666e\u901a\u7684\u56fe\u5e76\u884c\u8ba1\u7b97\u4e0d\u540c\uff0cICE \u4e0d\u4e00\u5b9a\u4f1a\u5728\u5b50\u56fe\u6536\u655b\u65f6\u505c\u6b62\u3002\u5982\u679c\u5728\u521d\u59cb\u6267\u884c\u7684\u5ef6\u65f6\u4e2d\u5b58\u50a8\u4e86\u66f4\u591a\u8fed\u4ee3\uff0cICE \u9700\u8981\u68c0\u67e5\u662f\u5426\u5fc5\u987b\u590d\u5236\u56fe\u4e2d\u672a\u66f4\u6539\u7684\u90e8\u5206\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u5b50\u56fe\u8fd8\u6ca1\u6709\u6536\u655b\uff0c\u6ca1\u6709\u66f4\u591a\u5bf9\u5e94\u7684\u8fed\u4ee3\uff0cICE\u5c31\u9700\u8981\u7ee7\u7eed\u3002\u4e3a\u6b64\uff0c\u5b83\u53ea\u9700\u4ece\u8be5\u70b9\u5207\u6362\u5230\u6b63\u5e38\uff08\u975e\u589e\u91cf\uff09\u8ba1\u7b97\u3002</li> <li>ICE \u4ec5\u5728\u5b50\u56fe\u6536\u655b\u65f6\u6536\u655b\uff0c\u5e76\u4e14\u6ca1\u6709\u5b9e\u4f53\u9700\u8981\u4ece\u65f6\u5149\u5012\u6d41\u4e2d\u5b58\u50a8\u7684\u5feb\u7167\u590d\u5236\u5176\u72b6\u6001\u3002</li> </ul> </li> </ul> </li> <li>\u4f18\u5316<ul> <li>ICE \u7684\u8bbe\u8ba1\u8ba9\u6211\u4eec\u514b\u670d\u4e86\u8fd9\u79cd\u4f4e\u6548\u7387\u3002\u7531\u4e8e ICE \u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u751f\u6210\u4e0e\u5b8c\u5168\u91cd\u65b0\u6267\u884c\u76f8\u540c\u7684\u4e2d\u95f4\u72b6\u6001\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u5207\u6362\u5230\u5b8c\u5168\u91cd\u65b0\u6267\u884c\uff1b\u5728\u8fed\u4ee3\u8fb9\u754c\u5904\uff08\u5373\uff0c\u5728\u6267\u884c\u671f\u95f4\u7684\u8fed\u4ee3\u5f00\u59cb\u5904\uff09\uff0c\u8bad\u7ec3\u4e00\u4e2a\u7b80\u5355\u7684\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\u6765\u9884\u6d4b\uff0c\u5728\u8fed\u4ee3\u5f00\u59cb\u65f6\uff0c\u4e0e\u7ee7\u7eed\u589e\u91cf\u6267\u884c\u76f8\u6bd4\uff0c\u4ece\u8be5\u70b9\u5207\u6362\u5230\u5b8c\u5168\u91cd\u65b0\u6267\u884c\u662f\u5426\u4f1a\u66f4\u5feb\u3002</li> <li>\u53c2\u4e0e\u8ba1\u7b97\u7684\u9876\u70b9\u6570\u3001\u6d3b\u52a8\u9876\u70b9\u7684\u5e73\u5747\u5ea6\u6570\u3001\u6d3b\u52a8\u5206\u533a\u6570\u3001\u751f\u6210\u7684\u6d88\u606f\u6570\u6bcf\u4e2a\u9876\u70b9\u3001\u6bcf\u4e2a\u9876\u70b9\u63a5\u6536\u5230\u7684\u6d88\u606f\u6570\u3001\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\u7684\u6570\u636e\u91cf\u4ee5\u53ca\u5b8c\u6210\u8fed\u4ee3\u6240\u9700\u7684\u65f6\u95f4</li> </ul> </li> </ul> </li> </ul> </li> <li>\u4f18\u5316\u65b9\u6848<ul> <li>tegra \u589e\u91cf\u8ba1\u7b97 &amp; graphbolt\u589e\u91cf\u8ba1\u7b97 &amp; \u4ece\u5934\u5f00\u59cb \u4e09\u8005\u7684\u4e00\u4e2a\u81ea\u52a8\u5207\u6362</li> <li>graphbolt\u505a\u4f18\u5316\u7684\u90a3\u7bc7\u5173\u4e8e\u51cf\u5c11\u5185\u5b58\u5f00\u9500\u7684\u8bba\u6587\uff0c\u91cc\u9762\u63d0\u5230\u7684\u4e24\u79cd\u4f18\u5316\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u505a\uff0c\u4f60\u5b9e\u73b0\u51fa\u6765\u4ee5\u540e\u4e5f\u53ef\u4ee5\u52a0\u4e2a\u5207\u6362\u4f18\u5316\u4ec0\u4e48\u7684</li> <li>graphbolt\u90a3\u4e2a\u5207\u6362\u8bba\u6587\u91cc\u9762\u8bf4\u7684\u662f\u56e0\u4e3a\u8bb0\u5f55\u7684\u4e2d\u95f4\u7ed3\u679c\u8fdb\u884c\u4e86\u526a\u679d\uff0c\u5206\u4e3a\u6c34\u5e73\u7684\u548c\u5782\u76f4\u7684\u4e24\u79cd\uff0c\u6bd4\u5982\u6c34\u5e73\u7684\u662f\u53ea\u8bb0\u5f55\u4e86\u524dk\u6b21\u8fed\u4ee3\u7684\u4e2d\u95f4\u7ed3\u679c\uff0c\u5bf9\u4e8e\u7b2ck\u6b21\u8fed\u4ee3\u4e4b\u540e\u7684\u7531\u4e8e\u6ca1\u6709\u4e2d\u95f4\u7ed3\u679c\u6240\u4ee5\u65e0\u6cd5\u589e\u91cf\u8ba1\u7b97\uff0c\u56e0\u6b64\u5c31\u4f1a\u5207\u6362\u5230\u4ece\u5934\u7b97\uff0c\u4f46\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u4f55\u4fdd\u8bc1\u5207\u6362\u65f6\u6d3b\u8dc3\u70b9\u96c6\u7684\u6b63\u786e\u6027</li> <li>tegra\u7684\u589e\u91cf\u8ba1\u7b97\u65b9\u6cd5\u5c31\u662f\u8bf4\u548cgraphbolt\u4e00\u6837\uff0c\u4e5f\u8981\u8bb0\u5f55\u6bcf\u4e00\u6b21\u8fed\u4ee3\u7684\u4e2d\u95f4\u7ed3\u679c\uff0c\u4f46\u662f\u5b83\u7684\u589e\u91cf\u8ba1\u7b97\u65b9\u6cd5\u4e0d\u662f\u5728\u5386\u53f2\u7ed3\u679c\u4e0a\u8fdb\u884c\u4fee\u6b63\uff0c\u800c\u662f\u8bf4\u5bf9\u4e8e\u4e0d\u53d7\u66f4\u65b0\u5f71\u54cd\u7684\u9876\u70b9\u7684\u4e2d\u95f4\u7ed3\u679c\u5c31\u76f4\u63a5copy\uff0c\u800c\u53d7\u5f71\u54cd\u7684\u90a3\u4e9b\u9876\u70b9\u5c31\u91c7\u7528\u4f20\u7edf\u7684\u8ba1\u7b97\u65b9\u6cd5\uff08\u5c31\u662f\u57fa\u4e8e\u4e0a\u4e00\u8f6e\u8fed\u4ee3\u7684\u503c\u6765\u7b97\u5f53\u524d\u8fed\u4ee3\u7684\u503c\uff09</li> </ul> </li> </ul>"},{"location":"course/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/","title":"\u6570\u5b57\u56fe\u50cf\u5904\u7406\u603b\u590d\u4e60","text":""},{"location":"course/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_2","title":"\u7b2c\u4e00\u7ae0 \u7eea\u8bba","text":"<p>\u56fe\u50cf\u548c\u6570\u5b57\u56fe\u50cf</p> <p>\u56fe\u50cf\u4e3a\u53ef\u4ee5\u770b\u4f5c\u662f\u5bf9\u7269\u4f53\u6216\u573a\u666f\u7684\u4e00\u79cd\u8868\u73b0\u5f62\u5f0f\uff0c\u62bd\u8c61\u5b9a\u4e49\uff1a\u4e8c\u7ef4\u51fd\u6570f(x, y)</p> <p>\u6570\u5b57\u56fe\u50cf\u4e3a\u79bb\u6563\u5316\u4e86\u7684\u56fe\u50cf\uff0c\u5373\u5bf9x\uff0cy \u548c f \u8fdb\u884c\u79bb\u6563\u5316</p> <p>\u6570\u5b57\u56fe\u50cf\u5904\u7406\u6982\u5ff5</p> <p>1.\u72ed\u4e49\uff08\u8f93\u5165\u548c\u8f93\u51fa\uff09\uff1a\u5bf9\u56fe\u50cf\u8fdb\u884c\u5404\u79cd\u52a0\u5de5\uff0c\u4ee5\u6539\u5584\u56fe\u50cf\u7684\u89c6\u89c9\u6548\u679c\u6216\u7a81\u51fa\u76ee\u6807\uff0c\u5f3a\u8c03\u56fe\u50cf\u4e4b\u95f4\u8fdb\u884c\u7684\u53d8\u6362\uff0c\u662f\u4e00\u4e2a\u4ece\u56fe\u50cf\u5230\u56fe\u50cf\u7684\u8fc7\u7a0b </p> <p>2.\u5e7f\u4e49\uff1a\u4e0e\u56fe\u50cf\u76f8\u5173\u7684\u5904\u7406\uff08\u56fe\u50cf\u5206\u6790\u3001\u7406\u89e3\u548c\u673a\u5668\u89c6\u89c9\uff09 </p> <p>3.\u5e7f\u4e49\u4e0a\u5206\u4e3a\u4e09\u79cd\u7c7b\u578b\uff1a\u4f4e\u3001\u4e2d\u3001\u9ad8\u7ea7\u5904\u7406 </p> <p>\u200b   1\uff09\u4f4e\u7ea7\u5904\u7406\uff1a\u8f93\u5165\u8f93\u51fa\u90fd\u662f\u56fe\u50cf\uff08\u589e\u5f3a\uff0c\u590d\u539f\uff0c\u7f16\u7801\uff0c\u538b\u7f29\uff09</p> <p>\u200b   2\uff09\u4e2d\u7ea7\u5904\u7406\uff1a\u56fe\u50cf\u5206\u5272\u53ca\u76ee\u6807\u7684\u63cf\u8ff0\uff0c\u8f93\u51fa\u662f\u76ee\u6807\u7684\u7279\u5f81\u6570\u636e \uff08\u68c0\u6d4b\uff0c\u5206\u5272\uff09 </p> <p>\u200b   3\uff09\u9ad8\u7ea7\u5904\u7406\uff1a\u76ee\u6807\u7269\u4f53\u53ca\u76f8\u4e92\u5173\u7cfb\u7684\u7406\u89e3\uff0c\u8f93\u51fa\u662f\u66f4\u62bd\u8c61\u7684\u6570\u636e\uff08\u5206\u7c7b\uff0c\u8bc6\u522b\uff0c\u89e3\u91ca\uff09 </p> <p>\u56fe\u50cf\u5904\u7406\u4e3b\u8981\u662f\u4f4e\u7ea7\u5904\u7406\u53ca\u90e8\u5206\u4e2d\u7ea7\u5904\u7406\u3002</p>"},{"location":"course/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_3","title":"\u7b2c\u4e8c\u7ae0 \u6570\u5b57\u56fe\u50cf\u57fa\u7840","text":"<p>\u56fe\u50cf\u83b7\u53d6</p> <p>\u4eba\u7c7b\u89c6\u89c9\u7cfb\u7edf\u3001\u5149\u548c\u7535\u78c1\u6ce2\u7406\u8bba\u662f\u6570\u5b57\u56fe\u50cf\u6765\u6e90\u7684\u57fa\u7840</p> <p>\u4eae\u5ea6\u6210\u50cf\u6a21\u578b</p> <p>2-D\u4eae\u5ea6\u51fd\u6570\uff1af (x, y)=r (x, y) (\u6ce8\uff1a\u53cd\u5c04\u6210\u5206) * i (x, y) (\u6ce8\uff1a\u7167\u5ea6\u6210\u5206)</p> <p>\u89c6\u7f51\u819c\u4e2d\u592e\u7684\u201c\u89c6\u9525\u7ec6\u80de\u89c6\u89c9\u201d\u548c\u89c6\u7f51\u819c\u8fb9\u7f18\u7684\u201c\u89c6\u6746\u7ec6\u80de\u89c6\u89c9\u201d\uff0c\u4e5f\u53eb\u505a\u660e\u89c6\u89c9\u548c\u6697\u89c6\u89c9\u3002</p> <p>\u9525\u72b6\u7ec6\u80de\u8d1f\u8d23\u611f\u53d7\u989c\u8272\u4fe1\u606f\u7684\u3002 </p> <p>\u56fe\u50cf\u6570\u5b57\u5316</p> <p>\u5c06\u4ee3\u8868\u56fe\u50cf\u7684\u8fde\u7eed(\u6a21\u62df)\u4fe1\u53f7\u8f6c\u6362\u4e3a\u79bb\u6563(\u6570\u5b57)\u4fe1\u53f7\u7684\u8fc7\u7a0b\u79f0\u4e3a\u56fe\u50cf\u6570\u5b57\u5316</p> <p>\u6b65\u9aa4\uff1a\u91c7\u6837\u548c\u91cf\u5316 </p> <p>\u4e3b\u8981\u6280\u672f\uff1a 1) \u6210\u50cf\uff1a\u5149\u4fe1\u606f\uff0d&gt;\u7535\u4fe1\u53f7  2) \u6a21\u6570\u8f6c\u6362\uff08A/D Converter \uff09</p> <p>\u56fe\u50cf\u91c7\u6837\u548c\u91cf\u5316</p> <p>\u91c7\u6837\u662f\u5747\u5300\u7684\uff0c\u91cf\u5316\u53ef\u4ee5\u5747\u5300\uff0c\u53ef\u4ee5\u975e\u5747\u5300\u3002</p> <p>\u91c7\u6837\u548c\u91cf\u5316\u662f\u56fe\u50cf\u83b7\u53d6\u4e2d\u7684\u4e24\u5927\u6280\u672f\u3002</p> <p>\u7a7a\u95f4\u548c\u7070\u5ea6\u5206\u8fa8\u7387\u662f\u56fe\u50cf\u7684\u57fa\u672c\u5c5e\u6027</p> <p>1\uff09\u91c7\u6837</p> <p>\u7a7a\u95f4\u5750\u6807\u7684\u79bb\u6563\u5316\u79f0\u4e3a\u7a7a\u95f4\u91c7\u6837\uff0c\u7b80\u79f0\u91c7\u6837\uff0c\u786e\u5b9a\u4e86\u56fe\u50cf\u7684\u7a7a\u95f4\u5206\u8fa8\u7387</p> <p>\u5373\u7528\u7a7a\u95f4\u4e0a\u90e8\u5206\u70b9\u7684\u7070\u5ea6\u503c\u4ee3\u8868\u56fe\u50cf\u3002\u8fd9\u4e9b\u70b9\u79f0\u4e3a\u91c7 \u6837\u70b9</p> <p>\u65b9\u5f0f\u4e3a\u70b9\u9635\u91c7\u6837\uff1a\u76f4\u63a5\u5bf9\u8868\u793a\u56fe\u50cf\u7684\u4e8c\u7ef4\u51fd\u6570\u503c\u8fdb\u884c\u91c7\u6837\uff0c \u6240\u5f97\u7684\u7ed3\u679c\u5c31\u662f\u4e00\u4e2a\u6837\u70b9\u503c\u5e8f\u5217</p> <p>2\uff09\u91cf\u5316</p> <p>\u5bf9\u91c7\u6837\u70b9\u4eae\u5ea6\uff08\u7070\u5ea6\uff09\u503c\u7684\u79bb\u6563\u5316\u8fc7\u7a0b\u3002\u786e\u5b9a\u4e86\u56fe\u50cf \u7684\u7070\uff08\u5e45\uff09\u5ea6\u5206\u8fa8\u7387 </p> <p>\u4e24\u79cd\u91cf\u5316\uff1a\u5747\u5300\u91cf\u5316\u3001\u975e\u5747\u5300\u91cf\u5316 </p> <p>\u5747\u5300\u91cf\u5316: \u5c06\u6837\u70b9\u7070\u5ea6\u7ea7\u503c\u7b49\u95f4\u9694\u5206\u6863\u53d6\u6574\uff0c\u79f0\u4e3a\u5747\u5300\u91cf\u5316 </p> <p>\u975e\u5747\u5300\u91cf\u5316: \u5c06\u6837\u70b9\u7070\u5ea6\u7ea7\u503c\u4e0d\u7b49\u95f4\u9694\u5206\u6863\u53d6\u6574</p> <p>3\uff09\u91c7\u6837\u548c\u91cf\u5316\u7684\u7ea7\u6570 </p> <p>\u5047\u5b9a\u56fe\u50cf\u53d6M\u00d7N\u4e2a\u91c7\u6837\u70b9\uff0c\u5bf9\u6837\u672c\u70b9\u7070\u5ea6\u503c\u8fdb\u884cG\u7ea7\u5206\u6863\u53d6\u6574 \u2013</p> <p>M, N, G \u4e00\u822c\u53d62\u7684\u6574\u6570\u6b21\u5e42 \u2013M=2^m\uff1bN=2^n\uff1bG=2^k</p> <p>\u50cf\u7d20\u7a7a\u95f4\u7684\u5173\u7cfb</p> <p>1\uff09\u50cf\u7d20\u7684\u90bb\u57df\u4e0e\u8fde\u63a5</p> <p>\u90bb\u63a5---\u50cf\u7d20\u95f4\u7684\u7a7a\u95f4\u5173\u7cfb</p> <p>\u2460 \u56db\u90bb\u57df N_4(p),p(x,y)=(x+1,y),(x-1,y),(x,y+1),(x,y-1)</p> <p>\u2461 \u5bf9\u89d2\u90bb\u57df N_D(p):p(x,y)=(x-1,y-1),(x+1,y-1),(x-1,y+1),(x+1,y+1)</p> <p>\u2462 8-\u90bb\u57df N_8(P):p(x,y)=N_4(p)+N_D(p)</p> <p>2\uff09\u8fde\u63a5</p> <p>\u8fde\u63a5\uff1a\u7a7a\u95f4\u4e0a\u90bb\u63a5\u4e14\u50cf\u7d20\u7070\u5ea6\u503c\u76f8\u4f3c</p> <p>\u4e24\u4e2a\u50cf\u7d20\u662f\u5426\u8fde\u63a5\uff1a</p> <p>(1) \u662f\u5426\u63a5\u89e6\uff08\u90bb\u63a5\uff09</p> <p>(2) \u7070\u5ea6\u503c\u662f\u5426\u6ee1\u8db3\u67d0\u4e2a\u7279\u5b9a\u7684\u76f8\u4f3c\u51c6\u5219 \u7070\u5ea6\u503c\u76f8\u7b49 \u6216 \u540c\u5728\u4e00\u4e2a\u7070\u5ea6\u503c\u96c6\u5408\u4e2d</p> <p>\u4e09\u79cd\u8fde\u63a5\u65b9\u5f0f\uff0c\u5047\u8bbeV\u4e3a\u7070\u5ea6\u503c\u96c6\u5408</p> <p>\u2460 4-\u8fde\u63a5  2\u4e2a\u50cf\u7d20 p \u548c r \u5728V \u4e2d\u53d6\u503c \u4e14 r \u5728N4 (p)\u4e2d</p> <p>\u2461 8-\u8fde\u63a5 2\u4e2a\u50cf\u7d20 p \u548c r \u5728V \u4e2d\u53d6\u503c \u4e14 r \u5728N8 (p)\u4e2d</p> <p>\u2462 m-\u8fde\u63a5\uff08\u6df7\u5408\u8fde\u63a5\uff09 2\u4e2a\u50cf\u7d20 p \u548c r \u5728V \u4e2d\u53d6\u503c\uff0c\u4e14\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u4e4b\u4e00 </p> <p>(a) r \u5728N_4 (p)\u4e2d </p> <p>(b) r \u5728N_D (p)\u4e2d\u4e14\u96c6\u5408N_4 (p) \u2229 N_4 (r)\u662f\u7a7a\u96c6 \uff08\u8fd9\u4e2a\u96c6\u5408\u662f\u7531 p \u548c r \u7684\u5728V\u4e2d\u53d6\u503c\u76844-\u8fde\u63a5\u50cf\u7d20\u7ec4\u6210\u7684\uff09</p> <p></p> <p>3\uff09\u8fde\u901a\u6027</p> <p>\u50cf\u7d20\u7684\u8fde\u901a \u2013 \u53cd\u6620\u4e24\u4e2a\u50cf\u7d20\u95f4\u7684\u7a7a\u95f4\u5173\u7cfb</p> <p>\u901a\u8def\u548c\u8fde\u901a\uff0c\u79cd\u7c7b\u5206\u4e3a\u56db\u8fde\u901a\uff0c\u516b\u8fde\u901a\uff0cm\u8fde\u901a</p> <p>4\uff09\u8ddd\u79bb\u5ea6\u91cf</p> <p>\u8ddd\u79bb\u51fd\u6570\u5b9a\u4e49\uff1a</p> <p>\u5bf9\u4e8e\u50cf\u7d20p, q\u548cz, \u5206\u522b\u5177\u6709\u5750\u6807(x, y), (s, t), (u, v), \u5982\u679c\uff1a</p> <p>(a) D(p, q)\u22650 [D(p, q)= 0, \u5f53\u4e14\u4ec5\u5f53 p=q] </p> <p>(b) D(p, q)= D(q, p) </p> <p>\u00a9 D(p, z) \u2264 D(p, q) + D(q, z)</p> <p>\u5219D\u662f\u8ddd\u79bb\u51fd\u6570\u6216\u5ea6\u91cf</p> <p>\u2460 \u6b27\u6c0f\u8ddd\u79bb D_e(p,q)=[(x-s)^2+(y-t)^2]^{1/2}</p> <p>\u2461 D4\u8ddd\u79bb\uff08\u57ce\u5e02\u8ddd\u79bb\uff09 D_4( p,q) = |x \u2212 s| + |y \u2212t|</p> <p>\u2462 D8\u8ddd\u79bb\uff08\u68cb\u76d8\u8ddd\u79bb\uff09D_8(p,q) = max(|x \u2212 s|,| y \u2212t|)</p> <p>\u6ce8\u610f\uff1a</p> <p>De\u8ddd\u79bb\u4e0e\u50cf\u7d20\u7684\u70b9\u5750\u6807\u76f8\u5173\uff0c\u4e0e\u50cf\u7d20\u95f4\u7684\u8fde\u901a\u6027\u65e0\u5173 </p> <p>D4\u548cD8\u8ddd\u79bb\u53ef\u4ee5\u770b\u4f5c\u662f\u901a\u8def\u4e0a\u8fde\u63a5\u7684\u6570\u76ee\u6700\u5c0f\u503c </p> <p>\u5bf9\u4e8eD4\u3001D8\u548cDm\uff0c\u5982\u679c\u50cf\u7d20p\u548cq\u95f4\u65e0\u8fde\u63a5\uff0c\u5219\u8ddd\u79bb\u662f\u65e0\u7a77\u5927</p> <p>\u4ee5\u540e\u7684\u8ddd\u79bb\u9690\u542b\u8fde\u901a\u6027</p> <p>\u56fe\u50cf\u7684\u8fd0\u7b97</p> <p>\u52a0\u6cd5\uff1aC(x, y) = A(x, y) + B(x, y) \u51cf\u6cd5\uff1aC(x, y) = A(x, y) - B(x, y) \u4e58\u6cd5\uff1aC(x, y) = A(x, y) * B(x, y) </p> <p>\u6c42\u53cd\uff1ag(x, y) = 255 - f(x, y) \u5f02\u6216\uff1ag(x, y) = f(x, y) \u2295 h(x, y) \u6216\u8fd0\u7b97\uff1ag(x, y) = f(x, y) | h(x, y)</p> <p>\u4e0e\u8fd0\u7b97\uff1a g(x, y) = f(x, y) &amp; h(x, y)</p> <p>\u56fe\u50cf\u5185\u63d2</p> <p>\u56fe\u50cf\u5185\u63d2\uff1a\u653e\u5927\uff0c\u6536\u7f29\uff0c\u65cb\u8f6c\uff0c\u51e0\u4f55\u77eb\u6b63 </p> <p>\u653e\u5927\u8fc7\u7a0b\uff1a</p> <p>\u00bb \u539f\u6765\u56fe\u50cf\u5206\u8fa8\u7387\u4e3am\u00d7n </p> <p>\u00bb \u5c06\u56fe\u50cf\u653e\u59271.5\u500d\u4e4b\u540e\uff0c\u5177\u67091.5m\u00d71.5n= 2.25m\u00d7n\u4e2a\u50cf\u7d20 </p> <p>\u00bb \u4e0e\u539f\u6765\u56fe\u50cf\u5177\u6709\u76f8\u540c\u7684\u50cf\u7d20\uff0c\u50cf\u7d20\u6570\u91cf\u662f\u539f\u67652.25\u500d </p> <p>\u00bb \u5c06\u5176\u6536\u7f29\uff0c\u4e0e\u539f\u6765\u56fe\u50cf\u5339\u914d \u00bb \u50cf\u7d20\u95f4\u9694\u5c0f\u4e8e\u539f\u6765\u56fe\u50cf\u50cf\u7d20\u95f4\u9694 </p> <p>\u00bb \u4ece\u539f\u6765\u56fe\u50cf\u50cf\u7d20\u503c\u63d0\u53d6\u4fe1\u606f\u8d4b\u7ed9\u65b0\u56fe\u50cf\u76f8\u5e94\u50cf\u7d20</p> <p>\u56fe\u50cf\u5185\u63d2\u7684\u4e3b\u8981\u65b9\u6cd5 \u6700\u8fd1\u90bb\u5185\u63d2\u6cd5 \u53cc\u7ebf\u6027\u5185\u63d2\u6cd5 \u53cc\u4e09\u6b21\u5185\u63d2\u6cd5\u3002</p> <p>\u56fe\u50cf\u7cfb\u7edf</p> <p>\u56fe\u50cf\u5904\u7406\u7cfb\u7edf\u5177\u6709\u56fe\u50cf\u8f93\u5165\u3001\u8f93\u51fa\u3001\u5b58\u50a8\u548c\u5904\u7406\u529f\u80fd\u3002 </p> <p>\u56fe\u50cf\u4e4b\u95f4\u7684\u56db\u5219\u8fd0\u7b97\uff0c\u53ea\u8981\u76f4\u63a5\u8fd0\u7b97\u5c31\u884c\u3002--\u9700\u5bf9\u8d85\u51fa\u7070\u5ea6\u8303\u56f4\u7684\u50cf\u7d20\u8fdb\u884c\u5904\u7406\u3002</p>"},{"location":"course/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_4","title":"\u7b2c\u4e09\u7ae0 \u7a7a\u57df\u589e\u5f3a\u6280\u672f","text":"<p>\u7a7a\u57df\u589e\u5f3a\u57fa\u7840</p> <p>\ud835\udc88(\ud835\udc99, \ud835\udc9a)= \ud835\udc7b[\ud835\udc87(\ud835\udc99, y)] \u5176\u4e2d\ud835\udc87(\ud835\udc99, \ud835\udc9a) \u662f\u8f93\u5165\u56fe\u50cf\uff0c \ud835\udc88(\ud835\udc99, \ud835\udc9a) \u662f\u5904\u7406\u540e\u56fe\u50cf  \ud835\udc7b\u662f\u5728\u70b9 (\ud835\udc99, \ud835\udc9a) \u90bb\u57df\u4e0a\u5b9a\u4e49\u7684\u5173\u4e8e\ud835\udc87\u7684\u589e\u5f3a\u64cd\u4f5c\u3002</p> <p>\u7a7a\u57df\u589e\u5f3a\u8ba1\u7b97\u8fc7\u7a0b\uff1a-\u904d\u5386\u56fe\u50cf\u6240\u6709\u50cf\u7d20 \u2013 \u6bcf\u4e2a\u50cf\u7d20\u5904\uff0c\u7528T\u8ddf\u4ee5(x,y)\u4e3a\u4e2d\u5fc3\u7684\u90bb\u57df\u8fdb\u884c\u8ba1\u7b97 \u2013 \u8fb9\u7f18\u5904\u7406\uff1a\u586b\u96f6</p> <p>\u76f4\u63a5\u7070\u5ea6\u6620\u5c04</p> <p>\u5c06 f (x, y)\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u7070\u5ea6\u6309\ud835\udc7b\u64cd\u4f5c\u76f4\u63a5\u53d8\u6362\u4ee5\u5f97\u5230 g(x, y)</p> <p>\u5178\u578b\u65b9\u6cd5\uff1a</p> <p></p> <ol> <li> <p>\u5bf9\u6570\u53d8\u6362 s=c*log(r+1)</p> </li> <li> <p>\u6307\u6570\u53d8\u6362 s=cr^{\\gamma}</p> </li> </ol> <p>\u03b3&gt;1\u4f4e\u7070\u5ea6\u538b\u7f29\uff0c\u9ad8\u7070\u5ea6\u62c9\u4f38</p> <p>\u03b3&lt;1\u4f4e\u7070\u5ea6\u62c9\u4f38\uff0c\u9ad8\u7070\u5ea6\u538b\u7f29</p> <p>\u03b3=1\u5c31\u662f\u6052\u7b49\u53d8\u6362</p> <p></p> <p>\u76f4\u65b9\u56fe\u53d8\u6362</p> <p>\u76f4\u65b9\u56fe\uff08Histogram \uff09</p> <ol> <li>\u6570\u5b57\u56fe\u50cf\u4e2d\u6bcf\u4e00\u7070\u5ea6\u7ea7\uff0c\u5b83\u51fa\u73b0\u7684\u9891\u6570\u7684\u7edf\u8ba1 </li> <li>\u63d0\u4f9b\u4e86\u56fe\u50cf\u50cf\u7d20\u7684\u7070\u5ea6\u503c\u5206\u5e03\u60c5\u51b5</li> </ol> <p>1\uff09\u76f4\u65b9\u56fe\u5747\u8861\u5316</p> <p>\u76f4\u65b9\u56fe\u5747\u8861\u5316\uff1a\u6307\u56fe\u50cf\u7ecf\u7070\u5ea6\u53d8\u6362\u540e\uff0c\u4f7f\u5f97\u7070\u5ea6\u7684\u6982\u7387\u5bc6\u5ea6\u5206\u5e03\u53d8\u4e3a\u5e38 \u6570\uff0c\u5373\u5747\u5300\u5206\u5e03</p> <p>\u6ce8\uff1a\u5728\u8be5\u76f4\u65b9\u56fe\u4e2d\uff0c\u5171\u67098\u949f\u7070\u5ea6\uff0c\u5373L=8\u3002</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>2\uff09\u76f4\u65b9\u56fe\u89c4\u5b9a\u5316</p> <p>\u901a\u8fc7\u6307\u5b9a\u7684\u51fd\u6570\u5c06\u539f\u56fe\u50cf\u7684\u7070\u5ea6\u76f4\u65b9\u56fe\u53d8\u6362\u6210\u53e6\u4e00\u79cd\u5206\u5e03\u7684\u7070\u5ea6\u76f4\u65b9\u56fe\uff0c\u5373\u786e\u5b9a\u4e00\u4e2aT\u51fd\u6570\uff0c\u6839\u636e\u8fd9\u4e2a\u76f4\u65b9\u56fe\u786e\u5b9a\u4e00\u7070\u5ea6\u7ea7\u53d8\u6362 T\u00ae, \u4f7f\u7531 T\u4ea7\u751f\u7684 \u65b0\u56fe\u8c61\u7684\u76f4\u65b9\u7b26\u5408\u6307\u5b9a\u7684\u76f4\u65b9\u56fe\u3002</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>3\uff09\u5c40\u90e8\u76f4\u65b9\u56fe\u5904\u7406</p> <p>\u6709\u65f6\u9700\u8981\u5bf9\u56fe\u50cf\u5c0f\u533a\u57df\u7ec6\u8282\u7684\u5c40\u90e8\u589e\u5f3a\u3002\u89e3\u51b3\u7684\u529e\u6cd5\u5c31\u662f\u5728\u56fe\u50cf\u4e2d\u6bcf\u4e00\u4e2a\u7d20\u7684\u90bb\u57df\u5c31\u662f\u5728\u56fe\u50cf\u4e2d\uff0c\u6839\u636e\u7070\u5ea6\u7ea7\u5206\u5e03 \u8bbe\u8ba1\u53d8\u6362\u51fd\u6570\u3002\u7136\u540e\u5229\u7528\u524d\u9762\u4ecb\u7ecd\u7684\u6280\u672f\u6765\u8fdb\u884c\u5c40\u90e8\u589e\u5f3a\u3002</p> <p>\u7ebf\u6027\u6ee4\u6ce2</p> <p>\u6ee4\u6ce2\u5668\u53ef\u5206\u4e3a\u7ebf\u6027\u6ee4\u6ce2\u5668\u548c\u975e\u7ebf\u6027\u6ee4\u6ce2\u5668\uff0c\u9510\u5316\u548c\u5e73\u6ed1\u3002</p> <p>\u975e\u7ebf\u6027\u6ee4\u6ce2\u5668\u4f5c\u7528\uff1a\u65e2\u6d88\u9664\u566a\u58f0\u53c8\u4fdd\u6301\u7ec6\u8282\uff08\u4e0d\u6a21\u7cca\uff09</p> <p>\u5e38\u89c1\u6ee4\u6ce2\u5668\uff1a</p> <ol> <li>\u90bb\u57df\u5e73\u5747 --\u7ebf\u6027\u5e73\u6ed1\u6ee4\u6ce2\u5668</li> </ol> <p>\u6a21\u7248\u7cfb\u6570\u90fd\u662f\u6b63\u7684\uff0c\u4fdd\u6301\u7070\u5ea6\u503c\u8303\u56f4\uff08\u7cfb\u6570\u4e4b\u548c\u4e3a1\uff09</p> <p>z=\\frac{1}{M} \\sum ^{M-1}_{i=0} (k_i*s_i)M\u7684\u5927\u5c0f\u4e0d\u540c\uff0c\u5e73\u6ed1\u7684\u6548\u679c\u4e5f\u4e0d\u540c\u3002</p> <p>\u6a21\u677f\u5c3a\u5bf8\u589e\u5927\u65f6\uff0c\u5bf9\u566a\u58f0\u6d88\u9664\u6548\u679c\u589e\u5f3a\uff0c\u4f46\u56fe\u50cf\u53d8\u5f97\u6a21\u7cca\uff0c\u5373\u8fb9\u7f18\u7ec6\u8282\u51cf\u5c11\u3002</p> <ol> <li>\u52a0\u6743\u5e73\u5747 --\u7ebf\u6027\u5e73\u6ed1\u6ee4\u6ce2\u5668</li> </ol> <p>\u4e0d\u540c\u4f4d\u7f6e\u7684\u7cfb\u6570\u91c7\u7528\u4e0d\u540c\u7684\u503c\uff0c\u4e00\u822c\u8ba4\u4e3a\uff1a\u79bb\u6a21\u677f\u4e2d\u5fc3\u8fd1\u7684\u50cf\u7d20\u5bf9\u6ee4\u6ce2\u8d21\u732e\u5927\uff0c\u6240\u4ee5\u7cfb\u6570\u5927\uff1b \u800c\u5468\u56f4\u7cfb\u6570\u5c0f\u3002</p> <ol> <li>\u4e2d\u503c\u6ee4\u6ce2\u5668 --\u975e\u7ebf\u6027\u5e73\u6ed1\u6ee4\u6ce2\u5668</li> </ol> <p>\u5c06\u6a21\u677f\u4e2d\u5fc3\u4e0e\u50cf\u7d20\u4f4d\u7f6e\u91cd\u5408\uff0c\u8bfb\u53d6\u6a21\u677f\u4e0b\u5404\u5bf9\u5e94\u50cf\u7d20\u7684\u7070\u5ea6\u503c\uff0c\u5c06\u8fd9\u4e9b\u7070\u5ea6\u503c\u4ece\u5c0f\u5230\u5927\u6392\u6210 1\u5217\uff0c\u627e\u51fa\u8fd9\u4e9b\u503c\u91cc\u6392\u5728\u4e2d\u95f4\u7684 1\u4e2a\uff0c\u5c06\u8fd9\u4e2a\u4e2d\u95f4\u503c\u8d4b\u7ed9\u6a21\u677f\u5fc3\u4f4d\u7f6e\u50cf\u7d20\u3002</p> <p>\u4e2d\u503c\u6ee4\u6ce2\u5668\u7684\u6d88\u566a\u58f0\u6548\u679c\u4e0e\u6a21\u677f\u7684\u5c3a\u5bf8\u548c\u53c2\u4e0e\u8fd0\u7b97\u7684\u50cf\u7d20\u6570\u6709\u5173\u3002</p> <p>\u56fe\u50cf\u4e2d\u5c3a\u5bf8\u5c0f\u4e8e\u6a21\u677f\u5c3a\u5bf8\u4e00\u534a\u7684\u8fc7\u4eae\u6216\u8fc7\u6697\u533a\u57df\u5c06\u4f1a\u5728\u6ee4\u6ce2\u540e\u4f1a\u88ab\u6d88\u9664\u6389\u3002</p> <ol> <li>\u767e\u5206\u6bd4\u6ee4\u6ce2\u5668 --\u975e\u7ebf\u6027\u5e73\u6ed1\u6ee4\u6ce2\u5668</li> </ol> <p>\u6700\u5927\u503c\u6ee4\u6ce2\u5668\uff1ag_{max}(x,y)=max_{(s,t)\u2208N(x,y)}[f(s,t)]</p> <p>\u6700\u5c0f\u503c\u6ee4\u6ce2\u5668\uff1ag_{min}(x,y)=min_{(s,t)\u2208N(x,y)}[f(s,t)]</p> <p>\u4e2d\u70b9\u6ee4\u6ce2\u5668\uff1ag_{mid}(x,y)=\\frac{1}{2}(g_{max}(x,y)+g_{min}(x,y))</p> <ol> <li>\u68af\u5ea6\u6ee4\u6ce2\u5668 --\u975e\u7ebf\u6027\u9510\u5316\u6ee4\u6ce2\u5668</li> </ol> <p>\u5404\u5411\u5f02\u6027\uff0c\u5728X\u548cY\u4e24\u4e2a\u65b9\u5411\u4e0d\u540c\u3002</p> <p>\u200b    </p> <p>\u68af\u5ea6\u66ff\u4ee3\u8ba1\u7b97\u65b9\u6cd5</p> <ol> <li>\u62c9\u666e\u62c9\u65af\u7b97\u5b50\uff0c\u4e8c\u9636\u5bfc\u6570 --\u975e\u7ebf\u6027\u9510\u5316\u6ee4\u6ce2\u5668</li> </ol> <p></p> <p>\u5fae\u5206\u7b97\u5b50\uff0c\u4f7f\u7528\u540e\u589e\u5f3a\u4e86\u56fe\u50cf\u4e2d\u7070\u5ea6\u7684\u7a81\u53d8\uff0c\u4e0d\u7ea7\u7f13\u6162\u53d8\u5316\u533a\u57df \u628a\u539f\u56fe\u50cf\u4e0e laplace laplace \u56fe\u50cf\u7ebf\u6027\u7ec4\u5408\uff0c\u53ef\u4ee5\u540c\u65f6\u4fdd\u6301 laplace laplace laplace\u9510\u5316\u548c\u539f\u56fe\u50cf\u80cc\u666f\u3002 \u5982\u679c laplace \u7b97\u5b50\u4e2d\u5fc3\u7cfb\u6570\u4e3a\u6b63\uff0c\u5219\u7528\u539f\u56fe\u50cf\u52a0\u4e0a laplace \u56fe\u50cf\uff1b \u5982\u679c laplace \u7b97\u5b50\u4e2d\u5fc3\u7cfb\u6570\u4e3a\u8d1f\uff0c\u5219\u7528\u539f\u56fe\u50cf\u51cf\u53bb laplace\u56fe\u50cf\u3002</p> <p>\u5c40\u90e8\u589e\u5f3a</p> <p>\u7a7a\u95f4\u57df\u5c40\u90e8\u589e\u5f3a-\u5c40\u90e8\u9009\u62e9\u6839\u636e\u5b9e\u9645\u95ee\u9898\u8981\u6c42\u7075\u6d3b\u8bbe\u5b9a\u3002</p> <p>\u5bf9\u56fe\u50cf\u5c40\u90e8\u7ec6\u8282\u7684\u589e\u5f3a\u5904\u7406</p> <p>\u56fe\u50cf\u7684\u7edf\u8ba1\u91cf\uff1a</p> <p>\u7070\u5ea6\u5e73\u5747\u503cm=\\sum^{L-1}_{i=0}r_i*p(r_i)</p> <p>\u65b9\u5dee\uff08\u4e8c\u9636\u77e9\uff09\\mu_2(r)=\\sum^{L-1}_{i=0}(r_i-m)^2p(r_i)</p> <p>r\u7684n\u9636\u77e9\uff1a\\mu_n(r)=\\sum^{L-1}_{i=0}(r_i-m)^np(r_i)</p> <p>\u5c40\u90e8\u589e\u5f3a\u7684\u65b9\u6cd5\uff1a</p> <p>g(x,y)=A(x,y)[f(x,y)-m(x,y)]+m(x,y),\u5176\u4e2dA(x,y)=\\frac{k*M}{\\sigma(x,y)}</p> <p>M\u4e3af(x,y)\u7684\u5747\u503c,m(x,y)\u548c\\sigma(x,y)\u4e3a\u4ee5(x,y)\u4e3a\u4e2d\u5fc3\u90bb\u57df\u5185\u7684\u5747\u503c\u548c\u5747\u65b9\u5dee\u503c</p> <p>\u57fa\u4e8e\u5c40\u90e8\u7edf\u8ba1\u7684\u589e\u5f3a\u65b9\u6cd5\uff1a</p> <p>\u4ee4(x,y)\u4e3a\u4e00\u50cf\u7d20\u5750\u6807\uff0cS_{xy}\u8868\u793a\u4e00\u786e\u5b9a\u5927\u5c0f\u7684\u90bb\u57df\uff08\u5b50\u56fe\u50cf\uff09\uff0c\u5219S_{xy}\u7684\u5e73\u5747\u503cm_{xy}\u4e3a\uff1a</p> <p>m_{xy}=\\sum_{(s,t)\u2208(S_{xy}))}(r_{s,t}\u00d7p(r_{s,t}))</p> <p>S_{xy}\u4e2d\u50cf\u7d20\u7684\u65b9\u5dee\u4e3a\uff1a\\sigma^2_{S_{xy}}=\\sum^{(L-1)}_{(s,t)\u2208S_{xy}}\\{[r_{s,t}-m_{s_{xy}}]^2\u00d7p(s_{s,t})\\}</p> <p>\u6839\u636e\u4eae\u6697\u548c\u5bf9\u6bd4\u5ea6\u6765\u5224\u65ad\u662f\u5426\u589e\u5f3a\u67d0\u4e00\u70b9\u7684\u4eae\u5ea6\uff0c\u7136\u540e\u5bf9\u5176\u8fdb\u884c\u589e\u5f3a</p> <p>\u4ee4\u6761\u4ef6T=m_{s_{xy}}&lt;=k_0*M_G,k_0&lt;=1.0\u4e14k_1D_G&lt;=\\sigma_{S_{xy}}&lt;=k_2D_G,k_1&lt;=k_2</p> <p>g(x,y)=T?E*f(x,y):f(x,y)</p>"},{"location":"course/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_5","title":"\u7b2c\u56db\u7ae0 \u9891\u57df\u5904\u7406","text":"<p>\u5085\u91cc\u53f6\u53d8\u6362</p> <p></p> <p>\u65f6\u57df\u56fe\u50cf\u662f\u4e00\u4e2a\u5468\u671f\u4e14\u8fde\u7eed\u7684\u51fd\u6570\uff0c\u9891\u57df\u56fe\u50cf\u548c\u76f8\u4f4d\u56fe\u50cf\u662f\u4e00\u4e2a\u975e\u5468\u671f\u79bb\u6563\u7684\u51fd\u6570\u3002</p> <p>\u6b27\u62c9\u516c\u5f0f\uff1ae^{ix}=cos(x)+i*sin(x)</p> <p>\u5085\u91cc\u53f6\u53d8\u6362\u7684\u5b9a\u4e49</p> <p>1\uff09\u4e00\u7ef4\u5085\u91cc\u53f6\u53d8\u6362</p> <ol> <li>\u8fde\u7eed\u51fd\u6570</li> </ol> <p>\u6b63\u53d8\u6362F\\{f(x)\\}=F(u)=\\int^{+\\infty}_{-\\infty}f(x)e^{-j2*\\pi ux}dx</p> <p>\u9006\uff08\u53cd\uff09\u53d8\u6362f(x)=\\int^{+\\infty}_{-\\infty}F(u)e^{j*2\\pi ux}du</p> <ol> <li>\u79bb\u6563\u51fd\u6570</li> </ol> <p>\u6b63\u53d8\u6362F\\{f(x)\\}=F(u)=\\sum^{N-1}_{x=0}f(x)e^{-2j\\pi ux/N}</p> <p>\u9006\uff08\u53cd\uff09\u53d8\u6362F^{-1}\\{f(x)\\}=f(x)=\\frac{1}{N}\\sum^{N-1}_{x=0}F(u)e^{2j\\pi ux}</p> <p>u=0,1,2,...,N-1</p> <p></p> <p></p> <p>2\uff09\u4e8c\u7ef4\u5085\u91cc\u53f6\u53d8\u6362</p> <ol> <li>\u8fde\u7eed\u51fd\u6570</li> </ol> <p>\u6b63\u53d8\u6362F\\{f(x,y)\\}=F(u,v)=\\int ^{+\\infty}_{-\\infty}\\int ^{+\\infty}_{-\\infty} f(x,y)e^{-j2\\pi ux}dxdy</p> <p>\u9006\uff08\u53cd\uff09\u53d8\u6362F^{-1}\\{f(x,y)\\}=f(x,y)=\\int ^{+\\infty}_{-\\infty}\\int ^{+\\infty}_{-\\infty} F(u,v)e^{j2\\pi ux}dudv</p> <ol> <li>\u79bb\u6563\u51fd\u6570</li> </ol> <p>\u6b63\u53d8\u6362F(u,v)=\\sum^{M-1}_{x=0} \\sum^{N-1}_{y=0} f(x,y) e^{-j2\\pi (ux/M+vy/N)}</p> <p>u=0,1,2,...,M-1,v=0,1,2,...,N-1</p> <p>\u9006\u53d8\u6362f(x,y)=\\frac{1}{MN}\\sum^{M-1}_{x=0} \\sum^{N-1}_{y=0} F(u,v) e^{j2\\pi (ux/M+vy/N)}</p> <p>x=0,1,2,...,M-1,y=0,1,2,...,N-1</p> <p></p> <p>3\uff09\u9891\u8c31\u57df</p> <p>\u5b9a\u4e49\uff1a\u7531\u5085\u7acb\u53f6\u53d8\u6362\u548c\u9891\u7387\u53d8\u91cf( u, v)\u5b9a\u4e49\u7684\u7a7a\u95f4</p> <p>\u6027\u8d28\uff1a</p> <ol> <li>\u53d8\u6362\u6700\u6162\u7684\u9891\u7387\u6210\u5206(u=0,v=0)\u5bf9\u5e94\u4e00\u5e45\u56fe\u50cf\u7684\u5e73\u5747\u7070\u5ea6\uff0c\u8bc1\u660e\u4e3a\uff1aF(0,0)=\\sum_{x=0}^{M-1}\\sum^{N-1}_{y=0}f(x,y)</li> </ol> <p>\u5373F(0,0)=mean(f(x,y))*M*N\uff0c\u6240\u4ee5|F(0,0)|\u662f\u9891\u8c31\u7684\u6700\u5927\u5206\u91cf\u3002</p> <p>\u9891\u57df\u6709\u67d0\u4e00\u65b9\u5411\u7684\u4eae\u7ebf\u6761\uff0c\u8bf4\u660e\u56fe\u50cf\u4e2d\u4e0e\u4e4b\u5782\u76f4\u65b9\u5411\u4e0a\u6709\u8f83\u591a\u7ebf\u6761\u3002</p> <ol> <li> <p>\u5085\u91cc\u53f6\u53d8\u6362\u662f\u5171\u8f6d\u5bf9\u79f0\u7684\uff0c\u5373F^*(u,v)=F(-u,-v)</p> </li> <li> <p>\u6570\u5b57\u56fe\u50cf\u7684\u9891\u8c31\u662f\u5173\u4e8e\u539f\u70b9\u5076\u5bf9\u79f0\u7684\uff0c\u5373|F(u,v)|=|F(-u,-v)|</p> </li> <li> <p>\u6570\u5b57\u56fe\u50cf\u7684\u76f8\u4f4d\u89d2\u662f\u5173\u4e8e\u8fdc\u70b9\u5947\u5bf9\u79f0\u7684\uff0c\u5373\\varphi(u,v)=-\\varphi(-u,-v)</p> </li> <li> <p>\u5e73\u79fb\u6027\u8d28</p> </li> </ol> <p>\u5085\u7acb\u53f6\u53d8\u6362\u5e73\u79fb\u6027\u8d28\uff0c\u662f\u6307\u5f53\u7a7a\u57df\u56fe\u50cf\u76ee\u6807\u4f4d\u7f6e\u53d8\u5316\u4e4b\u540e\uff0c\u5176\u9891\u8c31\u4e0d\u53d1\u751f\u6539\u53d8\u3002</p> <p></p> <p></p> <ol> <li>\u65cb\u8f6c\u6027\u8d28</li> </ol> <p></p> <p></p> <ol> <li>\u5c3a\u5ea6\u5b9a\u7406</li> </ol> <p></p> <ol> <li>\u5468\u671f\u6027</li> </ol> <p></p> <p>\u5e94\u7528\uff1a</p> <p>f(x)(-1)^x==F(u-\\frac{M}{2})</p> <p>\u8bc1\u660e\u4e3a\uff1a</p> <p></p> <p>\u4e8c\u7ef4\u540c\u6837\uff1a</p> <p></p> <p></p> <p>4\uff09\u5085\u91cc\u53f6\u53d8\u6362\u76f8\u4f4d\u8c31</p> <p>\u7531\u5085\u7acb\u53f6\u53d8\u6362\u7684\u76f8\u4f4d\u6784\u6210\u7684\u77e9\u9635\u3002</p> <p>\u76f8\u4f4d\u5206\u91cf\u662f\u6307\u5404\u4e2a\u6b63\u5f26\u5206\u91cf\u5173\u4e8e\u539f\u70b9\u7684\u4f4d\u79fb\u7684\u5ea6\u91cf\uff0c\u51b3\u5b9a\u4e86\u56fe\u50cf\u4e2d\u53ef\u8fa8\u522b\u7269\u4f53\u5b9a\u4f4d\u4fe1\u606f\u3002</p> <p>5\uff09\u5377\u79ef\u5b9a\u7406</p> <p></p> <p></p> <p></p> <p>6\uff09\u5085\u91cc\u53f6\u53d8\u6362\u65f6\u95f4\u590d\u6742\u5ea6</p> <ol> <li>\u8ba1\u7b97\u4e00\u7ef4\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362\uff08DFT\uff09\u516c\u5f0f\u5982\u4e0b\uff1a</li> </ol> <p></p> <p>\u200b       \u5176\u4e2d\uff0cN\u8868\u793a\u6570\u636e\u957f\u5ea6\u3002\u7531\u4e0a\u5f0f\u53ef\u77e5\uff0cDFT\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(N*N)</p> <ol> <li> <p>\u4e00\u7ef4FFT\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N*logN)\uff0c\u5176\u4e2dN\u8868\u793a\u6570\u636e\u957f\u5ea6</p> </li> <li> <p>\u5bf9\u4e8e\u4e00\u4e2aM*N\u7684\u4e8c\u7ef4\u6570\u636e\uff0cFFT\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO( M*N*log(M*N) )</p> </li> </ol> <p>\u82e5M=N\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u7b80\u5316\u4e3aO(N^2*logN)</p> <ol> <li>\u5bf9\u4e8eM\u7ef4\u7684\u6570\u636e\uff08\u6bcf\u4e00\u7ef4\u957f\u5ea6\u4e3aA\uff0cB\uff0cC\uff0c...\uff09\uff0c\u5219FFT\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO( A*B*C*...* log(A*B*C*...) )</li> </ol> <p>\u82e5\u6bcf\u4e00\u7ef4\u957f\u5ea6\u76f8\u540c\uff0c\u5373A=B=C=...=N\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u7b80\u5316\u4e3aO(N^M*logN)</p> <p>\u79bb\u6563\u4f59\u5f26\u53d8\u6362</p> <p>1\uff09\u4e8c\u7ef4\u79bb\u6563\u4f59\u5f26\u53d8\u6362\u5b9a\u4e49</p> <p></p> <p></p> <p>\u6c83\u5c14\u4ec0\u53d8\u6362</p> <p></p> <p></p>"},{"location":"course/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_6","title":"\u7b2c\u4e94\u7ae0 \u9891\u7387\u57df\u56fe\u50cf\u589e\u5f3a","text":"<p>\u9891\u7387\u57df\u589e\u5f3a\u539f\u7406</p> <p>1\uff09\u5377\u79ef\u4ee5\u53ca\u5377\u79ef\u5b9a\u7406</p> <p>\u8bbe\u51fd\u6570f (x, y)\u4e0e\u7b97\u5b50h(x, y)\u7684\u5377\u79ef\u7ed3\u679c\u662fg(x, y)\uff0c\u5373 g(x, y) = h(x, y) * f (x, y)\uff0c\u90a3\u4e48\u6839\u636e\u5377\u79ef\u5b9a\u7406\u5728\u9891\u57df\u6709\uff1a G(u,v) = H(u,v)F(u,v)\uff0c\u5176\u4e2dG(u, v)\uff0cH(u, v)\uff0cF(u, v)\u5206\u522b\u662fg(x, y)\uff0ch(x, y)\uff0cf (x, y)\u7684\u5085\u7acb\u53f6(\u6216\u5176\u5b83)\u53d8\u6362\uff0c\u79f0H(u, v)\u4e3a\u8f6c\u79fb\u51fd\u6570 G(u,v) = H(u,v)F(u,v)</p> <p>2\uff09\u56fe\u50cf\u589e\u5f3a\u539f\u7406</p> <p></p> <p>\u5176\u4e2dT\u4ee3\u8868\u5085\u91cc\u53f6\u53d8\u6362</p> <p>3\uff09\u56fe\u50cf\u589e\u5f3a\u5177\u4f53\u5b9e\u73b0</p> <p>\u5377\u79ef\u5b9a\u7406\uff1aG(u,v)=H(u,v)F(u,v)</p> <p>\u589e\u5f3a\u56fe\u50cf\uff1ag(x,y)=T^{-1}[H(u,v)F(u,v)]</p> <p>\u6b65 \u9aa4\uff1a (1) \u8ba1\u7b97\u56fe\u50cf\u7684\u9891\u57df\u53d8\u6362 (2) \u5728\u9891\u57df\u6ee4\u6ce2 (3) \u53cd\u53d8\u6362\u56de\u56fe\u50cf\u7a7a\u95f4</p> <p>\u9891\u57df\u6ee4\u6ce2: \u4f4e\u901a\uff0c\u9ad8\u901a\uff0c\u540c\u6001</p> <p>\u9891\u7387\u57df\u5e73\u6ed1\u6ee4\u6ce2\u5668</p> <p>1\uff09\u5e73\u6ed1\u6ee4\u6ce2\u5668</p> <p>\u56fe\u50cf\u4e2d\u7684\u8fb9\u7f18\u548c\u566a\u58f0\u90fd\u5bf9\u5e94\u56fe\u50cf\u5085\u7acb\u53f6\u53d8\u6362\u4e2d\u7684\u9ad8\u9891\u90e8\u5206 \uff0c\u6240\u4ee5\u5982\u8981\u5728\u9891\u57df\u4e2d\u6d88\u5f31\u5176\u5f71\u54cd\u5c31\u8981\u8bbe\u6cd5\u51cf\u5f31\u8fd9\u90e8\u5206\u9891\u7387\u7684\u5206\u91cf\u3002</p> <p>2\uff09\u7406\u60f3\u4f4e\u901a\u6ee4\u6ce2\u5668</p> <p></p> <p>H(u,v)=1:0?D(u,v)&lt;D_0\uff0c\u5176\u4e2dD(u,v)=(u^2+v^2)^{1/2}</p> <p>\u95ee\u9898\uff1a\u6a21\u7cca\uff0c\u632f\u94c3\u6548\u5e94\u3002</p> <p>3\uff09\u5df4\u7279\u6c83\u65af\u4f4e\u901a\u6ee4\u6ce2\u5668</p> <p>\u51cf\u5c11\u632f\u94c3\u6548\u5e94\uff0c\u9ad8\u4f4e\u9891\u7387\u95f4\u7684\u8fc7\u6e21\u6bd4\u8f83\u5149\u6ed1\u3002</p> <p>\u9636\u6570\u4e3an\u7684\u5df4\u7279\u6c83\u65af\u4f4e\u901a\u6ee4\u6ce2\u5668\u516c\u5f0f\u4e3a\uff1a</p> <p>H(u,v)=\\frac{1}{1+D(u,v)^{2n}}</p> <p></p> <p>\u9636\u6570\u5bf9\u632f\u94c3\u73b0\u8c61\u7684\u5f71\u54cd\uff1a\u9636\u6570\u8d8a\u9ad8\uff0c\u8d8a\u660e\u663e\u3002</p> <p>\u5f53\u9636\u6570\u8d8b\u4e8e\u65e0\u7a77\u65f6\uff0c\u5df4\u7279\u6c83\u65af\u4f4e\u901a\u6ee4\u6ce2\u53d8\u6210\u7406\u60f3\u4f4e\u901a\u6ee4\u6ce2\u3002</p> <p>4\uff09\u5e94\u7528</p> <p>\u56fe\u50cf\u7531\u4e8e\u91cf\u5316\u4e0d\u8db3\u4ea7\u751f\u865a\u5047\u8f6e\u5ed3\u65f6\u5e38\u53ef\u7528\u4f4e\u901a\u6ee4\u6ce2\u8fdb\u884c\u5e73\u6ed1\u4ee5\u6539\u8fdb\u56fe\u50cf\u8d28\u91cf\u3002</p> <p>5\uff09\u9ad8\u65af\u4f4e\u901a\u6ee4\u6ce2\u5668</p> <p>\u9ad8\u65af\u6ee4\u6ce2\u5668\u662f\u5b8c\u5168\u4e0d\u4f1a\u4ea7\u751f\u632f\u94c3\u6548\u5e94\u7684\u3002</p> <p>H(u,v)=e^{-D^2(u,v)/2D_0)^2}</p> <p></p> <p>6\uff09\u5176\u4ed6\u4f4e\u901a\u6ee4\u6ce2\u5668</p> <p></p> <p>\u9891\u7387\u57df\u9510\u5316\u6ee4\u6ce2\u5668</p> <p>1\uff09\u7406\u60f3\u9ad8\u901a\u6ee4\u6ce2\u5668</p> <p>\u5f62\u72b6\u4e0e\u4f4e\u901a\u6ee4\u6ce2\u5668\u7684\u5f62\u72b6\u6b63\u597d\u76f8\u53cd</p> <p>H(u,v)=0:1?D(u,v)&gt;D_0</p> <p>2\uff09\u5df4\u7279\u6c83\u65af\u9ad8\u901a\u6ee4\u6ce2\u5668</p> <p>\u5f62\u72b6\u4e0e\u5df4\u7279\u6c83\u65af\u4f4e\u901a\u6ee4\u6ce2\u5668\u7684\u5f62\u72b6\u6b63\u597d\u76f8\u53cd</p> <p>H(u,v)=\\frac{1}{1+[D_0/D(u,v)]^{2n}}</p> <p>3\uff09\u9ad8\u65af\u9ad8\u901a\u6ee4\u6ce2\u5668</p> <p>\u5f62\u72b6\u4e0e\u9ad8\u65af\u4f4e\u901a\u6ee4\u6ce2\u5668\u7684\u5f62\u72b6\u6b63\u597d\u76f8\u53cd</p> <p>H(u,v)=1-e^{-D^2(u,v)/2D_0)^2}</p> <p>\u9ad8\u9891\u5f3a\u8c03\u6ee4\u6ce2\u5668</p> <p>\u9ad8\u901a\u6ee4\u6ce2\u7684\u7ed3\u679c\uff1a\u8fb9\u7f18\u52a0\u5f3a\uff0c\u5149\u6ed1\u533a\u57df\u53d8\u6697</p> <p>\u9ad8\u901a\u6ee4\u6ce2\uff1aG(u,v)=H(u,v)F(u,v)</p> <p>\u9ad8\u901a\u5f3a\u8c03\u8f6c\u79fb\u51fd\u6570\uff1aH_c(u,v)=k\u00d7H(u,v)+c</p> <p>\u9ad8\u9891\u5f3a\u8c03\u8f93\u51fa\u56fe\u7684\u5085\u7acb\u53f6\u53d8\u6362\uff1aG_c(u,v)=k\u00d7G(u,v)+c\u00d7F(u,c)</p> <p>\u53cd\u53d8\u6362\u4e3a\uff1ag(x,y)=k\u00d7g(x,y)+c\u00d7f(x,y)</p> <p>\u9ad8\u9891\u63d0\u5347\u6ee4\u6ce2\u5668</p> <ol> <li>\u7528\u539f\u59cb\u56fe\u51cf\u53bb\u4f4e\u901a\u56fe\u5f97\u5230\u9ad8\u901a\u6ee4\u6ce2\u5668\u7684\u6548\u679c\u3002 </li> <li>\u628a\u539f\u59cb\u56fe\u4e58\u4ee5\u4e00\u4e2a\u653e\u5927\u7cfb\u6570A\u518d\u51cf\u53bb\u4f4e\u901a\u56fe\u5c31\u53ef\u6784 \u6210\u9ad8\u9891\u63d0\u5347\uff08high-boost\uff09\u6ee4\u6ce2\u5668</li> </ol> <p>G_{HB}(u,v)=A\u00d7F(u,v)-F_L(u,v)=(A-1)F(u,v)+F_H(u,v)</p> <p>A = 1 \uff1a\u9ad8\u901a\u6ee4\u6ce2\u5668</p> <p>A &gt; 1 \uff1a\u539f\u59cb\u56fe\u7684\u4e00\u90e8\u5206\u4e0e\u9ad8\u901a\u56fe\u76f8\u52a0\uff0c\u6062\u590d\u4e86\u9ad8\u901a\u6ee4\u6ce2\u65f6\u4e22\u5931\u7684\u4f4e\u9891\u5206\u91cf</p> <p>\u540c\u6001\u6ee4\u6ce2</p> <p></p> <p>\u5c06\u660e\u4eae\u5747\u8861\u5316\uff0c\u4f7f\u4eae\u5ea6\u548c\u7070\u5ea6\u5747\u8861\u5316\u3002</p> <p></p> <p></p> <p></p> <p>\u9009\u62e9\u6027\u6ee4\u6ce2</p> <p>\u5206\u4e3a\u4e24\u79cd\uff1a</p> <p>\u5e26\u963b\u6ee4\u6ce2\u5668&amp;\u5e26\u901a\u6ee4\u6ce2\u5668</p> <p>1\uff09\u5e26\u963b\u6ee4\u6ce2\u5668</p> <p>\u5e26\u963b\u6ee4\u6ce2\u5668\u4e5f\u6709\u4e09\u79cd\u7279\u6027\u3002\u7406\u60f3\u3001\u5df4\u7279\u6c83\u65af\u548c\u9ad8\u65af</p> <p></p> <p>2\uff09\u5e26\u901a\u6ee4\u6ce2\u5668</p> <p>\u5e26\u963b\u6ee4\u6ce2\u5668\u4e5f\u6709\u4e09\u79cd\u7279\u6027\u3002\u7406\u60f3\u3001\u5df4\u7279\u6c83\u65af\u548c\u9ad8\u65af</p> <p>3\uff09\u9677\u6ce2\u6ee4\u6ce2\u5668(Notch Filter)</p> <p>\u9677\u6ce2\u6ee4\u6ce2\u5668\u672c\u8d28\u4e0a\u662f\u591a\u4e2a\u9ad8\u901a\u6ee4\u6ce2\u5668\u8fdb\u884c\u5e73\u79fb\u540e\u518d\u76f8\u4e58\u3002</p> <p>\u591a\u4e2a\u5e26\u963b\u6ee4\u6ce2\u5668\u7ecf\u8fc7\u5e73\u79fb\u83b7\u5f97\u3002</p> <p></p> <p>\u9891\u57df\u6280\u672f\u4e0e\u7a7a\u57df\u6280\u672f</p> <p>1\uff09\u7a7a\u95f4\u5e73\u6ed1\u6ee4\u6ce2\u5668 </p> <p>\u6d88\u9664\u6216\u51cf\u5f31\u56fe\u50cf\u4e2d\u7070\u5ea6\u503c\u5177\u6709\u8f83\u5927\u8f83\u5feb\u53d8\u5316\u90e8\u5206\u7684\u5f71\u54cd\uff0c \u8fd9\u4e9b\u90e8\u5206\u5bf9\u5e94\u9891\u57df\u4e2d\u7684\u9ad8\u9891\u5206\u91cf\uff0c\u6240\u4ee5\u53ef\u7528\u9891\u57df\u4f4e\u901a\u6ee4\u6ce2\u6765\u5b9e\u73b0 </p> <p>\u9891\u57df\u8d8a\u5bbd\uff0c\u7a7a\u57df\u8d8a\u7a84\uff0c\u5e73\u6ed1\u4f5c\u7528\u8d8a\u5f31</p> <p>\u9891\u57df\u8d8a\u7a84\uff0c\u7a7a\u57df\u8d8a\u5bbd\uff0c\u6a21\u7cca\u4f5c\u7528\u8d8a\u5f3a</p> <p>\u5e73\u6ed1\u6a21\u677f\u7cfb\u6570\u4e3a\u6b63\uff0c\u4e14\u4e2d\u90e8\u7cfb\u6570\u503c\u8f83\u5927</p> <p>2\uff09\u7a7a\u95f4\u9510\u5316\u6ee4\u6ce2\u5668 </p> <p>\u6d88\u9664\u6216\u51cf\u5f31\u56fe\u50cf\u4e2d\u7070\u5ea6\u503c\u7f13\u6162\u53d8\u5316\u7684\u90e8\u5206\uff0c\u8fd9\u4e9b\u90e8\u5206\u5bf9\u5e94 \u9891\u57df\u4e2d\u7684\u4f4e\u9891\u5206\u91cf\uff0c\u6240\u4ee5\u53ef\u7528\u9891\u57df\u9ad8\u901a\u6ee4\u6ce2\u6765\u5b9e\u73b0</p> <p>\u7a7a\u57df\u6709\u6b63\u8d1f\u503c\uff0c\u6a21\u677f\u4e2d\u5fc3\u7cfb\u6570\u503c\u8f83\u5927</p>"},{"location":"course/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_7","title":"\u7b2c\u516d\u7ae0 \u56fe\u50cf\u6062\u590d","text":"<p>\u56fe\u50cf\u6062\u590dvs.\u56fe\u50cf\u589e\u5f3a </p> <p>\u76f8\u540c\u4e4b\u5904\uff1a \u6539\u8fdb\u8f93\u5165\u56fe\u50cf\u7684\u89c6\u89c9\u8d28\u91cf </p> <p>\u4e0d\u540c\u4e4b\u5904\uff1a \u4e0d\u8003\u8651\u56fe\u50cf\u964d\u8d28\u7684\u539f\u56e0\uff0c\u53ea\u5c06\u56fe\u50cf\u4e2d\u611f\u5174\u8da3\u7684\u7279\u5f81\u6709\u9009\u62e9\u5730 \u7a81\u51fa\uff08\u589e\u5f3a\uff09\uff0c\u800c\u8870\u51cf\u5176\u4e0d\u9700\u8981\u7684\u7279\u5f81\uff0c\u6539\u5584\u540e\u7684\u56fe\u50cf\u4e0d\u4e00\u5b9a\u8981\u53bb \u903c\u8fd1\u539f\u56fe\u50cf\u3002\u56fe\u50cf\u589e\u5f3a\u501f\u52a9\u4eba\u7684\u89c6\u89c9\u7cfb\u7edf\u7279\u6027\uff0c\u4ee5\u53d6\u5f97\u8f83\u597d\u7684\u89c6 \u89c9\u7ed3\u679c\uff08\u4e0d\u8003\u8651\u9000\u5316\u539f\u56e0\uff09 \u56fe\u50cf\u6062\u590d\u6839\u636e\u76f8\u5e94\u7684\u9000\u5316\u6a21\u578b\u548c\u77e5\u8bc6\u91cd\u5efa\u6216\u6062\u590d\u539f\u59cb\u7684\u56fe\u50cf \uff08\u8003\u8651\u9000\u5316\u539f\u56e0\uff09</p> <p>\u56fe\u50cf\u9000\u5316\u793a\u4f8b</p> <p>\u56fe\u50cf\u9000\u5316\u6307\u7531\u573a\u666f\u5f97\u5230\u7684\u56fe\u50cf\u6ca1\u80fd\u5b8c\u5168\u5730\u53cd\u6620\u573a\u666f\u7684\u771f \u5b9e\u5185\u5bb9\uff0c\u4ea7\u751f\u4e86\u5931\u771f\u7b49\u95ee\u9898</p> <p>\u539f\u56e0\uff1a\u900f\u955c\u50cf\u5dee/\u8272\u5dee\u3001\u805a\u7126\u4e0d\u51c6\uff08\u5931\u7126\uff0c\u9650\u5236\u4e86\u56fe\u50cf\u9510\u5ea6\uff09\u3001\u6a21\u7cca\uff08\u9650\u5236\u9891\u8c31\u5bbd\u5ea6\uff09\u3001\u566a\u58f0\uff08\u662f\u4e00\u4e2a\u7edf\u8ba1\u8fc7\u7a0b\uff09\u3001\u6296\u52a8\uff08\u673a\u68b0\u3001\u7535\u5b50\uff09</p> <p>\u56fe\u50cf\u9000\u5316\u590d\u539f\u8fc7\u7a0b\u6a21\u578b</p> <p>\u9000\u5316\u8fc7\u7a0b\u662f\u4e00\u4e2a\u9000\u5316\u51fd\u6570\ud835\udc6f(\u2219) \u548c\u4e00\u4e2a\u52a0\u6027\u566a\u58f0 \ud835\udf3c (\ud835\udc99, \ud835\udc9a) \uff0c\u4f5c\u7528\u5230\u4e00\u5e45\u56fe\u50cf\ud835\udc87(\ud835\udc99, \ud835\udc9a)\u4e0a\uff0c\u4ea7\u751f\u9000\u5316\u540e\u7684 \u56fe\u50cf\ud835\udc88(\ud835\udc99, \ud835\udc9a)\u3002</p> <p>\u590d\u539f\u8fc7\u7a0b\u662f\u7ed9\u5b9a\u9000\u5316\u56fe\ud835\udc88(\ud835\udc99, \ud835\udc9a)\u548c\u5173\u4e8e\u9000\u5316\u51fd\u6570\ud835\udc6f(\u2219)\u7684\u4e00\u4e9b\u77e5\u8bc6\u53ca\u5173\u4e8e\u52a0\u6027\u566a\u58f0\u9879\ud835\udf3c(\ud835\udc99, \ud835\udc9a)\u7684\u77e5\u8bc6\uff0c\u83b7\u5f97 \u539f\u59cb\u56fe\u50cf\u7684\u4e00\u4e2a\u4f30\u8ba1\ud835\udc87(x,y)\u3002</p> <p>\u9000\u5316\u6a21\u578b\uff1a</p> <p>g(x,y)=H[f(x,y)]+\\eta(x,y)=h(x,y)*f(x,y)+\\eta(x,y),*\u4e3a\u5377\u79ef</p> <p>G(x,y)=H(x,y)F(x,y+N(x,y))</p> <p>\u566a\u58f0\u6a21\u578b</p> <p>1\uff09\u5e38\u89c1\u566a\u58f0</p> <ol> <li>\u70ed\u566a\u58f0\uff1a\u4e0e\u7269\u4f53\u7684\u7edd\u5bf9\u6e29\u5ea6\u6709\u5173\u3002</li> </ol> <p>\u4e5f\u79f0\uff1a \u767d\u566a\u58f0 \uff08\u9891\u7387\u8986\u76d6\u6574\u4e2a\u9891\u8c31\uff09 </p> <p>\u9ad8\u65af\u566a\u58f0\uff08\u5e45\u5ea6\u7b26\u5408\u9ad8\u65af\u5206\u5e03\uff09 </p> <ol> <li>\u95ea\u70c1\u566a\u58f0\uff1a\u7535\u6d41\u8fd0\u52a8\u4ea7\u751f\u3002 </li> </ol> <p>\u5177\u6709\u53cd\u6bd4\u4e8e\u9891\u7387\uff081/f\uff09\u7684\u9891\u8c31</p> <p>\u4e5f\u79f0\u7c89\u8272\u566a\u58f0\uff08\u5728\u5bf9\u6570\u9891\u7387\u95f4\u9694\u5185\u6709\u76f8\u540c\u7684\u80fd\u91cf\uff09 </p> <ol> <li>\u53d1\u5c04\u566a\u58f0\uff1a\u9ad8\u65af\u5206\u5e03\uff08\u7535\u5b50\u8fd0\u52a8\u7684\u968f\u673a\u6027\uff09</li> </ol> <p>**\u52a0\u6027\u566a\u58f0**\u4e00\u822c\u6307\u70ed\u566a\u58f0\u3001\u6563\u5f39\u566a\u58f0\u7b49\uff0c\u5b83\u4eec\u4e0e\u4fe1\u53f7\u7684\u5173\u7cfb\u662f\u76f8\u52a0\uff0c\u4e0d\u7ba1\u6709\u6ca1\u6709\u4fe1\u53f7\uff0c\u8be5\u7c7b\u566a\u58f0\u662f\u4e00\u76f4\u5b58\u5728\u7684\u3002\u4e00\u822c\u901a\u4fe1\u4e2d\u628a\u52a0\u6027\u968f\u673a\u6027\u770b\u6210\u662f\u7cfb\u7edf\u7684\u80cc\u666f\u566a\u58f0\u3002</p> <p>**\u4e58\u6027\u566a\u58f0**\u4e00\u822c\u7531\u4fe1\u9053\u4e0d\u7406\u60f3\u5f15\u8d77\uff0c\u5b83\u4eec\u4e0e\u4fe1\u53f7\u7684\u5173\u7cfb\u662f\u76f8\u4e58\uff0c\u4fe1\u53f7\u5728\u5b83\u5728\uff0c\u4fe1\u53f7\u4e0d\u5728\u4ed6\u4e5f\u5c31\u4e0d\u5728\u3002\u4e58\u6027\u968f\u673a\u6027\u770b\u6210\u7cfb\u7edf\u7684\u65f6\u53d8\u6027\uff08\u5982\u8870\u843d\u6216\u8005\u591a\u666e\u52d2\uff09\u6216\u8005\u975e\u7ebf\u6027\u6240\u9020\u6210\u7684\u3002</p> <p>2\uff09\u566a\u58f0\u6982\u7387\u5bc6\u5ea6\u51fd\u6570</p> <p></p> <p></p> <p></p> <p>3\uff09\u5468\u671f\u566a\u58f0</p> <p>\u4e00\u5e45\u56fe\u50cf\u7684\u5468\u671f\u566a\u58f0\u662f\u5728\u56fe\u50cf\u83b7\u53d6\u671f\u95f4\u7531\u7535\u529b\u6216\u673a\u7535\u5e72\u6270\u4ea7\u751f\u7684\u3002 </p> <p>\u662f\u4e00\u79cd\u7a7a\u95f4\u76f8\u5173\u566a\u58f0\u3002 </p> <p>\u5468\u671f\u566a\u58f0\uff08\u6b63\u5f26\uff09\u5728\u5085\u91cc\u53f6\u53d8\u6362\u540e\uff0c\u662f\u4f4d\u4e8e\u6b63\u5f26\u6ce2\u5171\u8f6d\u9891\u7387\u5904\u7684\u4e00\u5bf9\u5171\u8f6d\u8109\u51b2\u3002</p> <p>\u5468\u671f\u566a\u58f0\u53c2\u6570\u4f30\u8ba1\uff1a</p> <p>\u901a\u8fc7\u68c0\u9a8c\u5085\u91cc\u53f6\u8c31\u6765\u4f30\u8ba1\u5468\u671f\u3002</p> <p>\u5468\u671f\u566a\u58f0\u901a\u5e38\u4f1a\u4ea7\u751f\u9891\u7387\u5c16\u5cf0\uff0c\u53ef\u4ee5\u8fdb\u884c\u68c0\u6d4b\u3002</p> <p>\u566a\u58f0\u53c2\u6570\u4f30\u8ba1</p> <p>\u566a\u58f0\u7684PDF\u53c2\u6570</p> <ol> <li>\u6210\u50cf\u7cfb\u7edf\u53ef\u4f7f\u7528</li> </ol> <p>\u4f7f\u7528\u6210\u50cf\u7cfb\u7edf\u83b7\u53d6\u4e00\u7ec4\u201c\u5e73\u5766\u201d\u73af\u5883\u56fe\u50cf\uff0c\u4f5c\u4e3a\u6837\u672c\uff1b\u5373\uff1a\u62cd\u6444\u5149\u7167\u5747\u5300\u7684\u7eaf\u8272\u7070\u5ea6\u56fe\u50cf</p> <ol> <li>\u6210\u50cf\u7cfb\u7edf\u4e0d\u53ef\u4f7f\u7528\uff0c\u53ea\u6709\u5176\u751f\u6210\u56fe\u50cf</li> </ol> <p>\u4ece\u56fe\u50cf\u4e2d\uff0c\u627e\u4e00\u5757\u5408\u7406\u7684\u6052\u5b9a\u7070\u5ea6\u503c\u533a\u57df\uff0c\u4f5c\u4e3a\u6837\u672c</p> <p>\u56fe\u50cf\u566a\u58f0\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u8868\u793a\uff0c\u5176\u81ea\u53d8\u91cf\u662f\u56fe\u50cf\u7070\u5ea6\u503c\u3002</p> <p></p> <p>\u53ea\u6709\u566a\u58f0\u7684\u590d\u539f-\u7a7a\u95f4\u6ee4\u6ce2</p> <p>\u5bf9\u4e8e\u5468\u671f\u566a\u58f0\uff0c\u5728\u9891\u57df\u4f30\u8ba1\ud835\udc75(\ud835\udc96, \ud835\udc97) \uff0c\u76f4\u63a5\u53bb\u6389\uff0c\u53d8\u6362\u5230\u7a7a\u95f4\u57df\u3002 \u52a0\u6027\u566a\u58f0\uff0c\u7a7a\u95f4\u6ee4\u6ce2\u3002</p> <p>\u5bf9\u4e8e\u56fe\u50cf\u4e2d\u7684\u52a0\u6027\u566a\u58f0\uff0c\u91c7\u7528\u7b97\u672f\u5747\u503c\u6ee4\u6ce2\u3001\u51e0\u4f55\u5747\u503c\u6ee4\u6ce2\u3001\u9006\u8c10\u6ce2\u5747\u503c\u6ee4\u6ce2\u548c\u8c10\u6ce2\u5747\u503c\u6ee4\u6ce2\u53bb\u9664\u3002 </p> <p>1\uff09\u5747\u503c\u6ee4\u6ce2\u5668</p> <p></p> <p>2\uff09\u8c10\u6ce2\u5747\u503c\u6ee4\u6ce2\u5668</p> <p></p> <p></p> <p>3\uff09\u4fee\u6b63alpha\u5747\u503c\u6ee4\u6ce2\u5668</p> <p></p> <p>4\uff09\u81ea\u9002\u5e94\u6ee4\u6ce2\u5668 </p> <p>\u6ee4\u6ce2\u5668\u7279\u5f81\u53d8\u5316\u662f\u4ee5\ud835\udc8e \u00d7 \ud835\udc8f\u7684\u77e9\u5f62\u7a97\u53e3\ud835\udc7a\ud835\udc99\ud835\udc9a\u5b9a\u4e49\u7684\u6ee4\u6ce2\u5668\u533a\u57df\u5185\u56fe\u50cf\u7684\u7edf\u8ba1\u7279\u5f81\u4e3a\u57fa\u7840 </p> <p>\u81ea\u9002\u5e94\u6ee4\u6ce2\u5668\u6027\u80fd\u4f18\u4e8e\u5168\u5c40\u6ee4\u6ce2\u5668 </p> <p>\u8ba1\u7b97\u590d\u6742\u5ea6\u9ad8 </p> <p>5\uff09\u81ea\u9002\u5e94\u4e2d\u503c\u6ee4\u6ce2\u5668</p> <p>\u81ea\u9002\u5e94\u4e2d\u503c\u6ee4\u6ce2\u5668 </p> <p>\u5168\u5c40\u4e2d\u503c\u6ee4\u6ce2\uff0c\u5728\u8109\u51b2\u566a\u58f0\u7a7a\u95f4\u5bc6\u5ea6\u4e0d\u5927\u662f\uff0c\u6027\u80fd\u5f88\u597d\uff08\u7ecf\u9a8c\uff1a\ud835\udc77\ud835\udc82 &lt; \ud835\udfce. \ud835\udfd0\uff0c\ud835\udc77\ud835\udc83 &lt; \ud835\udfce. \ud835\udfd0\uff09</p> <p>\u2013 \u5bc6\u5ea6\u5927\uff0c\u4e0d\u597d\u7528</p> <p>\u2013 \u4e0d\u80fd\u5904\u7406\u975e\u8109\u51b2\u566a\u58f0\uff0c\u540c\u65f6\u4fdd\u7559\u7ec6\u8282</p> <p>\u81ea\u9002\u5e94\u4e2d\u503c\u6ee4\u6ce2 </p> <p>\u2013 \u81ea\u9002\u5e94\u4e2d\u503c\u6ee4\u6ce2\u53ef\u4ee5\u5904\u7406\u66f4\u5927\u7684\u5bc6\u5ea6 </p> <p>\u2013 \u81ea\u9002\u5e94\u4e2d\u503c\u6ee4\u6ce2\u80fd\u591f\u5728\u5e73\u6ed1\u975e\u8109\u51b2\u566a\u58f0\u65f6\uff0c\u4fdd\u7559\u7ec6\u8282</p> <p>\u81ea\u9002\u5e94\u4e2d\u503c\u6ee4\u6ce2\u5668 </p> <p>\u76f8\u540c\uff1a \u2013 \u6ee4\u6ce2\u5668\u4f5c\u7528\u4e8e\u5c40\u90e8\u533a\u57df\ud835\udc7a\ud835\udc99\ud835\udc9a </p> <p>\u533a\u522b\uff1a \u2013 \u81ea\u9002\u5e94\u4e2d\u503c\u6ee4\u6ce2\u6839\u636e\u67d0\u4e9b\u6761\u4ef6\u6539\u53d8\ud835\udc7a\ud835\udc99\ud835\udc9a\u7684\u5c3a\u5bf8 </p> <p>\u4f7f\u7528\uff1a \u2013 \u6ee4\u6ce2\u5668\u8f93\u51fa\u4e00\u4e2a\u5355\u503c\uff0c\u7528\u4e8e\u4ee3\u66ff\u6ee4\u6ce2\u5668\u7a97\u53e3\ud835\udc7a\ud835\udc99\ud835\udc9a\u4e2d\u5fc3\u5904\u50cf\u7d20</p> <p>\u81ea\u9002\u5e94\u4e2d\u503c\u6ee4\u6ce2\u5668 </p> <p>\u7b26\u53f7\uff1a </p> <p>\ud835\udc9b\ud835\udc8e\ud835\udc8a\ud835\udc8f = \ud835\udc7a\ud835\udc99\ud835\udc9a\u4e2d\u7684\u6700\u5c0f\u7070\u5ea6\u503c </p> <p>\ud835\udc9b\ud835\udc8e\ud835\udc82\ud835\udc99 = \ud835\udc7a\ud835\udc99\ud835\udc9a\u4e2d\u7684\u6700\u5927\u7070\u5ea6\u503c </p> <p>\ud835\udc9b\ud835\udc8e\ud835\udc86\ud835\udc85 = \ud835\udc7a\ud835\udc99\ud835\udc9a\u4e2d\u7684\u7070\u5ea6\u503c\u4e2d\u503c </p> <p>\ud835\udc9b\ud835\udc99\ud835\udc9a =\u5750\u6807 \ud835\udc99, \ud835\udc9a \u5904\u7684\u7070\u5ea6\u503c </p> <p>\ud835\udc7a\ud835\udc8e\ud835\udc82\ud835\udc99 = \ud835\udc7a\ud835\udc99\ud835\udc9a\u5141\u8bb8\u7684\u6700\u5927\u5c3a\u5bf8</p> <p></p> <p>\u5468\u671f\u566a\u58f0\u6d88\u9664</p> <p>\u5e26\u963b\u6ee4\u6ce2\u5668 </p> <p>\u5e26\u901a\u6ee4\u6ce2\u5668 \uff08\u63d0\u53d6\u566a\u58f0\u6a21\u5f0f\uff09</p> <p>\u9677\u6ce2\u6ee4\u6ce2\u5668</p> <p>\u7ebf\u6027\u3001\u4f4d\u7f6e\u4e0d\u53d8\u7684\u9000\u5316</p> <p>1\uff09\u9000\u5316\u6a21\u578b</p> <p>\u9000\u5316\u6a21\u578b\u516c\u5f0f\uff1a</p> <p>\ud835\udc88(\ud835\udc99, \ud835\udc9a) = \ud835\udc6f[\ud835\udc87(\ud835\udc99, \ud835\udc9a)] + \ud835\udf3c(\ud835\udc99, \ud835\udc9a)</p> <p>\u7b80\u5316\u6a21\u578b\uff1a</p> <p>\ud835\udf3c(\ud835\udc99, \ud835\udc9a)=0</p> <p>2\uff09\u9000\u5316\u7cfb\u7edfH\u7684\u6027\u8d28</p> <p></p> <p></p> <p>\u4f30\u8ba1\u9000\u5316\u51fd\u6570</p> <ol> <li>\u56fe\u50cf\u89c2\u5bdf\u4f30\u8ba1 </li> </ol> <p>\u2013 \u6761\u4ef6\uff1a\u53ea\u6709\u9000\u5316\u56fe\u50cf\uff0c\u6ca1\u6709\u5173\u4e8e\u9000\u5316\u51fd\u6570H\u7684\u4efb\u4f55\u77e5\u8bc6\u3002 \u4ece\u56fe\u50cf\u672c\u8eab\u6765\u6536\u96c6\u4fe1\u606f\uff0c\u5373\u901a\u8fc7\u89c2\u5bdf\u56fe\u50cf\uff0c\u8fdb\u884c\u5904\u7406 \u6765\u83b7\u5f97\u9000\u5316\u51fd\u6570\u4fe1\u606f\u3002 </p> <p>\u65b9\u6cd5\uff1a</p> <p>\u2013 \u4ece\u56fe\u50cf\u4e2d\u9009\u62e9\u4e00\u5c0f\u5757\u533a\u57df\uff0c\u4f5c\u4e3a\u5b50\u56fe\u50cf </p> <p>\u2013 \u56fe\u50cf\u4e2d\u7269\u4f53\u6216\u56fe\u50cf\u80cc\u666f\u4e00\u90e8\u5206 </p> <p>\u2013 \u4e3a\u964d\u4f4e\u566a\u58f0\u5f71\u54cd\uff0c\u627e\u6709\u5f88\u5f3a\u4fe1\u53f7\u7684\u533a\u57df\uff08\u9ad8\u5bf9\u6bd4\u533a\u57df\uff09 </p> <p>\u2013 \u624b\u5de5\u5904\u7406\u5b50\u56fe\u50cf\uff0c\u53bb\u9664\u6a21\u7cca\u3002</p> <p>\u2013 \u8ba1\u7b97\u51faH(u,v)</p> <ol> <li>\u8bd5\u9a8c\u4f30\u8ba1</li> </ol> <p>\u2013 \u6761\u4ef6\uff1a\u53ef\u4ee5\u83b7\u5f97\u4e0e\u9000\u5316\u56fe\u50cf\u8bbe\u5907\u76f8\u4f3c\u7684\u7cfb\u7edf </p> <p>\u2013 \u7406\u8bba\u4e0a\uff1a\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u51c6\u786e\u7684\u9000\u5316\u4f30\u8ba1 \u65b9\u6cd5\uff1a </p> <p>\u2013 \u901a\u8fc7\u8bbe\u7f6e\u7cfb\u7edf\uff0c\u83b7\u5f97\u4e0e\u9000\u5316\u56fe\u50cf\u63a5\u8fd1\u7684\u56fe\u50cf\uff1b </p> <p>\u2013 \u7528\u8be5\u7cfb\u7edf\u4e00\u5e45\u51b2\u6fc0\u6210\u50cf\uff0c\u5f97\u5230\u9000\u5316\u7684\u51b2\u6fc0\u54cd\u5e94\uff1b</p> <pre><code>\u2013 \u51b2\u6fc0\u7528\u4e00\u4e2a\u5c0f\u4eae\u70b9\u6765\u6a21\u62df\uff0c\u5c3d\u53ef\u80fd\u4eae\uff1b\n</code></pre> <p>\u2013 \ud835\udc6f(\ud835\udc96, \ud835\udc97)= \ud835\udc6e(\ud835\udc96,\ud835\udc97)/\ud835\udc68 </p> <p>\u200b    \ud835\udc6e(\ud835\udc96, \ud835\udc97)\u662f\u51b2\u6fc0\u6210\u50cf\u56fe\u50cf\u7684\u5085\u91cc\u53f6\u53d8\u6362\uff0c\ud835\udc68\u662f\u51b2\u6fc0\u7684\u5085\u91cc\u53f6\u53d8\u6362</p> <p></p> <ol> <li>\u5efa\u6a21\u4f30\u8ba1</li> </ol> <p>\u4ece\u5f15\u8d77\u9000\u5316\u7684\u73af\u5883\u6761\u4ef6\u8003\u8651\uff0c\u8fdb\u884c\u4f30\u8ba1 \u6e4d\u6d41\u9000\u5316\u6a21\u578b\u662f\u5927\u6c14\u6e4d\u6d41\u7269\u7406\u7279\u6027\u7684 \u901a\u7528\u5f62\u5f0f\uff1a</p> <p>\ud835\udc6f(\ud835\udc96, \ud835\udc97)= \ud835\udc86^{\u2212\ud835\udc8c(\ud835\udc96^\ud835\udfd0+\ud835\udc97^\ud835\udfd0)^{\ud835\udfd3/6}}</p> <p>\u5176\u4e2d\uff0c \ud835\udc8c\u662f\u4e0e\u6e4d\u6d41\u6027\u8d28\u6709\u5173\u7684\u5e38\u6570 \ud835\udc8c = \ud835\udfce. \ud835\udfce\ud835\udfce\ud835\udfd0\ud835\udfd3\u5267\u70c8\u6e4d\u6d41 \ud835\udc8c = \ud835\udfce. \ud835\udfce\ud835\udfce\ud835\udfcf\u4e2d\u7b49\u6e4d\u6d41 \ud835\udc8c = \ud835\udfce. \ud835\udfce\ud835\udfce\ud835\udfce\ud835\udfd0\ud835\udfd3\u8f7b\u5fae\u6e4d\u6d41</p> <p>\u9006\u6ee4\u6ce2 --\u65e0\u7ea6\u675f\u6062\u590d</p> <p>\u9006\u6ee4\u6ce2\u4e2d\uff0c\u9006\u6ee4\u6ce2\u4e2d\uff0c\u6309\u7167\u79bb\u9891\u8c31\u4e2d\u5fc3\u7684\u8fdc\u8fd1\u5b9a\u4e49\u4e86\u6062\u590d\u8f6c\u79fb\u51fd\u6570\u662f\u632f\u94c3\u6548\u5e94\u51fa\u73b0\u7684\u539f\u56e0\u3002 </p> <p></p> <p></p> <p></p> <p>\u6700\u5c0f\u5747\u65b9\u8bef\u5dee\u6ee4\u6ce2\uff08\u7ef4\u7eb3\u6ee4\u6ce2\uff09 --\u6709\u7ea6\u675f\u6062\u590d</p> <p>\u4e86\u89e3</p> <p>\u6709\u7ea6\u675f\u6700\u5c0f\u4e8c\u4e58\u65b9\u6062\u590d --\u6709\u7ea6\u675f\u6062\u590d</p> <p>\u4e86\u89e3</p>"},{"location":"course/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_8","title":"\u7b2c\u4e03\u7ae0 \u5f69\u8272\u56fe\u50cf\u5904\u7406","text":"<p>\u5f69\u8272\u57fa\u7840</p> <p>1\uff09\u989c\u8272\u7684\u672c\u8d28</p> <p>\u4e0d\u540c\u989c\u8272\u7684\u5149\u5b9e\u8d28\u662f \u4e0d\u540c\u9891\u7387\u7684\u7535\u78c1\u6ce2 \u2013 \u53ef\u89c1\u5149\u8c31\u7684\u6ce2\u957f\u8303\u56f4\uff1a400\uff5e700nm</p> <p>2\uff09\u4e09\u57fa\u8272</p> <p>\u5927\u591a\u6570\u7684\u989c\u8272\u53ef\u4ee5\u901a \u8fc7\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u8272\u6309\u7167 \u4e0d\u540c\u7684\u6bd4\u4f8b\u5408\u6210\u4ea7\u751f</p> <p>3\uff09\u8272\u5ea6</p> <p>\u8272\u5ea6 </p> <ol> <li>\u5f69\u8272\u7684\u4e09\u79cd\u57fa\u672c\u7279\u6027\u91cf </li> </ol> <p>\u4eae\u5ea6\uff1a \u4e0e\u7269\u4f53\u7684\u53cd\u5c04\u7387\u6210\u6b63\u6bd4 </p> <p>\u8272\u8c03\uff1a \u4e0e\u5149\u8c31\u4e2d\u5149\u7684\u6ce2\u957f\u76f8\u8054\u7cfb </p> <p>\u9971\u548c\u5ea6\uff1a\u4e0e\u4e00\u5b9a\u8272\u8c03\u5149\u7684\u7eaf\u5ea6\u6709\u5173 </p> <ol> <li>\u8272\u5ea6\uff1a\u8272\u8c03\u548c\u9971\u548c\u5ea6\u5408\u79f0 </li> </ol> <p>\u5f69\u8272\u53ef\u7528\u4eae\u5ea6\u548c\u8272\u5ea6\u5171\u540c\u8868\u793a</p> <p>4\uff09\u8272\u5ea6\u56fe</p> <p></p> <p>\u5f69\u8272\u6253\u5370\u673a\u662f\u76f8 \u52a0\u8272\u5f69\u548c\u76f8\u51cf\u8272\u5f69\u7684\u6df7\u5408\u7684 \u7ec4\u5408\uff0c\u6240\u4ee5\u5f69\u8272\u57df\u8fb9\u754c\u4e0d\u89c4\u5219\u3002</p> <p>\u5f69\u8272\u8f6c\u5316\u4e3a\u7070\u5ea6\uff0c\u9002\u5408\u663e\u793a\u5668\u548c\u6444\u50cf\u673a\uff1a</p> <p>Y_{709} = 0.2125R + 0.7154G + 0.0721B</p> <p>\u5f69\u8272\u6a21\u578b</p> <p>\u4e3a\u4e86\u6b63\u786e\u6709\u6548\u5730\u8868\u8fbe\u5f69\u8272\u4fe1\u606f\uff0c\u9700\u8981\u5efa\u7acb\u5408\u9002\u7684\u5f69\u8272\u8868\u8fbe\u6a21\u578b\u3002</p> <p>1\uff09\u5f69\u8272\u8868\u8fbe\u6a21\u578b</p> <p>\u5f69\u8272\u8868\u8fbe\u6a21\u578b\u5206\u4e3a\u4e24\u79cd\uff1a</p> <p>\u9762\u5411\u786c\u8bbe\u5907\u7684\u5f69\u8272\u6a21\u578b\uff0c\u8bf8\u5982\u5f69\u8272\u663e\u793a\u5668\u6216\u6253\u5370\u673a\u4e4b\u7c7b\u7684\u786c\u8bbe\u5907\uff0c\u4f8b\u5982RGB\uff0cCMY\u6a21\u578b\u7b49\u3002</p> <p>\u9762\u5411\u89c6\u89c9\u611f\u77e5\u7684\u5f69\u8272\u6a21\u578b\uff0c\u4ee5\u5f69\u8272\u5904\u7406\u4e3a\u76ee\u7684\u7684\u5e94\u7528\uff0c\u4f8b\u5982HSI\u3001HSV\u6a21\u578b\u7b49\u3002</p> <p>2\uff09RGB\u6a21\u578b</p> <p>\u5efa\u7acb\u5728\u7b1b\u5361\u513f\u5750\u6807\u7cfb\u7edf\u91cc\uff0c\u5176\u4e2d\u4e09 \u4e2a\u8f74\u5206\u522b\u4e3aR\uff0cG\uff0cB\uff0c</p> <p>\u2013 \u6a21\u578b\u7684\u7a7a\u95f4\u662f\u6b63\u65b9\u4f53\uff0c\u539f\u70b9\u5bf9\u5e94\u9ed1 \u8272\uff0c\u79bb\u539f\u70b9\u6700\u8fdc\u7684\u9876\u70b9\u5bf9\u5e94\u767d\u8272 </p> <p>\u2013 \u4ece\u9ed1\u5230\u767d\u7684\u7070\u5ea6\u503c\u5206\u5e03\u5728\u4ece\u539f\u70b9\u5230 \u79bb\u539f\u70b9\u6700\u8fdc\u9876\u70b9\u95f4\u7684\u8fde\u7ebf\u4e0a\uff0c\u800c\u7acb\u65b9\u4f53\u5185\u5176\u4f59\u5404\u70b9\u5bf9\u5e94\u4e0d\u540c\u7684\u989c\u8272\uff0c \u53ef\u7528\u4ece\u539f\u70b9\u5230\u8be5\u70b9\u7684\u77e2\u91cf\u8868\u793a</p> <p>3\uff09CMY\u6a21\u578b</p> <p>\u4e09\u8865\u8272\uff1a \u84dd\u7eff(C, cyan)\uff0c\u54c1\u7ea2(M, magenta)\uff0c\u9ec4(Y, yellow) </p> <p>\u2013 \u4e3b\u8981\u7528\u4e8e\u5f69\u8272\u6253\u5370\uff0c\u8fd9\u4e09\u79cd\u8865\u8272\u53ef\u5206\u522b\u7531\u4ece\u767d\u5149\u4e2d\u51cf\u53bb\u4e09\u79cd\u57fa\u8272\u800c\u5f97\u5230 </p> <p>\u2013 \u4eceCMY\u5230RGB\u7684\u8f6c\u6362\u4e3aR =1\u2212C\uff0cG =1\u2212 M\uff0cB =1\u2212Y</p> <p>4\uff09HSI\u6a21\u578b</p> <p></p> <p>H\uff1a\u70b9s\u7684H\u4e3a\u4e09\u89d2\u5f62 \u4e2d\u5fc3\u70b9\u5230s\u7684\u77e2\u91cf\u4e0eR\u8f74\u7684\u5939\u89d2 </p> <p>S\uff1a\u70b9s\u7684S\u4e3a\u4e09\u89d2 \u5f62\u4e2d\u5fc3\u70b9\u5230s\u7684\u77e2\u91cf\u957f\u5ea6 </p> <p>I\uff1a\u79bb\u5f00\u4e2d\u95f4\u622a\u9762 \u5411\u4e0a\u53d8\u767d\uff1b\u5411\u4e0b\u53d8\u9ed1</p> <p>\u8272\u8c03\u548c\u9971\u548c\u5ea6\u4e8c\u8005\u5408\u5e76\u79f0\u4e3a\u8272\u5ea6\uff0c\u4eae\u5ea6\u4e2d\u4e0d\u542b\u6709\u989c\u8272\u4fe1\u606f\u3002</p> <p>H \u8868\u793a\u8272\u8c03\uff08hue\uff09 </p> <p>S \u8868\u793a\u9971\u548c\u5ea6\uff08saturation\uff09 </p> <p>I \u8868\u793a\u5bc6\u5ea6\uff08intensity\uff0c\u5bf9\u5e94\u6210\u50cf\u4eae\u5ea6\u548c\u56fe\u50cf\u7070\u5ea6\uff09 </p> <p>H\u548cS\u5408\u79f0\u8272\u5ea6</p> <p>I \u5206\u91cf\u4e0e\u56fe\u50cf\u7684\u5f69\u8272\u4fe1\u606f\u65e0\u5173 </p> <p>H \u548c S \u5206\u91cf\u4e0e\u4eba\u611f\u53d7\u989c\u8272\u7684\u65b9\u5f0f\u7d27\u5bc6\u76f8\u8fde</p> <p></p> <p></p> <p>\u4f2a\u5f69\u8272\u5904\u7406</p> <p>\u4eba\u773c\u5bf9\u5f69\u8272\u8272\u6bd4\u5bf9\u7070\u5ea6\u6709\u8f83\u5927\u7684\u5206\u8fa8\u80fd\u529b\u3002</p> <p>\u4f2a\u5f69\u8272(pseudocolor)\u5904\u7406\u662f\u6307\u5bf9\u539f\u6765\u7070\u5ea6\u56fe\u50cf\u4e2d\u4e0d\u540c\u7070\u5ea6\u503c\u7684\u533a\u57df\u8d4b\u4e88\u4e0d\u540c\u7684\u989c\u8272\u3002</p> <p>\u5178\u578b\u65b9\u6cd5 (1) \u4eae\u5ea6\u5207\u5272 (2) \u5229\u7528\u53d8\u6362\u51fd\u6570 (3) \u9891\u57df\u6ee4\u6ce2</p> <p>1\uff09\u4eae\u5ea6\u5207\u5272</p> <p>\u75281\u4e2a\u5e73\u884c\u4e8e\u56fe\u50cf\u5750\u6807\u5e73\u9762\u7684\u5e73\u9762\u53bb\u5207\u5272\u56fe\u50cf\u4eae\u5ea6\u51fd\u6570\uff0c\u4ece\u800c\u628a\u4eae \u5ea6\u51fd\u6570\u5206\u62102\u4e2a\u7070\u5ea6\u503c\u533a\u95f4\u3002</p> <p></p> <p>2\uff09\u4ece\u7070\u5ea6\u5230\u5f69\u8272\u7684\u53d8\u6362\uff08\u6620\u5c04\uff09</p> <p></p> <p>3\uff09\u9891\u57df\u6ee4\u6ce2 </p> <p>\u5bf9\u539f\u6765\u7070\u5ea6\u56fe\u50cf\u4e2d\u7684\u4e0d\u540c\u9891\u7387\u5206\u91cf\uff08\u53ef\u5206\u522b\u501f\u52a9\u4f4e\u901a\uff0c\u5e26\u901a/\u5e26\u963b\uff0c\u9ad8\u901a\u6ee4\u6ce2\u5668\u83b7\u5f97\uff09\u8d4b\u4e88\u4e0d\u540c\u7684\u989c\u8272</p> <p></p> <p>\u771f\u5f69\u8272\u5904\u7406</p> <p>1\uff09\u5904\u7406\u65b9\u6cd5</p> <ol> <li>\u5c06\u4e00\u5e45\u5f69\u8272\u56fe\u50cf\u770b\u4f5c\u4e09\u5e45\u5206\u91cf\u56fe\u50cf\u7684\u7ec4\u5408\u4f53\uff0c\u5148\u5206\u522b\u5355\u72ec\u5904\u7406\u6bcf\u4e00\u5e45\u5206\u91cf\u56fe\u50cf\uff0c\u518d\u5c06\u7ed3\u679c\u5408\u6210\u4e00\u5e45\u5904\u7406\u8fc7\u7684\u5408\u6210\u5f69\u8272\u56fe\u50cf</li> <li>\u5c06\u4e00\u5e45\u5f69\u8272\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u770b\u4f5c\u5177\u6709\u4e09\u4e2a\u5c5e\u6027\u503c\uff0c\u5373\u5c5e\u6027\u73b0\u5728\u4e3a\u4e00\u4e2a\u77e2\u91cf\uff0c\u5229\u7528\u5bf9\u77e2\u91cf\u7684\u8868\u8fbe\u65b9\u6cd5\u8fdb\u884c\u5904\u7406</li> </ol> <p>2\uff09\u5f69\u8272\u53d8\u6362</p> <p>g(x,y)=T(f(x,y))</p> <p>\u5176\u4e2d\uff0c\ud835\udc87(\ud835\udc99, \ud835\udc9a) \u662f\u5f69\u8272\u8f93\u5165\u56fe\u50cf\uff0c \ud835\udc88(\ud835\udc99, \ud835\udc9a) \u662f\u53d8\u6362\u540e\u7684\u5f69\u8272\u56fe\u50cf\uff0c \ud835\udc7b\u662f\u5728 (\ud835\udc99, \ud835\udc9a) \u7684\u7a7a\u95f4\u90bb\u57df\u4e0a\u5bf9\ud835\udc87\u7684\u4e00\u4e2a\u7b97\u5b50\u3002</p> <p>\u5206\u91cf\u5f62\u5f0f\uff1a\ud835\udc94\ud835\udc8a = \ud835\udc7b\ud835\udc8a(\ud835\udc93\ud835\udfcf, \ud835\udc93\ud835\udfd0, \u22ef , \ud835\udc93\ud835\udc8f)\uff0c\ud835\udc8a = \ud835\udfcf, \ud835\udfd0, \u22ef , \ud835\udc8f </p> <p>\ud835\udc93\ud835\udc8a\u548c\ud835\udc94\ud835\udc8a\u662f\ud835\udc87 \ud835\udc99, \ud835\udc9a \u548c\ud835\udc88 \ud835\udc99, \ud835\udc9a \u5728\u4efb\u4f55\u70b9\u5904\u5f69\u8272\u5206\u91cf\u53d8\u91cf\uff0c\ud835\udc8f\u662f\u5f69\u8272\u5206\u91cf\u6570\uff1b </p> <p>\ud835\udc7b\ud835\udc8a\u662f\u5bf9\ud835\udc93\ud835\udc8a\u5904\u7406\u4ea7\u751f\ud835\udc94\ud835\udc8a\u7684\u6620\u5c04\u51fd\u6570\uff1b </p> <p>\ud835\udc8f = \ud835\udfd1\u65f6\u5019\uff0c\u662fRGB\u7a7a\u95f4\uff0c\ud835\udc8f = \ud835\udfd2\u65f6\u5019\uff0c\u662fCMYK\u7a7a\u95f4\uff0c</p> <p>3\uff09\u5f69\u8272\u5f3a\u5ea6\u589e\u5f3a\u53d8\u6362</p> <ol> <li>\u53d8\u6362\u589e\u5f3a </li> </ol> <p>\u5bf9\u4e8e\u5f69\u8272\u56fe\u50cf\u589e\u5f3a\u5176\u5f3a\u5ea6\u503c\uff0c\u5373intensity \u8981\u5224\u65ad\u989c\u8272\u6a21\u578b\uff0c\u7136\u540e\u5904\u7406 </p> <ol> <li> <p>HSI\u6a21\u578b\uff0cI\u5355\u5206\u91cf\u8fdb\u884c\u589e\u5f3a\u7684\u6b65\u9aa4</p> <p>(1) \u5c06R\uff0cG\uff0cB\u5206\u91cf\u56fe\u8f6c\u5316\u4e3aH\uff0cS\uff0cI\u5206\u91cf\u56fe</p> <p>(2) \u5229\u7528\u5bf9\u7070\u5ea6\u56fe\u589e\u5f3a\u7684\u65b9\u6cd5\u589e\u5f3a\u5176\u4e2d\u7684I\u5206\u91cf \ud835\udc94\ud835\udfd1 = \ud835\udc8c\ud835\udc93\ud835\udfd1 </p> <p>(3) \u518d\u5c06\u7ed3\u679c\u8f6c\u6362\u4e3aR\uff0cG\uff0cB\u5206\u91cf\u56fe </p> </li> <li> <p>RGB\u6a21\u578b\uff0c\u5f3a\u5ea6\u589e\u5f3a \u4e09\u4e2a\u5206\u91cf\u90fd\u53d8\u6362 \ud835\udc94\ud835\udc8a = \ud835\udc8c\ud835\udc93\ud835\udc8a\uff0c\ud835\udc8a = \ud835\udfcf, \ud835\udfd0, 3</p> </li> </ol> <p>4\uff09\u8865\u8272</p> <p>\u5728\u8272\u73af\u4e0a\uff0c\u4e0e\u8272\u8c03\u76f4\u63a5\u76f8\u5bf9 \u7684\u53e6\u4e00\u7aef\u79f0\u4e3a\u8865\u8272</p> <ol> <li> <p>\u5728RGB\u7a7a\u95f4\uff0c \u76f4\u63a5\u6c42\u8865\uff1b </p> </li> <li> <p>\u5728HSI\u7a7a\u95f4\uff0c \u6ca1\u6709\u76f4\u63a5\u65b9\u6cd5\uff0c \u53ea\u80fd\u8fd1\u4f3c\u3002</p> </li> </ol> <p>5\uff09\u76f4\u65b9\u56fe\u5747\u8861\u5316</p> <ol> <li>\u5355\u72ec\u5bf9RGB\u5f69\u8272\u56fe\u50cf\u5206\u91cf\u8fdb\u884c\u76f4\u65b9\u56fe\u5747\u8861</li> </ol> <p>\u2013 \u4ea7\u751f\u4e0d\u6b63\u786e\u989c\u8272 </p> <ol> <li>\u5747\u5300\u5730\u5c55\u5f00\u8fd9\u79cd\u5f69\u8272\u7070\u5ea6\uff0c\u4fdd\u6301\u5f69\u8272\u672c\u8272\uff08\u8272\u8c03\uff09 \u4e0d\u53d8 </li> </ol> <p>\u2013 \u5728HSI\u4e2d\uff0c\u5747\u8861\u5316\u5f69\u8272\u5206\u91cfI\uff0c\u5f69\u8272\u672c\u8eab\uff08\u8272\u8c03\uff09\u4e0d\u53d8</p> <p>6\uff09\u5f69\u8272\u5e73\u6ed1</p> <p>\u5c06\u7070\u5ea6\u56fe\u50cf\u90bb\u57df\u5e73\u5747\u6269\u5c55\u5230\u5f69\u8272\u56fe\u50cf\uff0c\u4f7f\u7528\u5411\u91cf\u5e73\u6ed1\u7b97\u5b50 \u5bf9HSI\u6a21\u578b\u4e2d\u7684I\u901a\u9053\u8fdb\u884c\u5e73\u6ed1\uff0cH\u548cS\u901a\u9053\u4e0d\u5904\u7406\uff0c \u989c\u8272\u6ca1\u6709\u53d8\u5316\u3002</p> <p>7\uff09\u5f69\u8272\u9510\u5316</p> <p></p> <p>8\uff09\u9971\u548c\u5ea6\u589e\u5f3a</p> <p>\u2013 \u65b9\u6cd5\uff1a\u8f6c\u5230HSI\u989c\u8272\u7a7a\u95f4\uff0c\u5bf9S\u901a\u9053\u8fdb\u884c\u589e\u5f3a </p> <p>\u2013 \u6548\u679c\uff1a </p> <p>\u2013 \u589e\u5927\u50cf\u7d20\u9971\u548c\u5ea6\u4f1a\u4f7f\u56fe\u50cf\u8272\u5f69\u66f4\u9c9c\u660e </p> <p>\u2013 \u51cf\u5c0f\u50cf\u7d20\u9971\u548c\u5ea6\u4f1a\u4f7f\u56fe\u50cf\u8272\u5f69\u611f\u51cf\u5c11\uff0c\u663e\u5f97\u5e73\u6de1</p> <p>9\uff09\u8272\u8c03\u589e\u5f3a </p> <p>\u2013 \u65b9\u6cd5\uff1a\u8f6c\u6362\u5230HSI\u989c\u8272\u7a7a\u95f4\uff0c\u7136\u540e\u5bf9H\u8fdb\u884c\u589e\u5f3a </p> <p>\u6548\u679c\uff1a\u56e0\u4e3a\u8272\u8c03\u5bf9\u5e94\u4e00\u4e2a\u89d2\u5ea6 \u2013 \u5fae\u589e\u4e00\u4e2a\u5e38\u6570\uff0c\u4f1a\u4f7f\u989c\u8272\u5728\u8272\u8c31\u4e0a\u79fb\u52a8\u3002</p> <p>\u2013 \u5e38\u6570\u8f83\u5c0f\u65f6\uff0c\u4f1a\u4f7f\u8272\u8c03\u53d8\u201c\u6696\u201d\u6216\u53d8\u201c\u51b7\u201d</p> <p>\u2013 \u5e38\u6570\u8f83\u5927\u65f6\uff0c\u4f1a\u4f7f\u5f69\u8272\u56fe\u50cf\u53d1\u751f\u5267\u70c8\u53d8\u6362</p>"},{"location":"course/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_9","title":"\u7b2c\u516b\u7ae0 \u5f62\u6001\u5b66\u56fe\u50cf\u5904\u7406","text":"<p>\u7ed3\u6784\u5143</p> <p>\u5bf9\u6bcf\u4e2a\u7ed3\u6784\u5143\u7d20\uff0c\u5148\u8981\u6307\u5b9a\u4e00\u4e2a\u539f\u70b9\uff0c\u5b83\u662f\u7ed3\u6784\u5143\u7d20\u53c2\u4e0e \u5f62\u6001\u5b66\u8fd0\u7b97\u7684\u53c2\u8003\u70b9\u3002</p> <p>\u6ce8\u610f\uff1a\u539f\u70b9\u53ef\u4ee5\u5305\u542b\u5728\u7ed3\u6784\u5143\u7d20\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5305\u542b\u5728\u7ed3 \u6784\u5143\u7d20\u4e2d\uff08\u5373\u539f\u70b9\u5e76\u4e0d\u4e00\u5b9a\u8981\u5c5e\u4e8e\u7ed3\u6784\u5143\u7d20\uff09</p> <p>\u5bf9\u56fe\u50cf\u64cd\u4f5c\u65f6\u8981\u6c42\u7ed3\u6784\u5143\u7d20\u662f\u77e9\u5f62\u9635\u5217\uff0c\u901a\u8fc7\u6dfb\u52a0\u6700\u5c11\u53ef\u80fd\u7684\u80cc\u666f\u5143\u7d20\u5b9e\u73b0\u3002</p> <p>\u57fa\u672c\u5f62\u6001\u5b66\u64cd\u4f5c</p> <p>\u6620\u50cf\u548c\u4f4d\u79fb\u662f\u5f62\u6001\u5b66\u5904\u7406\u4e2d\u6269\u5c55\u7684\u96c6\u5408\u8fd0\u7b97\u3002 </p> <p>1\uff09\u81a8\u80c0</p> <p>A\u2295B = \\{x|(B\u02c6) x \u2229 A \u2260 \\phi \\},\u02c6\u4e3a\u7ffb\u8f6c\u8fd0\u7b97</p> <p>\u5148\u5bf9B\u505a==\u5173\u4e8e\u539f\u70b9\u7684\u6620\u8c61==\uff0c\u518d\u5c06\u5176\u6620\u8c61\u5e73\u79fbx\uff0c\u7ed3\u679c\u662f\u5e73\u79fb\u540e\u4e0eA\u4ea4\u96c6\u4e0d\u4e3a\u7a7a\u7684x\u96c6\u5408\u3002</p> <p>\u5373\u4e3a\u7528B\u6765\u81a8\u80c0A\u5f97\u5230\u7684\u96c6\u5408\u662f \u7684\u4f4d\u79fb\u4e0eA\u81f3\u5c11\u6709\u4e00 \u4e2a\u975e\u96f6\u5143\u7d20\u5373\u76f8\u4ea4\u65f6B\u7684\u539f\u70b9\u4f4d\u7f6e\u7684\u96c6\u5408\u3002</p> <p>2\uff09\u8150\u8680</p> <p>A\u3280B = \\{x |(B)x \u2286 A \\}</p> <p>B\u79fb\u52a8\u540e\u5b8c\u5168\u5305\u542b\u5728A\u4e2d\u65f6\uff0cB\u7684\u539f\u70b9\u4f4d\u7f6e\u7684\u96c6\u5408</p> <p>\u4f5c\u7528\uff1a</p> <p>\u539f\u70b9\u5728\u7ed3\u6784\u5143\u7d20\uff08B\u4e2d\uff0c\u6536\u7f29\u56fe\u50cf\u3002</p> <p>\u7ed3\u6784\u5143\u7d20\u4e0d\u5305\u542b\u539f\u70b9\u65f6\uff0c\u53ef\u4ee5\u7528\u4f5c\u586b\u5145\u5185\u90e8\u7a7a\u6d1e</p> <p>3\uff09\u8150\u8680\u548c\u81a8\u80c0\u5bf9\u5076\u6027</p> <p>(A\u3280B)^c=A^c\u2295B\u02c6\uff0c\u5176\u4e2dc\u4e3a\u53d6\u8865\u8fd0\u7b97</p> <p></p> <p>3\uff09\u5f00\u64cd\u4f5c</p> <p>\u5b9a\u4e49\uff1aB\u5bf9A\u8fdb\u884c\u7684\u5f00\u64cd\u4f5c\u5c31\u662f\u5148\u7528B\u5bf9A\u8150\u8680\uff0c\u7136\u540e\u7528B \u5bf9\u7ed3\u679c\u8fdb\u884c\u81a8\u80c0</p> <p>\u4f5c\u7528\uff1a\u5f00\u64cd\u4f5c\u65ad\u5f00\u72ed\u7a84\u7684\u95f4\u65ad\u548c\u6d88\u9664\u7ec6\u7684\u7a81\u51fa\u7269</p> <p>A\u2299B=(A\u3280B)\u2295B</p> <p></p> <p>4\uff09\u95ed\u64cd\u4f5c</p> <p>\u5b9a\u4e49\uff1aB\u5bf9A\u8fdb\u884c\u7684\u95ed\u64cd\u4f5c\u5c31\u662f\u5148\u7528B\u5bf9A\u81a8\u80c0\uff0c\u7136\u540e\u7528B \u5bf9\u7ed3\u679c\u8fdb\u884c\u8150\u8680</p> <p>\u4f5c\u7528\uff1a\u95ed\u64cd\u4f5c\u6d88\u5f25\u72ed\u7a84\u7684\u95f4\u65ad\u548c\u957f\u7ec6\u7684\u9e3f\u6c9f\uff0c\u6d88\u9664\u5c0f\u7684\u5b54\u6d1e\uff0c\u5e76 \u586b\u8865\u8f6e\u5ed3\u7ebf\u4e2d\u5c0f\u7684\u65ad\u88c2</p> <p>A\u2022B=(A\u2295B)\u3280B</p> <p></p> <p>5\uff09\u5f00\u548c\u95ed\u64cd\u4f5c\u6027\u8d28</p> <p>(A\u2022B)^c=(A^c\u2299B\u02c6)</p> <p>(A\u2299B)\u2286A</p> <p>A\u2286A\u2022B</p> <p>6\uff09\u51fb\u4e2d\u6216\u51fb\u4e0d\u4e2d\u53d8\u6362</p> <p></p> <p>\u57fa\u672c\u7684\u5f62\u6001\u5b66\u7b97\u6cd5</p> <p>1\uff09\u8fb9\u754c\u63d0\u53d6</p> <p>\u8bbe\u96c6\u5408A\u7684\u8fb9\u754c\u8868\u793a\u4e3a \u03b2(A)\uff0c\u9009\u53d6\u7ed3\u6784\u5143\u7d20B\uff0c\u5148\u8fdb\u884cB\u5bf9 A\u8150\u8680\uff0c\u800c\u540e\u7528A\u51cf\u53bb\u8150\u8680\u7684\u7ed3\u679c\u3002</p> <p>2\uff09\u533a\u57df\u586b\u5145</p> <p></p> <p>3\uff09\u7ec6\u5316\u64cd\u4f5c</p> <p>\u63d0\u53d6\u56fe\u50cf\u7684\u4e3b\u8981\u6846\u67b6</p> <p></p> <p>4\uff09\u8054\u901a\u533a\u57df\u63d0\u53d6</p> <p>\u65b9\u6cd5\uff1a</p> <p>X_k = (X_{k\u22121} \u2295 B)\u2229A</p> <p>\u76f4\u81f3X_k\u548cX_{k-1}\u76f8\u540c</p> <p>5\uff09\u51f8\u58f3</p> <p></p> <p>\u57fa\u672c\u7070\u5ea6\u7ea7\u56fe\u50cf\u6269\u5c55\u64cd\u4f5c</p> <p>1\uff09\u81a8\u80c0</p> <p>f\u2295b(s,t)=max\\{f(s-x,t-y)+b(x,y)|(s-x,t-y) \u2208D_f;(x,y)\u2208 D_b \\}</p> <p>Df\u548cDb\u5206\u522b\u4e3a f \u548c b \u7684\u5b9a\u4e49\u57df\u3002</p> <p>\u50cf\u7d20\u90fd\u5fc5\u987b\u5728\u5b9a\u4e49\u57df\u5185\uff0c\u4e0e\u96c6\u5408\u4ea4\u96c6\u4e00\u81f4</p> <p>\u81a8\u80c0\u64cd\u4f5c\u7684\u7ed3\u679c\uff1a</p> <p>\uff08a\uff09\u5982\u679c\u7ed3\u6784\u5143 \u7d20\u7684\u503c\u90fd\u4e3a\u6b63\uff0c\u90a3\u4e48\u8f93\u51fa\u56fe\u50cf\u4f1a\u66f4\u4eae </p> <p>\uff08b\uff09\u6697\u7684\u7ec6\u8282\u90e8 \u5206\u7684\u53d8\u5316\u53d6\u51b3\u4e8e\u7ed3\u6784\u5143\u7d20\u7684\u503c\u548c\u5f62\u72b6</p> <p>2\uff09\u8150\u8680</p> <p>f\u3280b(s,t)=min\\{f(s-x,t-y)-b(x,y)|(s-x,t-y) \u2208D_f;(x,y)\u2208 D_b \\}</p> <p>Df\u548cDb\u5206\u522b\u4e3a f \u548c b \u7684\u5b9a\u4e49\u57df\u3002</p> <p>\u50cf\u7d20\u90fd\u5fc5\u987b\u5728\u5b9a\u4e49\u57df\u5185\uff0c\u4e0e\u7ed3\u6784\u5143\u7d20\u5fc5\u987b\u5b8c\u5168\u5305\u542b\u5728\u88ab\u8150\u8680\u7684 \u96c6\u5408\u5185\u4e00\u81f4</p> <p>\u8150\u8680\u64cd\u4f5c\u7684\u7ed3\u679c\uff1a </p> <p>\uff08a\uff09\u5982\u679c\u7ed3\u6784\u5143\u7d20\u7684 \u503c\u90fd\u4e3a\u6b63\uff0c\u90a3\u4e48\u8f93\u51fa\u56fe\u50cf\u4f1a\u66f4\u6697 </p> <p>\uff08b\uff09\u4eae\u7684\u7ec6\u8282\u90e8\u5206\u7684\u53d8\u5316\u53d6\u51b3\u4e8e\u7ed3\u6784\u5143\u7d20\u7684\u503c\u548c\u5f62\u72b6</p> <p>3\uff09\u5f00\u64cd\u4f5c</p> <p></p> <p>\u5f00\u64cd\u4f5c\uff1a\u5c0f\u7684\u660e\u4eae\u7ec6\u8282\u5c3a\u5bf8\u53d8\u5c0f\uff0c\u6697\u7684\u6548\u679c\u53d7\u5f71\u54cd\u8f83\u5c0f </p> <p>\u95ed\u64cd\u4f5c\uff1a\u5c0f\u7684\u6697\u7ec6\u8282\u7684\u5c3a\u5bf8\u7f29\u5c0f\uff0c\u660e\u4eae\u90e8\u5206\u53d7\u5f71\u54cd\u8f83\u5c0f</p> <p>\u57fa\u672c\u7684\u7070\u5ea6\u7ea7\u5f62\u6001\u5b66\u7b97\u6cd5</p> <p>1\uff09\u5f62\u6001\u5b66\u5e73\u6ed1</p> <p>\u5148\u8fdb\u884c\u5f00\u64cd\u4f5c\uff0c\u540e\u8fdb\u884c\u95ed\u64cd\u4f5c</p> <p>\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1ag=(f\u2299b)\u2022b</p> <p>2\uff09\u5f62\u6001\u5b66\u68af\u5ea6</p> <p>\u5f00\u64cd\u4f5c\u51cf\u95ed\u64cd\u4f5c</p> <p>\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1ag=(f\u2295b)-(f\u3280b)</p> <p>3\uff09\u5e3d\u53d8\u6362</p> <p>\u7528\u4e00\u4e2a\u7ed3\u6784\u5143\u901a\u8fc7\u5f00\u64cd\u4f5c\u6216\u95ed\u64cd\u4f5c\u4ece\u56fe\u50cf\u4e2d\u5220\u9664\u7269\u4f53\u3002 \u7136\u540e\u5dee\u64cd\u4f5c\u5f97\u5230\u4e00\u5e45\u4ec5\u4fdd\u7559\u5df2\u5220\u9664\u5206\u91cf\u7684\u56fe\u50cf\u3002</p> <ol> <li>\u9876\u5e3d\u53d8\u6362</li> </ol> <p>T_{hat}(f)=f-(f\u2299b)</p> <p>\u7070\u5ea6\u7ea7\u56fe\u50cff\u7684\u9876\u5e3d\u53d8\u6362\u662ff\u51cf\u53bb\u5176\u5f00\u64cd\u4f5c</p> <p>\u9876\u5e3d\u53d8\u6362\u7528\u4e8e\u5f97\u5230\u6697\u80cc\u666f\u4e0a\u7684\u4eae\u7269\u4f53\uff08\u767d\u9876\u5e3d\uff09</p> <ol> <li>\u4f4e\u5e3d\u53d8\u6362</li> </ol> <p>T_{hat}(f)=(f\u2022b)-f</p> <p>\u7070\u5ea6\u7ea7\u56fe\u50cff\u7684\u5e95\u5e3d\u53d8\u6362\u662ff\u7684\u95ed\u64cd\u4f5c\u51cf\u53bbf</p> <p>\u5e95\u5e3d\u53d8\u6362\u7528\u4e8e\u5f97\u5230\u4eae\u80cc\u666f\u4e0a\u7684\u6697\u7269\u4f53\uff08\u9ed1\u5e95\u5e3d\uff09</p> <p>\u5e3d\u53d8\u6362\u7684\u5e94\u7528\u6709\u6821\u6b63\u4e0d\u5747\u5300\u5149\u7167\u5f71\u54cd\u3001\u7eb9\u7406\u5206\u5272\u548c\u7c92\u5ea6\u6d4b\u5b9a\uff0c\u5177\u4f53\u4f7f\u7528\u7684\u662f\u5f00\u64cd\u4f5c\uff0c\u51cf\u5c11\u4eae\u5ea6\u8f83\u9ad8\u7684\u90e8\u5206\u3002</p>"},{"location":"course/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_10","title":"\u7b2c\u4e5d\u7ae0 \u56fe\u50cf\u7f16\u7801","text":"<p>\u56fe\u7247\u538b\u7f29</p> <p>1\uff09\u6570\u636e\u548c\u4fe1\u606f</p> <p>\u6570\u636e\u662f\u4fe1\u606f\u7684\u8f7d\u4f53</p> <p>\u540c\u91cf\u7684\u6570\u636e\u53ef\u8868\u8fbe\u4e0d\u4fe1\u606f\uff0c\u540c\u91cf\u7684\u4fe1\u606f\u53ef\u7528\u4e0d\u6570\u636e\u8868\u8fbe</p> <p>2\uff09\u56fe\u7247\u538b\u7f29\u79cd\u7c7b</p> <p>\u4fe1\u606f\u4fdd\u5b58\u578b\u548c\u4fe1\u606f\u635f\u5931\u578b</p> <p>\u6570\u636e\u5197\u4f59</p> <p>1\uff09\u5197\u4f59\u79cd\u7c7b</p> <p>\u5197\u4f59\u6709\u4e24\u79cd\uff0c\u5206\u522b\u4e3a\u6570\u636e\u8868\u8fbe\u4e86\u65e0\u7528\u7684\u4fe1\u606f\u548c\u6570\u636e\u8868\u8fbe\u4e86\u5df2\u8868\u8fbe\u7684\u4fe1\u606f\u3002</p> <p>2\uff09\u76f8\u5bf9\u538b\u7f29\u5197\u4f59</p> <p>\u76f8\u5bf9\u5197\u4f59\u516c\u5f0f\u4e3aR_D=1-\\frac{1}{C_R}\uff0c\u538b\u7f29\u7387\u4e3aC_R=\\frac{n_1}{n2}\uff0cC_R\u5728\u533a\u95f4(0,+\\infty)\u4e2d\u53d6\u503c\u3002n1\u548cn2\u4ee3\u8868\u4e24\u4e2a\u6570\u636e\u96c6\u5408\u4e2d\u7684\u4fe1\u606f\u8f7d\u4f53\u5355\u4f4d\u7684\u6570\u91cf\u3002</p> <p></p> <p>3\uff09\u5197\u4f59\u7684\u7c7b\u522b</p> <p>\u7f16\u7801\u5197\u4f59\u3001\u50cf\u7d20\u76f8\u5173\u5197\u4f59\u548c\u5fc3\u91cc\u89c6\u89c9\u5197\u4f59\u3002</p> <p>\u7f16\u7801\u5197\u4f59\u548c\u4e0e\u7070\u5ea6\u5206\u5e03\u7684\u6982\u7387\u7279\u6027\u6709\u5173\u3002</p> <p>\u50cf\u7d20\u76f8\u5173\u5197\u4f59\u548c\u7a7a\u95f4\u5197\u4f59\uff0c\u65f6\u95f4\u5197\u4f59\u6709\u5173\u3002</p> <p>\u5fc3\u7406\u89c6\u89c9\u5197\u4f59\u548c\u4e3b\u89c2\u611f\u89c9\u6709\u5173\u3002</p> <p>4\uff09\u7f16\u7801\u5197\u4f59</p> <p>\u56fe\u50cf\u4e2d\u7070\u5ea6\u51fa\u73b0\u7684\u6982\u7387\uff1ap_s(s_k)=n_k/n,k=0,1,..,L-1</p> <p>\u5e73\u5747\u6bd4\u7279\u6570\uff1aL_{avg}=\\sum^{L-1}_{k=0}l(s_k)p_k(s_k)</p> <p>\u9884\u671f\u7ed3\u679c\u4e3a\u7528\u8f83\u5c11\u7684\u6bd4\u7279\u6570\u8868\u793a\u51fa\u73b0\u6982\u7387\u8f83\u5927\u7684\u7070\u5ea6\u7ea7\uff0c\u7528\u8f83\u591a\u7684\u6bd4\u7279\u6570\u8868\u793a\u51fa\u73b0\u6982\u7387\u8f83\u5c0f\u7684\u7070\u5ea6\u7ea7</p> <p>5\uff09\u50cf\u7d20\u95f4\u5197\u4f59</p> <p>\u4e3b\u8981\u4f53\u73b0\u50cf\u7d20\u95f4\u76f8\u5173\u6027\uff0c\u81ea\u76f8\u5173\u7cfb\u6570\u4e3a\uff1a</p> <p>A(\\Delta n)=\\frac{1}{N-\\Delta n} \\sum^{N-\\Delta n-1}_{X=0}f(x,y)f(x+\\Delta n,y)</p> <p>3\uff09\u5fc3\u91cc\u89c6\u89c9\u5197\u4f59</p> <p>\u4e3b\u8981\u4e0e\u4eba\u89c2\u5bdf\u56fe\u50cf\u7684\u65b9\u5f0f\u6709\u5173\uff0c\u5fc3\u7406\u89c6\u89c9\u5197\u4f59\u4e0e\u5b9e\u5728\u7684\u89c6\u89c9\u4fe1\u606f\u6709\u8054\u7cfb</p> <p>\u56fe\u50cf\u4fdd\u771f\u5ea6</p> <p>\u63cf\u8ff0\u89e3\u7801\u56fe\u50cf\u76f8\u5bf9\u4e8e\u539f\u59cb\u56fe\u50cf\u7684\u504f\u79bb\u7a0b\u5ea6\u3002</p> <p>1\uff09\u4e3b\u7ba1\u4fdd\u771f\u5ea6\u51c6\u5219</p> <p>\u4e3b\u7ba1\u89c2\u6d4b\u56fe\u50cf\u7684\u8d28\u91cf\uff0c\u5e76\u5bf9\u56fe\u50cf\u505a\u51fa\u8bc4\u4ef7\uff0c\u4f8b\u5982\u4f18\u79c0\u3001\u826f\u597d\u3001\u53ef\u7528\u3001\u521a\u53ef\u770b\u3001\u5dee\u548c\u4e0d\u80fd\u7528\u3002</p> <p>2\uff09\u5ba2\u89c2\u4fdd\u771f\u5ea6\u51c6\u5219</p> <p>\u7528\u7f16\u7801\u8f93\u5165\u56fe\u4e0e\u89e3\u7801\u8f93\u51fa\u56fe\u7684\u67d0\u4e2a\u786e\u5b9a\u51fd\u6570\u8868\u793a\u635f\u5931\u7684\u4fe1 \u606f\u91cf\uff0c \u4fbf\u4e8e\u8ba1\u7b97\u6216\u6d4b\u91cf</p> <p></p> <p></p> <p>\u56fe\u50cf\u7f16\u7801\u6a21\u578b</p> <p>\u7f16\u7801\u6a21\u578b\u5206\u4e3a\u4e24\u79cd\uff1a\u4fe1\u606f\u4fdd\u5b58\u578b\u548c\u4fe1\u606f\u635f\u5931\u578b</p> <p>\u65e0\u5931\u771f\u4fe1\u6e90\u7f16\u7801\u5668\u4e0d\u9700\u8981\u91cf\u5316\u5668</p> <p>\u56fe\u50cf\u7f16\u7801</p> <p>1\uff09\u4fe1\u606f\u91cf</p> <p>\u6982\u7387\u4e3aP(E)\u7684\u968f\u673a\u4e8b\u4ef6E\u7684\u4fe1\u606f\u91cf\u4e3a</p> <p>l(E)=log\\frac{1}{P(E)}=-logP(E)\uff0c\u5176\u4e2dlog\u4ee52\u4e3a\u5e95\u3002</p> <p>2\uff09\u7f16\u7801\u6548\u7387</p> <p>\u4fe1\u606f\u71b5\u516c\u5f0f\uff1a</p> <p>H(u)=-\\sum^J_{j=1}p(a_i)log(P(a_i))</p> <p>\u5b9a\u4e49\u4e86\u89c2\u5bdf\u5230\u5355\u4e2a\u4fe1\u6e90\u7b26\u53f7\u8f93\u51fa\u65f6\u6240\u83b7\u5f97\u7684\u5e73\u5747\u4fe1\u606f\u91cf</p> <p>\u5e73\u5747\u7801\u957f\uff1a</p> <p>L^*_{avg}=\\sum^{J^n}_{j=1}p(a_i)*l(a_i)</p> <p>\u7f16\u7801\u6548\u7387\uff1a</p> <p>\\eta=\\frac{H(u)}{L^*_{avg}}*100\\%</p> <p></p> <p>3\uff09\u65e0\u635f\u7f16\u7801--\u53d8\u957f\u7f16\u7801</p> <ol> <li>\u54c8\u592b\u66fc\u7f16\u7801</li> </ol> <p>\u7565</p> <ol> <li>\u9999\u519c-\u6cd5\u8bfa\u6bd4\u90a3\u5417</li> </ol> <p>\u4e3b\u8981\u6b65\u9aa4\u4e3a\uff1a </p> <p>(1) \u5c06\u4fe1\u6e90\u7b26\u53f7\u4f9d\u5176\u6982\u7387\u4ece\u5927\u5230\u5c0f\u6392\u5217</p> <p>(2) \u5c06\u4fe1\u6e90\u7b26\u53f7\u5206\u6210\u6982\u7387\u548c\u63a5\u8fd1\u7684\u4e24\u90e8\u5206</p> <p>(3) \u5206\u522b\u7ed9\u4e24\u90e8\u5206\u7684\u4fe1\u6e90\u7b26\u53f7\u7ec4\u5408\u8d4b\u503c </p> <p>(4) \u5982\u679c\u4e24\u90e8\u5206\u5747\u53ea\u6709\u4e00\u4e2a\u4fe1\u6e90\u7b26\u53f7\uff0c\u7f16\u7801\u7ed3\u675f\uff0c\u5426\u5219\u8fd4\u56de(2) \u7ee7\u7eed\u8fdb\u884c</p> <ol> <li>\u7279\u5f81</li> </ol> <p>\u4e8c\u8005\u5747\u5177\u6709\u5373\u65f6\u6027\uff0c\u6307\u5bf9\u4efb\u610f\u4e00\u4e2a\u6709\u9650\u7684\u7801\u7b26\u53f7\u4e32\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u7801\u5b57 \u5206\u522b\u89e3\u7801\uff0c\u89e3\u7801\u65f6\u4e0d\u9700\u63a5\u6536\u540e\u9762\u7684\u6240\u6709\u7801\u5b57\u3002</p> <p>\u4e8c\u8005\u5747\u5177\u6709\u552f\u4e00\u6027\uff0c\u6307\u5bf9\u4efb\u610f\u4e00\u4e2a\u6709\u9650\u957f\u7684\u7801\u7b26\u53f7\u4e32 \uff0c\u53ea\u6709\u4e00\u79cd\u5206\u89e3\u6210\u5176\u5404\u4e2a\u7801\u7b26\u53f7\u7684\u65b9\u6cd5\u3002</p> <p>4\uff09\u65e0\u635f\u7f16\u7801--\u4f4d\u5e73\u9762\u7f16\u7801</p> <ol> <li>\u4f4d\u5e73\u9762\u5206\u89e3</li> </ol> <p>\u5c06\u591a\u7070\u5ea6\u503c\u56fe\u50cf\u5206\u89e3\u6210\u4e00\u7cfb\u5217\u4e8c\u503c\u56fe \u5bf9\u6bcf\u4e00\u5e45\u4e8c\u503c\u56fe\u518d\u7528\u4e8c\u503c\u538b\u7f29\u65b9\u6cd5\uff0c\u4e3b\u8981\u5305\u62ec\u4f4d\u5e73\u9762\u7684\u5206\u89e3\u548c\u7f16\u7801\u3002</p> <p>\u4f4d\u5e73\u9762\u5206\u89e3\u662f\u6307\u5bf9\u6bcf\u4e00\u4e2a\u7070\u5ea6\u8fdb\u884c\u91cf\u5316\uff0c\u7136\u540e\u5bf9\u56fe\u7247\u8fdb\u884c\u5206\u5c42\uff0c\u5f97\u5230\u6bcf\u4e00\u5c42\u7684\u7070\u5ea6\u3002</p> <ol> <li>\u5e38\u6570\u5757\u7f16\u7801</li> </ol> <p>\u5e38\u6570\u5757\u7f16\u7801\u662f\u6307\u7528\u4e13\u95e8\u7684\u7801\u5b57\u8868\u8fbe\u5168\u662f0\u62161\u7684\u8fde\u901a\u533a\u57df</p> <p>\u5c06\u56fe\u50cf\u5206\u6210\u5168\u9ed1\uff0c\u5168\u767d\u6216\u6df7\u5408\u7684m*n\u5c3a\u5bf8\u5757\u3002</p> <p>\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u7c7b\u8d4b\u4e88 1 bit \u7801\u5b570\uff1b\u5176\u5b83\u4e24\u7c7b\u5206\u522b\u8d4b\u4e882 bit\u7801\u5b5710\u548c11\uff0b mn\u6bd4\u7279\u8868\u793a\u7684\u6a21\u5f0f\u3002</p> <p>\u538b\u7f29\uff1a\u539f\u9700\u7528mn\u6bd4\u7279\u8868\u793a\u7684\u5e38\u6570\u5757\u4e2d\u7684\u50cf\u7d20\u73b0\u5728\u53ea \u75281 bit \u6765\u8868\u793a\u3001</p> <ol> <li>1-D\u6e38\u7a0b\u7f16\u7801</li> </ol> <p></p> <p>5\uff09\u65e0\u635f\u7f16\u7801--\u65e0\u635f\u9884\u6d4b\u7f16\u7801</p> <p>\u9884\u6d4b\u7f16\u7801\uff1a</p> <p>\u7a7a\u57df\u65b9\u6cd5\uff0c\u6d88\u9664\u50cf\u7d20\u95f4\u7684\u5197\u4f59\uff0c\u57fa\u672c\u601d\u60f3\u4e3a\u63d0\u53d6\u6bcf\u4e2a\u50cf\u7d20\u4e2d\u7684\u65b0\u4fe1\u606f\uff08\u5b9e\u9645\u503c\u4e0e\u9884\u6d4b\u503c\u7684\u5dee\uff09\u5e76\u5bf9\u5b83 \u4eec\u7f16\u7801\u3002</p> <p>\u4e3b\u8981\u5206\u4e3a\u4e24\u79cd\uff0c\u6709\u635f\u9884\u6d4b\u7f16\u7801\u548c\u65e0\u635f\u9884\u6d4b\u7f16\u7801\u3002</p> <p></p> <p></p> <p></p> <p>\u9884\u6d4b\u7f16\u7801\u4e3b\u8981\u6d88\u9664\u4e86\u50cf\u7d20\u95f4\u5197\u4f59\u3002</p> <p>6\uff09\u6709\u635f\u7f16\u7801--\u6709\u635f\u9884\u6d4b\u7f16\u7801</p> <p></p> <p></p> <p>7\uff09\u6709\u635f\u7f16\u7801--\u53d8\u6362\u7f16\u7801</p> <p>\u200b    \u53d8\u6362\u7f16\u7801\u7684\u4f5c\u7528\u662f\u5c06\u7a7a\u95f4\u57df\u63cf\u8ff0\u7684\u56fe\u50cf\u4fe1\u53f7\u53d8\u6362\u5230\u9891\u7387\u57df\uff0c\u7136\u540e\u5bf9\u53d8\u6362\u540e\u7684\u7cfb\u6570\u8fdb\u884c\u7f16\u7801\u5904\u7406\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u56fe\u50cf\u5728\u7a7a\u95f4\u4e0a\u5177\u6709\u8f83\u5f3a\u7684\u76f8\u5173\u6027\uff0c\u53d8\u6362\u5230\u9891\u7387\u57df\u53ef\u4ee5\u5b9e\u73b0\u53bb\u76f8\u5173\u548c\u80fd\u91cf\u96c6\u4e2d\u3002</p> <p></p> <p>\u53d8\u6362\u9009\u62e9 \uff1a</p> <ol> <li>\u4e00\u4e2a\u80fd\u628a\u6700\u591a\u7684\u4fe1\u606f\u96c6\u4e2d\u5230\u6700\u5c11\u7684\u7cfb\u6570\u4e0a\u53bb\u7684\u53d8\u6362\u6240\u4ea7\u751f\u7684 \u91cd\u5efa\u5747\u65b9\u8bef\u5dee\u6700\u5c0f </li> <li>\u4e0d\u540c\u53d8\u6362\u7684\u4fe1\u606f\u96c6\u4e2d\u80fd\u529b\u4e0d\u540c \u2013 \u6b63\u5f26\u7c7b\u53d8\u6362\uff08\u5982DFT\u548cDCT\uff09\u8f83\u4f18 \u2013 \u975e\u6b63\u5f26\u7c7b\u53d8\u6362\uff08\u5982WHT: Walsh-Hadamard\uff09</li> <li>\u5b9e\u73b0\u7b80\u5355 \u2013 \u5c0f\u6ce2\u53d8\u6362\u8ba1\u7b97\u5feb\u4e14\u6709\u5c40\u90e8\u6027\u8d28\uff08\u4e0d\u9700\u5206\u89e3\uff09</li> </ol> <p>DCT\u662f\u8f83\u597d\u7684\uff08\u7efc\u5408\uff09\u9009\u62e9\uff0c\u96c6\u4e2d\u80fd\u529b\u5f3a\uff0c\u5e76\u4e14\u6240\u9700\u8ba1\u7b97\u91cf\u5c0f\u3002</p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/","title":"\u73b0\u4ee3\u5bc6\u7801\u5b66","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_1","title":"\u53e4\u5178\u5bc6\u7801\u4f53\u5236\u7684\u8ba1\u7b97\uff1a","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_2","title":"\u5b57\u6bcd\u5bf9\u7167\u8868","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_3","title":"\u4eff\u5c04\u53d8\u6362","text":"<p>\u52a0\u5bc6\u53d8\u6362*E*k(*m)=a+b*m  mod  q  \u89e3\u5bc6\u53d8\u6362  *Dk(c)=(c-a)**b*-1  mod q </p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_4","title":"\u5bc6\u94a5\u77ed\u8bed\u5bc6\u7801","text":"<p>\u9009\u62e9\u4e00\u4e2a\u82f1\u6587\u77ed\u8bed\u4f5c\u4e3a\u5bc6\u94a5\u5b57\u6216\u79f0\u5bc6\u94a5\u77ed\u8bed\uff0c\u5982HAPPY NEW YEAR\uff0c\u53bb\u6389\u91cd\u590d\u7684\u5b57\u6bcd\u5f97\u5230HAPYNEWR\u3002\u5c06\u5b83\u4f9d\u6b21\u5199\u5728\u660e\u6587\u5b57\u6bcd\u8868\u7684\u4e0b\u9762\uff0c\u800c\u540e\u518d\u5c06\u5b57\u6bcd\u8868\u4e2d\u672a\u5728\u77ed\u8bed\u4e2d\u51fa\u73b0\u8fc7\u7684\u5b57\u6bcd\u4f9d\u6b21\u5199\u5728\u8fd9\u4e2a\u77ed\u8bed\u540e\u9762\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u4ee3\u6362\u8868\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_5","title":"\u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801 \uff08\u591a\u8868\u4ee3\u6362\uff09","text":"<p>\u8bbe\u5bc6\u94a5k=(k[0], k[1],,\u2026,k[d-1])\u5c5e\u4e8eZqd,</p> <p>\u4ee3\u6362\u5e8f\u5217: p=(p[0], p[1],\u2026,p[d-1]), p(x)=x+k[i] mod q. \u660e\u6587\u5e8f\u5217: m=(m[0], m[1],\u2026) </p> <p>\u5bc6\u6587\u5e8f\u5217: c=(m[0]+k[0])(m[1]+k[1])\u2026(m[d-1]+k[d-1])</p> <p>\u200b                    (m[d]+k[0])(m[d+1]+k[1])\u2026\u2026</p> <p>\u8bbe*q*=26, d=6, k=CIPHER=(2,8,15,7,4,17) \u660e\u6587: m=this cryptosystem is not secure  \u5bc6\u6587: c=VPXZGI AXIVWP UBTTMJ PWIZIT WZT</p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#hill","title":"Hill\u52a0\u5bc6 \uff08\u591a\u5b57\u6bcd\u4ee3\u6362\uff09","text":"<p>\u57fa\u4e8e\u77e9\u9635\u7684\u7ebf\u6027\u53d8\u6362:</p> <p>Z26\u4e3a\u6a2126\u7684\u540c\u4f59\u7c7b\u96c6\u5408, K\u662f\u4e00\u4e2aL*L\u77e9\u9635,\u5728Z26\u4e0a\u53ef\u9006,\u5373\u5b58\u5728K-1\u4f7f\u5f97: KK-1 = I (\u5728Z26\u4e0a)</p> <p>\u6ce8\uff1a\u660e\u6587\u4e0e\u5bc6\u6587\u90fd\u662fL\u7ef4\u7684\u5411\u91cf  m=\uff08m1, m2 \u2026, mL); c=(c1,c2,\u2026,cL); \u52a0\u5bc6\uff1ac=mK mod 26;  \u89e3\u5bc6\uff1am=cK-1 mod 26;</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_6","title":"\u6362\u4f4d\u5bc6\u94a5\uff08\u7efc\u5408\u6848\u4f8b\uff09","text":"<p>\u660e\u6587\uff1am= the simplest possible transposition ciphers  \u5206\u6210\u957f\u5ea6\u4e3a5\u7684\u7ec4\uff1a</p> <p>m= thesi | mples | tposs | iblet | ransp | ositi | oncip | hersx</p> <p>\u52a0\u5bc6\u53d8\u6362\uff1a\u5c06\u5404\u7ec4\u5185\u5b57\u7b26\u6309\u4f4d\u7f6e\u6807\u53f7\uff080~4\uff09\u5b9e\u65bd\u4e0b\u8ff0\u7f6e\u6362\uff08permutation) (Ek\u4e3a\u6b63\u53d8\u6362\uff0cDk\u4e3a\u9006\u53d8\u6362)</p> <p></p> <p>\u5bc6\u94a5\uff1ac=STIEH EMSLP STSOP EITLB SRPNA TOIIS  IOPCN SHXRE</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_7","title":"\u6d41\u5bc6\u7801","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_8","title":"\u6e38\u7a0b\u5206\u5e03\u8ba1\u7b97","text":"<p>\u8bbe*a*= (a[0], a[1],\u2026,a[i],\u2026)\u662f\u4e00\u4e2a\u5468\u671f\u4e3a*N*\u7684\u4e8c\u5143\u5e8f\u5217\uff0c\u5728\u4e00\u4e2a\u5468\u671f\u5185\u8fde\u7eed\u51fa\u73b0\u7684\u6700\u591a\u7684\u7b26\u53f7\u201c0\u201d\uff08\u62161\uff09\u7684\u4e32\uff0c\u79f0\u4e3a0\uff08\u62161\uff09\u7684\u4e00\u4e2a\u6e38\u7a0b\u3002\u5728\u4e00\u4e2a\u6e38\u7a0b\u4e2d\uff0c0\uff08\u62161\uff09\u7684\u4e2a\u6570\u79f0\u4e3a\u8be5\u6e38\u7a0b\u7684\u957f\u5ea6\u3002</p> <p>\u5728\u5e8f\u5217 k={*k*i}=001110100000111100\u2026\u4e2d, \u6709 \u957f\u4e3a1\u76840\u6e38\u7a0b\u4e00\u4e2a; \u957f\u4e3a4\u76840\u6e38\u7a0b\u4e00\u4e2a; \u957f\u4e3a5\u76840\u6e38\u7a0b\u4e00\u4e2a; \u957f\u4e3a1\u76841\u6e38\u7a0b\u4e00\u4e2a; \u957f\u4e3a3\u76841\u6e38\u7a0b\u4e00\u4e2a; \u957f\u4e3a4\u76841\u6e38\u7a0b\u4e00\u4e2a </p> <p>\u6ce8\u610f\u6709\u5468\u671f\uff0c\u5373{*k*i}= 001110100000111100   001110100000111100 \u2026</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_9","title":"\u5e8f\u5217\u81ea\u76f8\u5173\u8ba1\u7b97","text":"<p>\u8bbe*a*=(a*0,*a*1,\u2026,*a[N-1])\u548c*b*=(b*0,*b*1,\u2026,*b[N-1])\u662f\u4e24\u4e2a\u5468\u671f\u4e3a*N*\u7684\u4e8c\u5143\u5468\u671f\u5e8f\u5217\uff0c\u5176\u76f8\u5173\u51fd\u6570\u5b9a\u4e49\u4e3a</p> <p></p> <p>\u5176\u4e2di+t\u662f\u6a21N\u8fd0\u7b97</p> <p>\u7279\u522b\u5730\uff0c\u5982\u679c*a*=b\uff0c\u5219*R*a*,a(t)\u88ab\u79f0\u4e3a\u81ea\u76f8\u5173\u51fd\u6570\uff0c\u5176\u4e2d\u5f53t =0\uff0c*R*a,a(0)\u88ab\u79f0\u4e3a\u540c\u76f8\u81ea\u76f8\u5173\u51fd\u6570\uff0c\u800c\u5f53*t*\u4e0d\u7b49\u4e8e0\uff0c R*a,a(t)\u88ab\u79f0\u4e3a\u5f02\u76f8\u81ea\u76f8\u5173\u51fd\u6570\u3002</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#a1","title":"\u53cd\u9988\u79fb\u4f4d\u5bc4\u5b58\u5668\uff08\u8f93\u51fa\u4e3aa1\uff09","text":"<p>\u8bbe\u6709\u9650\u57dfGF(2)\u4e0a\u76843\u7ea7FSR\u7684\u53cd\u9988\u51fd\u6570\u4e3a: f(*x*1, *x*2, *x*3)=*x*1\u5f02\u6216*x*2\u5f02\u6216*x*3  \u521d\u59cb\u72b6\u6001\u4e3a*s*0=(1,0,1). \u6c42FSR\u5e8f\u5217.</p> <p>\u89e3: \u53cd\u9988\u79fb\u4f4d\u5bc4\u5b58\u5668\u5e8f\u5217: a =1011\u2026; \u5468\u671f*q*=4.</p> <p> </p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_10","title":"\u7ebf\u6027\u53cd\u9988\u79fb\u4f4d\u5bc4\u5b58\u5668","text":"<p>\u5df2\u77e5\u5982\u56fe\u6240\u793a\u76843\u7ea7LFSR. \u7279\u5f81\u591a\u9879\u5f0f\u4e3a\uff1a f(x)=1+x2+x3   \u5373\u4e3a a[0]+a[2]+a[3]=0</p> <p>LFSR\u5e8f\u5217*a*=(a[0], a[1],\u2026,a[n-1],\u2026) \u6ee1\u8db3\u9012\u63a8\u5173\u7cfb\u5f0f:  a[n]=a[n-2]+a[n-3]. \u5982\u679c\u8bbe\u521d\u59cb\u72b6\u6001\u4e3a: (0,0,1)  \u5373*a*[0]=0, a[1]=0, a[2]=1,\u8f93\u51fa\u5e8f\u5217\u4e3a: 0010111, \u5468\u671f\u4e3a7.</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_11","title":"\u5206\u7ec4\u5bc6\u7801","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#des","title":"DES\u7b97\u6cd5","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#des_1","title":"DES\u7b97\u6cd5\u6d41\u7a0b","text":"<p>\u5206\u7ec4\u5927\u5c0f: 2*w*=64  \u5bc6\u94a5\u5927\u5c0f: |K|=56 \u5b50\u5bc6\u94a5: |K[i]|=48 \u8f6e\u6570: h=16</p> <p>\u5bf9\u660e\u6587\u4f5c\u7f6e\u6362*IP*\u540e\u5f00\u59cb\u7b2c1\u6b21\u8fed\u4ee3 \u7b2c16\u6b21\u8fed\u4ee3\u540e\uff0c\u4ea4\u6362\u5de6\u3001\u53f332bit\u6570\u636e\uff0c\u518d\u4f5c\u9006\u7f6e\u6362*IP*-1\uff0c\u5373\u5f97\u5bc6\u6587 </p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#ip","title":"IP\u53d8\u6362","text":"<p>\u5c0664\u4f4d\u660e\u6587\u6253\u4e71\u91cd\u65b0\u6392\u5217. \u8bbe*x*=x*1*x*2\u2026*x*64\uff0c\u5219*IP(x)=*x*58*x*50*x*42\u2026*x*23*x*15*x*7</p> <p>\u52a0\u5bc6\u7ed3\u679c\uff1a10011000 00000111 00110001 11111101  10010110 01100101 11000010 10001110 </p> <p>\u521d\u59cb\u7f6e\u6362IP\u7684\u9006\u7f6e\u6362 \u5c0664\u4f4d\u5bc6\u6587\u4f4d\u7f6e\u8fd8\u539f. \u8bbe*y*=y*1*y*2\u2026*y*64\uff0c\u5219*IP-1(y)=*y*40*y*8*y*48\u2026*y*17*y*57*y*25</p> <p>\u89e3\u5bc6\u7ed3\u679c\uff1a11011111 00101011 11010000 00100101 10101000 10011100 01000011 01101001</p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#f","title":"\u8f6e\u51fd\u6570F","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#er","title":"\u6269\u5c55E\u53d8\u6362\uff08\u5bf9R\u8fdb\u884c\u6269\u5c55\u53d8\u6362\uff09","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#sp-s","title":"S\u76d2\u548c\u7f6e\u6362P\u8fd0\u7b97 \uff08S\u76d2\u8f93\u51fa\u7ed3\u679c\u7f6e\u6362\uff09","text":"<p>\u8f93\u5165: b[1] b[2] b[3 ]b[4] b[5] b[6], \u752810\u8fdb\u5236\u8868\u793a: </p> <p>(i)10=b[1]b[6]  (0&lt;=i&lt;=3), (j)10=b[2]b[3]b[4]b[5] (0&lt;=j&lt;=15)</p> <p>\u5bf9\u4e8e*S*1\uff0c\u8f93\u5165*b*=101011, \u6709*i*=11=3, j=0101=5, \u8f93\u51fa: S*1(*b)= *S*1(3,5)=9=1001.</p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_12","title":"\u5b50\u5bc6\u94a5\u751f\u6210\u7b97\u6cd5","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#pc-1","title":"\u7f6e\u6362\u53d8\u6362\uff1aPC-1","text":"<p>64\u4f4d\u5bc6\u94a5*K*\u7684\u7b2c8, 16, 24,\u2026,64\u4f4d\u51718\u4f4d\u662f\u5947\u5076\u6821\u9a8c\u4f4d, \u5176\u4f5956\u4f4d\u4f5c\u4e3a\u5bc6\u94a5\u7528.  \u9009\u62e9*K*\u7684\u7b2c57,49,\u2026\u4f4d\u517128\u4f4d\u4f5c\u4e3a\u5bc6\u94a5\u6bb5*C*0;\u9009\u62e9*K*\u7684\u7b2c63,55,\u2026\u4f4d\u517128\u4f4d\u4f5c\u4e3a\u5bc6\u94a5\u6bb5*D*0.</p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#lsi","title":"\u5faa\u73af\u5de6\u79fbLSi","text":"<p>\u5c0628\u4f4d\u7684\u5bc6\u94a5\u6bb5\u4f5c\u4e3a*C*[i], D[i]\u5faa\u73af\u5de6\u79fb1\u62162\u4f4d,\u5de6\u79fb\u4f4d\u6570\u7531\u4e0b\u8868\u786e\u5b9a.</p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#pc-2","title":"\u7f6e\u6362\u9009\u62e9 PC-2","text":"<p>\u4ece56\u4f4d\u5bc6\u94a5\u6bb5*C*[i]||*D[i]\u4e2d\u9009\u62e948\u4f4d\u4f5c\u4e3a\u5b50\u5bc6\u94a5*K[i].</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#des_2","title":"DES\u89e3\u5bc6\u7b97\u6cd5","text":"<p>\u4e0eDES\u52a0\u5bc6\u7ed3\u6784\u76f8\u540c  \u5b50\u5bc6\u94a5\u4f7f\u7528\u6b21\u5e8f\u76f8\u53cd: K[16], K[15], \u2026, K[2], K[1]  \u8f93\u5165\uff1a\u5bc6\u6587y; \u8f93\u51fa\uff1a\u660e\u6587*x*</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#idea","title":"IDEA\u4e2d\u4e3b\u8981\u8fd0\u7b97","text":"<p>\u8fd0\u7b97\u2018+\u2019\uff1a\u4e24\u4e2a\u957f\u5ea6\u4e3a16\u7684\u6bd4\u7279\u4e32*x*\u548c*y*\u3002 x\u2018+\u2019*y*\u8868\u793a*x*\u548c*y*\u505a\u9010\u4f4d\u6a212\u52a0\u8fd0\u7b97\uff08\u9010\u6bd4\u7279\u5f02\u6216\uff09\u3002</p> <p>\u8fd0\u7b97\u201c+\u201d\uff1a\u5c06\u957f\u5ea6\u4e3a16\u7684\u6bd4\u7279\u4e32*x*\u548c*y*\u770b\u4f5c\u662f\u201c\u22650\uff0c\u4e14&lt;216\u201d\u7684\u6574\u6570\u3002x\u201c+\u201d*y*\u8868\u793a*x*\u548c*y*\u505a\u6a21216\u52a0\u8fd0\u7b97\u3002</p> <p>\u8fd0\u7b97\u00d7\uff1a  \u5c06\u957f\u5ea6\u4e3a16\u7684\u6bd4\u7279\u4e32*x*\u548c*y*\u770b\u4f5c\u662f\u201c\u22651\uff0c\u4e14&lt;216+1\u201d\u7684\u6574\u6570\u3002</p> <p>\u5176\u4e2d\u5c06\u51680\u4e32\u770b\u4f5c\u662f216\u3002  x\u00d7*y*\u8868\u793a*x*\u548c*y*\u505a\u6a21216+1\u4e58\u8fd0\u7b97\u3002\uff08\u6ce8\u610f\uff1a 216+1 \u662f\u7d20\u6570\uff09</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_13","title":"\u8f6e\u51fd\u6570","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_14","title":"\u8f6e\u51fd\u6570\u6570\u636e","text":"<p>\u8f6e\u51fd\u6570\u4e3a*M*=F(m, z), \u5176\u4e2d*m*\u662f\u660e\u6587\uff0c\u5b83\u662f\u957f\u5ea6\u4e3a64\u7684\u6bd4\u7279\u4e32\uff1b*M*\u662f\u5bc6\u6587\uff0c\u5b83\u662f\u957f\u5ea6\u4e3a64\u7684\u6bd4\u7279\u4e32\uff1b *z*\u662f\u5bc6\u94a5\uff0c\u5b83\u662f\u957f\u5ea6\u4e3a96\u7684\u6bd4\u7279\u4e32\u3002</p> <p>\u5c06\u660e\u6587*m*\u5206\u4e3a4\u4e2a\u5b50\u5757\uff1am=(m*1,*m*2,*m*3,*m*4)\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b50\u5757\u957f\u5ea6\u4e3a16\u3002\u5c06\u5bc6\u6587*M*\u5206\u4e3a4\u4e2a\u5b50\u5757: *M=(M*1,*M*2,*M*3,*M*4), \u5176\u4e2d\u6bcf\u4e2a\u5b50\u5757\u957f\u5ea6\u4e3a16\u3002\u5c06\u5bc6\u94a5*z*\u5206\u4e3a6\u4e2a\u5b50\u5757\uff1a*z=(*z*1,*z*2,*z*3,*z*4,*z*5,*z*6)\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b50\u5757\u957f\u5ea6\u4e3a16\u3002</p> <p>\u4e09\u79cd\u8fd0\u7b97\u2018+\u2019\u3001\u201c+\u201d\u3001\u00d7\u5206\u522b\u4e3a\u524d\u9762\u6240\u8ff0\u3002</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_15","title":"\u8f6e\u51fd\u6570\u8fd0\u7b97","text":"<p>\u8f6e\u51fd\u6570\u7b97\u6cd5\u63cf\u8ff0\u5982\u4e0b\uff1a</p> <p>\uff081\uff09(m[1], m[2], m[3], m[4])(\u00d7,\u201c+\u201d,\u201c+\u201d,\u00d7) (z[1], z[2], z[3], z[4])=(a, b, c, d)\u3002 \uff08\u7fa4\u52a0\u5bc6\uff09</p> <p>\uff082\uff09(a\u2018+\u2019c, b\u2018+\u2019d)=(e, f)\u3002\uff08MA\u53d8\u6362\uff09</p> <p>\uff083\uff09((e\u00d7z[5])\u201c+\u201df )\u00d7z[6]=u\uff0cu\u201c+\u201d(e\u00d7z[5])=v\u3002\uff08MA\u53d8\u6362\uff09</p> <p>\uff084\uff09(a, b, c, d)(\u2018+\u2019,\u2018+\u2019,\u2018+\u2019,\u2018+\u2019) (u, v, u, v)=(w[1], w[2], w[3], w[4])\u3002\uff08MA\u53d8\u6362\uff09</p> <p>\uff085\uff09(w[1], w[3], w[2], w*0[4])=(*M[1], M[2], M[3], M[4])\u3002 \uff08\u5757\u7f6e\u6362\uff09</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_16","title":"\u52a0\u5bc6\u987a\u5e8f","text":"<p>\u5206\u7ec4\u5bc6\u7801IDEA\u7684\u5b8c\u6574\u52a0\u5bc6\u7b97\u6cd5\u662f\u8fde\u7eed8\u6b21\u4f7f\u7528\u8f6e\u51fd\u6570\uff0c\u4e0d\u8fc7\u7b2c8\u8f6e\u4e0e\u524d7\u8f6e\u6709\u6240\u4e0d\u540c\u3002\u524d7\u8f6e\u662f\u666e\u901a\u8f6e\uff0c\u8f6e\u51fd\u6570\u7684\u8fd0\u7b97\u6b65\u9aa4\u5982\u524d\u6240\u8ff0\u4e3a\uff1a</p> <p>\u7fa4\u52a0\u5bc6\u2192MA\u53d8\u6362\u2192\u5757\u7f6e\u6362\u3002</p> <p>\u7b2c8\u8f6e\u662f\u7279\u6b8a\u8f6e\uff0c\u8f6e\u51fd\u6570\u7684\u8fd0\u7b97\u6b65\u9aa4\u4e3a\uff1a</p> <p>\u7fa4\u52a0\u5bc6\u2192MA\u53d8\u6362\u2192\u7fa4\u52a0\u5bc6\u3002</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#idea_1","title":"IDEA\u7b97\u6cd5\u89e3\u5bc6","text":"<p>\u52a0\u89e3\u5bc6\u987a\u5e8f\u4e0d\u540c\uff0c\u53ea\u4e0d\u8fc7\u5bc6\u94a5\u987a\u5e8f\u53d1\u751f\u6539\u53d8\uff1a</p> <p>\u52a0\u5bc6\u5bc6\u94a5(q[1],q[2],q[3],q[4],q[5],q[6])\u5219\u5bf9\u5e94\u7684\u89e3\u5bc6\u5bc6\u94a5\u4e3a(q[1]-1, -q[3], -q[2], q[4]-1,q[5],q[6]) \uff08\u52a0\u4e58\u6cd5\u9006\u8fd0\u7b97\uff09</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#idea_2","title":"IDEA \u5bc6\u94a5\u751f\u6210\u7b97\u6cd5","text":"<p>IDEA\u52a0\u5bc6\u7b97\u6cd5\u4e2d\u6240\u4f7f\u7528\u7684\u5bc6\u94a5\u5171\u670952\u4e2a\u5b50\u5757\uff0c\u5373\u52a0\u5bc6\u5bc6\u94a5\u957f\u5ea6\u4e3a16\u00d752=832\uff08\u6bd4\u7279\uff09\u3002\u7528\u6237\u5bc6\u94a5\u5b9e\u9645\u4e0a\u53ea\u6709128 \uff08\u6bd4\u7279\uff09\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u5bc6\u94a5\u6269\u5c55\u7b97\u6cd5\u3002\u5bc6\u94a5\u6269\u5c55\u7b97\u6cd5\u5982\u4e0b\u3002\u5c06128 \u6bd4\u7279\u7684\u7528\u6237\u5bc6\u94a5\u5206\u4e3a8\u4e2a\u5b50\u5757\uff0c\u4f5c\u4e3a\u52a0\u5bc6\u5bc6\u94a5\u7684\u7b2c\u4e00\u4e2a\u201c8\u4e2a\u5b50\u5757\u201d\uff1b\u5c06128 \u6bd4\u7279\u5bc6\u94a5\u5faa\u73af\u5de6\u79fb25\u4f4d\uff0c\u518d\u5206\u4e3a8\u4e2a\u5b50\u5757\uff0c\u4f5c\u4e3a\u52a0\u5bc6\u5bc6\u94a5\u7684\u7b2c\u4e8c\u4e2a\u201c8\u4e2a\u5b50\u5757\u201d\uff1b</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#aes","title":"AES\u7b97\u6cd5","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#aes_1","title":"AES\u6d41\u7a0b","text":"<p>AES\u7b97\u6cd5\u6a21\u591a\u9879\u5f0f m(x)=x8+x4+x3+x+1. \u5747\u4e3a\u5728GF(28)\u4e0a\u7684\u8fd0\u7b9711</p> <p>\u521d\u59cb\u53d8\u6362\u2014\u2014\u5bc6\u94a5\u52a0</p> <p>\u7b2c\u4e00\u8f6e\uff1a \u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d\u2192\u5217\u6df7\u5408\u2192\u5bc6\u94a5\u52a0     \u7b2c\u4e8c\u8f6e\uff1a \u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d\u2192\u5217\u6df7\u5408\u2192\u5bc6\u94a5\u52a0</p> <p>\u7b2c\u4e09\u8f6e\uff1a \u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d\u2192\u5217\u6df7\u5408\u2192\u5bc6\u94a5\u52a0     \u7b2c\u56db\u8f6e\uff1a \u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d\u2192\u5217\u6df7\u5408\u2192\u5bc6\u94a5\u52a0</p> <p>\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026</p> <p>\u7b2cNr-1\u8f6e\uff1a\u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d\u2192\u5217\u6df7\u5408\u2192\u5bc6\u94a5\u52a0  \u7b2cNr\u8f6e\uff1a  \u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d</p> <p>\u672b\u5c3e\u53d8\u6362\u2014\u2014\u5bc6\u94a5\u52a0</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_17","title":"\u5b57\u8282\u4ee3\u6362","text":"<p>\u5bf9\u72b6\u6001\u7684\u6bcf\u4e2a\u5b57\u8282\u72ec\u7acb\u8fdb\u884c\u4ee3\u6362\uff0c\u662f\u5b57\u8282\u7684\u975e\u7ebf\u6027\u53d8\u6362\uff0c\u4e5f\u79f0\u4e3aS\u76d2\u53d8\u6362\u3002\u8bbe ByteSub(a*ij)=b*ij.</p> <p>\u884c\u4f4d\u79fb\u548c\u5217\u6df7\u5408            \u8f6e\u5bc6\u94a5\u52a0</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_18","title":"\u89e3\u5bc6\u7b97\u6cd5","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_19","title":"\u5b57\u6bcd\u4ee3\u6362","text":"<p>\u5148\u505a\u4eff\u5c04\u7684\u9006\u53d8\u6362\u7136\u540e\u518d\u6c42\u9006</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_20","title":"\u884c\u4f4d\u79fb\u548c\u5217\u6df7\u5408","text":"<p>\u884c\u4f4d\u79fb\u9006\u56de\u5373\u53ef \u5217\u6df7\u5408\u5c06\u72b6\u6001\u77e9\u9635\u6bcf\u5217\u76844\u4e2a\u5b57\u8282\u8868\u793a\u6210\u4e00\u4e2a3\u6b21\u591a\u9879\u5f0f\uff0c\u518d\u4e0e\u591a\u9879\u5f0f*d*(x)\u76f8\u4e58. </p> <p>d(x)=(0B)x3+(0D)x2+(09)x+(0E).</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_21","title":"\u89e3\u5bc6\u987a\u5e8f\uff08\u5df2\u5bf9\u5bc6\u94a5\u8fdb\u884c\u53d8\u6362\uff09","text":"<p>\u521d\u59cb\u53d8\u6362\u2014\u2014\u5bc6\u94a5\u52a0</p> <p>\u7b2c\u4e00\u8f6e\uff1a \u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d\u2192\u5217\u6df7\u5408\u2192\u5bc6\u94a5\u52a0   \u7b2c\u4e8c\u8f6e\uff1a \u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d\u2192\u5217\u6df7\u5408\u2192\u5bc6\u94a5\u52a0</p> <p>\u7b2c\u4e09\u8f6e\uff1a \u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d\u2192\u5217\u6df7\u5408\u2192\u5bc6\u94a5\u52a0   \u7b2c\u56db\u8f6e\uff1a \u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d\u2192\u5217\u6df7\u5408\u2192\u5bc6\u94a5\u52a0</p> <p>\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026</p> <p>\u7b2cNr-1\u8f6e\uff1a\u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d\u2192\u5217\u6df7\u5408\u2192\u5bc6\u94a5\u52a0  \u7b2cNr\u8f6e\uff1a  \u5b57\u8282\u66ff\u6362\u2192\u884c\u79fb\u4f4d</p> <p>\u672b\u5c3e\u53d8\u6362\u2014\u2014\u5bc6\u94a5\u52a0</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_22","title":"\u516c\u94a5\u5bc6\u7801\u4f53\u5236","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_23","title":"\u8865\u5145\u6570\u5b66","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_24","title":"\u6b27\u62c9\u51fd\u6570","text":"<p>(\u6b27\u62c9\u5b9a\u7406)\u5bf9\u4e8e\u4efb\u4f55\u4e92\u7d20\u7684\u4e24\u4e2a\u6574\u6570a\u548cn\uff0c\u6709  a\u03c6(n) \u2261 1 mod n \u5bf9\u4efb\u610f\u7684\u6b63\u6574\u6570k, \u6709 ak*\u03c6(n) +1\u2261 a mod n \uff0c</p> <p>\u6b27\u62c9\u51fd\u6570*\u03c6(n)*\u7684\u51e0\u6761\u6027\u8d28\uff1a</p> <p>(1) n\u4e3a\u7d20\u6570\uff0c \u03c6(n)=n\uff0d1;(2)\u82e5p\u4e3a\u7d20\u6570\uff0cn\u4e3a\u6b63\u6574\u6570\uff0c\u5219\u03c6(pn)=(p-1)p*n-1* (3) gcd(m, n) =1, \u03c6(mn)= \u03c6(m) \u00d7\u03c6(n)</p> <p>\u5982\u679c*m*\u662f\u4f7f*a*m \u2261 1 mod *n*\u6210\u7acb\u7684\u6700\u5c0f\u6b63\u6574\u6570\uff0c\u5219\u79f0\u5b83\u662f*a*\u5bf9\u6a21*n*\u7684\u6307\u6570\uff0c\u6216\u8005\u79f0\u4e3a*a*\u5173\u4e8e\u6a21*n*\u7684\u4e58\u6cd5\u9636\uff0c\u8bb0\u4e3aOrdna\u3002 </p> <p>\u82e5Ordna=\u03c6(n)\uff0c\u5219\u79f0*a*\u662f\u6a21*n*\u7684\u672c\u539f\u6839(primitive root)\uff0c\u4e5f\u79f0\u6a21*n*\u7684\u4e58\u6cd5\u751f\u6210\u5143\u3002</p> <p>\u6d4b\u8bd5\u65b9\u6cd5:\u4ee4*q*1,q*2,\u2026, *q*n\u662f*p-1\u7684\u7d20\u56e0\u5b50\uff0c\u5bf9\u4e8e\u6240\u6709\u7684*q*1,q*2,\u2026, *q*n, \u8ba1\u7b97*a(p-1)/q (mod p) \uff0c\u5982\u679c\u5bf9\u67d0\u4e2a\u7d20\u56e0\u5b50*q*\uff0c\u5176\u7ed3\u679c\u4e3a1\uff0c\u90a3\u4e48*a* \u4e0d\u662f\u4e00\u4e2a\u672c\u539f\u6839\u3002\u5982\u679c\u5bf9\u6240\u6709\u7d20\u56e0\u5b50*q*\uff0c\u5176\u7ed3\u679c\u90fd\u4e0d\u4e3a1 \uff0c\u90a3\u4e48*a* \u662f\u4e00\u4e2a\u672c\u539f\u6839\u3002 </p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u6574\u6570*b*\u548c\u7d20\u6570*n*\u7684\u4e00\u4e2a\u672c\u539f\u6839*a*\uff0c\u53ef\u4ee5\u627e\u5230\u552f\u4e00\u7684\u6307\u6570*x*\uff0c\u4f7f\u5f97*b* \u2261 ax mod n\uff0c\u5176\u4e2d0\u2264 x \u2264n-1\uff0c\u6307\u6570*x*\u79f0\u4e3a*b*\u7684\u4ee5*a*\u4e3a\u57fa\u6570\u7684\u6a21*n*\u7684\u79bb\u6563\u5bf9\u6570\uff0c\u6c42\u79bb\u6563\u5bf9\u6570\u4e3a\u4e00\u4e2a\u56f0\u96be\u95ee\u9898</p> <p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u4e8c\u6b21\u5269\u4f59</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#rsa","title":"RSA\u7b97\u6cd5","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_25","title":"\u5bc6\u94a5\u751f\u6210\u7b97\u6cd5","text":"<p>(1) \u9009\u53d6\u4e24\u4e2a\u5927\u7d20\u6570 p, q</p> <p>(2) \u8ba1\u7b97*n*= p*q, \u53d6\u03c6(n)=(p-1)*(q-1)</p> <p>(3) \u968f\u673a\u9009\u53d6*e*: 1&lt;e&lt;\u03c6(n)\uff0c\u4e0e*\u03c6*(n)\u4e92\u7d20</p> <p>(4) \u6839\u636e\u6b27\u51e0\u91cc\u5fb7\u7b97\u6cd5\u8ba1\u7b97*e*\u7684\u9006 d=e-1:</p> <p>1&lt;e&lt;\u03c6(n)\uff0ce*d = 1 mod \u03c6(n).</p> <p>(5) \u516c\u94a5: PK=(n, e),</p> <p>\u79c1\u94a5: S*K=(p, *q , d).   </p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_26","title":"\u52a0\u5bc6\u7b97\u6cd5","text":"<p>\u6d88\u606fm: 0&lt;=m&lt;n\uff0c\u5bc6\u6587 c=EPK(m)=me (mod n) </p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_27","title":"\u89e3\u5bc6\u7b97\u6cd5","text":"<p>\u5bc6\u6587c: 0&lt;=c&lt;n\uff0c\u660e\u6587 m=DSK\u00a9=cd (mod n) </p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#rabin","title":"Rabin \u516c\u94a5\u5bc6\u7801\u4f53\u5236","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_28","title":"\u5bc6\u94a5\u751f\u6210\u7b97\u6cd5","text":"<p>\u9009\u62e9\u4e24\u4e2a\u5927\u7684\u7d20\u6570p\u548cq\uff0c\u8981\u6c42p\u548cq\u90fd\u662f4\u7684\u500d\u6570\u52a03\u3002 </p> <p>\u8ba1\u7b97n=p*q\u3002Bob\u7684\u516c\u94a5\u662fn\uff0c\u5bf9\u5916\u516c\u5e03\u3002 Bob\u7684\u79c1\u94a5\u662f\uff08p\uff0cq\uff09\uff0c\u81ea\u5df1\u79c1\u85cf\u3002</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_29","title":"\u52a0\u5bc6\u7b97\u6cd5","text":"<p>\u5c06\u660e\u6587\u901a\u8fc7\u4e00\u4e2a\u53ef\u9006\u6620\u5c04\u4e3a\u4e00\u4e2a\u5c0f\u4e8en\u4e14\u4e0en\u4e92\u7d20\u7684\u6b63\u6574\u6570m,\u5373 0&lt;m&lt;n \u4e14 gcd (m,n)=1\u3002</p> <p>Alice\u7528Bob\u7684\u516c\u94a5n\uff0c\u8ba1\u7b97\uff1a c=m2(mod n)\u3002c\u4e3a\u5bc6\u6587\u3002</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_30","title":"\u89e3\u5bc6\u7b97\u6cd5","text":"<p>Bob \u6536\u5230\u5bc6\u6587*c*\u540e\uff0c\u7528\u81ea\u5df1\u7684\u79c1\u94a5\uff08p\uff0cq\uff09\u8ba1\u7b97</p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_31","title":"\u80cc\u5305\u516c\u94a5\u5bc6\u7801\u4f53\u5236","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_32","title":"\u5bc6\u94a5\u751f\u6210\u7b97\u6cd5","text":"<p>\u53d6n\u4e2a\u5177\u6709\u8d85\u9012\u589e\u6027\u7684\u7269\u54c1\u91cd\u91cf\uff1aa1\uff0ca2\uff0ca3\uff0c\u2026\uff0can\u3002</p> <p>\u53d6\u6b63\u6574\u6570M\uff0cU\uff0c\u6ee1\u8db3</p> <p>(1) M&gt;a1+a2+a3+\u2026+an\uff1b(2) M&gt;U\uff1b(3) U*a1&gt;M\uff1b</p> <p>M\u4e0eU\u4e92\u7d20\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u8f97\u8f6c\u76f8\u9664\u6cd5\u8ba1\u7b97\u51faU\u5173\u4e8e(modM)\u7684\u9006\u5143U-1\u3002</p> <p>\u8ba1\u7b97\uff1ab1=U*a1(mod M)\uff0cb2=Ua2(mod M) \uff0cb3=Ua3(mod M) \uff0c\u2026\uff0cbn=Uan(mod M) \u3002(\u4e0d\u5177\u6709\u8d85\u9012\u589e\u6027)</p> <p>\u6b64\u65f6</p> <p>a1=U-1b1(mod M)\uff0ca2=U-1b2(mod M)\uff0ca3=U-1b3(mod M)\uff0c \u2026\uff0can=U-1bn(mod M) \u3002</p> <p>{b1\uff0cb2\uff0cb3\uff0c\u2026\uff0cbn}\u662f\u516c\u94a5\u3002</p> <p>{a1\uff0ca2\uff0ca3\uff0c\u2026\uff0can} \uff0c M\uff0cU\u90fd\u662f\u79c1\u94a5\u3002</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_33","title":"\u52a0\u5bc6\u7b97\u6cd5","text":"<p>\u8bbe\u660e\u6587m\u4e3a\u6b63\u6574\u6570\uff0c\u5176\u4e8c\u8fdb\u5236\u5c55\u5f00\u5f0f\u4e3am=(m1,m2,m3\u2026mn)2\u3002\u4f7f\u7528\u516c\u94a5{b1\uff0cb2\uff0cb3\uff0c\u2026\uff0cbn}\u8ba1\u7b97\u5bc6\u6587c \uff1ac=m1*b1+m2b2+m3b3+\u2026+mnbn\u3002\u5bc6\u6587c\u662f\u4e00\u4e2a\u6b63\u6574\u6570\u3002</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_34","title":"\u89e3\u5bc6\u7b97\u6cd5","text":"<p>\u4f7f\u7528\u79c1\u94a5{a1\uff0ca2\uff0ca3\uff0c\u2026\uff0can} \uff0c M\uff0cU\uff0c\u8ba1\u7b97\u53d8\u6362\u8bfe\u6587C\uff1a</p> <p>C=U-1c(modM)</p> <p>=U-1(m1b1+m2b2+m3b3+\u2026+mnbn )(modM)</p> <p>=m1a1+m2a2+m3a3+\u2026+mnan(modM) </p> <p>=m1a1+m2a2+m3a3+\u2026+mnan\u3002</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#elgamal","title":"Elgamal \u516c\u94a5\u5bc6\u7801\u4f53\u5236","text":"<p>\u5faa\u73af\u7fa4`</p> <p>\u8bbe(G,*)\u662f\u4e00\u4e2a\u6709\u9650\u7fa4, |G|= n, e\u662fG\u7684\u5355\u4f4d\u5143. \u5982\u679c\u5b58\u5728 a\u5c5e\u4e8eG\uff0c\u4f7f\u5f97a, a2,\u2026, an=e\u4e92\u4e0d\u76f8\u540c,\u5373 G={a, a2,\u2026,an}, \u5219\u79f0a\u662fG\u7684\u4e00\u4e2a\u672c\u539f\u5143\uff08\u751f\u6210\u5143\uff09. (G,*)\u79f0\u4e3a\u5faa\u73af\u7fa4\u3002</p> <p>\u6709\u9650\u57df</p> <p>\u8bbep\u662f\u4e00\u4e2a\u7d20\u6570, Zp= {0,1,2,\u2026, p-1}. \u5728Zp \u4e2d, \u52a0\u6cd5\u4e0e\u4e58\u6cd5\u6309 mod (p) \u8fdb\u884c, \u5219Zp\u79f0\u4e3a\u4e00\u4e2a\u6709\u9650\u57df\u3002</p> <p>GF(p)\u7684\u672c\u539f\u5143</p> <p>\u8bbeZp*= {1,2,\u2026, p-1}, a\u5c5e\u4e8eZp*, \u5982\u679ca, a2,\u2026, ap-1 =1\u4e92\u4e0d\u76f8\u540c,\u5373 Zp*={a, a2,\u2026,ap-1}, \u5219\u79f0a\u662fZp\u7684\u4e00\u4e2a\u672c\u539f\u5143. (Zp*, *)\u662f\u4e00\u4e2a\u5faa\u73af\u7fa4\u3002</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_35","title":"\u5bc6\u94a5\u751f\u6210\u7b97\u6cd5","text":"<p>\u5384\u683c\u739b\u5c14(ElGamal)\u5bc6\u7801\u4f53\u5236</p> <p>\u5bc6\u94a5\u4ea7\u751f: \u9009\u62e9\u7d20\u6570p\uff0c\u6574\u6570g, x\u6ee1\u8db3 0&lt;g, x&lt;p, \u8ba1\u7b97 y=gx mod p.</p> <p>\u516c\u94a5: (p, g, y)</p> <p>\u79c1\u94a5: x </p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_36","title":"\u52a0\u5bc6\u7b97\u6cd5","text":"<p>\u8bbe\u660e\u6587\u4e3am (0&lt;m&lt;p), \u968f\u673a\u9009\u53d6k(0&lt;k&lt;p), \u8ba1\u7b97 c1=gk mod p, c2=ykm mod p.</p> <p>\u5bc6\u6587: c=(c1, c2)</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_37","title":"\u89e3\u5bc6\u7b97\u6cd5","text":"<p>\u8bbe\u5bc6\u6587\u4e3ac=(c1, c2), \u5219\u660e\u6587\u4e3a m=c2*(c1x)-1 mod p.</p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_38","title":"\u692d\u5706\u66f2\u7ebf\u52a0\u89e3\u5bc6\u8fd0\u7b97","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_39","title":"\u5bc6\u94a5\u9009\u53d6","text":"<p>\u786e\u5b9a\u516c\u5f00\u53c2\u6570(p, a, b, n, g)  </p> <p>\u9009\u62e9\u4e00\u4e2a\u7d20\u6570*p*, \u786e\u5b9a\u6709\u9650\u57dfGF(p) \u9009\u62e9*a*, b*\u5c5e\u4e8eGF(*p), \u786e\u5b9a\u692d\u5706\u66f2\u7ebf*E*</p> <p>\u9009\u62e9*E*\u7684\u4e00\u4e2a\u5faa\u73af\u5b50\u7fa4*H*, \u4f7f\u5f97| H |=n*\u662f\u4e00\u4e2a\u5927\u7d20\u6570 \u9009\u62e9*H*\u7684\u4e00\u4e2a\u672c\u539f\u5143*g.</p> <p>\u786e\u5b9a\u79c1\u94a5: x  \u7528\u6237\u968f\u673a\u9009\u53d6*x*\u5c5e\u4e8e{0,1,2,\u2026,n-1}</p> <p>\u786e\u5b9a\u516c\u94a5: y= x*g.</p> <p>\u6709\u9650\u57df\u4e0a\u7684\u692d\u5706\u66f2\u7ebf</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_40","title":"\u692d\u5706\u66f2\u7ebf\u7fa4\u8ba1\u7b97","text":"<p>\u8bbep&gt;=3\u662f\u7d20\u6570, Fp= {0,1,\u2026, p-1}\u662f\u6709\u9650\u57df, a, b\u5c5e\u4e8ep, \u25b3=4a3+27b2\u4e0d\u7b49\u4e8e0 mod (p), \u540c\u4f59\u65b9\u7a0b y2=x3+ax+b </p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_41","title":"\u52a0\u89e3\u5bc6\u7b97\u6cd5","text":"<p>\u52a0\u5bc6\u7b97\u6cd5 \u8bbe\u660e\u6587\u4e3am, \u5c06m\u6620\u5c04\u5230\u5faa\u73af\u7fa4H\u4e0a\u7684\u70b9. \u968f\u673a\u9009\u53d6k\u5c5e\u4e8e{0,1,\u2026,n-1} \u8ba1\u7b97:c1=kg=(x1, y1) \u8ba1\u7b97:c2 =m+ky=(x2, y2) \u5bc6\u6587: c=(c1, c2)</p> <p>\u89e3\u5bc6\u7b97\u6cd5 \u8bbe\u5bc6\u6587\u4e3ac=(c1, c2), \u5219\u660e\u6587\u4e3a m=c2-xc1.</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_42","title":"\u52a0\u89e3\u5bc6\u4f8b\u5b50","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#hash","title":"Hash\u51fd\u6570","text":"<p>lHash\u51fd\u6570\u7684\u5206\u7c7b</p> <p>\u5355\u5411Hash\u51fd\u6570\uff08one-way\uff09\u7ed9\u5b9a\u4e00\u4e2aHash\u503c*y*\uff0c\u5982\u679c\u5bfb\u627e\u4e00\u4e2a\u6d88\u606f*x*\uff0c\u4f7f\u5f97*y*=h (x)\u662f\u8ba1\u7b97\u4e0a\u4e0d\u53ef\u884c\u7684\uff0c\u5219\u79f0*h*\u662f\u5355\u5411Hash\u51fd\u6570. </p> <p>\u5f31\u6297\u78b0\u649eHash\u51fd\u6570\uff08weakly collision-free\uff09  \u4efb\u7ed9\u4e00\u4e2a\u6d88\u606f*x*\uff0c\u5982\u679c\u5bfb\u627e\u53e6\u4e00\u4e2a\u4e0d\u540c\u7684\u6d88\u606f*x*\u2019\uff0c\u4f7f\u5f97*h*(x) =h(x\u2019)\u662f\u8ba1\u7b97\u4e0a\u4e0d\u53ef\u884c\u7684\uff0c\u5219\u79f0*h*\u662f\u5f31\u6297\u78b0\u649eHash\u51fd\u6570. </p> <p>\u5f3a\u6297\u78b0\u649eHash\u51fd\u6570 \uff08strongly collision-free\uff09 \u5982\u679c\u5bfb\u627e\u4e24\u4e2a\u4e0d\u540c\u7684\u6d88\u606f*x*\u548c*x*\u2019\uff0c\u4f7f\u5f97*h*(x)=h(x\u2019)\u662f\u8ba1\u7b97\u4e0a\u4e0d\u53ef\u884c\u7684\uff0c\u5219\u79f0*h*\u662f\u5f3a\u6297\u78b0\u649eHash\u51fd\u6570. </p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_43","title":"\u6570\u5b57\u7b7e\u540d","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#rsa_1","title":"RSA\u7b7e\u540d","text":""},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_44","title":"\u5bc6\u94a5\u751f\u6210\u7b97\u6cd5","text":"<p>\u9009\u53d6\u4e24\u4e2a\u5927\u7d20\u6570p\uff0cq\uff0c\u8ba1\u7b97 n=p*q\uff0c\u53bb\u03c6(n)=( p -1) *( q -1)\u3002 \u4efb\u9009\u6574\u6570e\uff0c\u6ee1\u8db3\uff1a 0&lt; e &lt;\u03c6(n)\uff0c\u4e14gcd(e ,\u03c6(n))=1\u3002</p> <p>\u7528\u6269\u5c55Euclidean\u7b97\u6cd5\u6c42e\u6a21j(n)\u7684\u9006d\uff0c\u5373  e*d=1 mod \u03c6(n)\u3002 \u7b7e\u540d\u8005\u7684\u516c\u94a5: { n\uff0ce}\uff0c\u79c1\u94a5:{ p\uff0cq\uff0cd}\u3002</p> <p>\u7b7e\u540d\u7b97\u6cd5 \u8bbe\u6d88\u606f\u4e3ax\uff0c\u5219x\u7684RSA\u7b7e\u540d\u4e3a y=xd mod n  \u9a8c\u8bc1\u7b97\u6cd5\u5f53\u63a5\u6536\u65b9\u6536\u5230\u7b7e\u540d(x,y)\u540e\uff0c\u9a8c\u8bc1x=ye mod n</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#elgamal_1","title":"Elgamal \u6570\u5b57\u7b7e\u540d","text":"<p>\u5bc6\u94a5\u751f\u6210\u7b97\u6cd5 \u9009\u53d6\u4e00\u4e2a\u5927\u7d20\u6570p\uff0cg\u5c5e\u4e8eZp*\u662f\u4e00\u4e2a\u672c\u539f\u5143\uff0cp\u548cg\u662f\u7cfb\u7edf\u516c\u5f00\u53c2\u6570\u3002 \u4efb\u9009\u6574\u6570x\uff0c\u6ee1\u8db3\uff1a1\u2264x\u2264p-2\u3002\u8ba1\u7b97 y=gx mod p.  \u7b7e\u540d\u8005\u7684\u516c\u94a5\u4e3ay\uff0c\u79c1\u94a5\u4e3ax\u3002</p> <p>\u7b7e\u540d\u7b97\u6cd5\u9a8c\u8bc1\u7b97\u6cd5</p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_45","title":"\u7f8e\u56fd\u6570\u5b57\u7b7e\u540d\u6807\u51c6","text":"<p>\u5bc6\u94a5\u751f\u6210\u7b97\u6cd5\u7b7e\u540d\u53ca\u9a8c\u8bc1\u7b97\u6cd5</p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#_46","title":"\u4fc4\u7f57\u65af\u6570\u5b57\u7b7e\u540d\u6807\u51c6","text":"<p>\u5bc6\u94a5\u751f\u6210\u51fd\u6570\u7b7e\u540d\u7b97\u6cd5\u53ca\u9a8c\u8bc1\u7b97\u6cd5</p> <p></p>"},{"location":"course/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/#fs","title":"FS\u7b7e\u540d","text":"<p>\u9009\u53d6\u4e24\u4e2a\u5927\u7d20\u6570*p*\u3001q\uff0c\u4ee4*n*=p*q\u3002n\u662f\u516c\u5f00\u53c2\u6570\uff0c*p*\u548c*q*\u662f\u7ba1\u7406\u4e2d\u5fc3CA\u638c\u63e1\u7684\u5bc6\u94a5\u3002\u8bbe*h*\u662f\u4e00\u4e2a\u516c\u5f00\u7684Hash\u51fd\u6570\uff0c*k*\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u6b63\u6574\u6570\u3002</p> <p>\u7ba1\u7406\u4e2d\u5fc3CA\u4e3a\u7528\u6237A\u4ea7\u751f*k*\u4e2a\u516c\u5f00\u5bc6\u94a5\uff1a yi (i =1,2,\u2026,k) \u662f\u6a21*n*\u7684\u5e73\u65b9\u5269\u4f59</p> <p>\u518d\u4e3a\u7528\u6237A\u4ea7\u751f*k*\u4e2a\u79c1\u94a5\uff08\u4fdd\u5bc6\uff09</p> <p></p> <p>\u7b7e\u540d\u7b97\u6cd5\u9a8c\u8bc1\u7b97\u6cd5</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/","title":"\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u590d\u4e60","text":""},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/#_2","title":"\u7b2c\u4e00\u7ae0 \u7eea\u8bba","text":"<p>\u5b9a\u4e49</p> <p>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u662f\u7814\u7a76\u901a\u8fc7\u8ba1\u7b97\u673a\u5c06\u6570\u636e\u8f6c\u6362\u4e3a\u56fe\u5f62\uff0c\u5e76\u5728\u4e13\u95e8\u7684\u663e\u793a\u8bbe\u5907\u4e0a\u663e\u793a\u7684\u539f\u7406\u3001\u65b9\u6cd5\u548c\u6280\u672f\u7684\u5b66\u79d1\u3002</p> <p>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u5c31\u662f\u5e94\u7528\u8ba1\u7b97\u673a\u6280\u672f\u8fdb\u884c\u56fe\u5f62\u7684\u751f\u6210\u3001\u5904\u7406\u548c\u8f93\u51fa\u3002</p> <p>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e0e\u5176\u4ed6\u5b66\u79d1\u7684\u5173\u7cfb</p> <p></p> <p>\u56fe\u5f62\u7684\u57fa\u672c\u8981\u7d20</p> <p>\u51e0\u4f55\u8981\u7d20\uff0c\u523b\u753b\u5bf9\u8c61\u7684\u8f6e\u5ed3\u3001\u5f62\u72b6\u7b49\u3002\u5982\u70b9\uff0c\u7ebf\uff0c\u591a\u8fb9\u5f62\uff0c\u591a\u9762\u4f53\u7b49\uff1b</p> <p>\u975e\u51e0\u4f55\u8981\u7d20\uff0c\u523b\u753b\u5bf9\u8c61\u7684\u989c\u8272\u3001\u6750\u8d28\u7b49\u3002\u5982\u989c\u8272\uff0c\u7eb9\u7406\u7b49\u3002</p> <p>\u56fe\u5f62\u8868\u793a \u5b58\u50a8\u65b9\u6cd5</p> <ol> <li>\u70b9\u9635\u6cd5</li> </ol> <p>\u679a\u4e3e\u51fa\u56fe\u5f62\u4e2d\u6240\u6709\u7684\u70b9(\u5f3a\u8c03\u7531\u70b9&lt;\u50cf\u7d20&gt;\u6784\u6210\uff09\uff0c\u8fd9\u79cd\u8868\u793a\u7684\u56fe\u5f62\u79f0\u4e3a\u56fe\u50cf\u3002</p> <ol> <li>\u53c2\u6570\u6cd5</li> </ol> <p>\u7531\u56fe\u5f62\u7684\u5f62\u72b6\u53c2\u6570(\u65b9\u7a0b\u6216\u8868\u8fbe\u5f0f\u7684\u7cfb\u6570\uff0c\u7ebf\u6bb5\u7684\u7aef\u70b9\u5750\u6807\u7b49) + \u5c5e\u6027\u53c2\u6570(\u989c\u8272\u3001\u7ebf\u578b\u7b49) )\u6765\u8868\u793a\u56fe\u5f62\uff0c\u79f0\u4e3a\u56fe\u5f62\uff08graphics\uff09\uff0c\u5982\u5706\u53ef\u7528\u534a\u5f84\u3001\u5706\u5fc3\u5750\u6807\u548c\u989c\u8272\u8868\u793a</p> <p>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u57fa\u672c\u7814\u7a76\u5185\u5bb9</p> <p>1\u3001\u56fe\u5f62\u7cfb\u7edf\uff08\u786c\u3001\u8f6f\u3001\u6807\u51c6\u5316\uff09</p> <p>2\u3001\u57fa\u672c\u56fe\u5f62\u751f\u6210\uff1a\u5982\u4f55\u663e\u793a\u70b9\u3001\u7ebf\u6bb5\u3001\u591a\u8fb9\u5f62\u53ca\u5706\u7b49\u51e0\u4f55\u56fe\u5f62</p> <p>3\u3001\u56fe\u5f62\u7684\u5904\u7406\uff1a\u51e0\u4f55\u53d8\u6362\uff08\u56fe\u5f62\u52a8\u8d77\u6765\uff09\uff1b\u6295\u5f71\u53d8\u6362\uff08\u5982\u4f55\u663e\u793a\u4e09\u7ef4\u56fe\u5f62\uff09\uff1b\u771f\u5b9e\u611f\u56fe\u5f62\uff08\u5149\u7167\u3001\u9634\u5f71\u3002\u3002\u3002\uff09</p> <p>4\u3001\u7269\u4f53\u9020\u578b\uff1a\u5b9e\u4f53\u8868\u793a\uff1b\u66f2\u7ebf\u66f2\u9762\uff1b\u771f\u5b9e\u611f</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/#_3","title":"\u7b2c\u4e8c\u7ae0 \u8ba1\u7b97\u673a\u56fe\u5f62\u7cfb\u7edf\u6982\u8ff0","text":"<p>\u8ba1\u7b97\u673a\u56fe\u5f62\u7cfb\u7edf</p> <ol> <li> <p>\u7ec4\u6210</p> </li> <li> <p>\u786c\u4ef6\u4e0e\u8f6f\u4ef6\u793a\u610f\u56fe</p> <p></p> </li> <li> <p>\u786c\u4ef6\uff1a\u8f93\u5165\u8bbe\u5907\u3001\u8f93\u51fa\u8bbe\u5907\u3001\u5b58\u50a8\u8bbe\u5907\u3001\u56fe\u5f62\u5904\u7406\u8bbe\u5907</p> </li> <li> <p>\u8f6f\u4ef6\uff1a\u8f6f\u4ef6\u5305\u3001\u5e94\u7528\u7a0b\u5e8f\u3001\u5e94\u7528\u6a21\u578b</p> </li> <li> <p>\u57fa\u672c\u529f\u80fd</p> </li> <li> <p>\u8ba1\u7b97\uff1a\u56fe\u5f62\u5904\u7406\uff08\u5982\u56fe\u5f62\u53d8\u6362\u3001\u5149\u7167\u7b49\uff09</p> </li> <li>\u5b58\u50a8\uff1a\u8fdc\u7a0b\u548c\u672c\u673a</li> <li>\u8f93\u5165\uff1a\u4eba\u673a\u4ea4\u4e92\u53ca\u6570\u636e\u6587\u4ef6\u7b49</li> <li>\u8f93\u51fa\uff1a\u663e\u793a\u5668\u3001\u6253\u5370\u673a\u7b49</li> <li>\u5bf9\u8bdd\u56fe\u5f62\uff1a\u4eba\u673a\u4ea4\u4e92</li> </ol> <p>\u663e\u793a\u8bbe\u5907</p> <ol> <li>\u4e24\u79cd\u8bbe\u5907</li> <li> <p>\u9634\u6781\u5c04\u7ebf\u7ba1CRT (Cathode Ray Tube)</p> <p>\u7279\u70b9\uff1a\u4eae\u5ea6\u9ad8\u3001\u5bf9\u6bd4\u5ea6\u597d\u3001\u8272\u5f69\u9c9c\u8273</p> <p>\u7f3a\u70b9\uff1a\u4f53\u79ef\u5927\uff0c\u7b28\u91cd</p> </li> <li> <p>\u5e73\u677f\u578b\u663e\u793a\u5668\uff1a\u6db2\u6676\u3001\u7b49\u79bb\u5b50</p> <p>\u7279\u70b9\uff1a\u5668\u4ef6\u8584\uff0c\u9002\u5408\u4fbf\u643a</p> <p>\u7f3a\u70b9\uff1a\u4eae\u5ea6\u548c\u5bf9\u6bd4\u5ea6\u76f8\u5bf9\u8f83\u4f4e\u3001\u8272\u5f69\u4e0d\u591f\u9c9c\u8273\uff0c\u4ef7\u683c\u504f\u9ad8</p> </li> <li> <p>CRT</p> </li> <li> <p>\u57fa\u672c\u539f\u7406</p> <p>\u4e00\u79cd\u771f\u7a7a\u5668\u4ef6\uff0c\u5b83\u5229\u7528\u7535\u78c1\u573a\u4ea7\u751f\u9ad8\u901f\u7684\u3001\u7ecf\u8fc7\u805a\u7126\u7684\u7535\u5b50\u675f\uff0c\u504f\u8f6c\u5230\u5c4f\u5e55\u7684\u4e0d\u540c\u4f4d\u7f6e\uff0c\u8f70\u51fb\u5c4f\u5e55\u8868\u9762\u7684\u8367\u5149\u6750\u6599\uff0c\u4ece\u800c\u4ea7\u751f\u53ef\u89c1\u7684\u56fe\u5f62</p> </li> <li> <p>\u7ec4\u6210</p> <p>\u7535\u5b50\u67aa\u3001\u805a\u7126\u7cfb\u7edf\u3001\u52a0\u901f\u7535\u6781\u3001\u504f\u8f6c\u7cfb\u7edf\u3001\u8367\u5149\u5c4f</p> </li> <li> <p>\u7535\u5b50\u67aa       \u7535\u706f\u4e1d\uff0c\u9634\u6781\u548c\u63a7\u5236\u6805\u7ec4\u6210</p> <p>\u706f\u4e1d\uff1a\u4ea7\u751f\u70ed\u91cf</p> <p>\u9634\u6781\uff1a\u7531\u706f\u4e1d\u52a0\u70ed\u53d1\u51fa\u7535\u5b50\u675f</p> <p>\u63a7\u5236\u6805\uff1a\u52a0\u4e0a\u8d1f\u7535\u538b\u540e\uff0c\u80fd\u591f\u63a7\u5236\u901a\u8fc7\u5176\u4e2d\u5c0f\u5b54\u7684\u5e26\u8d1f\u7535\u7684\u7535\u5b50\u675f\u7684\u5f3a\u5f31\u3002\u901a\u8fc7\u8c03\u8282\u8d1f\u7535\u538b\u9ad8\u4f4e\u6765\u63a7\u5236\u7535\u5b50\u6570\u91cf\uff0c\u5373\u63a7\u5236\u8367\u5149\u5c4f\u4e0a\u76f8\u5e94\u70b9\u7684\u4eae\u5ea6</p> </li> <li> <p>\u7535\u5b50\u67aa       \u7535\u706f\u4e1d\uff0c\u9634\u6781\u548c\u63a7\u5236\u6805\u7ec4\u6210</p> <p>\u706f\u4e1d\uff1a\u4ea7\u751f\u70ed\u91cf</p> <p>\u9634\u6781\uff1a\u7531\u706f\u4e1d\u52a0\u70ed\u53d1\u51fa\u7535\u5b50\u675f</p> </li> <li> <p>\u63a7\u5236\u6805</p> <p>\u52a0\u4e0a\u8d1f\u7535\u538b\u540e\uff0c\u80fd\u591f\u63a7\u5236\u901a\u8fc7\u5176\u4e2d\u5c0f\u5b54\u7684\u5e26\u8d1f\u7535\u7684\u7535\u5b50\u675f\u7684\u5f3a\u5f31\u3002\u901a\u8fc7\u8c03\u8282\u8d1f\u7535\u538b\u9ad8\u4f4e\u6765\u63a7\u5236\u7535\u5b50\u6570\u91cf\uff0c\u5373\u63a7\u5236\u8367\u5149\u5c4f\u4e0a\u76f8\u5e94\u70b9\u7684\u4eae\u5ea6</p> </li> <li> <p>\u52a0\u901f\u7535\u6781 \u52a0\u6b63\u7684\u9ad8\u538b\u7535\uff08\u51e0\u4e07\u4f0f\uff09 \u4f7f\u7535\u5b50\u675f\u9ad8\u901f\u8fd0\u52a8</p> </li> <li> <p>\u504f\u8f6c\u7cfb\u7edf</p> <p>\u63a7\u5236\u7535\u5b50\u675f\uff0c\u9759\u7535\u573a\u6216\u78c1\u573a\uff0c\u4ea7\u751f\u504f\u8f6c</p> <p>\u6700\u5927\u504f\u8f6c\u89d2\u662f\u8861\u91cf\u7cfb\u7edf\u6027\u80fd\u7684\u6700\u91cd\u8981\u7684\u6307\u6807\uff0c\u663e\u793a\u5668\u957f\u77ed\u4e0e\u6b64\u6709\u5173</p> </li> <li> <p>\u8367\u5149\u5c4f       \u8367\u5149\u7269\u8d28\uff1a\u5438\u6536\u7535\u5b50\u675f\u800c\u53d1\u5149</p> <p>\u6301\u7eed\u53d1\u5149\u65f6\u95f4\uff1a\u7535\u5b50\u675f\u79bb\u5f00\u67d0\u70b9\u540e\uff0c\u8be5\u70b9\u7684\u4eae\u5ea6\u503c\u8870\u51cf\u5230\u521d\u59cb\u503c1/10 \u6240\u9700\u7684\u65f6\u95f4</p> <p>\u5237\u65b0(Refresh)\uff1a\u4e3a\u4e86\u8ba9\u8367\u5149\u7269\u8d28\u4fdd\u6301\u4e00\u4e2a\u7a33\u5b9a\u7684\u4eae\u5ea6\u503c</p> <p>\u5237\u65b0\u9891\u7387\uff1a\u6bcf\u79d2\u949f\u91cd\u7ed8\u5c4f\u5e55\u7684\u6b21\u6570</p> <p>CRT\u4ea7\u751f\u7a33\u5b9a\u56fe\u50cf\u6240\u9700\u8981\u7684\u6700\u5c0f\u5237\u65b0\u9891\u7387=1\u79d2/\u8367\u5149\u7269\u8d28\u7684\u6301\u7eed\u53d1\u5149\u65f6\u95f4</p> <p>\u4f8b\uff1a\u8367\u5149\u7269\u8d28\u7684\u6301\u7eed\u53d1\u5149\u65f6\u95f440\u6beb\u79d2\uff0c\u5237\u65b0\u9891\u7387\u5c31\u662f 1000/40=25Hz</p> </li> <li> <p>\u5f69\u8272CRT</p> </li> <li> <p>\u5c04\u7ebf\u7a7f\u900f\u6cd5</p> <p>\u539f\u7406\uff1a\u4e24\u5c42\u8367\u5149\u6d82\u5c42\uff0c\u7ea2\u8272\u5149\u548c\u7eff\u8272\u5149\u4e24\u79cd\u53d1\u5149\u7269\u8d28\uff0c\u7535\u5b50\u675f\u8f70\u51fb\u7a7f\u900f\u8367\u5149\u5c42\u7684\u6df1\u6d45\uff0c\u51b3\u5b9a\u6240\u4ea7\u751f\u7684\u989c\u8272</p> <p>\u5e94\u7528\uff1a\u4e3b\u8981\u7528\u4e8e\u753b\u7ebf\u663e\u793a\u5668</p> <p>\u7279\u70b9\uff1a\u4f18\u70b9\u662f\u6210\u672c\u4f4e\uff1b\u7f3a\u70b9\u662f\u53ea\u80fd\u4ea7\u751f\u6709\u9650\u51e0\u79cd\u989c\u8272</p> </li> <li> <p>\u5f71\u5b54\u677f\u6cd5       \u5e94\u7528\uff1a\u4e3b\u8981\u7528\u4e8e\u5149\u6805\u626b\u63cf\u663e\u793a\u5668</p> <p>\u7ed3\u6784\uff1a\u5916\u5c42\u73bb\u7483\u3001\u8367\u5149\u6d82\u5c42\u548c\u5f71\u5b54\u677f\uff0c\u5f71\u5b54\u677f\u88ab\u5b89\u88c5\u5728\u8367\u5149\u5c4f\u7684\u5185\u8868\u9762\uff0c\u7528\u4e8e\u7cbe\u786e\u5b9a\u4f4d\u50cf\u7d20\u7684\u4f4d\u7f6e</p> <p>\u5de5\u4f5c\u539f\u7406\uff1a\u6bcf\u4e2a\u50cf\u7d20\u5904\u67093\u4e2a\u8367\u5149\u70b9\uff0c\u5448\u4e09\u89d2\u5f62\u6392\u5217\u3002\u4e09\u652f\u7535\u5b50\u67aa\u5bf9\u5e94\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u57fa\u8272\u3002\u7535\u5b50\u67aa\u3001\u5f71\u5b54\u677f\u4e2d\u7684\u4e00\u4e2a\u5c0f\u5b54\u548c\u8367\u5149\u70b9\u5448\u4e00\u76f4\u7ebf\uff1b\u6bcf\u4e2a\u5c0f\u5b54\u4e0e\u4e00\u4e2a\u50cf\u7d20\uff08\u5373\u4e09\u4e2a\u8367\u5149\u70b9\uff09\u5bf9\u5e94\u3002</p> <p>\u4eae\u5ea6\u8c03\u8282\uff1a\u5404\u7535\u5b50\u67aa\u53d1\u751f\u7684\u7535\u5b50\u6570\u76ee\uff0c\u53ef\u63a7\u5236\u5404\u8272\u5149\u70b9\u4eae\u5ea6</p> </li> <li> <p>\u6db2\u6676\u663e\u793a\u5668LCD</p> </li> </ol> <p>\u5728\u6db2\u6676\u5206\u5b50\u4e24\u7aef\u6240\u52a0\u7535\u538b\u7684\u4e0d\u540c\uff0c\u6db2\u6676\u5206\u5b50\u7684\u7ffb\u8f6c\u7a0b \u5ea6\u4e0d\u540c\uff0c\u6839\u636e\u6db2\u6676\u89d2\u5ea6\u7684\u4e0d\u540c\u900f\u8fc7\u5149\u7684\u504f\u632f\u6027\u4e5f\u4e0d\u540c\uff1b</p> <p>\u6db2\u6676\u53ef\u4ee5\u88ab\u5149\u7a7f\u900f\uff0c\u5e76\u5f71\u54cd\u5149\u7684\u504f\u632f\u6027\uff1b</p> <p>\u6db2\u6676\u7684\u7535\u5149\u6548\u5e94\uff1a\u5f53\u6db2\u6676\u5206\u5b50\u7684\u67d0\u79cd\u6392\u5217\u72b6\u6001\u5728\u7535\u573a\u4f5c\u7528\u4e0b\u53d8\u4e3a\u53e6\u4e00\u79cd\u6392\u5217\u72b6\u6001\u65f6\uff0c\u6db2\u6676\u7684\u5149\u5b66\u6027\u8d28\u968f\u4e4b\u6539\u53d8\u3002</p> <p>\u6db2\u6676\u663e\u793a\u7684\u673a\u7406\uff1a\u901a\u8fc7\u80fd\u963b\u585e\u6216\u4f20\u9012\u5149\u7684\u6db2\u6676\u6750\u6599\uff0c\u4f20\u9012\u6765\u81ea\u5468\u56f4\u7684\u6216\u5185\u90e8\u5149\u6e90\u7684\u504f\u632f\u5149</p> <p>\u7ec4\u6210\uff1a\u5149\u6e90\u3001\u5782\u76f4\u504f\u5149\u677f\u3001\u73bb\u7483\u7535\u6781\u3001\u6db2\u6676\u3001\u73bb\u7483\u7535\u6781\u3001\u6c34\u5e73\u504f\u5149\u677f</p> <ol> <li> <p>\u6bd4\u8f83</p> </li> <li> <p>\u5171\u540c\u7279\u70b9</p> <pre><code> \u90fd\u662f\u901a\u8fc7\u5355\u4e2a\u53d1\u5149\u5143\u7d20\uff08\u70b9\uff0c\u50cf\u7d20\uff09\u6765\u663e\u793a\u56fe\u5f62\u6216\u6587\u5b57\u3002\n</code></pre> </li> <li> <p>\u4e0d\u540c\u70b9</p> <p>\uff081\uff09LCD\u4f53\u79ef\u5c0f\uff0c\u539a\u5ea6\u8584\uff0c\u91cd\u91cf\u8f7b\uff0c\u8017\u80fd\u5c11\uff0c\u8f90\u5c04\u5f88\u5c11\u3002\uff082\uff09CRT\u663e\u793a\u4eae\u5ea6\u9ad8\uff0c\u8272\u5f69\u9c9c\u8273\uff0c\u5206\u8fa8\u7387\u9ad8\u3002</p> </li> </ol> <p>\u6027\u80fd\u6307\u6807</p> <p>\u50cf\u7d20(Pixel: Picture Cell)\uff1a\u6784\u6210\u5c4f\u5e55\uff08\u56fe\u50cf\uff09\u7684\u6700\u5c0f\u5143\u7d20</p> <p>\u5206\u8fa8\u7387(Resolution)\uff1aCRT\u5728\u6c34\u5e73\u6216\u7ad6\u76f4\u65b9\u5411\u5355\u4f4d\u957f\u5ea6\u4e0a\u80fd\u8bc6\u522b\u7684\u6700\u5927\u50cf\u7d20\u4e2a\u6570\uff0c\u5355\u4f4d\u901a\u5e38\u4e3adpi\uff08dots per inch)</p> <p>\u5206\u8fa8\u7387\u8d8a\u9ad8\u663e\u793a\u7684\u56fe\u5f62\u5c31\u8d8a\u7cbe\u7ec6</p> <p>\u663e\u793a\u7cfb\u7edf</p> <ol> <li>\u4e3b\u8981\u7ec4\u6210</li> </ol> <p>\u663e\u793a\u8bbe\u5907\uff1a\u663e\u793a\u5668</p> <p>\u89c6\u9891\u63a7\u5236\u5668\uff1a\u63a7\u5236\u663e\u793a\u8bbe\u5907\uff08\u6709\u7684\u542b\u56fe\u5f62\u52a0\u901f\u5904\u7406\u5668\uff09\uff0c\u901a\u8fc7\u8bbf\u95ee\u5e27\u7f13\u5b58\u6765\u5237\u65b0\u5c4f\u5e55</p> <p>\u663e\u793a\u7f13\u51b2\u5b58\u50a8\u5668\uff08\u5e27\u7f13\u5b58\uff09\uff1a\u53ef\u4ee5\u5728\u5185\u5b58\u6216\u663e\u793a\u63a7\u5236\u5668\u4e2d</p> <p></p> <p></p> <ol> <li> <p>\u663e\u793a\u7cfb\u7edf</p> </li> <li> <p>\u968f\u673a\u626b\u63cf\uff08random scan\uff09\uff1a\u7535\u5b50\u675f\u53ef\u4ee5\u4efb\u610f\u79fb\u52a8\u3002\u753b\u7ebf\u8bbe\u5907</p> <p>\u7279\u70b9\uff1a\u7535\u5b50\u675f\u53ef\u968f\u610f\u79fb\u52a8\uff0c\u53ea\u626b\u63cf\u8367\u5c4f\u4e0a\u8981\u663e\u793a\u7684\u90e8\u5206\u50cf\u7d20\u3001\u5bf9\u5e94\u7684\u663e\u793a\u5668\u4e3a\u753b\u7ebf\u8bbe\u5907</p> <p>\u903b\u8f91\u90e8\u4ef6\uff1a\u5237\u65b0\u5b58\u50a8\u5668(Refreshing Buffer)\u3001\u663e\u793a\u5904\u7406\u5668\uff08DPU: Display Processing Unit\u3001CRT</p> </li> <li> <p>\u5149\u6805\u626b\u63cf\uff08raster scan\uff09\uff1a\u7535\u5b50\u675f\u6309\u56fa\u5b9a\u626b\u63cf\u7ebf\u548c\u6b21\u5e8f\u8fdb\u884c\u3002\u753b\u70b9\u8bbe\u5907</p> <ol> <li> <p>\u57fa\u672c\u6982\u5ff5</p> <p>\u57fa\u672c\u539f\u7406\uff1a\u7535\u5b50\u675f\u6309\u56fa\u5b9a\u7684\u626b\u63cf\u7ebf\u548c\u626b\u63cf\u987a\u5e8f\u4ece\u5de6\u5230\u53f3\u3001\u81ea\u4e0a\u800c\u4e0b\u8fdb\u884c\u626b\u63cf\u3002</p> <p>\u57fa\u672c\u6982\u5ff5\uff1a\u626b\u63cf\u7ebf\uff1a\u4e00\u6761\u6c34\u5e73\u7ebf \u5e27\uff08frame\uff09\uff1a1\u6b21\u626b\u63cf\u751f\u6210\u7684\u56fe\u50cf</p> <p>\u6c34\u5e73\u56de\u626b\u671f\uff1a\u6c34\u5e73\u7ebf\u95f4\u7684\u56de\u626b\u671f \u5782\u76f4\u56de\u626b\u671f\uff1a\u5e27\u95f4\u7684\u56de\u626b\u671f</p> </li> <li> <p>\u7ec4\u6210       \u5e27\u7f13\u51b2\u5b58\u50a8\u5668\uff08Frame Buffer)--\u5e27\u7f13\u5b58</p> <p>\u89c6\u9891\u63a7\u5236\u5668\uff08Video Controller)</p> <p>\u663e\u793a\u5904\u7406\u5668\uff08Display Processor\uff09</p> <p>\u663e\u793a\u5668\uff1aCRT\u3001\u6db2\u6676</p> </li> <li> <p>\u5e27\u7f13\u5b58</p> <p>\u4f5c\u7528\uff1a\u5b58\u50a8\u5c4f\u5e55\u4e0a\u50cf\u7d20\u7684\u989c\u8272\u503c</p> <p>\u5e27\u7f13\u5b58\u4e2d\u5355\u5143\u6570\u76ee\u4e0e\u663e\u793a\u5668\u4e0a\u50cf\u7d20\u7684\u6570\u76ee\u76f8\u540c\uff0c\u5355\u5143\u4e0e\u50cf\u7d20\u4e00\u4e00\u5bf9\u5e94\uff0c\u5404\u5355\u5143\u7684\u6570\u503c\u51b3\u5b9a\u4e86\u5176\u5bf9\u5e94\u50cf\u7d20\u7684\u989c\u8272\u3002</p> <p>\u663e\u793a\u989c\u8272\u7684\u79cd\u7c7b\u4e0e\u5e27\u7f13\u5b58\u4e2d\u6bcf\u4e2a\u5355\u5143\u7684\u4f4d\u6570\u6709\u5173\u3002\u5982\uff1a\u9ed1\u767d\u663e\u793a\u7cfb\u7edf\u7684\u5e27\u7f13\u51b2\u5668\u7684\u6bcf\u4e2a\u5355\u5143\u53ea\u9700\u4e00\u4f4d\u3002</p> <p>\u5e27\u7f13\u5b58\u5bb9\u91cf\uff1a\u5206\u8fa8\u7387M*N\u3001\u989c\u8272\u4e2a\u6570K \u4e0e\u7f13\u5b58\u5927\u5c0fV \u7684\u5173\u7cfb $V \\geq M*N* \\lceil log_2 K \\rceil $</p> <p>\u76ee\u524d\u6709\u7684PC\u673a\u7684\u663e\u5b58\u5bb9\u91cf\u8fbe512M\u4ee5\u4e0a\uff0c\u6709\u5fc5\u8981\uff1f</p> <p>\u539f\u56e0\uff1a\u663e\u5b58\u8fd8\u5305\u62ec\u6df1\u5ea6\u7f13\u5b58\u3001\u7eb9\u7406\u5185\u5b58\u7b49</p> </li> <li> <p>\u989c\u8272\u6a21\u578b \u4e09\u57fa\u8272</p> <p>RGB\u4e09\u57fa\u8272\uff1a\u9762\u5411\u786c\u4ef6\u8bbe\u5907\uff08\u6444\u50cf\u673a\u3001\u626b\u63cf\u4eea\u548c\u6295\u5f71\u4eea\u7b49\uff09</p> <p>CMY\u4e09\u57fa\u8272\uff1a\u4e09\u8865\u8272\uff1a \u84dd\u7eff(C, cyan)\uff0c\u54c1\u7ea2(M, magenta)\uff0c\u9ec4(Y, yellow) \u7528\u4e8e\u5f69\u8272\u6253\u5370</p> <p>CMY\u4e0eRGB\u5173\u7cfb\uff1aR=1-C\u3001G=1-M\u3001B=1-Y</p> </li> <li> <p>\u89c6\u9891\u63a7\u5236\u5668</p> <p></p> </li> <li> <p>\u663e\u793a\u5904\u7406\u5668</p> <p>\u4f5c\u7528\uff1a\u4ee3\u66ffCPU\u5b8c\u6210\u90e8\u5206\u56fe\u5f62\u5904\u7406\u529f\u80fd\uff0c\u626b\u63cf\u8f6c\u6362\u3001\u51e0\u4f55\u53d8\u6362\u3001\u88c1\u526a\u3001\u5149\u6805\u64cd\u4f5c\u3001\u7eb9\u7406\u6620\u5c04\u7b49\u7b49</p> <p>\u5177\u6709\u4e13\u7528\u663e\u793a\u5904\u7406\u5668\u7684\u5149\u6805\u663e\u793a\u7cfb\u7edf\u7684\u7ed3\u6784</p> <p>\u56fe\u5f62\u52a0\u901f\u5361 = \u89c6\u9891\u63a7\u5236\u5668 + \u663e\u5b58 + \u663e\u793a\u5904\u7406\u5668</p> <p>\u663e\u5361=\u663e\u793a\u5904\u7406\u5668\u7684\u4e13\u7528\u5b58\u50a8\u5668+\u5e27\u7f13\u51b2\u5668+\u89c6\u9891\u63a7\u5236\u5668+\u663e\u793a\u5904\u7406\u5668</p> <p></p> </li> <li> <p>\u7279\u70b9       \u4f18\u70b9\uff1a\u6210\u672c\u4f4e\u3001\u6613\u4e8e\u7ed8\u5236\u586b\u5145\u56fe\u5f62\u3001\u8272\u5f69\u4e30\u5bcc\u3001\u5237\u65b0\u9891\u7387\u4e00\u5b9a\u3001\u4e0e\u56fe\u5f62\u7684\u590d\u6742\u7a0b\u5ea6\u65e0\u5173\u3001\u6613\u4e8e\u4fee\u6539\u56fe\u5f62</p> <p>\u7f3a\u70b9\uff1a\u9700\u8981\u626b\u63cf\u8f6c\u6362\uff0c\u590d\u6742\u56fe\u5f62\u8ba1\u7b97\u91cf\u5927\u3001\u4f1a\u4ea7\u751f\u6df7\u6dc6\uff08\u8d70\u6837\uff09</p> </li> </ol> </li> </ol> <p>\u8f6f\u4ef6\u7cfb\u7edf</p> <ol> <li>\u7b2c\u4e00\u5c42\u6b21\uff1a\u9762\u5411\u786c\u4ef6\u7cfb\u7edf</li> </ol> <p>\u89e3\u51b3\u56fe\u5f62\u8bbe\u5907\u4e0e\u8ba1\u7b97\u673a\u7684\u901a\u8baf\u63a5\u53e3\u7b49\u95ee\u9898\uff0c\u79f0\u4e3a\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f</p> <p>\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u73b0\u5728\u5df2\u88ab\u4f5c\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u4e00\u90e8\u5206\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u6216\u8bbe\u5907\u786c\u4ef6\u5382\u5546\u5f00\u53d1\uff1b </p> <ol> <li>\u7b2c\u4e8c\u5c42\u6b21\uff1a\u5efa\u7acb\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e4b\u4e0a</li> </ol> <p>\u5b8c\u6210\u56fe\u5143\u7684\u751f\u6210\u3001\u8bbe\u5907\u7684\u7ba1\u7406\u7b49\u529f\u80fd</p> <p>\u8fd9\u4e2a\u5c42\u6b21\u4e0a\u7684\u56fe\u5f62\u652f\u6491\u8f6f\u4ef6\u5df2\u7ecf\u6807\u51c6\u5316\uff0c\u5982GKS\u3001PHIGS\u3001CGI\u7b49\uff1b </p> <ol> <li>\u7b2c\u4e09\u5c42\u6b21\uff1a\u9762\u5411\u7528\u6237</li> </ol> <p>\u4e3b\u8981\u4efb\u52a1\u662f\u5efa\u7acb\u56fe\u5f62\u6570\u636e\u7ed3\u6784\uff0c\u5b9a\u4e49\u3001\u4fee\u6539\u548c\u8f93\u51fa\u56fe\u5f62</p> <p>\u5177\u6709\u8f83\u5f3a\u7684\u4ea4\u4e92\u529f\u80fd\uff0c\u4f7f\u7528\u65b9\u4fbf\uff0c\u5bb9\u6613\u9605\u8bfb\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u548c\u79fb\u690d</p> <p>OpenGL\u3001Direct3D\u5c5e\u4e8e\u8fd9\u4e00\u5c42\u6b21</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/#_4","title":"\u7b2c\u4e09\u7ae0  \u57fa\u672c\u5149\u6805\u56fe\u5f62\u751f\u6210\u6280\u672f","text":"<p>\u5149\u6805\u56fe\u5f62\u5b66</p> <ol> <li>\u56fe\u5143\u7684\u751f\u6210</li> </ol> <p>\u662f\u6307\u5b8c\u6210\u56fe\u5143\u7684\u53c2\u6570\u8868\u793a\u5f62\u5f0f\u5230\u70b9\u9635\u8868\u793a\u5f62\u5f0f\u7684\u8f6c\u6362\u3002\u901a\u5e38\u4e5f\u79f0\u626b\u63cf\u8f6c\u6362\u56fe\u5143(Scan Converter) </p> <p>\u53c2\u6570\u8868\u793a\u5f62\u5f0f\u7531\u4e0d\u540c\u79cd\u7c7b\u56fe\u5f62\u7684\u6027\u8d28\u51b3\u5b9a\uff0c\u70b9\u9635\u8868\u793a\u5f62\u5f0f\u662f\u5149\u6805\u663e\u793a\u7cfb\u7edf\u5237\u65b0\u65f6\u6240\u9700\u7684\u8868\u793a\u5f62\u5f0f\u3002</p> <ol> <li>openGL\u76f8\u5173\u51fd\u6570</li> </ol> <pre><code>//\u521d\u59cb\u5316\u989c\u8272\nglClearColor(0,1,0,1); //\u6e05\u9664\u5e27\u7f13\u5b58\uff0c\u5e76\u5c06\u6bcf\u4e2a\u50cf\u7d20\u5bf9\u5e94\u5355\u5143\u8d4b\u4e3a\u80cc\u666f\u989c\u8272\u503c\nglClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT ); //\u8868\u793a\u7ed3\u675f\u7ed8\u56fe\u547d\u4ee4\uff0c\u4f7f\u7528\u5355\u7f13\u5b58\u65f6\u5fc5\u987b\u8981\u3002\u53cc\u7f13\u51b2\u65f6\u53ef\u4ee5\u4e0d\u8981\nglFinish();\n//\u53cc\u7f13\u5b58\u65f6\u4f7f\u7528\u3002\u4ea4\u6362\u7f13\u5b58\u547d\u4ee4\uff0c\u8868\u793a\u5f53\u524d\u663e\u793a\u5e27\u548c\u4e0b\u5e27\u7684\u5e27\u7f13\u5b58\u4ea4\u6362\nglutSwapBuffers();\n</code></pre> <ol> <li>\u5355\u7f13\u5b58\u4e0e\u53cc\u7f13\u5b58\u673a\u5236</li> </ol> <p>\u5355\u7f13\u5b58\uff1a\u626b\u63cf\u4e0e\u751f\u6210\u70b9\u9635\u4e32\u884c\u8fdb\u884c</p> <p>\u53cc\u7f13\u5b58\uff1a\u626b\u63cf\u4e0e\u751f\u6210\u70b9\u9635\u540c\u65f6\uff08\u5e76\u884c\uff09\u8fdb\u884c</p> <p>\u57fa\u672c\u7ebf\u753b\u56fe\u5143\u751f\u6210</p> <ol> <li> <p>\u626b\u63cf\u8f6c\u6362\u76f4\u7ebf\u6bb5</p> </li> <li> <p>\u6982\u5ff5\uff1a\u6c42\u4e0e\u76f4\u7ebf\u6bb5\u5145\u5206\u63a5\u8fd1\u7684\u50cf\u7d20\u96c6\uff0c\u5e76\u4ee5\u6b64\u50cf\u7d20\u96c6\u66ff\u4ee3\u539f\u8fde\u7eed\u76f4\u7ebf\u6bb5\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u3002</p> </li> <li> <p>\u7ea6\u675f\u6761\u4ef6\uff1a</p> <p>\u5c4f\u5e55\u5750\u6807\u7cfb\u662f\u6574\u578b\u5750\u6807\u7cfb\u3001\u50cf\u7d20\u95f4\u6a2a\u5411\u548c\u7eb5\u5411\u8ddd\u79bb\u76f8\u7b49\u3001\u76f4\u7ebf\u6bb5\u4e3aP_0(x_0,y_0)\uff0cp_1(x_1,y_1\u4e14 x_0&lt;x_1\u4e14\u5747\u4e3a\u6574\u6570)\u3001\u76f4\u7ebf\u6bb5\u7684\u5bbd\u5ea6\uff08\u7ebf\u5bbd\uff09\u4e3a1\u3010\u6a2a\u5411\u6216\u7eb5\u5411\u50cf\u7d20\u76f8\u90bb\u3011\u3001</p> <p>\u76f4\u7ebf\u6bb5\u7684\u659c\u73870 \\leq k \\leq 1\u3001\u76f8\u90bb\u50cf\u7d20\u95f4\u5750\u6807\u5206\u91cf\u5dee\u4e3a-1\uff0c0\u62161</p> </li> <li> <p>\u4e3b\u8981\u7b97\u6cd5</p> <ol> <li> <p>\u76f4\u7ebf\u65b9\u7a0b\u6cd5</p> <ol> <li> <p>\u57fa\u672c\u601d\u60f3</p> <p>\u6839\u636e\u76f4\u7ebf\u7684\u51e0\u4f55\u65b9\u7a0b\u786e\u5b9a\u7ebf\u6bb5\u8def\u5f84\u4e0a\u7684\u50cf\u7d20\u4f4d\u7f6e\u3002</p> </li> <li> <p>\u65b9\u6cd5</p> <p>\u5212\u5206\u533a\u95f4[x_0, x_1]: t_0, t_1,\u2026, t_n,  t_{i+1}=x_{i+1},  \u5176\u4e2dt_{i+1}=t_i+1,t_0 = x_0,t_n=x_1</p> <p>\u8ba1\u7b97\u7eb5\u5750\u6807y\uff1ay_i = k*t_i + b</p> <p>\u53d6\u6574\uff1a\u56db\u820d\u4e94\u5165\uff0c\u5373y_{i,r}=round(y_i)=(int)(y_i+0.5)</p> </li> <li> <p>\u4e3b\u8981\u8fd0\u7b97\uff1a\u4e58\u6cd5+\u52a0\u6cd5+\u53d6\u6574+\u6d6e\u70b9\u8fd0\u7b97</p> </li> </ol> </li> <li> <p>\u6570\u503c\u5fae\u5206DDA\u7b97\u6cd5\u3001</p> <ol> <li>\u65b9\u6cd5\uff1ay_{i+1}=k*x_{i+1}+b=k*(x_i+1)+b=y_i+k</li> <li>\u4e3b\u8981\u8fd0\u7b97\uff1a\u52a0\u6cd5+\u53d6\u6574+\u6d6e\u70b9\u8fd0\u7b97</li> </ol> </li> <li> <p>\u4e2d\u70b9\u7b97\u6cd5</p> <ol> <li> <p>\u76ee\u6807\uff1a\u6d88\u9664\u6d6e\u70b9\u8fd0\u7b97</p> </li> <li> <p>\u65b9\u6cd5</p> <ol> <li>\u76f4\u7ebf\u9690\u5f0f\u65b9\u7a0b</li> </ol> <p>F(x,y)=a*x+b*y+c=0</p> <p>\u53ef\u6839\u636eF(x,y)\u7684\u5927\u5c0f\u6765\u5224\u65ad\u70b9\u662f\u5426\u5728\u76f4\u7ebf\u548c\u70b9\u7684\u5173\u7cfb\uff1a</p> <p>F(x,y)&gt;0\u76f4\u7ebf\u4e0a\u65b9\uff0cF(x,y)=0\u76f4\u7ebf\u4e0a\uff0cF(x,y)&lt;0\u76f4\u7ebf\u4e0b\u65b9</p> <ol> <li>\u5224\u65ad\u4e0b\u4e00\u4e2a\u50cf\u7d20\u70b9\u7684\u5750\u6807</li> </ol> <p>\u5df2\u8ba1\u7b97\u51fa\u67d0\u4e00\u70b9\u7684\u5750\u6807(x_i,y_{i,r})\uff0c\u5219\u53ef\u6784\u9020\u5224\u522b\u5f0fd=F(M)=F(x_{i+1},y_{i,r}+0.5)\uff0c\u901a\u8fc7d\u7684\u6b63\u8d1f\u6765\u5224\u65ad\u4e0b\u4e00\u70b9\u7684\u5750\u6807\uff0c\u82e5d&lt;0\uff0c\u5219\u9009\u62e9(x_{i+1},y_{i,r}+1)\uff0c\u53cd\u4e4b\uff0c\u9009\u62e9(x_{i+1},y_{i,r})\u3002</p> <ol> <li> <p>\u5224\u65ad\u518d\u4e0b\u4e00\u4e2a\u50cf\u7d20\u70b9\u7684\u5750\u6807</p> </li> <li> <p>\u82e5d \\geq 0 \uff0c\u5219\u53d6\u53f3\u4fa7\u50cf\u7d20(x_{i+1},y_{i,r})(x_{i+1},y_{i,r})(x_{i+1},y_{i,r})(x_{i+1},y_{i,r})\uff0c\u5219\u518d\u4e0b\u4e00\u4e2a\u50cf\u7d20d=F(x_{i+2},y_{i,r}+0.5)=a*(x_i+2)+b*(y_{i,r}+0.5)+c=d+a</p> <p>\u6b64\u65f6d\u7684\u589e\u91cf\u4e3aa</p> </li> <li> <p>\u82e5d&lt;0\uff0c\u5219\u53d6\u53f3\u4e0a\u4fa7\u7684\u50cf\u7d20(x_{i+1},y_{i,r}+1)\uff0c\u5219\u518d\u4e0b\u4e00\u4e2a\u50cf\u7d20</p> <p>d=F(x_{i+2},y_{i,r}+1.5)=a*(x_i+2)+b*(y_{i,r}+1.5)+c=d+a+b</p> <p>\u6b64\u65f6d\u7684\u589e\u91cf\u4e3aa+b</p> </li> <li> <p>d\u7684\u521d\u59cb\u503c\uff1ad_0=F(x_0+1, y_0+0.5)=F(x_0, y_0)+a+0.5*b\uff0c\u56e0(x0, y0)\u5728\u76f4\u7ebf\u4e0a\uff0cF(x0, y0)=0, \u6240\u4ee5\uff0cd_0 = a + 0.5*b</p> </li> <li> <p>\u589e\u91cfd\u7684\u9012\u63a8\u516c\u5f0f</p> </li> </ol> <p></p> <ol> <li>\u6ce8\u610f\u659c\u7387\u5927\u4e8e1\u548c\u8d1f\u6570\u7684\u60c5\u51b5\u3002</li> </ol> </li> </ol> </li> </ol> </li> <li> <p>\u626b\u63cf\u8f6c\u6362\u5706\u5f27</p> </li> <li> <p>\u5e73\u79fb\u5706\u5fc3\u5230\u539f\u70b9\uff0c\u626b\u63cf\u8f6c\u6362\u540e\u518d\u5e73\u79fb\u5230\u539f\u4f4d\u7f6e</p> </li> <li> <p>\u5706\u7684\u516b\u5bf9\u79f0\u6027\uff1a\u7531\u516b\u5206\u4e4b\u4e00\u5706\u5f27\u4e0a\u7684\u70b9\u53ef\u8ba1\u7b97\u5176\u5b83\u5404\u5206\u6bb5\u5f27\u4e0a\u7684\u70b9\uff0c\u53ea\u9700\u8981\u626b\u63cf\u8f6c\u6362\u516b\u5206\u4e4b\u4e00\u5706\u5f27\u5373\u53ef</p> </li> <li> <p>\u4e3b\u8981\u65b9\u6cd5\uff1a\u65b9\u7a0b\u6cd5\u3001\u4e2d\u70b9\u7b97\u6cd5\u548c\u903c\u8fd1\u6cd5</p> </li> <li> <p>\u4e3b\u8981\u7b97\u6cd5</p> <ol> <li> <p>\u65b9\u7a0b\u6cd5</p> <ol> <li>\u79bb\u6563\u70b9\uff1ax^2+y^2=R^2\uff0c\u5219x_i,y_i=\\sqrt{R^2-x_i^2}\u53d6\u6574\u5f97\u5230(x_i,y_i)</li> <li>\u79bb\u6563\u89d2\u5ea6\uff1a\u5229\u7528\u53c2\u6570\u65b9\u7a0b\uff1ax=R*cos \\theta.y=R*sin\\theta</li> </ol> </li> <li> <p>\u4e2d\u70b9\u7b97\u6cd5</p> <ol> <li> <p>\u5706\u5f27\u7684\u6b63\u8d1f\u5212\u5206\u6027</p> <p>\u5706\u5f27\u5916\u7684\u70b9\uff1aF(x,y)&gt;0\uff1b\u5706\u5f27\u4e0a\u7684\u70b9\uff1aF(x,y)=0\uff1b\u5706\u5f27\u5185\u7684\u70b9\uff1aF(x,y)&lt;0</p> </li> <li> <p>\u516b\u5206\u5706\u7684\u9009\u62e9</p> <p>\u7b2c\u4e00\u8c61\u9650\u7684\u516b\u5206\u4e4b\u4e00\u5706\u5f27\u4e2dx \u7684\u53d8\u5316\u5927\u4e8e y \u7684\u53d8\u5316\uff0c\u5373\u5706\u5f27\u4e0a\u7684\u5207\u77e2\u91cf\u659c\u7387\u57280 ... -1\u95f4\u3002</p> <p>\u56e0\u6b64\u53ef\u4ee5\u4f7f x \u4ece0 \u589e\u52a0\u5230 R/(21/2)\uff0c\u8ba1\u7b97 y \u7684\u503c\u3002</p> </li> <li> <p>\u78ba\u5b9a\u4e0b\u4e00\u50cf\u7d20\u70b9</p> <p>\u70b9p(x_i, y_{i,r})\u4e0b\u4e00\u70b9\u6240\u53d6\u53ef\u80fd\u70b9\u95f4\u7ebf\u6bb5\u7684\u4e2d\u70b9\uff0cM = (x_{i+1}, y_{i,r} - 0.5)</p> <p>\u5f53F(M)\u22640\u65f6\uff0cM\u5728\u5706\u5185\uff0c\u8bf4\u660eE\u8ddd\u79bb\u5706\u5f27\u66f4\u8fd1\uff0c\u53d6(x_{i+1},y_{i,r})</p> <p>\u5f53F(M)\uff1e0\u65f6\uff0c M\u5728\u5706\u5916\uff0c \u53d6(x_{i+1},y_{i,r}-1)</p> </li> <li> <p>\u6784\u9020\u5224\u522b\u5f0f</p> <p>d_i = F(M) = F(x_i+1, y_{i,r}-0.5) = (x_i+1)^2+(y_i-0.5)^2-R^2</p> <p>\u82e5d \\leq 0\uff0c\u5219\u518d\u4e0b\u4e00\u4e2a\u50cf\u7d20\u70b9\u5224\u5b9a\u5f0fd_{i+1}=F(x_i+2,y_{i,r}-0.5)=d+2x_i+3</p> <p>\u82e5d&gt;0\uff0c\u5219\u518d\u4e0b\u4e00\u4e2a\u50cf\u7d20\u70b9\u5224\u5b9a\u5f0fd_{i+1}=F(x_i+2,y_{i,r}-1.5)=d+(2x_i+3)+(-2y_{i,r}+2)</p> </li> <li> <p>d\u7684\u521d\u59cb\u503c</p> <p>d_0=F(1,R-0.5)=1.25-R</p> </li> <li> <p>\u9012\u63a8\u516c\u5f0f</p> <p></p> </li> <li> <p>\u6d88\u9664\u4e58\u6cd5\u8fd0\u7b97</p> <p></p> </li> </ol> </li> <li> <p>\u903c\u8fd1\u6cd5</p> <ol> <li>\u4e24\u79cd\u65b9\u6cd5\uff1a\u6b63\u5185\u63a5\u591a\u8fb9\u5f62\u8feb\u8fd1\u6cd5\u3001\u7b49\u9762\u79ef\u6b63\u591a\u8fb9\u5f62\u8feb\u8fd1\u6cd5</li> <li> <p>\u7279\u70b9\uff1a\u591a\u8fb9\u5f62\u8fb9\u6570\u8db3\u591f\u591a\u65f6\u63a5\u8fd1\u5706\u3001\u8bef\u5dee\u63a7\u5236\u8fb9\u6570\uff1a\u8fb9\u8d8a\u591a\u7cbe\u5ea6\u8d8a\u9ad8\uff0c\u4f46\u8ba1\u7b97\u5f00\u9500\u5927\u3001\u591a\u8fb9\u5f62\u7684\u8fb9\u53ef\u7528\u76f4\u7ebf\u6bb5\u7684\u4e2d\u70b9\u7b97\u6cd5\u6765\u751f\u6210</p> </li> <li> <p>\u6b63\u5185\u63a5\u591a\u8fb9\u5f62\u8feb\u8fd1\u6cd5</p> <p></p> <p>\u200b   </p> </li> </ol> </li> </ol> </li> </ol> <p>\u586b\u5145\u56fe\u5143\u751f\u6210</p> <ol> <li>\u4e24\u79cd\u65b9\u6cd5\u626b\u63cf\u8f6c\u6362: </li> </ol> <p>\u53c2\u6570\uff0d&gt;\u70b9\u9635\u3001\u586b\u5145\uff08Filling\uff09 : \u70b9\u9635\uff0d&gt;\u70b9\u9635</p> <ol> <li> <p>\u5171\u4eab\u8fb9\u754c\uff1a\u5de6\u95ed\u53f3\u5f00\uff0c\u4e0b\u95ed\u4e0a\u5f00</p> </li> <li> <p>\u626b\u63cf\u8f6c\u6362\u591a\u8fb9\u5f62</p> </li> <li> <p>\u4e24\u79cd\u65b9\u6cd5\uff1a\u9010\u70b9\u5224\u65ad\u6cd5\uff1b\u626b\u63cf\u7ebf\u7b97\u6cd5\uff1b</p> </li> <li> <p>\u591a\u8fb9\u5f62\u5206\u7c7b</p> <p>\u51f8\u591a\u8fb9\u5f62(convex)\uff1a\u5185\u89d2\u5c0f\u4e8e180\u5ea6</p> <p>\u51f9\u591a\u8fb9\u5f62(concave)\uff1a\u5b58\u5728\u5185\u89d2\u5927\u4e8e180\u5ea6</p> <p>\u53ea\u8003\u8651\uff1a\u7b80\u5355\u591a\u8fb9\u5f62\uff0c\u5373\u591a\u8fb9\u5f62\u8fb9\u4e0d\u81ea\u76f8\u4ea4</p> </li> <li> <p>\u9010\u70b9\u5224\u65ad\u53d1\uff0c\u5373\u4e3a\u5224\u65ad\u6bcf\u4e2a\u70b9\u548c\u591a\u8fb9\u5f62\u7684\u5185\u5916\u5173\u7cfb--\u5c04\u7ebf\u6cd5</p> <ol> <li> <p>\u6b65\u9aa4</p> <p>\uff081\uff09\u4ece\u5f85\u5224\u522b\u70b9 v \u53d1\u51fa\u5c04\u7ebf\uff08\u4efb\u610f\u65b9\u5411\uff0c\u4e00\u822c\u6c34\u5e73\u65b9\u5411\uff09</p> <p>\uff082\uff09\u6c42\u4e0e\u591a\u8fb9\u5f62\u4ea4\u70b9\u4e2a\u6570 k</p> <p>\uff083\uff09k \u7684\u5947\u5076\u6027\u51b3\u5b9a\u4e86\u70b9\u4e0e\u591a\u8fb9\u5f62\u7684\u5185\u5916\u5173\u7cfb \u5076\u6570\uff1a\u5916 \u5947\u6570\uff1a\u5185</p> </li> <li> <p>\u5947\u5f02\u60c5\u51b5</p> <p>\u5c04\u7ebf\u5728\u8fb9\u4e0a\uff1a\u65e0\u6570\u4e2a\u70b9 ---\u5224\u65ad\u5c04\u7ebf\u662f\u5426\u4e0e\u8fb9\u540c\u7ebf</p> <p>\u4ea4\u70b9\u4e3a\u9876\u70b9\uff1a\u5f02\u4fa7\uff1a1\u4e2a\u3001\u540c\u4fa7\uff1a0\u62162\u4e2a</p> </li> </ol> </li> <li> <p>\u626b\u63cf\u7ebf\u7b97\u6cd5</p> <ol> <li> <p>\u76ee\u6807\uff1a\u5229\u7528\u76f8\u90bb\u50cf\u7d20\u4e4b\u95f4\u7684\u8fde\u8d2f\u6027\uff0c\u63d0\u9ad8\u7b97\u6cd5\u6548\u7387</p> </li> <li> <p>\u5904\u7406\u5bf9\u8c61\uff1a\u7b80\u5355\u591a\u8fb9\u5f62 \u975e\u81ea\u4ea4\u591a\u8fb9\u5f62 \uff08\u8fb9\u4e0e\u8fb9\u4e4b\u95f4\u9664\u4e86\u9876\u70b9\u5916\u65e0\u5176\u5b83\u4ea4\u70b9\uff09</p> </li> <li> <p>\u6b65\u9aa4\uff08\u5bf9\u4e8e\u6bcf\u4e00\u6761\u626b\u63cf\u7ebf\uff09</p> <ol> <li>\u8ba1\u7b97\u626b\u63cf\u7ebf\u4e0e\u8fb9\u7684\u4ea4\u70b9</li> <li>\u4ea4\u70b9\u6309x\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f</li> <li>\u4ea4\u70b9\u4e24\u4e24\u914d\u5bf9\uff0c\u586b\u5145\u533a\u95f4</li> </ol> </li> <li> <p>\u57fa\u672c\u65b9\u6cd5</p> <ol> <li> <p>\u5c06\u6574\u4e2a\u7ed8\u56fe\u7a97\u53e3\u5185\u626b\u63cf\u591a\u8fb9\u5f62\u7684\u95ee\u9898\u5206\u89e3\u4e3a\u4e00\u6761\u6761\u626b\u63cf\u7ebf\u8ba1\u7b97\u4e0e\u591a\u8fb9\u5f62\u7684\u76f8\u4ea4\u533a\u95f4\uff0c\u53ea\u8981\u5b8c\u6210\u6bcf\u6761\u626b\u63cf\u7ebf\u7684\u751f\u6210\u5c31\u5b9e\u73b0\u4e86\u591a\u8fb9\u5f62\u7684\u626b\u63cf\u8f6c\u6362</p> </li> <li> <p>\u4e00\u6761\u626b\u63cf\u7ebf\u4e0e\u591a\u8fb9\u5f62\u7684\u8fb9\u6709\u5076\u6570\u4e2a\u4ea4\u70b9\uff0c\u6bcf2\u4e2a\u70b9\u5f62\u6210\u4e00\u533a\u95f4\uff0c\u533a\u95f4\u5185\u7684\u50cf\u7d20\u4f4d\u4e8e\u591a\u8fb9\u5f62\u5185</p> </li> </ol> </li> <li> <p>\u8fde\u8d2f\u6027(Coherence)</p> <ol> <li> <p>\u8fb9\u7684\u8fde\u8d2f\u6027(Edge Coherence)\u2014\u4f18\u5316\u4ea4\u70b9\u8ba1\u7b97</p> <p>\u67d0\u6761\u8fb9\u4e0e\u5f53\u524d\u626b\u63cf\u7ebf\u76f8\u4ea4\uff0c\u4e5f\u53ef\u80fd\u4e0e\u4e0b\u4e00\u6761\u626b\u63cf\u7ebf\u76f8\u4ea4</p> </li> <li> <p>\u626b\u63cf\u7ebf\u7684\u8fde\u8d2f\u6027(Scan-line Coherence) )\u2014\u4f18\u5316\u4ea4\u70b9\u6392\u5e8f</p> <p>\u5f53\u524d\u626b\u63cf\u7ebf\u4e0e\u5404\u8fb9\u7684\u4ea4\u70b9\u987a\u5e8f\u4e0e \u4e0b\u4e00\u6761\u626b\u63cf\u7ebf\u4e0e\u5404\u8fb9\u7684\u4ea4\u70b9\u987a\u5e8f\u53ef\u80fd\u76f8\u540c\u6216\u7c7b\u4f3c</p> </li> <li> <p>\u533a\u95f4\u7684\u8fde\u8d2f\u6027(Span Coherence)</p> <p>\u540c\u4e00\u533a\u95f4\u4e0a\u7684\u50cf\u7d20\u53d6\u540c\u4e00\u989c\u8272\u5c5e\u6027</p> </li> </ol> </li> <li> <p>\u4ea4\u70b9</p> <ol> <li>\u7b2c\u4e00\u7c7b\u4ea4\u70b9\uff1a\u4f4d\u4e8e\u540c\u4e00\u6761\u8fb9\u4e0a\u7684\u540e\u7ee7\u4ea4\u70b9\uff0c\u7531\u626b\u63cf\u7ebfy\uff1de\u4e0e\u591a\u8fb9\u5f62\u7684\u4ea4\u70b9\u9012\u63a8\u8ba1\u7b97\u626b\u63cf\u7ebf y\uff1de\uff0b1\u7684\u4ea4\u70b9\uff0cx\u2019\uff1dx\uff0b1/m</li> <li>\u7b2c\u4e8c\u7c7b\u4ea4\u70b9\uff1a\u8fb9\u4e0e\u626b\u63cf\u7ebf\u7684\u7b2c\u4e00\u4e2a\u4ea4\u70b9\uff0c\u8fb9\u7684\u4e0b\u7aef\u70b9\u5373\u4e3a\u4ea4\u70b9\u3002</li> </ol> </li> <li> <p>\u4ea4\u70b9\u53d6\u6574\u89c4\u5219</p> <ol> <li> <p>\u4f7f\u751f\u6210\u7684\u50cf\u7d20\u5168\u90e8\u4f4d\u4e8e\u591a\u8fb9\u5f62\u4e4b\u5185\uff0c\u4e14\u6ee1\u8db3\u5171\u4eab\u8fb9\u754c\u539f\u5219\u3002</p> <p>\uff081\uff09\u4ea4\u70b9\u5750\u6807\u4e0d\u80fd\u91c7\u7528\u201c\u56db\u820d\u4e94\u5165\u201d\u539f\u5219\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u90e8\u5206\u50cf\u7d20\u4f4d\u4e8e\u591a\u8fb9\u5f62\u4e4b\u5916</p> <p>\uff082\uff09\u5171\u4eab\u8fb9\u754c\u539f\u5219\uff1a\u5de6\u95ed\u53f3\u5f00\uff0c\u4e0b\u95ed\u4e0a\u5f00</p> </li> <li> <p>\u4ea4\u70b9\u6a2a\u5750\u6807x\u4e3a\u5c0f\u6570\uff0c\u5373\u4ea4\u70b9\u843d\u4e8e\u626b\u63cf\u7ebf\u4e0a\u4e24\u4e2a\u76f8\u90bb\u50cf\u7d20\u4e4b\u95f4</p> <p>\uff08a\uff09\u4ea4\u70b9\u4f4d\u4e8e\u5de6\u8fb9\u4e0a\uff0c\u5411\u53f3\u53d6\u6574\uff0c(int)x + 1</p> <p>\uff08b\uff09\u4ea4\u70b9\u4f4d\u4e8e\u53f3\u8fb9\u4e0a\uff0c\u5411\u5de6\u53d6\u6574\uff0c(int)x</p> </li> <li> <p>\u4ea4\u70b9\u6a2a\u5750\u6807x\u4e3a\u6574\u6570\uff0c\u843d\u5728\u53f3\u3001\u4e0a\u8fb9\u754c\u7684\u50cf\u7d20\u4e0d\u4e88\u586b\u5145\u3002\u843d\u5728\u5de6\u3001\u4e0b\u8fb9\u754c\u7684\u50cf\u7d20\u9700\u8981\u586b\u5145\u3002</p> </li> <li> <p>\u4ea4\u70b9\u662f\u9876\u70b9\uff0c\u626b\u63cf\u7ebf\u4e0e\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u76f8\u4ea4\u65f6\uff0c\u91c7\u7528\u4e0a\u5f00\u4e0b\u95ed\u53ca\u53f3\u5f00\u5de6\u95ed\u53d6\u4ea4\u70b9\uff0c\u4fdd\u8bc1\u4ea4\u70b9\u6b63\u786e\u914d\u5bf9\u3002</p> <p>\u68c0\u67e5\u4e24\u76f8\u90bb\u8fb9\u5728\u626b\u63cf\u7ebf\u7684\u54ea\u4e00\u4fa7\u3002\u53ea\u8981\u68c0\u67e5\u76f8\u4ea4\u7684\u4e24\u6761\u8fb9\u7684\u53e6\u5916\u4e24\u4e2a\u7aef\u70b9\u7684Y\u503c\uff0c\u4e24\u4e2a\u7aef\u70b9Y\u4e2d\u503c\u5927\u4e8e\u4ea4\u70b9Y\u503c\u7684\u4e2a\u6570\u662f0\uff0c1\uff0c2\uff0c\u6765\u51b3\u5b9a\u53d60\uff0c1\uff0c2\u4e2a\u4ea4\u70b9\u3002</p> <p></p> <p>\u5206\u522b\u5bf9\u5e94\u4ea4\u70b9\u4e2a\u6570\u4e3a1\u4e2a\u30011\u4e2a\u30012\u4e2a\u548c0\u4e2a\u3002</p> </li> <li> <p>\u6c34\u5e73\u8fb9\uff0c\u4e0d\u53c2\u4e0e\u8ba1\u7b97\u4ea4\u70b9</p> </li> <li> <p>\u6392\u5e8f\uff0c\u5229\u7528\u626b\u63cf\u7ebf\u8fde\u8d2f\u6027\uff0c\u91c7\u7528\u63d2\u5165\u6392\u5e8f\u3002</p> </li> <li> <p>\u4ea4\u70b9\u4e24\u4e24\u914d\u5bf9\u4e0e\u533a\u95f4\u7ed8\u5236\uff0c\u533a\u95f4\u8fde\u7eed\u6027\uff0c\u8fde\u7eed\u7ed8\u5236\u533a\u95f4\u4e0a\u7684\u50cf\u7d20\u3002</p> </li> </ol> </li> <li> <p>\u7b97\u6cd5\u5b9e\u73b0</p> <ol> <li> <p>\u8fb9\u7684\u5206\u7c7b\u8868ET \uff08Edge Table\uff09\uff08\u53c8\u79f0\u65b0\u8fb9\u8868NET\uff09</p> <p>\u6309\u7167\u8fb9\u7684\u4e0b\u7aef\u70b9  y  \u5750\u6807\uff0c\u5bf9\u975e\u6c34\u5e73\u8fb9\u8fdb\u884c\u5206\u7c7b\u7684\u94fe\u8868</p> <p>\u4e0b\u7aef\u70b9 y \u5750\u6807\u503c\u7b49\u4e8ei \u7684\u8fb9\u5c5e\u4e8e\u7b2ci\u7c7b\uff0c\u540c\u7c7b\u4e2d\u6709\u591a\u6761\u8fb9\u65f6\u6309x\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08x\u4e5f\u4e00\u6837\u65f6\u6309\u8fb9\u4e0a\u7aef\u70b9\u7684x\u503c\uff09</p> <p>\u4f5c\u7528\uff1a\u907f\u514d\u76f2\u76ee\u6c42\u4ea4\uff1b\u8ba1\u7b97\u7b2c\u4e8c\u7c7b\u4ea4\u70b9\u5750\u6807</p> <p></p> <p>ET\u7684\u7ed3\u70b9\u4fe1\u606f\uff1a</p> <p>ymax: \u8fb9\u7684\u4e0a\u7aef\u70b9\u7684 y \u5750\u6807\u503c</p> <p>x\uff1a\u8fb9\u7684\u4e0b\u7aef\u70b9\u7684 x \u5750\u6807</p> <p>deltax\uff1a\u8fb9\u7684\u659c\u7387\u7684\u5012\u6570</p> <p>nextEdge: \u4e0b\u4e00\u6761\u8fb9\u7684\u6307\u9488</p> <p>\u5f53\u626b\u63cf\u7ebf y = e + 1 == ymax\uff0c\u8bf4\u660e\u4e0b\u4e00\u6761\u626b\u63cf\u7ebf\u4e0e\u6b64\u8fb9\u4e0d\u76f8\u4ea4\u3002</p> </li> <li> <p>\u6d3b\u6027\u8fb9\u8868AEL(Active Edge List)</p> <p>\u5b58\u653e\u6d3b\u6027\u8fb9\u7684\u987a\u5e8f\u94fe\u8868\uff0c\u4e14\u6309\u4ea4\u70b9 x \u7684\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f</p> <p>\u6d3b\u6027\u8fb9\uff1a\u4e0e\u5f53\u524d\u626b\u63cf\u7ebf\u76f8\u4ea4\u7684\u8fb9</p> <p>\u8fb9\u7ed3\u6784\u5b9a\u4e49\uff1a\u4e0eET\u8868\u4e2d\u7ed3\u70b9\u7ed3\u6784\u76f8\u540c\u3002</p> <pre><code>typedef struct {\nint ymax;\nfloat x, deltax;\nEdge *nextEdge;\n}Edge; </code></pre> <p>AEL \u7684\u7ed3\u70b9\u4fe1\u606f\uff1a</p> <p>ymax: \u6240\u4ea4\u8fb9\u7684\u6700\u5927 y \u503c</p> <p>x\uff1a\u5f53\u524d\u626b\u63cf\u7ebf\u4e0e\u8fb9\u7684\u4ea4\u70b9\u7684x\u5750\u6807</p> <p>deltax\uff1a\u8fb9\u7684\u659c\u7387\u7684\u5012\u6570</p> <p>nextEdge: \u4e0b\u4e00\u6761\u8fb9\u7684\u6307\u9488</p> <p>\u4f5c\u7528\uff1a\u5b58\u50a8\u4e0e\u5f53\u524d\u626b\u63cf\u7ebf\u7684\u4ea4\u70b9\uff0c\u540c\u65f6\u5feb\u901f\u8ba1\u7b97\u4e0b\u4e00\u6761\u626b\u63cf\u7ebf\u4e0e\u591a\u8fb9\u5f62\u76f8\u4ea4\u7684\u70b9\uff0c\u4e14\u53ef\u5224\u65ad\u8fb9\u662f\u5426\u4e0e\u4e0b\u4e00\u6761\u626b\u63cf\u7ebf\u76f8\u4ea4</p> <p></p> </li> </ol> <p></p> </li> </ol> </li> </ol> <p>\u79cd\u5b50\u586b\u5145\u7b97\u6cd5</p> <ol> <li> <p>\u533a\u57df\uff1a\u70b9\u9635\u8868\u793a\u7684\u56fe\u5f62\uff0c\u50cf\u7d20\u96c6\u5408</p> </li> <li> <p>\u8868\u793a\u65b9\u6cd5\uff1a\u5185\u70b9\u8868\u793a\u3001\u8fb9\u754c\u8868\u793a</p> <ol> <li> <p>\u5185\u70b9\u8868\u793a</p> <p>\u679a\u4e3e\u51fa\u533a\u57df\u5185\u90e8\u7684\u6240\u6709\u50cf\u7d20\u3001\u5185\u90e8\u7684\u6240\u6709\u50cf\u7d20\u4e3a\u540c\u4e00\u4e2a\u989c\u8272\u3001\u8fb9\u754c\u50cf\u7d20\u4e0e\u5185\u90e8\u50cf\u7d20\u7684\u989c\u8272\u4e0d\u540c</p> </li> <li> <p>\u8fb9\u754c\u8868\u793a</p> <p>\u679a\u4e3e\u51fa\u8fb9\u754c\u4e0a\u6240\u6709\u7684\u50cf\u7d20\u3001\u8fb9\u754c\u4e0a\u7684\u6240\u6709\u50cf\u7d20\u4e3a\u540c\u4e00\u989c\u8272\u3001\u5185\u90e8\u50cf\u7d20\u4e0e\u8fb9\u754c\u50cf\u7d20\u7684\u989c\u8272\u4e0d\u540c</p> </li> <li> <p>\u533a\u57df\u586b\u5145\u7b97\u6cd5\u8981\u6c42\u533a\u57df\u662f\u8fde\u901a\u7684\u3002</p> </li> </ol> </li> <li> <p>\u8fde\u901a\u6027</p> </li> </ol> <p>\uff081\uff094\u8fde\u901a\u533a\u57df\uff1a\u533a\u57df\u4e2d\u4efb\u610f\u6ee1\u8db3\u76f8\u4f3c\u6761\u4ef6\u4e24\u70b9\uff08\u50cf\u7d20\uff09\u53ef\u901a\u8fc7\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u4e92\u76f8\u5230\u8fbe</p> <p>\uff082\uff098\u8fde\u901a\u533a\u57df\uff1a\u533a\u57df\u4e2d\u4efb\u610f\u6ee1\u8db3\u76f8\u4f3c\u6761\u4ef6\u4e24\u70b9\uff08\u50cf\u7d20\uff09\u53ef\u901a\u8fc7\u4e0a\u4e0b\u5de6\u53f3\u548c\u5bf9\u89d2\u7ebf\u516b \u4e2a\u65b9\u5411\u4e92\u76f8\u5230\u8fbe</p> <ol> <li> <p>4\u8fde\u901a\u533a\u57df\uff0c\u8fb9\u754c\u53ea\u89818\u8fde\u901a\u5373\u53ef\uff0c8\u8fde\u901a\u533a\u57df\uff0c\u8fb9\u754c\u5fc5\u987b\u662f4\u8fde\u901a\u3002</p> </li> <li> <p>\u7b97\u6cd5\u5b9e\u73b0\uff1a</p> </li> </ol> <p>\uff081\uff09\u5185\u70b9\u8868\u793a\u76844\u8fde\u901a\u533a\u57df    \u79cd\u5b50s(x,y)\uff0c\u539f\u8272oldColor\uff0c\u65b0\u989c\u8272newColor</p> <p>\u65b9\u6cd5\uff1a\u5148\u5224\u65ads(x, y)\u7684\u989c\u8272\uff0c\u82e5\u5176\u503c\u4e0d\u7b49\u4e8eoldColor\uff0c\u8bf4\u660e\u8be5\u50cf\u7d20\u4f4d\u4e8e\u533a\u57df\u5916\u6216\u5df2\u8bbe\u7f6e\u4e3a\u586b\u5145\u8272newColor \u7b97\u6cd5\u7ed3\u675f\uff1b</p> <p>\u5426\u5219\uff0c\u7f6e\u50cf\u7d20\u989c\u8272\u4e3anewColor\uff0c\u518d\u5bf9\u5176\u76f8\u90bb\u7684\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u50cf\u7d20\u5206\u522b\u4f5c\u4e3a\u79cd\u5b50\u4f5c\u4e0a\u8ff0\u9012\u5f52\u5904\u7406\u3002</p> <ol> <li>\u591a\u8fb9\u5f62\u626b\u63cf\u8f6c\u6362\u4e0e\u533a\u57df\u586b\u5145\u65b9\u6cd5\u6bd4\u8f83</li> <li> <p>\u57fa\u672c\u601d\u60f3\u4e0d\u540c</p> <p>\u524d\u8005\uff1a\u9876\u70b9\u8868\u793a\u8f6c\u6362\u6210\u70b9\u9635\u8868\u793a</p> <p>\u540e\u8005\uff1a\u53ea\u6539\u53d8\u533a\u57df\u5185\u586b\u5145\u989c\u8272\uff0c\u6ca1\u6709\u6539\u53d8\u8868\u793a\u65b9\u6cd5</p> </li> <li> <p>\u5bf9\u8fb9\u754c\u7684\u8981\u6c42\u4e0d\u540c</p> <p>\u524d\u8005\uff1a\u626b\u63cf\u7ebf\u4e0e\u591a\u8fb9\u5f62\u8fb9\u754c\u4ea4\u70b9\u4e2a\u6570\u4e3a\u5076\u6570</p> <p>\u540e\u8005\uff1a\u533a\u57df\u5c01\u95ed\uff0c\u9632\u6b62\u9012\u5f52\u586b\u5145\u8de8\u754c</p> </li> <li> <p>\u57fa\u672c\u7684\u6761\u4ef6\u4e0d\u540c</p> <p>\u524d\u8005\uff1a\u4ece\u8fb9\u754c\u9876\u70b9\u4fe1\u606f\u51fa\u53d1</p> <p>\u540e\u8005\uff1a\u4ece\u533a\u57df\u5185\u79cd\u5b50\u70b9\u51fa\u53d1</p> </li> <li> <p>\u533a\u57df\u56fe\u50cf\u586b\u5145</p> </li> </ol> <p></p> <p>\u5b57\u7b26\u7684\u751f\u6210</p> <ol> <li>\u70b9\u9635\u5b57\u4f53</li> </ol> <p>\u5b58\u50a8\uff1a\uff08\u538b\u7f29\u4e0e\u975e\u538b\u7f29\uff09</p> <p>\u663e\u793a\uff1a\u6839\u636e\u7f16\u7801\u68c0\u7d22\u70b9\u9635\u6570\u636e\uff0c\u63a5\u7740\u5199\u5e27\u7f13\u5b58</p> <ol> <li>\u77e2\u91cf\u5b57\u4f53</li> </ol> <p>\u8868\u793a\uff1a\u7b14\u753b\u7528\u66f2\u7ebf\uff08\u53c2\u6570\uff09\u8868\u793a</p> <p>\u626b\u63cf\u8f6c\u6362\uff1a\u53c2\u6570\u5230\u70b9\u9635</p> <p>\u663e\u793a\uff1a1\u3001\u7531\u7f16\u7801\u68c0\u7d22\uff1b2\u3001\u626b\u63cf\u8f6c\u6362\uff1b3\u3001\u5199\u5e27\u7f13\u5b58</p> <p>\u5b58\u50a8\uff1a\u7a7a\u95f4\u5c11</p> <p>OpenGL\u76f8\u5173\u51fd\u6570</p> <pre><code>//\u56fe\u5143\u7ed8\u5236\nglBegin(type);\nglVertex*(); //\u6307\u5b9a\u9876\u70b9\u5750\u68071\nglVertex*(); //\u6307\u5b9a\u9876\u70b9\u5750\u68072\nglEnd()\uff1b\n\n//\u70b9\u7684\u5c5e\u6027\nglEnable(GL_LINE_STIPPLE);  (1) glColor(3|4)(b|d|f|i|s|ub|ui|us)(TYPE r,TYPE g,TYPE b )\n(2) glColor(3|4)(b|d|f|i|s|ub|ui|us)v(TYPE *rgb )\nglPointSize\uff08GLfloat  size) //\u70b9\u5927\u5c0f\n\n//\u753b\u7ebf\nglBegin\u4e2d\u7684\u53c2\u6570\u4e3a\uff1aGL_LINES\u3001GL_LINE_STRIP\u3001GL_LINE_LOOP\nGL_LINES\uff1a\u4e00\u7ec4\u76f4\u7ebf\u6bb5\uff1b GL_LINE_STRIP\uff1a\u6298\u7ebf GL_LINE_LOOP\uff1a\u5c01\u95ed\u6298\u7ebf\n\n//\u7ebf\u7684\u5c5e\u6027\nglLineWidth\uff08GLfloat width) //\u5bbd\u5ea6\nglLineStipple(GLint factor, GLushort pattern); //\u7ebf\u5f62\nglEnable(GL_LINE_STIPPLE); //\u4f7f\u7528\u524d\u9700\u8981\u6fc0\u6d3b\n\n//\u586b\u5145\u56fe\u5143\u51fd\u6570\nglRect[i|s|f|d]{v}()//\u77e9\u5f62\u51fd\u6570\nglBegin()\u4e2d\u7684\u53c2\u6570GL_POLYGON\u3001GL_TRIANGLES\u3001GL_TRIANGLE_STRIP\u3001GL_TRIANGLE_FAN\n\n//\u7ebf\u6846\u56fe\u4e0e\u586b\u5145\u56fe\nglPloygonMode(face\uff0cdisplayMode)\n//face\uff1a\u6307\u5b9a\u524d\u540e\u9762\u3002\u53ef\u9009\u503c\uff1aGL_FRONT\u3001GL_BACK\u548cGL_FRONT_AND_BACK\u3010\u6b63\u53cd\u9762\u4e00\u6837\u5904\u7406\u3011\n//displayMode\uff1aGL_FILL\uff08\u586b\u5145\uff09\u548cGL_LINE\uff08\u7ebf\u6846\uff09\n\n//\u989c\u8272\u63d2\u503c\u6a21\u5f0f\n\u51fd\u6570\uff1aglShadeModel(mode)\nMode: GL_FLAT\u548cGL_SMOOTH\n</code></pre> <p>\u56fe\u5143\u7ed8\u5236 \u56fe\u5143\u7c7b\u578b</p> \u7c7b\u578b \u8bf4\u660e GL_POINTS \u5355\u4e2a\u9876\u70b9\u96c6 GL_LINES \u591a\u7ec4\u53cc\u9876\u70b9\u7ebf\u6bb5 GL_POLYGON \u5355\u4e2a\u7b80\u5355\u586b\u5145\u51f8\u591a\u8fb9\u5f62 GL_TRIANGLES \u591a\u7ec4\u72ec\u7acb\u586b\u5145\u4e09\u89d2\u5f62 GL_QUADS \u591a\u7ec4\u72ec\u7acb\u586b\u5145\u56db\u8fb9\u5f62 GL_LINE_STRIP \u4e0d\u95ed\u5408\u6298\u7ebf GL_LINE_LOOP \u95ed\u5408\u6298\u7ebf GL_TRIANGLE_STRIP \u7ebf\u578b\u8fde\u7eed\u586b\u5145\u4e09\u89d2\u5f62\u4e32 GL_TRIANGLE_FAN \u6247\u5f62\u8fde\u7eed\u586b\u5145\u4e09\u89d2\u5f62\u4e32 GL_QUAD_STRIP \u8fde\u7eed\u586b\u5145\u56db\u8fb9\u5f62\u4e32"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/#_5","title":"\u7b2c\u56db\u7ae0 \u51e0\u4f55\u53d8\u6362","text":"<p>\u9f50\u6b21\u5750\u6807</p> <ol> <li>\u5b9a\u4e49</li> </ol> <p>\u5b9a\u4e49\uff1a(x\uff0cy)\u70b9\u5bf9\u5e94\u7684\u9f50\u6b21\u5750\u6807\u5b9a\u4e49\u4e3a(x_h,y_h,h),x_h=h*x,y_h=y*h,z_h=h</p> <p>\u6807\u51c6\u5176\u6b21\u5750\u6807\uff1a(x,y,1)</p> <pre><code>h\uff1d0\u8868\u793a\u65e0\u7a77\u8fdc\u70b9\n</code></pre> <p>\u4e8c\u7ef4\u53d8\u6362</p> <ol> <li>\u4e8c\u7ef4\u53d8\u6362\u7684\u77e9\u9635\u8868\u793a</li> </ol> <p>\u5e73\u79fb\u53d8\u6362</p> <p></p> <p>\u65cb\u8f6c\u53d8\u6362</p> <p>\u7ed5\u5750\u6807\u539f\u70b9\uff08\u79f0\u4e3a\u53c2\u7167\u70b9\uff0c\u57fa\u51c6\u70b9\uff09\u65cb\u8f6c\u89d2\u5ea6\u03b8 \uff08\u9006\u65f6\u9488\u4e3a\u6b63\uff0c\u987a\u65f6\u9488\u4e3a\u8d1f\uff09</p> <p></p> <p>\u653e\u7f29\u53d8\u6362</p> <p>\u53c2\u7167\u70b9\u4e3a\u5750\u6807\u539f\u70b9</p> <p></p> <p>\u53d8\u6362\u5177\u6709\u7edf\u4e00\u8868\u793a\u5f62\u5f0f\u7684\u4f18\u70b9    1. \u4fbf\u4e8e\u53d8\u6362\u5408\u6210 \u8fde\u7eed\u53d8\u6362\u65f6\uff0c\u53ef\u4ee5\u5148\u5f97\u5230\u53d8\u6362\u7684\u77e9\u9635    2. \u4fbf\u4e8e\u786c\u4ef6\u5b9e\u73b0 \u53ea\u9700\u5b9e\u73b0\u77e9\u9635\u4e58\u6cd5</p> <ol> <li> <p>\u53d8\u6362\u7684\u6027\u8d28</p> </li> <li> <p>\u5e73\u79fb\u548c\u65cb\u8f6c\u53d8\u6362\u5177\u6709\u53ef\u52a0\u6027</p> <p></p> </li> <li> <p>\u653e\u7f29\u53d8\u6362\u5177\u6709\u53ef\u4e58\u6027</p> <p></p> </li> <li> <p>\u53d8\u6362\u5408\u6210</p> </li> <li> <p>\u65b9\u6cd5\uff1a\u8fde\u7eed\u53d8\u6362\u65f6\uff0c\u5148\u8ba1\u7b97\u53d8\u6362\u77e9\u9635\uff0c\u518d\u8ba1\u7b97\u5750\u6807</p> </li> <li> <p>\u4f18\u70b9\uff1a\u63d0\u9ad8\u4e86\u5bf9\u56fe\u5f62\u4f9d\u6b21\u8ba1\u7b97\u591a\u6b21\u53d8\u6362\u7684\u8fd0\u7b97\u6548\u7387\u3001\u63d0\u4f9b\u8ba1\u7b97\u590d\u6742\u53d8\u6362\u7684\u65b9\u6cd5</p> </li> <li> <p>\u590d\u5408\u53d8\u6362 \u77e9\u9635\u4e58\u6cd5</p> </li> </ol> <p>\u5148\u4f5c\u7528\u7684\u653e\u5728\u53d8\u6362\u77e9\u9635\u8fde\u4e58\u5f0f\u7684\u53f3\u7aef\uff0c\u540e\u4f5c\u7528\u7684\u653e\u5728\u8fde\u4e58\u5f0f\u7684\u5de6\u7aef</p> <p>p\u2018=M_n*...*M_2*M_1</p> <ol> <li>\u5bf9\u79f0\u53d8\u6362</li> </ol> <p></p> <ol> <li> <p>\u4eff\u5c04\u53d8\u6362</p> </li> <li> <p>\u4e8c\u7ef4\u7ebf\u6027\u53d8\u6362\u7684\u4e00\u822c\u5f62\u5f0f</p> <p></p> </li> <li> <p>\u5e73\u79fb\uff0c\u65cb\u8f6c\uff0c\u653e\u7f29\uff0c\u5bf9\u79f0\u548c\u9519\u5207\u662f\u7279\u4f8b</p> </li> <li> <p>\u4fdd\u6301\u5e73\u884c\u7ebf\u95f4\u7684\u5e73\u884c\u5173\u7cfb</p> </li> </ol> <p>\u4e09\u7ef4\u51e0\u4f55\u53d8\u6362</p> <ol> <li>\u4e09\u7ef4\u9f50\u6b21\u5750\u6807</li> </ol> <p>(x, y, z)\u70b9\u5bf9\u5e94\u7684\u9f50\u6b21\u5750\u6807\u4e3a(x_h,y_h,z_h,h)\uff0c\u6807\u51c6\u9f50\u6b21\u5750\u6807(x,y,z,1)</p> <ol> <li> <p>\u53f3\u624b\u5750\u6807\u7cfb  \u65cb\u8f6c\u65b9\u5411\uff0c\u5f53\u62c7\u6307\u4e0e\u5750\u6807\u8f74\u540c\u5411\u65f6\uff0c\u56db\u6307\u6240\u6307\u65b9\u5411\u4e3a\u7ed5\u8be5\u8f74\u7684\u6b63\u65cb\u8f6c\u65b9\u5411\u3002</p> </li> <li> <p>\u5e73\u79fb\u53d8\u6362 </p> </li> </ol> <p></p> <ol> <li>\u653e\u7f29\u53d8\u6362</li> </ol> <p>\u53c2\u7167\u70b9\u4e3a\u5750\u6807\u539f\u70b9</p> <p></p> <ol> <li>\u65cb\u8f6c\u53d8\u6362</li> </ol> <p>    3. \u7ed5Z\u8f74</p> <pre><code>  &lt;img src=\"https://pic.tim-wcx.ltd//img/20211208224303.png\" alt=\"image-20211208224303864\" style=\"zoom:67%;\" /&gt;\n</code></pre> <ol> <li>\u5bf9\u79f0\u53d8\u6362</li> </ol> <p>\u5173\u4e8e\u5750\u6807\u5e73\u9762 xy \u7684\u5bf9\u79f0\u53d8\u6362</p> <p></p> <ol> <li>\u4e09\u7ef4\u51e0\u4f55\u53d8\u6362\u7684\u4e00\u822c\u5f62\u5f0f</li> </ol> <p></p> <p>\uff081\uff09\u524d\u4e09\u884c\u548c\u524d\u4e09\u5217\u5bf9\u5e94\u65cb\u8f6c\u548c\u653e\u7f29\u53d8\u6362</p> <p>\uff082\uff09\u7b2c\u56db\u5217\u7684\u524d\u4e09\u4e2a\u5143\u7d20\u5bf9\u5e94\u5e73\u79fb\u53d8\u6362</p> <p>\uff083\uff09\u7b2c\u56db\u884c\u524d\u4e09\u4e2a\u5143\u7d20\u5bf9\u5e94\u6295\u5f71\u53d8\u6362</p> <p>\u56fe\u5f62\u5bf9\u8c61\u7684\u51e0\u4f55\u53d8\u6362</p> <ol> <li> <p>\u56fe\u5f62\u5bf9\u8c61 \u70b9\uff0c\u7ebf\u6bb5\uff0c\u591a\u8fb9\u5f62\uff0c\u5706\uff0c\u5b57\u7b26</p> </li> <li> <p>\u65b9\u6cd5</p> </li> <li> <p>\u5148\u751f\u6210\u70b9\u96c6\uff0c\u518d\u5bf9\u5176\u4e2d\u7684\u70b9\u8fdb\u884c\u53d8\u6362 \u8fd0\u7b97\u91cf\u5927\uff0c\u53d8\u6362\u524d\u540e\u5b58\u5728\u70b9\u96c6\u4e0d\u4e00\u81f4\u60c5\u51b5</p> </li> <li> <p>\u5bf9\u51e0\u4f55\u53c2\u6570\u53d8\u6362</p> <p>\u57fa\u672c\u56fe\u5f62\uff1a\u7ebf\u6bb5\uff0c\u4e24\u4e2a\u7aef\u70b9\uff1b\u591a\u8fb9\u5f62\uff0c\u591a\u4e2a\u9876\u70b9\uff1b\u5706\uff0c\u5706\u5fc3\u548c\u534a\u5f84\uff08\u653e\u7f29\u53d8\u6362\u8981\u6c42 x \u548c y \u653e\u7f29\u500d\u6570\u76f8\u540c\uff09</p> <p>\u524d\u63d0\uff1a\u56fe\u5f62\u5bf9\u8c61\u7684\u51e0\u4f55\u6027\u8d28\u4e0d\u968f\u5750\u6807\u53d8\u6362\u800c\u53d1\u751f\u53d8\u5316\u3002\u8fd9\u79cd\u6027\u8d28\u79f0\u4e3a\u4eff\u5c04\u4e0d\u53d8\u6027\u3002</p> </li> </ol> <p>OpenGL\u51e0\u4f55\u53d8\u6362\u51fd\u6570</p> <pre><code>glTranslate{fd}(tx, ty, tz) //\u5e73\u79fb\u51fd\u6570\nglRotate{fd}(theta, vx, vy, vz) //\u65cb\u8f6c\u51fd\u6570\nglScale{fd}(sx, sy, sz) //\u653e\u7f29\u51fd\u6570\nglLoadIdentity() //\u91cd\u7f6e\u4e3a\u5355\u4f4d\u77e9\u9635\nglMatrixMode(GL_MODELVIEW) //\u6a21\u578b\u89c2\u5bdf\u77e9\u9635\nglPushMatrix() //\u538b\u6808\nglPopMatrix() //\u51fa\u6808\nglutInitDisplayMode (GLUT_SINGLE|GLUT_RGBA); //\u5355\u7f13\u51b2\nglutInitDisplayMode (GLUT_DOUBLE|GLUT_RGBA);   //\u53cc\u7f13\u51b2\nglFinish();//\u5f3a\u5236\u4e4b\u524d\u7684\u7ed8\u56fe\u51fd\u6570\u6267\u884c\uff0c\u53cc\u7f13\u51b2\u53ef\u4e0d\u8c03\u7528\nglutSwapBuffers(); //\u53cc\u7f13\u51b2\u5fc5\u987b\u8c03\u7528\n</code></pre> <p>\u6ce8\u610f\uff1a</p> <p>(1)\u7cfb\u7edf\u51e0\u4f55\u53d8\u6362\u77e9\u9635\u53ea\u67091\u4e2a</p> <p>(2)\u5750\u6807\u91c7\u7528\u5217\u5411\u91cf\u8868\u793a</p> <p>(3)\u65cb\u8f6c\u89d2\u5927\u5c0f\u7528\u5ea6\u8868\u793a\uff0c\u4e0d\u662f\u5f27\u5ea6</p> <p>(4)\u7ed8\u56fe\u65f6\uff0c\u7528\u7cfb\u7edf\u7684\u51e0\u4f55\u53d8\u6362\u77e9\u9635\u4e0e\u9876\u70b9\u5750\u6807\u76f8\u4e58\u5f97\u5230\u5750\u6807\u8fdb\u884c\u7ed8\u56fe</p> <p>(5)\u53ea\u9700\u8981\u8fde\u7eed\u8c03\u7528\u53d8\u6362\u51fd\u6570\uff0c\u5148\u53d8\u6362\u7684\u51fd\u6570\u540e\u8c03\u7528\uff0c\u6700\u540e\u7ed8\u5236\u8be5\u56fe\u5f62\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/#_6","title":"\u7b2c\u4e94\u7ae0 \u4e8c\u7ef4\u56fe\u5f62\u7684\u663e\u793a","text":"<p>\u4e8c\u7ef4\u663e\u793a\u6d41\u6c34\u7ebf</p> <ol> <li>\u57fa\u672c\u6982\u5ff5</li> <li> <p>\u88c1\u526a\u7a97\u53e3(Clipping Window) \uff1a\u9700\u8981\u663e\u793a\u7684\u573a\u666f\u533a\u57df</p> <p>\u53c8\u79f0\u4e3a\u4e16\u754c\u7a97\u53e3\u6216\u89c2\u5bdf\u7a97\u53e3\uff0c\u7b80\u79f0\u7a97\u53e3</p> <p>\u5728\u4e16\u754c\u5750\u6807\u7cfb\uff08\u53c8\u79f0\u7528\u6237\u5750\u6807\u7cfb\uff09\u5185\u5b9a\u4e49</p> </li> <li> <p>\u89c6\u53e3(Viewport)\uff1a\u6307\u663e\u793a\u8bbe\u5907\u4e0a\u7528\u6765\u663e\u793a\u56fe\u5f62\u7684\u533a\u57df</p> <p>\u53c8\u79f0\u89c6\u533a\uff0c\u5728\u8bbe\u5907\uff08\u5c4f\u5e55\uff09\u5750\u6807\u7cfb\u5185\u5b9a\u4e49</p> </li> <li> <p>\u88c1\u526a(Clip)\uff1a\u4ece\u573a\u666f\u4e2d\u786e\u5b9a\u4f4d\u4e8e\u7a97\u53e3\u5185\u7684\u56fe\u5f62</p> </li> </ol> <p></p> <ol> <li>\u88c1\u526a\u7a97\u53e3\u548c\u89c6\u533a\u7684\u5173\u7cfb</li> <li> <p>\u6539\u53d8\u89c6\u53e3\u4f4d\u7f6e\u53ef\u4ee5\u5728\u8f93\u51fa\u8bbe\u5907\u7684\u4e0d\u540c\u4f4d\u7f6e\u4e0a\u89c2\u5bdf\u7269\u4f53</p> </li> <li> <p>\u4f7f\u7528\u591a\u4e2a\u89c6\u53e3\u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0d\u540c\u7684\u4f4d\u7f6e\u89c2\u5bdf\u573a\u666f\u7684\u4e0d\u540c\u90e8\u5206</p> </li> <li> <p>\u6539\u53d8\u7a97\u53e3\u7684\u5c3a\u5bf8\u8fbe\u5230\u6539\u53d8\u89c6\u53e3\u5185\u663e\u793a\u5bf9\u8c61\u7684\u591a\u5c11</p> </li> <li> <p>\u6539\u53d8\u89c6\u53e3\uff08\u6216\u7a97\u53e3\uff09\u7684\u5c3a\u5bf8\u5b9e\u73b0\u56fe\u5f62\u5bf9\u8c61\u653e\u7f29</p> <p></p> </li> <li> <p>\u4e8c\u7ef4\u663e\u793a\u53d8\u6362</p> </li> </ol> <p>\u4e8c\u7ef4\u56fe\u5f62\u7684\u4e16\u754c\u5750\u6807\u7cfb\u5230\u8bbe\u5907\u5750\u6807\u7cfb\u7684\u6620\u5c04</p> <p>\u53c8\u79f0\u4e3a\u7a97\u53e3\u5230\u89c6\u533a\u7684\u53d8\u6362\u6216\u7a97\u53e3\u53d8\u6362</p> <ol> <li>\u4e8c\u7ef4\u56fe\u5f62\u7684\u663e\u793a\u6d41\u6c34\u7ebf</li> </ol> <p></p> <p>\u7a97\u53e3\u5230\u89c6\u533a\u7684\u53d8\u6362</p> <ol> <li>\u6b65\u9aa4</li> <li>\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\uff0c\u5e73\u79fb\u7a97\u53e3\u4f7f(xmin,  ymin)\u81f3\u5750\u6807\u539f\u70b9\uff0c\u53d8\u6362\u4e3aT (\uff0dxmin,  \uff0dymin)</li> <li>\u653e\u7f29\u4f7f\u7a97\u53e3\u7684\u5927\u5c0f\u4e0e\u89c6\u533a\u76f8\u7b49\uff0c\u53d8\u6362\u4e3aS(Eu/Ex, Ev/Ey)</li> <li>\u5728\u8bbe\u5907\u5750\u6807\u7cfb\u4e2d\uff0c\u5e73\u79fb\u4f7f\u7a97\u53e3\u4e0e\u89c6\u533a\u91cd\u5408\uff0c\u53d8\u6362\u4e3aT (umin, vmin)</li> </ol> <p></p> <ol> <li>OpenGL\u89c6\u533a\u51fd\u6570</li> </ol> <p>glViewport(xvmin,yvmin,vpwidth,vpheight);</p> <ol> <li>GLU\u88c1\u526a\u7a97\u53e3\u51fd\u6570</li> </ol> <p>gluOrtho2D(left,right,bottom,top);</p> <p>\u529f\u80fd\uff1a\u5c06\u56fe\u5f62\u6570\u636e\u6620\u5c04\u5230\u5c4f\u5e55\u7684\u6b63\u4ea4\u6295\u5f71\uff0c\u5728\u4e8c\u7ef4\u56fe\u5f62\u4e2d\u53ef\u4ee5\u770b\u505a\u8bbe\u5b9ax\uff0cy\u6700\u5927\u6700\u5c0f\u503c\u3002</p> <p>\u9ed8\u8ba4\u5927\u5c0f\u4e3a\uff08\uff0d1\uff0c1\uff0c\uff0d1\uff0c1\uff09</p> <p>\u88c1\u526a</p> <ol> <li>\u5b9a\u4e49</li> </ol> <p>\u5224\u65ad\u56fe\u5f62\u5143\u7d20\u662f\u5426\u843d\u5728\u88c1\u526a\u7a97\u53e3\u4e4b\u5185\u5e76\u627e\u51fa\u5176\u4f4d\u4e8e\u5185\u90e8\u7684\u90e8\u5206\u3002</p> <ol> <li>\u88c1\u526a\u7684\u6b21\u5e8f</li> </ol> <p>\uff081\uff09\u626b\u63cf\u8f6c\u6362\u540e\u88c1\u526a\uff1a\u8bbe\u5907\u5750\u6807\u7cfb\uff0c\u70b9\u9635\u8868\u793a\u56fe\u5f62</p> <p>\u7b97\u6cd5\u7b80\u5355\uff08\u5224\u65ad\u50cf\u7d20\u662f\u5426\u843d\u5728\u89c6\u533a\u4e2d\uff09\uff0c\u6240\u6709\u56fe\u5f62\u90fd\u8981\u5148\u626b\u63cf\u8f6c\u6362\uff0c\u901f\u5ea6\u6162\u3002</p> <p>\uff082\uff09\u88c1\u526a\u540e\u626b\u63cf\u8f6c\u6362\uff1a\u4e16\u754c\u5750\u6807\u7cfb\uff0c\u53c2\u6570\u8868\u793a\u56fe\u5f62</p> <p>\u6700\u5e38\u7528\uff0c\u8282\u7ea6\u8ba1\u7b97\u65f6\u95f4\uff08\u5148\u5bf9\u53c2\u6570\u8868\u793a\u7684\u56fe\u5f62\u88c1\u526a\uff09\uff0c\u7b97\u6cd5\u590d\u6742</p> <ol> <li>\u5047\u5b9a\u6761\u4ef6</li> </ol> <p>\u77e9\u5f62\u88c1\u526a\u7a97\u53e3\uff1a[xmin, ymin]\uff0d[xmax, ymax]</p> <p>\u88ab\u88c1\u526a\u5bf9\u8c61\uff1a\u7ebf\u6bb5\u3001\u591a\u8fb9\u5f62</p> <p>\u76f4\u7ebf\u6bb5\u88c1\u526a</p> <ol> <li>\u5f85\u88c1\u526a\u7ebf\u6bb5\u548c\u7a97\u53e3\u7684\u5173\u7cfb</li> </ol> <p>(1) \u5b8c\u5168\u53ef\u89c1\uff1a\u7aef\u70b9\u4f4d\u4e8e\u7a97\u53e3\u5185AB</p> <p>(2) \u663e\u7136\u4e0d\u53ef\u89c1 \uff1a\u7aef\u70b9\u4f4d\u4e8e\u540c\u8fb9\u754c\u5916\u4fa7EF</p> <p>(3) \u7ebf\u6bb5\u81f3\u5c11\u6709\u4e00\u7aef\u70b9\u5728\u7a97\u53e3\u4e4b\u5916\uff0c\u4f46\u975e\u663e\u7136\u4e0d\u53ef\u89c1</p> <ol> <li> <p>\u76f4\u7ebf\u6bb5\u76f4\u63a5\u6c42\u4ea4\u7b97\u6cd5</p> </li> <li> <p>\u7aef\u70b9\u4e0e\u7a97\u53e3\u4f4d\u7f6e\u5173\u7cfb</p> <p>(1) \u90fd\u5728\u7a97\u53e3\u5185\uff08\u5b8c\u5168\u53ef\u89c1\uff09</p> <p>(2) 1\u4e2a\u5728\u7a97\u53e3\u5185\uff0c\u53e6\u4e00\u4e2a\u5728\u5916 (\u67091\u4e2a\u4ea4\u70b9)</p> <p>(3) 2\u4e2a\u90fd\u4e0d\u5728\u7a97\u53e3\u5185</p> <p>\u663e\u7136\u4e0d\u53ef\u89c1\uff1f\u3001\u53ef\u80fd\u76f8\u4ea4\uff0c2\u4e2a\u4ea4\u70b9\u8fde\u63a5\u7ebf\u6bb5\u3001\u53ef\u80fd\u4e0d\u76f8\u4ea4</p> </li> <li> <p>\u8ba1\u7b97\u4ea4\u70b9\u65b9\u6cd5</p> <p>\u7ebf\u6bb5\u4e0e\u7a97\u53e3\u7684\u8fb9\u6c42\u4ea4\u70b9\uff0c\u76f4\u7ebf\u4e0e\u7a97\u53e3\u8fb9\u90fd\u5199\u6210\u53c2\u6570\u5f62\u5f0f\uff0c\u6c42\u53c2\u6570\u503c</p> <p></p> </li> <li> <p>\u7b97\u6cd5\u6d41\u7a0b</p> </li> </ol> <p></p> <ol> <li> <p>\u7279\u70b9</p> <p>\u65b9\u6cd5\u76f4\u63a5\uff0c\u6613\u61c2\u3002\u4e0d\u80fd\u5feb\u901f\u5224\u65ad\u663e\u7136\u4e0d\u53ef\u89c1\u7684\u7ebf\u6bb5\u3002</p> </li> <li> <p>\u7f16\u7801\u7b97\u6cd5</p> </li> <li> <p>\u7b97\u6cd5\u6b65\u9aa4</p> <p>\u7b2c\u4e00\u6b65 \u5224\u522b\u7ebf\u6bb5\u4e24\u7aef\u70b9\u662f\u5426\u90fd\u843d\u5728\u7a97\u53e3\u5185\uff0c\u5982\u679c\u662f\uff0c\u5219\u7ebf\u6bb5\u5b8c\u5168\u53ef\u89c1\uff1b\u5426\u5219\u8fdb\u5165\u7b2c\u4e8c\u6b65\uff1b</p> <p>\u7b2c\u4e8c\u6b65 \u5224\u522b\u7ebf\u6bb5\u662f\u5426\u4e3a\u663e\u7136\u4e0d\u53ef\u89c1\uff0c\u5982\u679c\u662f\uff0c\u5219\u88c1\u526a\u7ed3\u675f\uff1b\u5426\u5219\u8fdb\u884c\u7b2c\u4e09\u6b65  \uff1b</p> <p>\u7b2c\u4e09\u6b65 \u6c42\u7ebf\u6bb5\u4e0e\u7a97\u53e3\u8fb9\u5ef6\u957f\u7ebf\u7684\u4ea4\u70b9\uff0c\u8fd9\u4e2a\u4ea4\u70b9\u5c06\u7ebf\u6bb5\u5206\u4e3a\u4e24\u6bb5\uff0c\u5176\u4e2d\u4e00\u6bb5\u663e\u7136\u4e0d\u53ef\u89c1\uff0c\u4e22\u5f03\u3002</p> <p>\u5bf9\u4f59\u4e0b\u7684\u53e6\u4e00\u6bb5\u91cd\u65b0\u8fdb\u884c\u7b2c\u4e00\u6b65\uff0c</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u7b2c\u4e09\u6b65\u5904\u7406\uff0c \u76f4\u81f3\u7ed3\u675f\u3002</p> </li> <li> <p>\u533a\u57df\u7f16\u7801</p> <p>\u7531\u7a97\u53e3\u56db\u6761\u8fb9\u6240\u5728\u76f4\u7ebf\u628a\u4e8c\u7ef4\u5e73\u9762\u5206\u62109\u4e2a\u5b50\u533a\u57df\uff0c\u6bcf\u4e2a\u5b50\u533a\u57df\u8d4b\u4e88\u4e00\u4e2a\u56db\u4f4d\u7f16\u7801\uff0cC_tC_bC_rC_l\uff0c\u4e0a\u4e0b\u53f3\u5de6\u3002</p> <p></p> </li> <li> <p>\u6839\u636e\u9876\u70b9\u7f16\u7801\u5224\u65ad\u7ebf\u6bb5\u4e0e\u591a\u8fb9\u5f62\u7684\u5173\u7cfb</p> <p>\u5f53\u4e24\u4e2a\u7aef\u70b9\u7684\u7f16\u7801\u5168\u4e3a0\u65f6\uff0c\u7ebf\u6bb5\u5b8c\u5168\u53ef\u89c1\u3002</p> <p>\u5f53\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u7f16\u7801\u7684\u903b\u8f91\u201c\u4e0e\u201d\u975e\u96f6\u65f6 \uff0c\u7ebf\u6bb5\u4e3a\u663e\u7136\u4e0d\u53ef\u89c1\u7684\u3002</p> </li> <li> <p>\uff081\uff09\u6c42\u4ea4\u524d\u5148\u6d4b\u8bd5\u4e0e\u7a97\u53e3\u54ea\u6761\u8fb9\u6240\u5728\u76f4\u7ebf\u6709\u4ea4\uff1f</p> <p>\u89c4\u5219\uff1a\u5224\u65ad\u7aef\u70b9\u7f16\u7801\u4e2d\u5404\u4f4d\u7684\u503cC_tC_bC_rC_l\uff0c\u5206\u522b\u5bf9\u5e94\uff1a\u4e0a\u3001\u4e0b\u3001\u53f3\u548c\u5de6\u8fb9</p> <p>\u7aef\u70b9\u7801\u503c\u4f4d\u503c\u4e0d\u540c\u65f6\uff0c\u8bf4\u660e\u7ebf\u6bb5\u4e0e\u5bf9\u5e94\u7a97\u53e3\u8fb9\u76f8\u4ea4</p> <p>\u6b21\u5e8f\uff1a\u4e0a\u3001\u4e0b\u3001\u53f3\u548c\u5de6\u8fb9</p> <p>\uff082\uff09\u4ee5\u4ea4\u70b9\u4e3a\u754c\uff0c\u4e22\u5f03\u5916\u4fa7\u7ebf\u6bb5\uff0c</p> <p>\u4ee5\u4ea4\u70b9\u4e3a\u65b0\u7aef\u70b9\u5224\u65ad\u53e6\u4e00\u7ebf\u6bb5\uff0c\u91cd\u590d\u7b97\u6cd5\u7684\u6b65\u9aa4</p> </li> <li> <p>\u7279\u70b9</p> <p>(1) \u5bf9\u5b8c\u5168\u53ef\u89c1\u548c\u663e\u7136\u4e0d\u53ef\u89c1\u7ebf\u6bb5\u7684\u5feb\u901f\u5224\u522b</p> <p>(2) \u4e8c\u79cd\u573a\u5408\u6548\u7387\u9ad8</p> <p>\u200b \u5927\u88c1\u526a\u7a97\u53e3\u4ee5\u53ca\u88c1\u526a\u7a97\u53e3\u7279\u522b\u5c0f (\u5982, \u5149\u6807\u62fe\u53d6\u56fe\u5f62\u65f6\uff0c\u5149\u6807\u770b\u4f5c\u5c0f\u7684\u88c1\u526a\u7a97\u53e3\uff09</p> <p>(3) \u88c1\u526a\u7a97\u53e3\u7684\u62d3\u5c55\u6027</p> <p>\u200b \u53ef\u4ee5\u5ef6\u4f38\u4e3a\u51f8\u591a\u8fb9\u5f62\uff0c\u4f46\u968f\u7740\u8fb9\u6570\u7684\u589e\u52a0\uff0c\u7f16\u7801\u53d8\u590d\u6742</p> </li> <li> <p>Liang-Barsky\u88c1\u526a\u7b97\u6cd5</p> </li> <li> <p>\u57fa\u672c\u601d\u60f3</p> <p>\u5c06\u4e8c\u7ef4\u88c1\u526a\u5316\u4e3a\u4e00\u7ef4\u88c1\u526a\uff0c\u5411X\uff08\u6216Y\uff09\u65b9\u5411\u6295\u5f71\u4ee5\u51b3\u5b9a\u53ef\u89c1\u7ebf\u6bb5</p> </li> <li> <p>\u524d\u63d0</p> <p>\u5e73\u884c\u4e8eX\u6216Y\u8f74\u7684\u7ebf\u6bb5\u8f83\u5bb9\u6613\uff0c\u8fd9\u91cc\u4e0d\u4f5c\u8003\u8651</p> <p>\u5047\u8bbeP0P1\u6216\u5176\u5ef6\u957f\u7ebf\u5206\u522b\u4e0e\u7a97\u53e3\u5de6\u3001\u4e0b\u3001\u53f3\u548c\u4e0a\u8fb9\uff08\u6216\u5176\u5ef6\u957f\u7ebf\uff09\u4ea4\u4e8eL\uff0cB\uff0cR\uff0cT</p> <p></p> </li> <li> <p>\u65b9\u6cd5</p> <p></p> <p></p> <p>\u200b     \uff084\uff09\u4ee3\u5165\u76f4\u7ebf\u65b9\u7a0b\u5f97\u5230\u4ea4\u70b9\u5750\u6807\u3002</p> </li> <li> <p>L-B\u7b97\u6cd5\u7684\u6539\u8fdb\uff0c\u51cf\u5c11\u6c42\u4ea4\u70b9\u7684\u6b21\u6570</p> <ol> <li> <p>LL = max(xmin, min(x0, x1)) \uff0cRR = min(xmax, max(x0, x1))</p> </li> <li> <p></p> </li> <li> <p>\u7b97\u6cd5</p> <p>(1)\u5148\u6d4b\u8bd5 LL\u2264RR\uff1f\u4e0d\u6210\u7acb\uff0c\u4e0d\u5b58\u5728\u53ef\u89c1\u7ebf\u6bb5\uff0c\u9000\u51fa\uff1b\u5426\u5219\uff0c\u6267\u884c\uff082\uff09</p> <p>(2)\u7ebf\u6bb5P1P2\u7684\u659c\u7387K&gt;0? \u4e0d\u662f\u6267\u884c\uff083\uff09\uff0c\u5426\u5219\u6267\u884c\u3002</p> <p>\u8ba1\u7b97xT, \u6d4b\u8bd5 LL \u2264xT\uff1f\u82e5\u6210\u7acb\uff0c\u8ba1\u7b97xB\uff0c\u6d4b\u8bd5 xB \u2264RR\uff1f\u82e5\u6210\u7acb\uff0c\u6709\u53ef\u89c1\u7ebf\u6bb5\uff1a x\u03b1 = max(LL\uff0cxB); x\u03b2 = min(RR\uff0cxT)</p> <p>(3)K&lt;0:\u8ba1\u7b97xB,\u6d4b\u8bd5 LL \u2264xB\uff1f\u82e5\u6210\u7acb\uff0c\u8ba1\u7b97xT\uff0c\u6d4b\u8bd5 xT \u2264R\uff1f\u82e5\u6210\u7acb\uff0c\u6709\u53ef\u89c1\u7ebf\u6bb5\uff1a x\u03b1 = max(LL ,xT); x\u03b2 = min(RR, xB)</p> </li> <li> <p>\u7279\u70b9      \uff081\uff09\u4e8c\u7ef4\u8f6c\u5316\u4e3a\u4e00\u7ef4\uff082\uff09\u6309\u9700\u6c42\u4ea4\u70b9\uff0c\u63d0\u9ad8\u6548\u7387</p> </li> </ol> </li> </ol> <p>\u591a\u8fb9\u5f62\u88c1\u526a</p> <ol> <li> <p>S-H\uff08\u9010\u8fb9\uff09\u88c1\u526a\u7b97\u6cd5\u57fa\u672c\u601d\u60f3</p> </li> <li> <p>\u8f93\u5165\u8f93\u51fa\uff1a\u9876\u70b9\u5e8f\u5217V_0V_1V_2V_3V_4 \u2026.</p> </li> <li> <p>\u5b9a\u4e49\uff1a</p> <p>\u88c1\u526a\u7ebf\uff1a\u7a97\u53e3\u8fb9\u4ee5\u53ca\u5176\u5ef6\u957f\u7ebf</p> <p>\u5185\u4fa7\u7a7a\u95f4\u4e0e\u5916\u4fa7\u7a7a\u95f4\uff1a\u5305\u542b\u88c1\u526a\u7a97\u53e3\u7684\u534a\u7a7a\u95f4\u4e3a\u5185\u4fa7\u7a7a\u95f4\uff0c\u5426\u5219\u4e3a\u5916\u4fa7\u7a7a\u95f4\u3002</p> </li> <li> <p>\u591a\u8fb9\u5f62\u4e0e\u7a97\u53e3\u88c1\u526a\u7ebf\u7684\u88c1\u526a</p> <p>\u5316\u89e3\u4e3a\u591a\u8fb9\u5f62\u6bcf\u6761\u8fb9\u4e0e\u88c1\u526a\u7ebf\u88c1\u526a\u3002</p> <p>\u8fb9\u4e0e\u88c1\u526a\u7ebf\u7684\u88c1\u526a\u65b9\u6cd5\uff1a\u4f9d\u636e\u591a\u8fb9\u5f62\u7684\u8fb9SP\uff08S\u662f\u8d77\u70b9\uff09\u4e0e\u534a\u7a7a\u95f4\uff08\u5185\u5916\u4fa7\uff09\u7684\u5173\u7cfb</p> <p>\u60c5\u51b51\uff1a\u540c\u5728\u5185\u4fa7\uff0c\u88c1\u526a\u540e\u8f93\u51faP</p> <p>\u60c5\u51b52\uff1aS \u5728\u5185\u4fa7\uff0cP \u5728\u5916\u4fa7\uff0c\u88c1\u526a\u540e\u8f93\u51fa\u4ea4\u70b9 i</p> <p>\u60c5\u51b53\uff1a\u540c\u5728\u5916\u4fa7\uff0c\u88c1\u526a\u540e\u4e0d\u8f93\u51fa</p> <p>\u60c5\u51b54\uff1aS \u5728\u5916\u4fa7\uff0c P \u5728\u5185\u4fa7\uff0c\u88c1\u526a\u540e\u8f93\u51fa\u4ea4\u70b9 i \u548c P</p> <p></p> </li> <li> <p>\u7b97\u6cd5</p> <p>\u5c06\u9876\u70b9\u5e8f\u5217P1P2\u2026Pn\u4f5c\u4e3a\u8f93\u5165</p> <p>\u4f9d\u6b21\u5bf9\u7a97\u53e3\u7684\u6bcf\u6761\u88c1\u526a\u7ebf\u4f5c\u4e0b\u5217\u5904\u7406</p> <p>\u8f93\u5165\u9876\u70b9\u5e8f\u5217</p> <p>\u4f9d\u6b21\u9876\u70b9\u5e8f\u5217\u4e2d\u76f8\u90bb\u9876\u70b9\u6784\u6210\u7684\u8fb9PiPi+1\u8fdb\u884c\u88c1\u526a\u5904\u7406</p> <p>\u8f93\u51fa\u9876\u70b9\u5e8f\u5217\uff08\u4e0b\u6761\u88c1\u526a\u7ebf\u7684\u8f93\u5165\uff09</p> </li> <li> <p>SH\u626b\u63cf\u987a\u5e8f\uff1a\u5de6\u4e0a\u53f3\u4e0b</p> </li> <li> <p>\u7279\u70b9</p> <ol> <li> <p>\u88c1\u526a\u7b97\u6cd5\u91c7\u7528\u6d41\u6c34\u7ebf\u65b9\u5f0f\uff0c\u7b97\u6cd5\u7b80\u5355</p> </li> <li> <p>\u63a8\u5e7f\u5230\u4efb\u610f\u51f8\u591a\u8fb9\u5f62\u88c1\u526a\u7a97\u53e3</p> <p>\u539f\u56e0\u662f\uff1a\u51f8\u591a\u8fb9\u5f62\u7684\u8fb9\u80fd\u5c06\u5e73\u9762\u7a7a\u95f4\u5206\u62102\u90e8\u5206\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u542b\u88c1\u526a\u7a97\u53e3</p> </li> </ol> </li> <li> <p>Weiler-Athenton\u7b97\u6cd5</p> </li> <li> <p>\u9002\u7528\u4e8e\u88c1\u526a\u7a97\u53e3\u4e3a\u4efb\u610f\u591a\u8fb9\u5f62\uff08\u51f8\u3001\u51f9\u3001\u5e26\u5185\u73af\uff09\u7684\u60c5\u51b5</p> </li> <li> <p>\u5185\u88c1\u526a\u7279\u70b9</p> <p>\u88c1\u526a\u7ed3\u679c\u533a\u57df\u7684\u8fb9\u754c\u7531A\u7684\u90e8\u5206\u8fb9\u754c\u548cB\u7684\u90e8\u5206\u8fb9\u754c\u4e24\u90e8\u5206\u6784\u6210\uff0c\u5e76\u4e14\u5728\u4ea4\u70b9\u5904\u8fb9\u754c\u53d1\u751f\u4ea4\u66ff\uff0c\u5373\u7531A\u7684\u8fb9\u754c\u8f6c\u81f3B\u7684\u8fb9\u754c\uff0c\u6216\u7531B\u7684\u8fb9\u754c\u8f6c\u81f3A\u7684\u8fb9\u754c\u3002</p> </li> <li> <p>\u4ea4\u70b9</p> <p>\u51fa\u70b9\uff1a\u4e3b\u591a\u8fb9\u5f62\u8fb9\u754c\u7531\u6b64\u79bb\u5f00\u88c1\u526a\u591a\u8fb9\u5f62\u533a\u57df\u3002</p> <p>\u8fdb\u70b9\uff1a\u4e3b\u591a\u8fb9\u5f62\u8fb9\u754c\u7531\u6b64\u8fdb\u5165\u88c1\u526a\u591a\u8fb9\u5f62\u5185\u3002</p> </li> </ol> <p>\u5b57\u7b26\u88c1\u526a</p> <ol> <li>\u57fa\u4e8e\u5b57\u7b26\u4e32</li> </ol> <p>\u6574\u4e2a\u5b57\u7b26\u4e32\u5b8c\u5168\u843d\u5728\u7a97\u53e3\u4e4b\u5185\u65f6\u663e\u793a\uff0c\u5426\u5219\u4e0d\u663e\u793a\u3002</p> <p>\u5b57\u7b26\u4e32\u7684\u77e9\u5f62\u5305\u56f4\u76d2\u6d4b\u8bd5\u3002</p> <p></p> <ol> <li>\u57fa\u4e8e\u5b57\u7b26</li> </ol> <p>\u4e00\u4e2a\u5b57\u7b26\u5b8c\u5168\u843d\u5728\u7a97\u53e3\u4e4b\u5185\u65f6\u663e\u793a\uff0c\u5426\u5219\u4e0d\u663e\u793a\u3002</p> <p>\u5b57\u7b26\u7684\u77e9\u5f62\u5305\u56f4\u76d2\u6d4b\u8bd5\u3002</p> <p></p> <ol> <li>\u57fa\u4e8e\u6784\u6210\u5b57\u7b26\u7684\u6700\u5c0f\u5143\u7d20 </li> </ol> <p>\u70b9\u9635\u5b57\u7b26\uff1a\u70b9\u88c1\u526a</p> <p>\u77e2\u91cf\u5b57\u7b26\uff1a\u7ebf\u88c1\u526a</p> <p></p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/#_7","title":"\u7b2c\u516d\u7ae0 \u4e09\u7ef4\u56fe\u5f62\u7684\u663e\u793a","text":"<p>\u4e09\u7ef4\u56fe\u50cf\u7b80\u4ecb</p> <ol> <li>\u4e09\u7ef4\u6210\u50cf\u57fa\u672c\u6b65\u9aa4</li> </ol> <p>\uff081\uff09\u9009\u5b9a\u6295\u5f71\u7c7b\u578b \u2014\u2014 \u5e73\u884c\u3001\u900f\u89c6</p> <p>\uff082\uff09\u8bbe\u7f6e\u6295\u5f71\u53c2\u6570\u2014\u2014 \u62cd\u6444\u65b9\u5411\u3001\u8ddd\u79bb\u7b49</p> <p>\uff083\uff09\u4e09\u7ef4\u88c1\u526a \u2014\u2014\u53d6\u666f</p> <p>\uff084\uff09\u6295\u5f71\u548c\u663e\u793a\u2014\u2014\u6210\u50cf</p> <ol> <li>\u7b80\u5355\u7684\u4e09\u7ef4\u56fe\u5f62\u663e\u793a\u6d41\u7a0b\u56fe</li> </ol> <p></p> <ol> <li>\u5e73\u9762\u51e0\u4f55\u6295\u5f71\u5206\u7c7b</li> <li>\u5e73\u884c\u6295\u5f71(parallel projection)\u6295\u5f71\u4e2d\u5fc3\u4e0e\u6295\u5f71\u5e73\u9762\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a\u65e0\u9650</li> <li>\u900f\u89c6\u6295\u5f71(perspective projection)\u6295\u5f71\u4e2d\u5fc3\u4e0e\u6295\u5f71\u5e73\u9762\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a\u6709\u9650</li> </ol> <p></p> <ol> <li> <p>\u900f\u89c6\u6295\u5f71</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u6295\u5f71\u4e2d\u5fc3\u4e0e\u6295\u5f71\u5e73\u9762\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a\u6709\u9650</p> </li> <li> <p>\u706d\u70b9\uff08vanishing point\uff09</p> <pre><code>\u4e0d\u5e73\u884c\u4e8e\u6295\u5f71\u5e73\u9762\u7684\u5e73\u884c\u7ebf\uff0c\u7ecf\u8fc7\u900f\u89c6\u6295\u5f71\u4e4b\u540e\u6536\u655b\u4e8e\u4e00\u70b9\uff0c\u79f0\u4e3a\u706d\u70b9\u3002\u706d\u70b9\u7684\u4e2a\u6570\u65e0\u9650\n</code></pre> </li> <li> <p>\u4e3b\u706d\u70b9:\u5e73\u884c\u4e8e\u5750\u6807\u8f74\u7684\u5e73\u884c\u7ebf\u7684\u706d\u70b9\u3002</p> <p>\u4e00\u70b9\u900f\u89c6\uff1a1\u4e2a\u706d\u70b9</p> <p>\u4e24\u70b9\u900f\u89c6\uff1a2\u4e2a\u706d\u70b9</p> <p>\u4e09\u70b9\u900f\u89c6\uff1a3\u4e2a\u706d\u70b9</p> </li> <li> <p>\u7279\u70b9</p> <p>\u4ea7\u751f\u8fd1\u5927\u8fdc\u5c0f\u7684\u89c6\u89c9\u6548\u679c\uff0c\u7531\u5b83\u4ea7\u751f\u7684\u56fe\u5f62\u6df1\u5ea6\u611f\u5f3a\uff0c\u770b\u8d77\u6765\u66f4\u52a0\u771f\u5b9e\u3002</p> </li> <li> <p>\u5e73\u884c\u6295\u5f71</p> </li> </ol> <p>\u6295\u5f71\u4e2d\u5fc3\u4e0e\u6295\u5f71\u5e73\u9762\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a\u65e0\u9650\uff0c\u662f\u900f\u89c6\u6295\u5f71\u7684\u6781\u9650\u72b6\u6001</p> <ol> <li>\u6b63\u6295\u5f71\u4e0e\u659c\u6295\u5f71</li> </ol> <p>\u6b63\u6295\u5f71(orthogonal projection)\uff1a\u6295\u5f71\u7ebf\u5782\u76f4\u4e8e\u6295\u5f71\u5e73\u9762</p> <p>\u659c\u6295\u5f71\uff1a\u6295\u5f71\u7ebf\u4e0d\u5782\u76f4\u4e8e\u6295\u5f71\u5e73\u9762</p> <p>\u4e09\u89c6\u56fe\uff1a\u6b63\u89c6\u56fe\u3001\u4fa7\u89c6\u56fe\u548c\u4fef\u89c6\u56fe\uff0c\u5747\u4e3a\u6b63\u6295\u5f71\u3002</p> <p>\u89c2\u5bdf\u5750\u6807\u7cfb</p> <ol> <li>\u5b9a\u4e49</li> </ol> <p>\u4f9d\u8d56\u4e8e\u6295\u5f71\u5e73\u9762\u5efa\u7acb\u7684\u4e09\u7ef4\u5750\u6807\u7cfbuvn\u3002\u5982\u7167\u76f8\u673a\u6240\u5728\u7684\u5750\u6807\u7cfb\u3002</p> <ol> <li>\u89c2\u5bdf\u5750\u6807\u7cfb\u7684\u5efa\u7acb</li> </ol> <p>\u5efa\u7acb\u89c2\u5bdf\u5750\u6807\u7cfb    1. \u5750\u6807\u539f\u70b9----\u6295\u5f71\u5e73\u9762\uff08\u5982\u5e95\u7247\uff09\u4e0a\u7684\u4e00\u70b9\uff0c\u79f0\u4e3a\u89c2\u5bdf\u53c2\u8003\u70b9VRP\uff08View Reference Point)    2. n\u8f74(VPN)----\u7167\u76f8\u673a\u955c\u5934\u53cd\u65b9\u5411\uff08\u6295\u5f71\u5e73\u9762\u7684\u6cd5\u5411\uff09    3. v\u8f74----\u6807\u5fd7\u7269\u4f53\u7684\u671d\u5411\uff0c\u7c7b\u4f3c\u7167\u76f8\u673a\u5411\u4e0a\u7684\u65b9\u5411\uff08\u89c2\u5bdf\u6b63\u5411VUP\u5728\u6295\u5f71\u5e73\u9762\u4e0a\u7684\u6295\u5f71\uff09    4. u\u8f74,u=n \\times v</p> <ol> <li>\u89c2\u5bdf\u5750\u6807\u7cfb\u4e2d\u7684\u6295\u5f71\u53c2\u6570</li> </ol> <p>\u7b80\u5316\u6295\u5f71\u53d8\u6362</p> <p>\u6295\u5f71\u5e73\u9762 ---- n = 0\uff0c\u6295\u5f71\u4e2d\u5fc3 ---- (0 \uff0c0\uff0cd )</p> <p>\u6295\u5f71\u524d\u9700\u8981\u5c06\u56fe\u5f62\u5750\u6807\u4ece\u4e16\u754c\uff08\u7528\u6237\uff09\u5750\u6807\u7cfb\u8f6c\u6362\u5230\u89c2\u5bdf\u5750\u6807\u7cfb\u3002</p> <p></p> <ol> <li>\u89c6\u89c1\u4f53</li> </ol> <p>\u89c6\u89c1\u4f53\u662f\u4e09\u7ef4\u88c1\u526a\u7a97\u53e3\uff0c\u786e\u5b9a\u53ef\u89c1\u7a7a\u95f4</p> <p>\u5efa\u7acb\u6b65\u9aa4</p> <p>1 \u5b9a\u4e49\u7a97\u53e3\uff08\u6295\u5f71\u5e73\u9762\u4e0a\uff09</p> <p>2 \u5f62\u6210\u89c2\u5bdf\u7a7a\u95f4\uff08\u53d1\u51fa\u5c04\u7ebf\uff09</p> <p>3 \u5f62\u6210\u89c6\u89c1\u4f53\uff08\u524d\u540e\u88c1\u526a\u9762\uff09</p> <p></p> <ol> <li> <p>\u5efa\u7acb\u7a97\u53e3</p> <p>\u5728\u6295\u5f71\u5e73\u9762uv\u4e0a</p> <p>\u6307\u5b9a\u53c2\u6570\uff08umin\uff0cvmin\uff09\uff08umax\uff0cvmax)</p> <p>\u7a97\u53e3\u4e2d\u5fc3CW\u4e0d\u4e00\u5b9a\u843d\u5728\u89c2\u5bdf\u53c2\u8003\u70b9VRP\u4e0a</p> <p>\u53ea\u6709\u5728\u7a97\u53e3\u5185\u7684\u56fe\u5f62\u624d\u80fd\u5728\u89c6\u533a\u4e2d\u663e\u793a</p> </li> <li> <p>\u751f\u6210\u89c2\u5bdf\u7a7a\u95f4</p> <p>\u5b9a\u4e49\u6295\u5f71\u53c2\u8003\u70b9PRP: Projection Reference Point</p> <p>\u4f5c\u7528\uff1a\u786e\u5b9a\u6295\u5f71\u4e2d\u5fc3\uff08\u900f\u89c6\u6295\u5f71\uff09\u6216\u6295\u5f71\u65b9\u5411\uff08\u5e73\u884c\u6295\u5f71\uff09</p> <p>\u900f\u89c6\u6295\u5f71\uff1aCOP = PRP\uff0c\u89c2\u5bdf\u7a7a\u95f4\u662f\u56db\u68f1\u9525\u3002</p> <p>\u5e73\u884c\u6295\u5f71\uff1a\u6295\u5f71\u65b9\u5411DOP = \u7a97\u53e3\u4e2d\u5fc3CW - PRP\uff0c\u89c2\u5bdf\u7a7a\u95f4\u662f\u56db\u68f1\u67f1\u3002</p> </li> <li> <p>\u5f62\u6210\u89c6\u89c1\u4f53</p> </li> </ol> <p>\u89c6\u89c1\u4f53\uff1a\u5b9a\u4e49\u524d\u540e\u88c1\u526a\u9762\uff0c\u5f62\u6210\u6709\u9650\u7684\u89c2\u5bdf\u7a7a\u95f4</p> <p>\u900f\u89c6\u6295\u5f71\u89c6\u89c1\u4f53\u662f\u56db\u68f1\u53f0\uff1b\u5e73\u884c\u6295\u5f71\u89c6\u89c1\u4f53\u662f\u957f\u65b9\u4f53</p> <p>\u53c8\u79f0\u4e3a\u88c1\u526a\u7a7a\u95f4</p> <ol> <li>\u5b9a\u4e49\u4e00\u4e2a\u89c6\u89c1\u4f53\u6240\u9700\u8981\u7684\u53c2\u6570</li> </ol> \u53c2\u6570 \u4f5c\u7528 \u6295\u5f71\u7c7b\u578b \u5b9a\u4e49\u6295\u5f71\u662f\u5e73\u884c\u6295\u5f71\u8fd8\u662f\u900f\u89c6\u6295\u5f71 \u89c2\u5bdf\u53c2\u8003\u70b9VRP \u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u6307\u5b9a\uff0c\u4e3a\u89c2\u5bdf\u5750\u6807\u7cfb\u539f\u70b9 \u89c2\u5bdf\u5e73\u9762\u6cd5\u5411VPN \u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u6307\u5b9a\uff0c\u4e3a\u89c2\u5bdf\u5750\u6807\u7684n\u8f74 \u89c2\u5bdf\u6b63\u5411VUP \u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u6307\u5b9a\uff0c\u786e\u5b9a\u89c2\u5bdf\u5750\u6807\u7cfb\u7684v \u6295\u5f71\u53c2\u8003\u70b9PRP \u5728\u89c2\u5bdf\u5750\u6807\u7cfb\u4e2d\u6307\u5b9a\u786e\u5b9a\u6295\u5f71\u4e2d\u5fc3\u6216\u6295\u5f71\u65b9\u5411 \u524d\u88c1\u526a\u9762\u88c1\u8dddF \u5728\u89c2\u5bdf\u5750\u6807\u7cfb\u4e2d\u6307\u5b9a\uff0cn\uff1dF\u4e3a\u524d\u88c1\u526a\u9762 \u540e\u88c1\u526a\u9762\u88c1\u8dddB \u5728\u89c2\u5bdf\u5750\u6807\u7cfb\u4e2d\u6307\u5b9a\uff0cn\uff1dB\u4e3a\u540e\u88c1\u526a\u9762 \u7a97\u53e3umin\uff0cumax\u3001vmin\u3001vmax \u5728\u89c2\u5bdf\u5750\u6807\u7cfb\u7684uv\u5e73\u9762\u4e0a\u6307\u5b9a\uff0c\u786e\u5b9a\u7a97\u53e3\u4e0e\u89c6\u89c1\u4f53 <p>\u6295\u5f71\u53d8\u6362</p> <ol> <li>\u900f\u89c6\u6295\u5f71</li> </ol> <p>\u5728uvn\u4e2d\uff0c\u6295\u5f71\u5e73\u9762\u4e3an = 0\uff0c\u6295\u5f71\u4e2d\u5fc3\u4e3a(0\uff0c0\uff0cd )\uff0c\u6295\u5f71\u53d8\u6362\u77e9\u9635\u4e3a\uff1a</p> <p></p> <ol> <li>\u5e73\u884c\u6295\u5f71</li> </ol> <p></p> <p>\u4ece\u4e16\u754c\u5750\u6807\u7cfb\u5230\u89c2\u5bdf\u5750\u6807\u7cfb\u7684\u53d8\u6362</p> <p></p> <p>\u4e09\u7ef4\u56fe\u5f62\u7684\u663e\u793a\u6d41\u7a0b\u56fe</p> <p></p> <p>\u6a21\u578b\u53d8\u6362: \u4ece\u5c40\u90e8\uff08\u6a21\u578b\uff09\u5750\u6807\u7cfb\u5230\u4e16\u754c\u5750\u6807\u7cfb\u7684\u53d8\u6362</p> <p>\u89c2\u5bdf\u53d8\u6362: \u4ece\u4e16\u754c\u5750\u6807\u7cfb\u5230\u89c2\u5bdf\u5750\u6807\u7cfb\u7684\u53d8\u6362</p> <p>\u6295\u5f71\u53d8\u6362 : \u4e09\u7ef4\u5230\u4e8c\u7ef4\u7684\u8f6c\u6362</p> <ol> <li>\u6a21\u578b\u53d8\u6362</li> </ol> <p>\u5c06\u7269\u4f53\u4ece\u81ea\u8eab\u7684\u6a21\u578b\u5750\u6807\u7cfb\u53d8\u6362\u5230\u4e0a\u5c42\u7269\u4f53\u7684\u6a21\u578b\u5750\u6807\u7cfb\uff08\u6216\u4e16\u754c\u5750\u6807\u7cfb\uff09\u7684\u51e0\u4f55\u53d8\u6362\u3002</p> <p>\u6a21\u578b\u53d8\u6362\u662f\u6784\u9020\u590d\u6742\u7269\u4f53\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u57fa\u672c\u51e0\u4f55\u53d8\u6362\u6784\u9020\u590d\u6742\u7269\u4f53\u3002</p> <ol> <li> <p>\u88c1\u526a</p> </li> <li> <p>\u5148\u6295\u5f71\u540e\u88c1\u526a</p> <p>\u4f18\u70b9\uff1a\u4e8c\u7ef4\u88c1\u526a\u76f8\u5bf9\u5bb9\u6613   \u7f3a\u70b9\uff1a\u9700\u8981\u5bf9\u6240\u6709\u7684\u7269\u4f53\u8fdb\u884c\u6295\u5f71\u53d8\u6362</p> </li> <li> <p>\u5148\u88c1\u526a\u540e\u6295\u5f71</p> <ol> <li> <p>\u539f\u56e0\u6709\uff1a</p> <p>(1) \u4e09\u7ef4\u7269\u4f53\u7684\u8868\u9762\u901a\u5e38\u88ab\u79bb\u6563\u8868\u793a\u6210\u591a\u8fb9\u5f62\u6216\u6298\u7ebf\uff0c\u800c\u5bf9\u8fd9\u7c7b\u7b80\u5355\u56fe\u5143\uff0c\u4e09\u7ef4\u88c1\u526a\u540c\u6837\u6bd4\u8f83\u7b80\u5355;</p> <p>(2) \u4e09\u7ef4\u56fe\u5f62\u5728\u663e\u793a\u8fc7\u7a0b\u4e2d\u9700\u8981\u88ab\u6d88\u9690\uff0c\u6d88\u9690\u8981\u6709\u56fe\u5f62\u7684\u6df1\u5ea6\u4fe1\u606f\uff0c\u6240\u4ee5\u5fc5\u987b\u5728\u6295\u5f71\u4e4b\u524d\u5b8c\u6210 \u3002 \u6d88\u9690\u5f88\u8d39\u65f6\uff0c\u5982\u679c\u5728\u6b64\u4e4b\u524d\u88c1\u526a\uff08\u6216\u90e8\u5206\u88c1\u526a\uff09\u6389\u4e0d\u53ef\u89c1\u7684\u56fe\u5f62\uff0c\u53ef\u4f7f\u9700\u8981\u6d88\u9690\u7684\u56fe\u5f62\u51cf\u81f3\u6700\u5c0f\u3002\u4e24\u7c7b\u6295\u5f71\u7684\u89c6\u89c1\u4f53\u4e0d\u4e00\u6837\uff0c\u5982\u4f55\u65b9\u4fbf\u88c1\u526a\uff1f\u89c4\u8303\u5316\u5230\u957f\u65b9\u4f53</p> </li> <li> <p>\u4e09\u7ef4\u88c1\u526a\u7684\u4e24\u79cd\u65b9\u6cd5</p> <p>\u5728\u4e09\u7ef4\u7a7a\u95f4\u5173\u4e8e\u89c6\u89c1\u4f53\u88c1\u526a\uff0c\u9700\u8981\u5c06\u9f50\u6b21\u5750\u6807\u8f6c\u6362\u4e3a\u4e09\u7ef4\u5750\u6807</p> <p>\u4f18\u70b9\uff1a\u4e09\u7ef4\u88c1\u526a\u76f8\u5bf9\u5bb9\u6613</p> <p>\u7f3a\u70b9\uff1a\u9700\u8981\u5c06\u9f50\u6b21\u5750\u6807\u8f6c\u6362\u4e3a\u4e09\u7ef4\u5750\u6807</p> <p>\u76f4\u63a5\u5728\u56db\u7ef4\u9f50\u6b21\u5750\u6807\u7a7a\u95f4\u4e2d\u8fdb\u884c\u88c1\u526a</p> <p>\u4f18\u70b9\uff1a</p> <p>\u4e0d\u9700\u8981\u5c06\u9f50\u6b21\u5750\u6807\u8f6c\u6362\u4e3a\u4e09\u7ef4\u5750\u6807</p> <p>\u6709\u7406\u66f2\u7ebf\u66f2\u9762\u53ef\u80fd\u76f4\u63a5\u7528\u9f50\u6b21\u5750\u6807\u6765\u8868\u793a\uff0c\u5bf9\u5b83\u4eec\u7684\u88c1\u526a\u53ea\u80fd\u5728\u9f50\u6b21\u5750\u6807\u7a7a\u95f4\u4e2d\u8fdb\u884c </p> <p>\u7f3a\u70b9\uff1a\u56db\u7ef4\u88c1\u526a\u76f8\u5bf9\u590d\u6742</p> </li> </ol> </li> <li> <p>\u76f4\u7ebf\u6bb5\u88c1\u526a</p> <ol> <li> <p>Cohen_Sutherland\u7b97\u6cd5</p> <p>\u89c6\u89c1\u4f53\u662f\u957f\u65b9\u4f53\uff0c6\u4e2a\u9762\u5206\u7a7a\u95f427\u4e2a\u533a\u57df</p> <p>\u7f16\u7801\uff1a6\u4f4d\uff0cC1C2C3C4C5C6</p> <p>\u7b97\u6cd5\u8fc7\u7a0b\uff1a \u7c7b\u4f3c\u4e8c\u7ef4\u88c1\u526a</p> </li> <li> <p>Linang_Barskey\u7b97\u6cd5\u7684\u76f4\u63a5\u63a8\u5e7f \uff0d\u4e09\u7ef4\u6295\u5f71\u5230\u4e00\u7ef4</p> <p>\u8bf1\u5bfc\u7a97\u53e3\u662f3\u6761\u7ebf\u6bb5\u7684\u4ea4\u96c6\u3002</p> </li> </ol> </li> <li> <p>\u591a\u8fb9\u5f62\u88c1\u526a\uff1a\u9010\u9762\u88c1\u526a\u7b97\u6cd5</p> <ol> <li>\u662f\u4e8c\u7ef4\u591a\u8fb9\u5f62Sutherland_Hodgman\u9010\u8fb9\u88c1\u526a\u7b97\u6cd5\u63a8\u5e7f\u3002</li> <li>\u591a\u8fb9\u5f62\u8fb9\u4e0e\u88c1\u526a\u7ebf\u88c1\u526a\u6269\u5c55\u4e3a\u591a\u8fb9\u5f62\u8fb9\u4e0e\u88c1\u526a\u9762\u88c1\u526a\u3002\u8fb9\u4e0e\u88c1\u526a\u9762\u88c1\u526a\u65f6\u7684\u8f93\u51fa\u89c4\u5219\u4e0e\u4e8c\u7ef4\u7c7b\u4f3c\u3002</li> </ol> </li> <li> <p>\u4e3b\u8981\u8fd0\u7b97\uff1a \u6c42\u7ebf\u6bb5\u4e0e\u5e73\u9762\u7684\u4ea4\u70b9</p> <p></p> </li> </ol> <p>OpenGL\u76f8\u5173\u51fd\u6570</p> <pre><code>//\u5efa\u6a21\u89c2\u5bdf\u6a21\u5f0f\nglMatrixMode\uff08GL_MODELVIEW\uff09\ngluLookAt\uff08eyex, eyey, eyez, atx, aty, atz, upx, upy, upz\uff09//\u6307\u5b9a\u89c2\u5bdf\u53c2\u6570\n//\u9ed8\u8ba4\u53c2\u6570\uff1a\uff081\uff09eye\uff1d\uff080\uff0c0\uff0c0\uff09\uff082\uff09at\uff1d\uff080\uff0c0\uff0c\uff0d1\uff09\uff083\uff09up\uff1d\uff080\uff0c1\uff0c0\uff09\n\n//\u5efa\u7acb\u6295\u5f71\u53d8\u6362\u77e9\u9635\uff0c\u8bbe\u5b9a\u5f53\u524d\u6295\u5f71\u77e9\u9635\nglMatrixMode\uff08GL_PROJECTION\uff09\n\n//\u6b63\uff08\u5e73\u884c\uff09\u6295\u5f71\u51fd\u6570\nglOrtho(xmin, xmax, ymin, ymax, near, far)\n\u6216  glOrtho(left, right, bottom, top, near, far)\n(1)\u5f62\u6210\u89c6\u89c1\u4f53\n(2)near\u548cfar\u4e3a\u4ece\u89c2\u5bdf\u5750\u6807\u7cfb\u539f\u70b9\u6cbf\u8d1fZ\u8f74\u65b9\u5411\u7684\u8ddd\u79bb\n\u9ed8\u8ba4\u53c2\u6570\uff1aglOrtho(-1.0, 1.0, -1.0, 1.0, -1.0, 1.0)\u662f\u4e00\u5bf9\u79f0\u89c4\u8303\u5316\u5bf9\u79f0\u6b63\u65b9\u4f53\n\u5bf9\u4e8c\u7ef4\u800c\u8a00\uff0c glOrtho2D\u5efa\u7acb\u88c1\u526a\u7a97\u53e3\n\u5982\u4e0d\u6307\u5b9a\u6295\u5f71\u51fd\u6570\uff0c\u9ed8\u8ba4\u6b63\u6295\u5f71\u6765\u663e\u793a\u573a\u666f\n\n//\u900f\u89c6\u6295\u5f71\u51fd\u6570\u5b9a\u4e49\u89c6\u89c1\u4f53   \nglFrustum( left, right, bottom, top, near, far)\n\u5b9a\u4e49\u89c6\u89c1\u4f53\n\u524d\u56db\u4e2a\u53c2\u6570\u8bbe\u5b9a\u6295\u5f71\u5e73\u9762\u4e0a\n\u88c1\u526a\u7a97\u53e3\u7684\u5750\u6807\n\uff08OpenGL\u6295\u5f71\u5e73\u9762\u4e3a\u8fd1\u88c1\u526a\u9762\uff09\n\ngluPerspective\uff08fovy\uff0caspect\uff0cnear\uff0cfar\uff09\nfovy\uff1a\u4e0a\u4e0b\u88c1\u526a\u9762\u95f4\u7684\u5939\u89d2\uff080\uff5e180\uff09\naspect\uff1a\u88c1\u526a\u7a97\u53e3\u7eb5\u6a2a\u6bd4\uff08\u5bbd\u5ea6/\u9ad8\u5ea6\uff09\nnear\uff1a\u8fd1\u88c1\u526a\u9762\nfar\uff1a\u8fdc\u526a\u9762\n</code></pre>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/#_8","title":"\u7b2c\u516b\u7ae0   \u771f\u5b9e\u611f\u56fe\u5f62\u751f\u6210","text":"<p>\u6d88\u9690\u6280\u672f</p> <ol> <li> <p>\u5b9a\u4e49\uff1a\u6d88\u9664\u88ab\u906e\u6321\u7684\u4e0d\u53ef\u89c1\u7684\u7ebf\u6216\u9762\u79f0\u4f5c\u6d88\u9664\u9690\u85cf\u7ebf\u548c\u9690\u85cf\u9762\uff0c\u7b80\u79f0\u4e3a\u6d88\u9690\u3002</p> </li> <li> <p>\u6d88\u9690\u7684\u5bf9\u8c61\uff1a\u4e09\u7ef4\u7269\u4f53\uff0c\u4e09\u7ef4\u4f53\u7684\u8868\u793a\u4e3b\u8981\u91c7\u7528\u8fb9\u754c\uff08\u591a\u8fb9\u5f62\uff09\u8868\u793a\u3002</p> </li> <li> <p>\u6d88\u9690\u7ed3\u679c\uff1a\u4e0e\u89c2\u5bdf\u7269\u4f53\u6709\u5173\uff0c\u4e5f\u4e0e\u89c6\u70b9\u4f4d\u7f6e\u548c\u65b9\u5411\u6709\u5173\u3002</p> </li> <li> <p>\u753b\u5bb6\u7b97\u6cd5</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u8fdc\u8fd1\u6392\u5e8f\uff0c\u4e4b\u540e\u6309\u8fdc\u8fd1\u987a\u5e8f\u6295\u5f71\u3002</p> </li> <li> <p>\u95ee\u9898\uff1a\u4e0d\u80fd\u5904\u7406\u591a\u8fb9\u5f62\u5faa\u73af\u906e\u6321\u548c\u591a\u8fb9\u5f62\u76f8\u4e92\u7a7f\u900f\u3002</p> </li> <li> <p>Z \uff08\u6df1\u5ea6\uff09\u7f13\u51b2\u5668\u7b97\u6cd5</p> </li> <li> <p>\u7ec4\u6210</p> <p>\u5e27\u7f13\u51b2\u5668 -- \u4fdd\u5b58\u5404\u50cf\u7d20\u989c\u8272\u503c\uff0cZ \u7f13\u51b2\u5668  -- \u4fdd\u5b58\u5404\u50cf\u7d20\u5904\u7269\u4f53\u6df1\u5ea6\u503c</p> <p>Z \u7f13\u51b2\u5668\u4e2d\u7684\u5355\u5143\u4e0e\u5e27\u7f13\u51b2\u5668\u4e2d\u7684\u5355\u5143\u4e00\u4e00\u5bf9\u5e94</p> </li> <li> <p>\u7b97\u6cd5\u6b65\u9aa4</p> <p>(1) \u5148\u5c06 Z \u7f13\u51b2\u5668\u4e2d\u4e2a\u5355\u5143\u7684\u521d\u59cb\u503c\u7f6e\u4e3a\u6700\u5c0f\u503c\u3002</p> <p>(2)\u591a\u8fb9\u5f62\u6295\u5f71\u540e\uff0c\u626b\u63cf\u8f6c\u6362\u5199\u5e27\u7f13\u5b58\u65f6\uff0c\u5f53\u8981\u6539\u53d8\u67d0\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u503c\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u8be5\u50cf\u7d20\u5bf9\u5e94\u5f53\u524d\u591a\u8fb9\u5f62\u4e0a\u70b9\u7684\u6df1\u5ea6\u503c\u662f\u5426\u5927\u4e8e\u8be5\u50cf\u7d20\u539f\u6765\u7684\u6df1\u5ea6\u503c\uff08\u4fdd\u5b58\u5728\u8be5\u50cf\u7d20\u6240\u5bf9\u5e94\u7684Z\u7f13\u51b2\u5668\u7684\u5355\u5143\u4e2d\uff09\uff0c</p> <p>\u5982\u679c\u5927\u4e8e\uff0c\u8bf4\u660e\u5f53\u524d\u591a\u8fb9\u5f62\u66f4\u9760\u8fd1\u89c2\u5bdf\u70b9\uff0c\u7528\u5b83\u7684\u989c\u8272\u66ff\u6362\u50cf\u7d20\u539f\u6765\u7684\u989c\u8272\uff1b\u540c\u65f6\u4fdd\u5b58\u6df1\u5ea6\u503c;</p> <p>\u5426\u5219\u8bf4\u660e\u5728\u5f53\u524d\u50cf\u7d20\u5904\uff0c\u5f53\u524d\u591a\u8fb9\u5f62\u88ab\u524d\u9762\u6240\u7ed8\u5236\u7684\u591a\u8fb9\u5f62\u906e\u6321\u4e86\uff0c\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u50cf\u7d20\u7684\u989c\u8272\u503c\u4e0d\u6539\u53d8\u3002</p> </li> <li> <p>\u7279\u70b9</p> <p>(1) Z \u7f13\u51b2\u5668\u7b97\u6cd5\u662f\u6240\u6709\u56fe\u50cf\u7a7a\u95f4\u7b97\u6cd5\u4e2d\u6700\u7b80\u5355\u7684\u4e00\u79cd\u9690\u85cf\u9762\u6d88\u9664\u7b97\u6cd5\u3002\u5728\u50cf\u7d20\u7ea7\u4e0a\u4ee5\u8fd1\u7269\u53d6\u4ee3\u8fdc\u7269\uff0c\u4e0e\u5f62\u4f53\u5728\u5c4f\u5e55\u4e0a\u7684\u51fa\u73b0\u987a\u5e8f\u65e0\u5173\u3002</p> <p>(2) \u4f18\u70b9</p> <p>\u7b80\u5355\u7a33\u5b9a\uff0c\u5229\u4e8e\u786c\u4ef6\u5b9e\u73b0\u3001\u4e0d\u9700\u8981\u6574\u4e2a\u573a\u666f\u7684\u51e0\u4f55\u6570\u636e   (3) \u7f3a\u70b9</p> <p>\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684 Z \u7f13\u51b2\u5668\u3001\u6bcf\u4e2a\u591a\u8fb9\u5f62\u5360\u636e\u7684\u6bcf\u4e2a\u50cf\u7d20\u5904\u90fd\u8981\u8ba1\u7b97\u6df1\u5ea6\u503c\uff0c\u8ba1\u7b97\u91cf\u5927</p> </li> <li> <p>OpenGL\u76f8\u5173\u51fd\u6570</p> <pre><code>glClear( GL_DEPTH_BUFFER_BIT) //\u6df1\u5ea6\u7f13\u5b58\u521d\u59cb\u5316\n\uff081\uff09\u5728\u6bcf\u663e\u793a\u65b0\u7684\u4e00\u5e27\u524d\u6e05\u9664\n\uff082\uff09\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u503c\u4e3a1\n\uff083\uff09\u8bbe\u7f6e\u521d\u59cb\u503c\uff1aglClearDepth\uff08maxDepth\uff09\n\uff084\uff09OpenGL\u5141\u8bb8\u6bcf\u4e2a\u50cf\u7d20\u7684\u6df1\u5ea6\u8303\u56f4\u662f0..1\uff0c\u6700\u5927\u503c\u4e3a1\u4e3a\u6700\u8fdc\u70b9\uff0c\u524d\u9762\u7269\u4f53\u6df1\u5ea6\u503c\u5c0f\u3002\nglEnable(GL_DEPTH_TEST);//\u6fc0\u6d3b\u51fd\u6570(\u9ed8\u8ba4\u4e3a\u4e0d\u6fc0\u6d3b\uff09\n\u6df1\u5ea6\u6d4b\u8bd5\u6bd4\u8f83\uff1aglDepthFunc(mode)\uff0cmode\u53d6GL_LESS \u65f6\uff0c\u6df1\u5ea6\u503c\u5c0f\uff08\u8fd1\u5904\uff09\u7684\u663e\u793a\uff1b\u53d6GL_GREATER \u65f6\uff0c\u6df1\u5ea6\u503c\u5927\uff08\u8fdc\u5904\uff09\u7684\u663e\u793a\u3002\n</code></pre> </li> </ol> <p>\u7b80\u5355\u5149\u7167\u6a21\u578b</p> <ol> <li>\u5f15\u8a00</li> <li>\u5149\u4f5c\u7528\uff1a\u53cd\u5c04\u3001\u900f\u5c04\uff08\u900f\u660e\u7269\u4f53\uff09\u3001\u88ab\u7269\u4f53\u5438\u6536\u8f6c\u5316\u4e3a\u70ed\u80fd</li> <li>\u5047\u8bbe\uff1a\u7269\u4f53\u4e0d\u900f\u660e\uff0c\u5373\u6ca1\u6709\u900f\u5c04\u5149</li> <li> <p>\u5149\u79cd\u7c7b\uff1a\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u5149\u548c\u955c\u9762\u53cd\u5c04\u5149</p> </li> <li> <p>\u73af\u5883\u5149</p> </li> </ol> <p>\u5728\u7269\u4f53\u548c\u5468\u56f4\u73af\u5883\u4e4b\u95f4\u591a\u6b21\u53cd\u5c04\u540e\uff0c\u6700\u7ec8\u8fbe\u5230\u5e73\u8861\u65f6\u7684\u4e00\u79cd\u5149\uff0c\u53c8\u79f0\u4e3a\u80cc\u666f\u5149</p> <p>\u5149\u5f3a\uff08\u5ea6\uff09\uff1a\u7a7a\u95f4\u4e0a\u5206\u5e03\u5747\u5300\uff0c\u5373\u4efb\u4f55\u4f4d\u7f6e\u548c\u65b9\u5411\u5149\u5f3a\u5ea6\u4e00\u6837\uff0c\u4eae\u5ea6\u503c\u8bb0\u4e3aI_a</p> <p>\u53cd\u5c04\u7cfb\u6570\uff1a\u4e0e\u7269\u4f53\u8868\u9762\u6027\u8d28\u6709\u5173\uff0c\u51b3\u5b9a\u7269\u4f53\u8868\u9762\u5448\u73b0\u7684\u4eae\u5ea6\uff0c\u8bb0\u4e3aK_a</p> <p>\u5149\u7167\u6a21\u578b\u65b9\u7a0bI_e = K_\u03b1*I_\u03b1\uff0cI_e\u4e3a\u7269\u4f53\u8868\u9762\u5448\u73b0\u7684\u4eae\u5ea6\u3002</p> <p>(I_a\u53ef\u4ee5\u770b\u7740\u662f\u989c\u8272\u7684\u5206\u91cf\uff1bK_a \u4e3a\u5bf9\u5e94\u7684\u5206\u91cf\u53cd\u5c04\u7cfb\u6570\uff09</p> <ol> <li>\u6f2b\u53cd\u5c04</li> <li> <p>\u70b9\u5149\u6e90\uff1a\u5411\u5468\u56f4\u6240\u6709\u65b9\u5411\u53d1\u5c04\u7b49\u5f3a\u5ea6\u7684\u5149\u3002</p> </li> <li> <p>\u6f2b\u53cd\u5c04\u5149\u662f\u7531\u7269\u4f53\u8868\u9762\u7684\u7c97\u7cd9\u4e0d\u5e73\u5f15\u8d77\u7684\uff0c\u5b83\u5747\u5300\u5730\u5411\u5404\u4e2a\u65b9\u5411\u4f20\u64ad\uff0c\u4e0e\u89c6\u70b9\u4f4d\u7f6e\u65e0\u5173\u3002</p> </li> <li> <p>\u6f2b\u53cd\u5c04\u5149\u5728\u7a7a\u95f4\u5747\u5300\u5206\u5e03\uff0c\u53cd\u5c04\u5149\u5f3a I \u4e0e\u5165\u5c04\u5149\u7684\u5165\u5c04\u89d2\u03b8 \u7684\u4f59\u5f26\u6210\u6b63\u6bd4\uff0c\u5373\uff1aI_d=K_d*I_p*cos \\theta</p> <p>\u5176\u4e2d\uff0cKd \u662f\u6f2b\u53cd\u5c04\u7cfb\u6570\uff080\uff5e1\u4e4b\u95f4\u7684\u5e38\u6570\uff09\uff0c\u4e0e\u7269\u4f53\u8868\u9762\u6027\u8d28\u6709\u5173\uff1bIp \u662f\u5149\u6e90\u7684\u5149\u5f3a\uff1b\u03b8\u662f\u5165\u5c04\u5149\u7684\u5165\u5c04\u89d2\uff0c\u5373\u5165\u5c04\u5149\u4e0e\u7269\u4f53\u8868\u9762\u6cd5\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u3002</p> <p></p> </li> <li> <p>\u5411\u91cf\u8ba1\u7b97</p> <p>\u8bbe\u7269\u4f53\u8868\u9762\u5728\u7167\u5c04\u70b9 P \u5904\u7684\u5355\u4f4d\u6cd5\u5411\u91cf\u4e3aN\uff0cP \u5230\u70b9\u5149\u6e90\u7684\u5355\u4f4d\u5411\u91cf\u4e3aL\uff0c\u5219\u4e0a\u5f0f\u53ef\u8868\u8fbe\u4e3a\u5982\u4e0b\u7684\u5411\u91cf\u5f62\u5f0f\uff1aI_d=K_d*I_p*(N\\cdot L)</p> </li> <li> <p>\u591a\u4e2a\u5149\u6e90</p> <p>\u628a\u5404\u4e2a\u5149\u6e90\u7684\u6f2b\u53cd\u5c04\u5149\u7167\u6548\u679c\u8fdb\u884c\u53e0\u52a0\uff1aI_d=K_d*\\sum_{i=1}^mI_{pi}*(N \\cdot L_i)</p> </li> <li> <p>\u6f2b\u53cd\u5c04\u5149\u548c\u73af\u5883\u5149\u76f8\u7ed3\u5408</p> </li> </ol> <p>I=I_e+I_d=I_\u03b1 I_\u03b1+I_p I_d (L\u2219N)</p> <ol> <li> <p>\u955c\u9762\u53cd\u5c04\u5149\u548c\u51af\uff08Phong\uff09\u53cd\u5c04\u6a21\u578b</p> </li> <li> <p>\u9ad8\u5149\uff08high light\uff09\uff1a\u5149\u6ed1\u7269\u4f53\u8868\u9762\u5728\u70b9\u5149\u6e90\u7684\u7167\u5c04\u4e0b\u5f62\u6210\u4e00\u5757\u7279\u522b\u4eae\u7684\u533a\u57df</p> </li> <li> <p>\u955c\u9762\u53cd\u5c04\uff08Specular Reflection\uff09</p> <p>\u7269\u4f53\u8868\u9762\u5bf9\u5165\u5c04\u5149\u7684\u53cd\u5c04</p> <p>\u9075\u5faa\u53cd\u5c04\u5b9a\u5f8b</p> <p>\uff081\uff09\u53cd\u5c04\u5149\u4e0e\u5165\u5c04\u5149\u4f4d\u4e8e\u8868\u9762\u6cd5\u5411\u4e24\u4fa7</p> <p>\uff082\uff09\u7406\u60f3\u53cd\u5c04\u9762\u800c\u8a00\uff1a\u5165\u5c04\u89d2\uff1d\u53cd\u5c04\u89d2</p> <p>\u89c2\u5bdf\u8005\u5728\u53cd\u5c04\u65b9\u5411\u4e0a\u770b\u5230\u53cd\u5c04\u5149\u6700\u5f3a</p> </li> <li> <p>Phong\u6a21\u578b</p> <p>\u8ba1\u7b97\u516c\u5f0f\uff1aI_s=I_p K_s cos ^n \\alpha =I_P K_s (N \\cdot R) ^n</p> <p></p> <p>Ks\u662f\u7269\u4f53\u8868\u9762\u955c\u9762\u53cd\u5c04\u7cfb\u6570\uff0c\u5b83\u4e0e\u7269\u4f53\u5c5e\u6027\u6709\u5173\uff1b</p> <p>\u03b1 \u662f\u89c6\u7ebf\u4e0e\u53cd\u5c04\u65b9\u5411\u7684\u5939\u89d2\uff1b</p> <p>n \u4e3a\u955c\u9762\u9ad8\u5149\u7cfb\u6570\uff0c\u7528\u6765\u6a21\u62df\u955c\u9762\u53cd\u5c04\u5149\u5728\u7a7a\u95f4\u4e2d\u7684\u6c47\u805a\u7a0b\u5ea6\uff0c\u5b83\u662f\u4e00\u4e2a\u53cd\u6620\u7269\u4f53\u8868\u9762\u5149\u6cfd\u5ea6\u7684\u5e38\u6570\uff1b</p> <p>$cos^n \\alpha $\u8fd1\u4f3c\u5730\u63cf\u8ff0\u4e86\u955c\u9762\u53cd\u5c04\u5149\u7684\u7a7a\u95f4\u5206\u5e03\u3002</p> <p>n\u8d8a\u5927\uff0c\u9ad8\u5149\u533a\u57df\u8870\u51cf\u8d8a\u5feb\uff0c\u9ad8\u5149\u533a\u57df\u8d8a\u5c0f\uff0c\u5e38\u89c4\u53d6\u503c 5-20\u3002</p> </li> <li> <p>\u7b80\u5316Phong\u6a21\u578b</p> <p></p> </li> <li> <p>\u5c40\u90e8\u5149\u7167\u65b9\u7a0b</p> <p>I=I_{\\alpha}+I_d+I_s=K_{\\alpha}I_{\\alpha}+I_p[K_d(N \\cdot L)+K_s(H \\cdot N) ^n]</p> <p>\u5f53\u5149\u6e90\u548c\u89c6\u70b9\u65e0\u7a77\u8fdc\u65f6\uff0c\u5bf9\u8868\u9762\u4e0a\u4efb\u610f\u4e00\u70b9\u800c\u8a00\uff0cL\u548cV\u56fa\u5b9a\u4e0d\u53d8\uff0cH\u53ea\u9700\u8ba1\u7b97\u4e00\u6b21\u3002</p> </li> <li> <p>\u4ea7\u751f\u989c\u8272</p> </li> </ol> <p>\u524d\u9762\u7684\u5149\u7167\u6a21\u578b\u4ec5\u7528\u4e8e\u767d\u5149\uff0c\u53ea\u80fd\u4ea7\u751f\u7070\u5ea6</p> <p>\u5f69\u8272\u6a21\u578b\u8ba1\u7b97</p> <p>\u9009\u62e9\u5408\u9002\u6a21\u578b\uff08\u5982RGB\u3001HSV\u7b49\uff09\uff0c\u4e3a\u989c\u8272\u7684\u4e09\u4e2a\u5206\u91cf\u5206\u522b\u5efa\u7acb\u5149\u7167\u65b9\u7a0b\u3002</p> <p>RGB\u6a21\u578b</p> <p>\u5149\u6e90\u7684\u989c\u8272[I_{pR}, I_{pG}, I_{pB}]\uff0c\u73af\u5883\u5149\u7684\u989c\u8272[I_{aR}, I_{aG}, I_{aB}]</p> <p>\u8868\u9762\u53cd\u5c04\u7cfb\u6570</p> <p>\uff081\uff09\u73af\u5883\u53cd\u5c04\uff1a [KaR, KaG, KaB]</p> <p>\uff082\uff09\u6f2b\u53cd\u5c04\uff1a     [KdR, KdG, KdB]</p> <p>\uff083\uff09\u955c\u9762\u53cd\u5c04\uff1a [KsR, KsG, KsB]</p> <p>\u5f69\u8272\u5149\u7167\u65b9\u7a0b\uff08\u6a21\u578b\uff09 f(d)\u4e3a\u5149\u7684\u8870\u51cf</p> <p></p> <ol> <li>\u591a\u4e2a\u5149\u6e90</li> </ol> <p>\u5982\u679c\u573a\u666f\u4e2d\u6709m\u4e2a\u5149\u6e90\uff0c\u90a3\u4e48\u7269\u4f53\u4e0a\u4efb\u4e00\u70b9\u7684\u4eae\u5ea6\u5e94\u8be5\u4e3am\u4e2a\u5149\u6e90\u7684\u8d21\u732e\u4e4b\u548c\u3002</p> <p></p> <p>\u5728RGB\u5f69\u8272\u6a21\u578b\u4e2d\uff0c\u03bb\u5206\u522b\u4e3aR\u3001G\u548cB\u3002</p> <p>\u200b      \u6ce8\u610f\uff1aI\u03bb\u53ef\u80fd\u4f1a\u8d85\u51fa\u7cfb\u7edf\u5141\u8bb8\u7684\u6700\u5927\u4eae\u5ea6\u503c\uff0c\u5904\u7406\u65b9\u6cd5</p> <p>\u200b     \uff081\uff09\u622a\u53bb\u8d85\u51fa\u90e8\u5206\uff0c\u8bbe\u7f6e\u4e3a\u6700\u5927\u503c</p> <p>\u200b   \uff082\uff09\u9996\u5148\u8ba1\u7b97\u51fa\u6240\u6709\u4eae\u5ea6\u503c\uff0c\u518d\u8fdb\u884c\u53d8\u6362\uff08\u5982\u7f29\u653e\u53d8\u6362\uff09\u4f7f\u5176\u843d\u5728\u7cfb\u7edf\u89c4\u5b9a\u8303\u56f4\u4e4b\u5185</p> <ol> <li>OpenGL\u76f8\u5173\u51fd\u6570</li> </ol> <pre><code>void glLight{if}[v](GLenum light , GLenum pname, TYPE param); //\u521b\u5efa\u5149\u6e90\nvoid glMaterial{if}[v](GLenum face, GLenum pname, TYPE param); //\u8bbe\u7f6e\u6750\u8d28\nglEnable(GL_LIGHTING); //\u5f00\u542f\u5149\u6e90\nglEnable(GL_LIGHT0); //\u5f00\u542f\u5149\u6e90\n</code></pre> <p>\u591a\u8fb9\u5f62\u7ed8\u5236\u65b9\u6cd5</p> <ol> <li> <p>\u5f53\u7ed8\u5236\u591a\u8fb9\u5f62\u65f6\u5165\u5c04\u5149\u77e2\u91cf\u53ca\u53cd\u5c04\u5149\u4e0e\u89c6\u7ebf\u5939\u89d2\u4e0d\u540c\uff0c\u6240\u4ee5\u989c\u8272\u4e0d\u540c\u3002</p> </li> <li> <p>\u591a\u8fb9\u5f62\u5747\u5300\u7740\u8272</p> </li> <li> <p>\u65b9\u6cd5</p> <p>\u4efb\u53d6\u591a\u8fb9\u5f62\u4e0a\u4e00\u70b9\uff0c\u5229\u7528\u5149\u7167\u660e\u65b9\u7a0b\u8ba1\u7b97\u51fa\u5b83\u7684\u989c\u8272</p> <p>\u7528\u8fd9\u4e2a\u989c\u8272\u586b\u5145\u6574\u4e2a\u591a\u8fb9\u5f62</p> </li> <li> <p>\u9002\u5408\u4e8e\u5982\u4e0b\u60c5\u51b5</p> <p>\u5149\u6e90\u5728\u65e0\u7a77\u8fdc\u5904\uff0cL\u00b7N \u76f8\u7b49</p> <p>\u89c6\u70b9\u5728\u65e0\u7a77\u8fdc\u5904\uff0cH\u00b7N \u76f8\u7b49</p> <p>\u591a\u8fb9\u5f62\u662f\u7269\u4f53\u8868\u9762\u7684\u7cbe\u786e\u8868\u793a\uff08\u591a\u8fb9\u5f62\u9762\u79ef\u8db3\u591f\u5c0f\uff09</p> </li> <li> <p>\u7279\u70b9</p> <p>\u4f18\u70b9\uff1a\u6bcf\u4e2a\u591a\u8fb9\u5f62\u53ea\u9700\u8ba1\u7b97\u4e00\u6b21\u5149\u7167\u660e\u65b9\u7a0b\uff0c\u901f\u5ea6\u5feb</p> <p>\u7f3a\u70b9\uff1a\u76f8\u90bb\u591a\u8fb9\u5f62\u989c\u8272\u8fc7\u6e21\u4e0d\u5149\u6ed1</p> </li> </ol> <p></p> <ol> <li>Gouraud \u7740\u8272\u65b9\u6cd5\uff08\u989c\u8272\u63d2\u503c\u65b9\u6cd5\uff09</li> </ol> <p>\u4e3b\u8981\u6b65\u9aa4</p> <p>\uff081\uff09\u8ba1\u7b97\u591a\u8fb9\u5f62\u7684\u5355\u4f4d\u6cd5\u5411\u91cf</p> <p>\uff082\uff09\u8ba1\u7b97\u591a\u8fb9\u5f62\u9876\u70b9\u7684\u5355\u4f4d\u6cd5\u5411\u91cf\uff08\u5171\u4eab\u9876\u70b9\u7684\u591a\u8fb9\u5f62\u6cd5\u5411\u91cf\u7684\u5e73\u5747\u503c\uff09</p> <p>\uff083\uff09\u5229\u7528\u5149\u7167\u660e\u65b9\u7a0b\u8ba1\u7b97\u9876\u70b9\u989c\u8272</p> <p>\uff084\uff09\u5bf9\u591a\u8fb9\u5f62\u9876\u70b9\u989c\u8272\u8fdb\u884c\u53cc\u7ebf\u6027\u63d2\u503c\uff0c\u83b7\u5f97\u591a\u8fb9\u5f62\u5185\u90e8\u5404\u70b9\u7684\u989c\u8272    1. \u8ba1\u7b97\u591a\u8fb9\u5f62\u5355\u4f4d\u6cd5\u5411\u91cf</p> <pre><code>  &lt;img src=\"https://pic.tim-wcx.ltd//img/20211210151447.png\" alt=\"image-20211210151447383\" style=\"zoom:67%;\" /&gt;\n</code></pre> <ol> <li> <p>\u5185\u90e8\u70b9\u989c\u8272\u8ba1\u7b97\uff1a\u53cc\u7ebf\u6027\u63d2\u503c</p> <p></p> <ol> <li> <p>\u589e\u91cf\u6cd5\u4f18\u5316</p> <p></p> </li> </ol> </li> <li> <p>Phong \u7740\u8272\u65b9\u6cd5\uff08\u6cd5\u5411\u63d2\u503c\u7740\u8272\u65b9\u6cd5\uff09    \u65b9\u6cd5\uff1a\u901a\u8fc7\u5bf9\u591a\u8fb9\u5f62\u9876\u70b9\u6cd5\u5411\u91cf\u8fdb\u884c\u63d2\u503c\uff0c\u83b7\u5f97\u591a\u8fb9\u5f62\u5185    \u90e8\u5404\u70b9\u7684\u6cd5\u5411\u91cf\uff0c\u518d\u5229\u7528\u5149\u7167\u65b9\u7a0b\u8ba1\u7b97\u5404\u70b9\u7684\u4eae\u5ea6</p> </li> </ol> <p>\u4e3b\u8981\u6b65\u9aa4\uff1a</p> <p>\uff081\uff09\u8ba1\u7b97\u591a\u8fb9\u5f62\u5355\u4f4d\u6cd5\u5411\u91cf</p> <p>\uff082\uff09\u8ba1\u7b97\u591a\u8fb9\u5f62\u9876\u70b9\u5355\u4f4d\u6cd5\u5411\u91cf\uff08\u4ee5\u4e0a\u4e24\u6b65\u540cGouraud\u7740\u8272\u65b9\u6cd5\uff09</p> <p>\uff083\uff09\u5bf9\u591a\u8fb9\u5f62\u9876\u70b9\u6cd5\u5411\u91cf\u8fdb\u884c\u53cc\u7ebf\u6027\u63d2\u503c\uff0c\u83b7\u5f97\u5185\u90e8\u5404\u70b9\u7684\u6cd5\u5411\u91cf</p> <p>\uff084\uff09\u5229\u7528\u5149\u7167\u660e\u65b9\u7a0b\u8ba1\u7b97\u591a\u8fb9\u5f62\u5185\u90e8\u5404\u70b9\u989c\u8272</p> <p>Phong\u63d2\u503c\u4f18\u5316\u540c\u9ad8\u6d1b\u5fb7\uff0c\u53ea\u662f\u5c06\u989c\u8272\u63d2\u503c\u66ff\u6362\u4e3a\u5411\u91cf\u63d2\u503c\uff0c\u626b\u63cf\u7ebf\u4f18\u5316\u540c\uff0c\u5728\u6b64\u7701\u7565\uff0c</p> <ol> <li> <p>\u5747\u5300\u7740\u8272\u3001Gouraud \u548cPhong\u65b9\u6cd5\u6bd4\u8f83</p> <p>\uff081\uff09\u5747\u5300\u7740\u8272\uff08Flat\uff09\u5757\u72b6\u73b0\u8c61\u660e\u663e\uff0c\u8ba1\u7b97\u5f00\u9500\u5c0f</p> <p>\uff082\uff09 Gouraud\u65b9\u6cd5\u5149\u53d8\u5316\u8fc7\u6e21\u4e0d\u8fde\u7eed\uff0c\u8ba1\u7b97\u5f00\u9500\u8f83\u5927</p> <p>\uff083\uff09Phong\u65b9\u6cd5\u5149\u53d8\u5316\u8fc7\u6e21\u8fde\u7eed\uff0c\u8ba1\u7b97\u5f00\u9500\u5927</p> </li> </ol> <p>\u7eb9\u7406\u6620\u5c04</p> <ol> <li>\u5f15\u8a00</li> </ol> <p>\u5149\u7167\u6a21\u578b\u53ea\u80fd\u751f\u6210\u5149\u6ed1\u7684\u7269\u4f53\u8868\u9762</p> <p>\u81ea\u7136\u754c\u4e2d\u7684\u7269\u4f53\u8868\u9762\u5177\u6709\u4e30\u5bcc\u7684\u7ec6\u8282\uff0c\u5982\u6728\u7eb9\u3001\u6854\u5b50\u51f9\u51f8\u8868\u9762\u3001\u6c99\u783e\u8def\u9762</p> <p>\u4e30\u5bcc\u7684\u8868\u9762\u7ec6\u8282\u96be\u4ee5\u7528\u8ba1\u7b97\u673a\u56fe\u5f62\u65b9\u6cd5\u751f\u6210</p> <p>\u91c7\u7528\u5c06\u56fe\u7247\u8d34\u5230\u7269\u4f53\u8868\u9762\u4e0a\u7684\u65b9\u6cd5\u7ed8\u5236</p> <ol> <li>\u4ec0\u4e48\u662f\u7eb9\u7406\uff1f</li> </ol> <p>\u662f\u7269\u4f53\u8868\u9762\u7684\u7ec6\u5c0f\u7ed3\u6784\uff0c\u5b83\u53ef\u4ee5\u662f\u5149\u6ed1\u8868\u9762\u7684\u82b1\u7eb9\u3001\u56fe\u6848\uff0c\u5373\u989c\u8272\u7eb9\u7406(2D)\u3002</p> <p>\u7eb9\u7406\u4e5f\u53ef\u4ee5\u662f\u7269\u4f53\u8868\u9762\u7684\u4e09\u7ef4\u7ed3\u6784</p> <p>\u7eb9\u7406\u8fd8\u53ef\u4ee5\u662f\u7c97\u7cd9\u7684\u8868\u9762(\u5982\u6854\u5b50\u8868\u9762\u7684\u76b1\u7eb9)\uff0c\u79f0\u4e3a\u51e0\u4f55\u7eb9\u7406\uff0c\u662f\u57fa\u4e8e\u7269\u4f53\u8868\u9762\u7684\u5fae\u89c2\u51e0\u4f55\u5f62\u72b6\u7684\u8868\u9762\u7eb9\u7406\u3002</p> <ol> <li>\u7eb9\u7406\u7a7a\u95f4\uff1a\u7eb9\u7406\u56fe\u6848\u6240\u5728\u7a7a\u95f4\uff0c\u8bb0\u4e3ast\u5750\u6807\u7cfb\uff08\u4e00\u822c\u662f\u5e73\u9762\uff09</li> </ol> <p>\u7eb9\u7d20\uff08texel\uff09\uff1a\u7eb9\u7406\u6700\u5c0f\u5355\u5143\uff0c\u4f4d\u7f6e\u7531\u7eb9\u7406\u5750\u6807\uff08s\uff0ct\uff09\u6807\u8bc6</p> <p>\u7eb9\u7406\u5750\u6807s\uff0ct\uff1a0\u52301\u95f4\u53d6\u503c</p> <p>\u56fe\u50cf\u50cf\u7d20\u5750\u6807\u89c4\u8303\u5316\u5230[0\u20261]\u533a\u95f4\u3002\u89c4\u8303\u5316\u540e\u65b9\u4fbf\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u3002</p> <ol> <li>\u7eb9\u7406\u6765\u6e90</li> </ol> <p>\u6570\u5b57\u56fe\u50cf\uff0c\u7528\u4e8c\u7ef4\u6570\u7ec4\u8868\u793a</p> <p>\u6570\u5b66\u516c\u5f0f\u5b9a\u4e49\u7eb9\u7406</p> <p></p> <ol> <li> <p>\u7eb9\u7406\u6620\u5c04\uff08Texture Mapping\uff09</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5c06\u7eb9\u7406\u56fe\u6848\u6620\u5c04\u5230\u7269\u4f53\u8868\u9762\u4e0a\uff0c\u4ea7\u751f\u7269\u4f53\u8868\u9762\u7ec6\u8282\u7684\u8fc7\u7a0b</p> </li> <li> <p>\u989c\u8272\u8ba1\u7b97\u65b9\u6cd5</p> <p>(1) \u7528\u8868\u9762\u4e0a\u70b9\u5bf9\u5e94\u7684\u7eb9\u7d20\u503c\u4ee3\u66ff\u8be5\u70b9\u7684\u6f2b\u53cd\u5c04\u7cfb\u6570</p> <p>(2) \u7528\u8868\u9762\u4e0a\u70b9\u5bf9\u5e94\u7684\u7eb9\u7d20\u503c\u4ee3\u66ff\u8be5\u70b9\u7684\u989c\u8272\u503c</p> </li> <li> <p>\u7eb9\u7406\u5750\u6807\uff1a\u786e\u5b9a\u7eb9\u7406\u4e0e\u7269\u4f53\u8868\u9762\u7684\u5bf9\u5e94\u5173\u7cfb\uff08\u7eb9\u7d20\u4e0e\u9876\u70b9\uff09\uff0c\u53d8\u5316\u8303\u56f4[0,1]\u3002\u591a\u8fb9\u5f62\u6bcf\u4e2a\u9876\u70b9\u5bf9\u5e94\u4e00\u4e2a\u7eb9\u7d20\uff0c\u5185\u90e8\u70b9\u63d2\u503c\u8ba1\u7b97\u5bf9\u5e94\u7eb9\u7d20\u3002</p> </li> <li> <p>\u5706\u67f1\u66f2\u9762\u7eb9\u7406\u6620\u5c04</p> <p>P(\\theta,y)=(r cos \\theta,r sin \\theta),-\\frac{h}{2}\\leq y \\leq \\frac{h}{2}</p> <p>\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807\uff1as=\\frac{\\theta}{360},t=\\frac{y+\\frac{h}{2}}{h}</p> </li> <li> <p>\u7403\u9762\u66f2\u9762\u7eb9\u7406\u6620\u5c04</p> <p>p(\\theta,\\phi)=(rcos\\theta cos\\phi,rsin \\phi,rsin\\theta cos\\phi)</p> <p>\u03b8\u548c\u03c6\u53d8\u5316\u8303\u56f4\u5206\u522b[0,360]\u548c[-90,90]</p> <p>\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807\uff1as=\\frac{\\theta }{360},t=\\frac{\\phi}{180}+\\frac{1}{2}</p> <p>s=\\frac{\\theta }{360},t=\\frac{sin \\phi }{2}+\\frac{1}{2}</p> </li> <li> <p>\u5706\u73af\u9762</p> <p></p> </li> <li> <p>OpenGL\u51fd\u6570</p> </li> <li> <p>\u7b80\u4ecb</p> <p>\u7eb9\u7406\u6620\u5c04\u662f\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u6700\u57fa\u672c\u7684\u6267\u884c\u7eb9\u7406\u6620\u5c04\u6240\u9700\u7684\u6b65\u9aa4\u3002\u57fa\u672c\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <p>\uff081\uff09\u5b9a\u4e49\u7eb9\u7406\uff1b\u7ed9\u7eb9\u7406\u6570\u636e</p> <p>\uff082\uff09\u63a7\u5236\u6ee4\u6ce2\uff1b\u91cd\u91c7\u6837\u65b9\u5f0f</p> <p>\uff083\uff09\u8bf4\u660e\u6620\u5c04\u65b9\u5f0f\uff1b</p> <p>\uff084\uff09\u6fc0\u6d3b\u7eb9\u7406\uff1b</p> <p>\uff085\uff09\u7ed8\u5236\u56fe\u5f62\u65f6\u9700\u8fdb\u884c\u7eb9\u7406\u6620\u5c04\uff0c\u5373\u7ed9\u51fa\u9876\u70b9\u7684\u7eb9\u7406\u5750\u6807\u548c\u51e0\u4f55\u5750\u6807\u3002</p> <p>\u200b          \u6ce8\u610f\uff1a\u7eb9\u7406\u6620\u5c04\u53ea\u80fd\u5728RGBA\u65b9\u5f0f\u4e0b\u6267\u884c\uff0c\u4e0d\u80fd\u8fd0\u7528\u4e8e\u989c\u8272\u8868\u65b9\u5f0f\u3002 </p> </li> </ol> <pre><code>(1)\u5b9a\u4e49\u7eb9\u7406\nglGenTextures(1, &amp;uiTexture);// GLuint uiTexture\nvoid glTexImage2D(GLenum target, GLint level, Glint components, GLsizei width,  glsizei height, GLint border,\nGLenum format, GLenum type,  const GLvoid *pixels);\n(2)\u7ed1\u5b9a\u56fe\u7247\ngluBuild2DMipmaps (GLenum target, Glint components, GLsizei width,  glsizei height, GLenum format, GLenum type,  const GLvoid *pixels);\n(3)\u63a7\u5236\u6ee4\u6ce2\nvoid glTexParameter{if}[v](GLenum target, GLenum pname, TYPE param); (4)\u8bbe\u7f6e\u7eb9\u7406\u6620\u5c04\u65b9\u5f0f\nvoid glTexEnv{if}[v](GLenum target, GLenum pname,TYPE param);\n(5)\u6fc0\u6d3b\u7eb9\u7406\nglEnable(GL_TEXTURE_2D);\n(6)\u5b9a\u4e49\u7eb9\u7406\u5750\u6807\nvoid glTexCoord{1234}{sifd}[v](TYPE coords); \u6ce8\u610f\uff1a\u4f7f\u7528\u591a\u4e2a\u7eb9\u7406\u65f6\uff0c\u9700\u8981\u5728\u5b9a\u4e49\u70b9\u7eb9\u7406\u5750\u6807\u4e4b\u524d\uff0c\u6307\u5b9a\u6240\u7528\u7eb9\u7406\u3002glBindTexture(GL_TEXTURE_2D, id);\n</code></pre> <p>\u9634\u5f71</p> <ol> <li>\u9634\u5f71\uff08Shadow\uff09</li> </ol> <p>\u5149\u6e90\u4e0d\u80fd\u76f4\u63a5\u7167\u5c04\u5230\u7684\u533a\u57df</p> <p>\u7279\u70b9</p> <p>\u4f4d\u4e8e\u9634\u5f71\u533a\u57df\u4e2d\u7684\u7269\u4f53\u8868\u9762\u88ab\u4f4d\u4e8e\u5b83\u548c\u5149\u6e90\u95f4\u7684\u7269\u4f53\u6240\u906e\u6321</p> <p>\u5bf9\u5149\u6e90\u800c\u8a00\uff0c\u4f4d\u4e8e\u9634\u5f71\u4e2d\u7684\u7269\u4f53\u8868\u9762\u5373\u662f\u4e0d\u53ef\u89c1\u9762</p> <p>\u751f\u6210\u7b97\u6cd5\uff1a\u4e0e\u6d88\u9690\u7b97\u6cd5\u672c\u8d28\u4e0a\u4e00\u81f4</p> <ol> <li>\u5177\u6709\u9634\u5f71\u6548\u679c\u7684\u5149\u7167\u6a21\u578b</li> </ol> <p>\u5149\u6e90\u5bf9\u4f4d\u4e8e\u9634\u5f71\u4e2d\u7684\u70b9\u7684\u4eae\u5ea6\uff08\u989c\u8272\uff09\u6ca1\u6709\u8d21\u732e</p> <p>\uff081\uff09\u591a\u5149\u6e90\uff082\uff09\u989c\u8272\u5206\u91cf</p> <p></p> <ol> <li>Z\u7f13\u51b2\u5668\u9634\u5f71\u7b97\u6cd5      \u6b65\u9aa4</li> </ol> <p>\uff081\uff09\u5c06\u56fe\u5f62\u53d8\u6362\u5230\u4ee5\u5149\u6e90\u4e3a\u539f\u70b9\u7684\u5750\u6807\u7cfb\uff0c\u5229\u7528Z\u7f13\u51b2\u5668\u6d88\u9690\u7b97\u6cd5\uff0c\u6309\u5149\u7ebf\u65b9\u5411\u5bf9\u56fe\u5f62\u6d88\u9690\uff0c\u628a\u8ddd\u5149\u6e90\u6700\u8fd1\u7684\u7269\u4f53\u8868\u9762\u4e0a\u70b9\u7684\u6df1\u5ea6\u503c\u4fdd\u5b58\u5728Z\u7f13\u51b2\u5668\u4e2d\uff08\u79f0\u4e3a\u9634\u5f71\u7f13\u51b2\u5668\uff09</p> <p>\uff082\uff09\u5229\u7528Z\u7f13\u51b2\u5668\u6d88\u9690\u7b97\u6cd5\u6309\u89c6\u7ebf\u65b9\u5411\u5bf9\u56fe\u5f62\u6d88\u9690\uff0c\u5c06\u5f97\u5230\u7684\u6bcf\u4e2a\u53ef\u89c1\u70b9\u53d8\u6362\u5230\u7b2c i \u4e2a\u5149\u6e90\u7684\u5750\u6807\u7cfb\u4e2d\uff0c\u82e5\u5b83\u5728\u5149\u6e90\u5750\u6807\u7cfb\u4e2d\u7684\u6df1\u5ea6\u503c\u5c0f\u4e8e\u9634\u5f71\u7f13\u51b2\u5668\u4e2d\u76f8\u5e94\u5355\u5143\u7684\u503c\uff0c\u5219\u8be5\u53ef\u89c1\u70b9\u4f4d\u4e8e\u9634\u5f71\u4e2d\uff08Si\uff1d0\uff09\uff0c\u5426\u5219\uff08 Si \uff1d1\uff09\uff0c\u518d\u7528\u5149\u7167\u6a21\u578b\u8ba1\u7b97\u989c\u8272\u3002</p> <p>\u7279\u70b9\uff1a\u7b97\u6cd5\u7b80\u5355\uff0c\u8ba1\u7b97\u91cf\u5c0f\uff0c\u80fd\u5904\u7406\u590d\u6742\u666f\u7269\uff1b</p> <p>\u7f3a\u70b9\u662f\u6bcf\u4e2a\u5149\u6e90\u9700\u89811\u4e2aZ\u7f13\u51b2\u5668\uff0c\u9700\u8981\u7684\u5b58\u50a8\u7a7a\u95f4\u5927</p> <p>\u63d0\u9ad8\u6d88\u9690\u7b97\u6cd5\u6548\u7387\u7684\u5e38\u7528\u65b9\u6cd5\uff1a\u8fde\u8d2f\u6027\u3001\u5305\u56f4\u76d2\u6280\u672f\u3001\u80cc\u9762\u5254\u9664\u3001\u533a\u57df\u5206\u5272\u6280\u672f\u3001\u7269\u4f53\u5206\u5c42\u8868\u793a\u7b49\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/#_9","title":"\u7b2c\u4e5d\u7ae0  \u66f2\u7ebf\u4e0e\u66f2\u9762","text":"<p>\u53c2\u6570\u66f2\u7ebf\u57fa\u7840</p> <ol> <li>\u66f2\u7ebf\u7684\u8868\u793a\u5f62\u5f0f</li> </ol> <p>\u4e3b\u8981\u6709\uff1a\u975e\u53c2\u6570\u8868\u793a\u548c\u53c2\u6570\u8868\u793a</p> <ol> <li> <p>\u975e\u53c2\u6570\u8868\u793a</p> <p>\uff081\uff09\u663e\u5f0f\u8868\u793a</p> <p>\u5750\u6807\u95f4\u5efa\u7acb\u51fd\u6570\u5173\u7cfb</p> <p>\u4e0d\u80fd\u5efa\u7acb\u591a\u503c\u66f2\u7ebf</p> <p>y=f(x),z=g(x)</p> <p>\uff082\uff09\u9690\u5f0f\u8868\u793a</p> <p>\u770b\u505a\u662f\u4e24\u66f2\u9762\u7684\u4ea4</p> <p>\u53ef\u4ee5\u5efa\u7acb\u591a\u503c\u66f2\u7ebf</p> <p>\u5750\u6807\u8ba1\u7b97\u76f8\u5bf9\u8f83\u590d\u6742</p> <p>x^2+y^2=9,z=0</p> <p>f(x,y,z)=0,g(x,y,z)=0</p> </li> <li> <p>\u53c2\u6570\u8868\u793a</p> <p>\u53c2\u6570\u65b9\u7a0b\uff1ax=x(t),y=y(t),z=z(t),t \\in [a,b]</p> <p></p> </li> <li> <p>\u53c2\u6570\u8868\u793a\u7684\u4f18\u70b9</p> <p>\u5bb9\u6613\u786e\u5b9a\u66f2\u7ebf\u8fb9\u754c\u3002\u7531\u53c2\u6570\u533a\u95f4\u786e\u5b9a</p> <p>\u8868\u793a\u5f62\u5f0f\u4e0d\u53d8\u6027\u3002\u4e0d\u4f9d\u8d56\u4e8e\u5750\u6807\u7cfb\u7684\u9009\u53d6</p> <p>\u8868\u793a\u80fd\u529b\u5f3a\u3002\u5229\u4e8e\u63a7\u5236\u70b9\u6765\u63a7\u5236\u66f2\u7ebf\u5f62\u72b6\uff0c\u5982\u540e\u9762\u5c06\u8981\u5b66\u5230\u7684Bezier\u66f2\u7ebf</p> </li> <li> <p>\u53c2\u6570\u8868\u793a\u7684\u4f18\u70b9</p> <p>\u5bb9\u6613\u786e\u5b9a\u66f2\u7ebf\u8fb9\u754c\u3002\u7531\u53c2\u6570\u533a\u95f4\u786e\u5b9a</p> <p>\u8868\u793a\u5f62\u5f0f\u4e0d\u53d8\u6027\u3002\u4e0d\u4f9d\u8d56\u4e8e\u5750\u6807\u7cfb\u7684\u9009\u53d6</p> <p>\u8868\u793a\u80fd\u529b\u5f3a\u3002\u5229\u4e8e\u63a7\u5236\u70b9\u6765\u63a7\u5236\u66f2\u7ebf\u5f62\u72b6\uff0c\u5982\u540e\u9762\u5c06\u8981\u5b66\u5230\u7684Bezier\u66f2\u7ebf</p> </li> </ol> <p>\u5207\u77e2\u91cf\u3001\u6cd5\u77e2\u91cf\u3001\u66f2\u7387</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>\u53c2\u6570\u8fde\u7eed\u6027 \u4f20\u7edf\u7684\u3001\u4e25\u683c\u7684\u8fde\u7eed\u6027 \u66f2\u7ebf P = P(t) \u5728  t\uff1dt0   \u5904n\u9636\u53c2\u6570\u8fde\u7eed\uff0c\u5982\u679c\u5b83\u5728 t0 \u5904n\u9636\u5de6\u53f3\u5bfc\u6570\u5b58\u5728\uff0c\u5e76\u4e14\u6ee1\u8db3</p> <p></p> <p>\u8bb0\u4e3aCn\uff08\u66f2\u7ebfn\u9636\u53c2\u6570\u8fde\u7eed\uff09</p> <p>\u51e0\u4f55\u8fde\u7eed\u6027\u3001</p> <ol> <li>0\u9636\u51e0\u4f55\u8fde\u7eed    \u79f0\u66f2\u7ebfP=P( t ) \u5728 t=t0 \u59040\u9636\u51e0\u4f55\u8fde\u7eed\uff0c\u5982\u679c\u5b83\u5728 t0 \u5904\u4f4d\u7f6e\u8fde\u7eed\uff0c\u5373</li> </ol> <p></p> <p>\u8bb0\u4e3a\uff1aGC0</p> <ol> <li>1\u9636\u51e0\u4f55\u8fde\u7eed    \u79f0\u66f2\u7ebf P=P(t) \u5728 t = t0 \u59041\u9636\u51e0\u4f55\u8fde\u7eed\uff0c\u5982\u679c\u5b83\u5728 t0\u5904 GC0 \uff0c\u5e76\u4e14\u5207\u77e2\u91cf\u65b9\u5411\u8fde\u7eed\uff0c\u5373</li> </ol> <p></p> <p>\u8bb0\u4e3a\uff1a GC1</p> <p>\u53c2\u6570\u591a\u9879\u5f0f\u66f2\u7ebf</p> <ol> <li>n\u6b21\u591a\u9879\u5f0f\u66f2\u7ebf</li> </ol> <p></p> <ol> <li>\u77e9\u9635\u8868\u793a</li> </ol> <p></p> <ol> <li>\u52a0\u6743\u548c\u5f62\u5f0f</li> </ol> <p></p> <ol> <li>\u7f3a\u70b9</li> </ol> <p>Pi  \u6ca1\u6709\u660e\u663e\u7684\u51e0\u4f55\u610f\u4e49\u3002Pi  \u4e0e\u66f2\u7ebf\u7684\u5173\u7cfb\u4e0d\u660e\u786e\uff0c\u5bfc\u81f4\u66f2\u7ebf\u7684\u5f62\u72b6\u63a7\u5236\u56f0\u96be</p> <ol> <li>\u57fa\u77e9\u9635\u8868\u793a</li> </ol> <p>\u77e9\u9635\u5206\u89e3</p> <p>C=G \\cdot M</p> <p>P(t)=G \\cdot M \\cdot T, t \\in [0,1]</p> <p>\u51e0\u4f55\u77e9\u9635</p> <pre><code>$G = [G_0.G_1 \u2026 G_n]$ \u63a7\u5236\u9876\u70b9 Gi\n</code></pre> <p>\u57fa\u77e9\u9635M\uff1aMT \u786e\u5b9a\u4e86\u4e00\u7ec4\u57fa\u51fd\u6570</p> <p>\u57fa\u77e9\u9635\u51b3\u5b9a\u4e86\u591a\u9879\u5f0f\u66f2\u7ebf\u7684\u6027\u8d28</p> <ol> <li>\u7ed8\u5236\u65b9\u6cd5</li> </ol> <p></p> <p></p> <p>Bezier\u57fa\u51fd\u6570</p> <ol> <li>\u5b9a\u4e49</li> </ol> <p></p> <ol> <li>\u6027\u8d28</li> <li> <p>\u6b63\u6027\uff1aBEZ_{i,n}(t) \\geq 0 ,t \\in [0,1]</p> </li> <li> <p>\u6743\u6027\uff1a\\sum _{i=0}^n BEZ_{i,n}(t)=1,t \\in [0,1 ]</p> </li> <li> <p>\u5bf9\u79f0\u6027\uff1a</p> <p></p> </li> <li> <p>\u964d\u9636\u516c\u5f0f\uff1a</p> <p></p> </li> <li> <p>\u5347\u9636\u516c\u5f0f</p> <p></p> <p></p> </li> </ol> <p>BEZier\u66f2\u7ebf</p> <ol> <li>\u5b9a\u4e49</li> </ol> <p>\u5982\u4e0b\u5f62\u5f0f\u7684 n \u6b21\u591a\u9879\u5f0f\u79f0\u4e3a n \u6b21 Bezier\u66f2\u7ebf\uff1a</p> <p></p> <p>\u63a7\u5236\u9876\u70b9\uff1aPi\uff08i\uff1d0\uff0c1\uff0c\u2026 \uff0c n\uff09</p> <p>\u63a7\u5236\u591a\u8fb9\u5f62\uff1a P0P1 \u2026 Pn\uff0c\u66f2\u7ebf\u662f\u63a7\u5236\u9876\u70b9\u7684\u52a0\u6743\u548c \uff08\u6743\u662f\u57fa\u51fd\u6570\u7684\u503c\uff09</p> <ol> <li> <p>\u6027\u8d28</p> </li> <li> <p>\u7aef\u70b9\u6027\u8d28</p> <p></p> </li> <li> <p>\u7aef\u70b9\u5207\u77e2\u91cf</p> <p></p> </li> <li> <p>\u5bfc\u6570\u66f2\u7ebf</p> <p></p> </li> <li> <p>n\u6b21Bezier\u66f2\u7ebf P(t) \u7684\u5bfc\u6570\u66f2\u7ebf P\u2019(t) \u662f n\uff0d1\u6b21Bezier\u66f2\u7ebf</p> </li> <li> <p>\u4eff\u5c04\u4e0d\u53d8\u6027</p> <p>\u51e0\u4f55\u6027\u8d28\u4e0d\u968f\u5750\u6807\u51e0\u4f55\u53d8\u6362\u800c\u53d8\u6362\uff08\u5f62\u72b6\u3001\u66f2\u7387\u7b49\uff09\u4eff\u5c04\u53d8\u6362\u4e0d\u6539\u53d8\u66f2\u7ebf\u7684\u8868\u793a\u5f62\u5f0f\u3002</p> <p>\u5bf9Bezier\u66f2\u7ebf\u7684\u51e0\u4f55\u53d8\u6362\u53ea\u8981\u4f5c\u7528\u4e8e\u63a7\u5236\u9876\u70b9\u5373\u53ef\u3002</p> <p></p> </li> <li> <p>\u51f8\u5305\u6027</p> <p>\u51f8\u96c6\uff1a {Pi}\u7684\u51f8\u96c6\u662f\u6307\u5305\u542b\u8fd9\u4e9b\u70b9\u7684\u51f8\u591a\u8fb9\u5f62</p> <p>\u51f8\u5305\uff1a {Pi}\u7684\u51f8\u5305\u662f\u6307\u5305\u542b\u8fd9\u4e9b\u70b9\u7684\u6700\u5c0f\u51f8\u96c6</p> <p>Bezier\u66f2\u7ebf\u4f4d\u4e8e\u5176\u63a7\u5236\u9876\u70b9\u7684\u51f8\u5305\u4e4b\u5185</p> </li> <li> <p>\u5e73\u9762\u66f2\u7ebf\u7684\u4fdd\u578b\u6027</p> <p>\u4fdd\u51f8\u6027\uff1a\u5982\u679c\u591a\u8fb9\u5f62\u662f\u51f8\u7684\uff0c\u90a3\u4e48Bezier\u66f2\u7ebf\u4e5f\u662f\u51f8\u7684</p> <p>\u53d8\u5dee\u7f29\u51cf\u6027\uff1a\u5e73\u9762\u5185\u4efb\u4e00\u76f4\u7ebf\u4e0eBezier\u66f2\u7ebf\u7684\u4ea4\u70b9\u4e2a\u6570\u4e0d\u591a\u4e8e\u8be5\u76f4\u7ebf\u4e0e\u63a7\u5236\u591a\u8fb9\u5f62\u7684\u4ea4\u70b9\u4e2a\u6570\u3002\u8bf4\u660eBezier\u66f2\u7ebf\u6bd4\u63a7\u5236\u591a\u8fb9\u5f62\u7684\u6ce2\u52a8\u5c0f\uff0c\u66f4\u5149\u987a</p> </li> <li> <p>\u62df\u5c40\u90e8\u6027       \u5c40\u90e8\u6027\u6307\u79fb\u52a8\u63a7\u4e00\u4e2a\u5236\u9876\u70b9\u65f6\uff0c\u53ea\u5f71\u54cd\u66f2\u7ebf\u7684\u5c40\u90e8\u3002</p> </li> <li> <p>\u79fb\u52a8\u63a7\u5236\u9876\u70b9Pi \u65f6\uff0c\u5bf9\u5e94\u53c2\u6570 t\uff1di /n \u7684\u66f2\u7ebf\u4e0a\u7684\u70b9\u53d8\u52a8\u6700\u5927\uff0c\u8fdc\u79bb i/n \u7684\u66f2\u7ebf\u4e0a\u7684\u70b9\u53d8\u52a8\u8d8a\u6765\u8d8a\u5c0f</p> </li> <li> <p>\u4e00\u6b21Bezier\u66f2\u7ebf</p> </li> </ol> <p>n = 1\u65f6\uff0c\u6709\u4e24\u4e2a\u63a7\u5236\u70b9 P0 \u548c P1 \uff0cBezier\u591a\u9879\u5f0f\u662f\u4e00\u6b21\u591a\u9879\u5f0f\uff1a</p> <p></p> <p>\u4e00\u6b21Bezier\u66f2\u7ebf\u662f\u8fde\u63a5\u8d77\u70b9P0\u548c\u7ec8\u70b9P1\u7684\u76f4\u7ebf\u6bb5</p> <ol> <li>\u4e8c\u6b21Bezier\u66f2\u7ebf</li> </ol> <p>n=2\u65f6\uff0c\u67093\u4e2a\u63a7\u5236\u70b9P0\u3001P1\u548cP2\uff0cBezier\u591a\u9879\u5f0f\u662f\u4e8c\u6b21\u591a\u9879\u5f0f\uff1a</p> <p></p> <p></p> <ol> <li>\u4e09\u6b21Bezier\u66f2\u7ebf</li> </ol> <p></p> <p>\u4e09\u6b21Hermite(\u5384\u5bc6\u591a)\u66f2\u7ebf</p> <ol> <li>\u7ed9\u5b9a4\u4e2a\u77e2\u91cfP0, P1, R0, R1 \uff0c\u79f0\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u7684\u4e09\u6b21\u591a\u9879\u5f0f\u66f2\u7ebf P(t) \u4e3aHermite \u66f2\u7ebf</li> </ol> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Bezier\u66f2\u7ebf\u7684\u79bb\u6563\u751f\u6210\u7b97\u6cd5</p> <ol> <li>Horner\u7b97\u6cd5</li> </ol> <p>\u53ea\u9002\u5b9c\u4f4e\u6b21Bezier\u66f2\u7ebf\uff08\u5982\u4e09\u6b21Bezier\u66f2\u7ebf\uff09</p> <ol> <li>de  Casteljau(\u5fb7 \u00b7 \u5361\u65af\u7279\u91cc\u5965)\u7b97\u6cd5</li> </ol> <p></p> <p>\u53ef\u7528Bezier\u964d\u9636\u516c\u5f0f\u8bc1\u660e</p> <p></p> <p></p> <p></p> <p></p> <p>Bezier\u66f2\u9762</p> <p>\u5b9a\u4e49\uff1a\u5229\u7528\u4e24\u7ec4\u6b63\u4ea4\u7684 Bezier \u66f2\u7ebf\u903c\u8fd1\u7531\u63a7\u5236\u70b9\u7f51\u683c\u63cf\u8ff0\u7684\u66f2\u9762</p> <p></p> <p>\u5176\u4e2d pj, k \u662f\u7ed9\u5b9a\u7684 (m+1)\u00d7(n+1) \u4e2a\u63a7\u5236\u70b9\u7684\u4f4d\u7f6e</p> <p>Bezier \u66f2\u9762\u4e0e Bezier \u66f2\u7ebf\u6709\u76f8\u540c\u7684\u6027\u8d28</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/","title":"\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf\u590d\u4e60","text":""},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_2","title":"\u7b2c\u96f6\u7ae0 \u7eea\u8bba","text":"<ol> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u79cd\u89c4\u6a21\u8f83\u5927\u3001\u590d\u6742\u6027\u9ad8\u7684\u7cfb\u7edf\u8f6f\u4ef6\u3002</p> </li> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u505a\u4ec0\u4e48\uff1f</p> </li> <li> <p>\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u63d0\u4f9b\u5e73\u53f0 2. \u4e3a\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u63d0\u4f9b\u652f\u6301\uff1a\u63d0\u4f9b\u3001\u8d44\u6e90\u7ba1\u7406\u3001\u9a71\u52a8\u786c\u63a5\u53e3\u4ef6\u3002</p> </li> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u539f\u7406/OS\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u539f\u7406\uff1f</p> </li> </ol> <p>\u529f\u80fd\u3001\u4e0e\u786c\u4ef6\u7684\u63a5\u53e3\u3001\u7b97\u6cd5\u3001\u6570\u636e\u7ed3\u6784\u3001\u7b56\u7565\u3002</p> <ol> <li>\u64cd\u4f5c\u7cfb\u7edf \u662f\u5982\u4f55\u88ab\u88c5\u5165\u5185\u5b58\u5e76\u5f00\u59cb\u8fd0\u884c\u7684\uff1f</li> </ol> <p>BOOT-&gt;LOADER-&gt;KERNEL</p> <ol> <li>\u5f53\u4f60\u70b9\u51fbword\u7684\u201c\u5b58\u76d8\u201d\u65f6\uff0c\u4f60\u7684\u6570\u636e\u662f\u5982\u4f55\u7531\u5185\u5b58\u4f20\u5165\u78c1\u76d8\uff1f\u4e3a\u4ec0\u4e48\u4f60\u7ed9\u51fa\u8def\u5f84\u548c\u6587\u4ef6\u540d\u5c31\u53ef\u4ee5\u5f97\u5230\u4f60\u9700\u8981\u7684\u6587\u4ef6\u5185\u5bb9\uff1f</li> </ol> <p>\u6253\u5f00\u4e00\u4e2aword\u6587\u6863\u662f\u6307\u628a\u8be5\u6587\u6863\u4ece\u78c1\u76d8\u8c03\u5165\u5230\u5185\u5b58\u5e76\u663e\u793a\uff0c\u6587\u4ef6\u7cfb\u7edf\u3002</p> <ol> <li>\u4f60\u684c\u9762\u4e0a\u7684\u65f6\u949f\u6bcf\u9694\u4e00\u5206\u949f\u4f1a\u5237\u65b0\u4e00\u6b21\uff0c\u600e\u4e48\u5b9e\u73b0\u7684\uff1f</li> </ol> <p>\u65f6\u949f\u4e2d\u65ad\uff0c\u5177\u4f53\u4e3a\uff0cPIT(\u53ef\u7f16\u7a0b\u95f4\u9694\u5b9a\u65f6\u5668) ---\u65f6\u949f\u4e2d\u65ad---&gt; PIC (\u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668)  ---\u7535\u4fe1\u53f7\u3001\u65f6\u949f\u4e2d\u65ad\u5411\u91cf\u2192 CPU ---&gt; \u65f6\u949f\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002</p> <ol> <li>\u5bf9\u4e00\u4e2a\u5927\u89c4\u6a21\u77e9\u9635\uff0c\u6309\u884c\u904d\u5386\u5feb\u8fd8\u662f\u6309\u5217\u904d\u5386\u66f4\u5feb\uff1f\u4e3a\u4ec0\u4e48\uff1f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u65f6\u95f4\u6027\u80fd\u53ef\u4ee5\u901a\u8fc7\u54ea\u4e9b\u73af\u8282\u7684\u6539\u5584\u5f97\u4ee5\u63d0\u9ad8\uff1f</li> </ol> <p>\u770b\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6309\u884c\u4f18\u5148\u8fd8\u662f\u6309\u5217\u4f18\u5148\u3002</p> <p>\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\u3002</p> <ol> <li>\u7f51\u7edc\u6570\u636e\u5305\u7684\u53d1\u9001\u548c\u63a5\u6536\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f</li> </ol> <p>\u53c2\u8003\u94fe\u63a5\uff1aLinux \u6570\u636e\u5305\u7684\u63a5\u6536\u4e0e\u53d1\u9001\u8fc7\u7a0b</p> <p>\u6ce8\uff1aCPU\u4e0a\u4e0b\u6587\u73af\u5883\u662f\u6307\u4fdd\u8bc1\u7a0b\u5e8f\u80fd\u6b63\u5e38\u8fd0\u884c\u800c\u9700\u8981\u4ece\u5185\u5b58\u6062\u590d\u5230CPU\u4e2d\u5bc4\u5b58\u5668\u7684\u503c\u3002</p> <p>\u78c1\u76d8\u5757\u662f\u63072^n\u4e2a\u8fde\u7eed\u6247\u533a\uff0c\u6247\u533a\u5927\u5c0f\u4e00\u822c\u4e3a512\u5b57\u8282\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_3","title":"\u7b2c\u4e00\u7ae0 \u64cd\u4f5c\u7cfb\u7edf\u6982\u8ff0","text":""},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#1","title":"1 \u4ec0\u4e48\u662f\u64cd\u4f5c\u7cfb\u7edf","text":"<p>1\u3001\u64cd\u4f5c\u7cfb\u7edf\u662f\u7528\u6237\u4e0e\u8ba1\u7b97\u673a\u786c\u4ef6\u4e4b\u95f4\u7684\u63a5\u53e3</p> <p>\u5c4f\u853d\u63a7\u5236\u786c\u4ef6\u7684\u7ec6\u8282\uff0c\u4f7f\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u66f4\u7b80\u5355\u3001\u9ad8\u6548</p> <p>1.2 \u63a5\u53e3\u5f62\u5f0f\uff1a\u547d\u4ee4\u884c\u63a5\u53e3\u3001\u56fe\u5f62\u7528\u6237\u63a5\u53e3\u3001\u7cfb\u7edf\u8c03\u7528</p> <p>1.3 \u6587\u4ef6\u7684\u5b58\u653e</p> <p>1.3.1 \u903b\u8f91\u5730\u5740\u548c\u7269\u7406\u5730\u5740</p> <p>\u903b\u8f91\u5730\u5740\uff1a\u7c07\u53f7\u6216\u6247\u533a\u7684\u903b\u8f91\u7f16\u53f7\u3002</p> <p>\u7269\u7406\u5730\u5740\uff1a\u67f1\u9762\u53f7\u3001\u78c1\u5934\u53f7\uff08\u78c1\u9053\u53f7\uff09\u3001\u6247\u533a\u53f7\u3002</p> <p>\u903b\u8f91\u5730\u5740\u8f6c\u4e3a\u7269\u7406\u5730\u5740\u4f9d\u8d56\u4e8e\u6587\u4ef6\u7cfb\u7edf\u548c\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u3002</p> <p>1.3.2 \u78c1\u76d8\u8bfb\u6587\u4ef6\u7684\u8fc7\u7a0b</p> <p>1\uff09\u7528\u6237\u7ed9\u51fa\u6587\u4ef6\u540d\uff0c\u63d0\u51fa\u8bbf\u95ee\u6587\u4ef6\u7684\u8bf7\u6c42</p> <p>2\uff09\u6587\u4ef6\u7cfb\u7edf\u901a\u8fc7\u6309\u540d\u8bbf\u95ee\u673a\u5236\u83b7\u53d6\u6587\u4ef6\u7684\u903b\u8f91\u5730\u5740\uff08\u78c1\u76d8\u5757\u53f7\u6216\u6247\u533a\u7f16\u53f7\uff09[OS\u5b8c\u6210]</p> <p>3\uff09\u78c1\u76d8\u9a71\u52a8\u7a0b\u5e8f\u5c06\u903b\u8f91\u5730\u5740\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\u3001\u53d1\u9001\u78c1\u76d8\u64cd\u4f5c\u6307\u4ee4 [OS\u5b8c\u6210]</p> <p>2\u3001\u64cd\u4f5c\u7cfb\u7edf\u662f\u8ba1\u7b97\u673a\u8d44\u6e90\u7684\u7ba1\u7406\u8005</p> <p>\u7ba1\u7406\uff1a\u5904\u7406\u673a\u3001\u5185\u5b58\u3001\u8bbe\u5907\u3001\u6587\u4ef6\u3001\u7f51\u7edc\u7b49\u3002</p> <p>2.1 \u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u8ba1\u8ffd\u6c42\u7684\u4e3b\u8981\u76ee\u6807</p> <p>1\uff09\u65b9\u4fbf\u7528\u6237\uff08\u6700\u7ec8\u7528\u6237\u548c\u7a0b\u5e8f\u5458\uff09</p> <p>2\uff09\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd\uff1a\u7a7a\u95f4\u6027\u80fd\u3001\u65f6\u95f4\u6027\u80fd\u3001\u8d44\u6e90\u5229\u7528\u7387 </p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#2","title":"2 \u64cd\u4f5c\u7cfb\u7edf\u7684\u53d1\u5c55","text":"<p>1\u3001\u65e0\u64cd\u4f5c\u7cfb\u7edf </p> <p>\u5b9a\u4e49\uff1a\u7b2c\u4e00\u4ee3\u8ba1\u7b97\u673a\uff081945-1955\uff09\u4f7f\u7528\u7535\u5b50\u7ba1\u4f5c\u4e3a\u4e3b\u8981\u7684\u7535\u5b50\u5668\u4ef6\uff0c\u7528\u63d2\u4ef6\u677f\u4e0a\u7684\u786c\u8fde\u7ebf\u6216\u7a7f\u5b54\u5361\u8868\u793a\u7a0b\u5e8f\uff0c\u6ca1\u6709\u5b58\u50a8\u7a0b\u5e8f\u7684\u5185\u5b58\uff0c\u65e0\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p>2\u3001\u5355\u9053\u6279\u5904\u7406\u7cfb\u7edf </p> <p>\u5b9a\u4e49\uff1a\u5355\u9053\u6279\u5904\u7406\u7cfb\u7edf\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u9053\u4f5c\u4e1a\uff0c\u53ef\u4ee5\u6210\u6279\u5904\u7406\u4f5c\u4e1a\u3002\u514b\u670dCPU\u56e0\u7b49\u5f85\u4eba\u5de5\u64cd\u4f5c\u9020\u6210\u7684\u8d44\u6e90\u6d6a\u8d39\u95ee\u9898</p> <p>\u7279\u70b9\uff1a\u2460\u81ea\u52a8\u6027  \u2461\u987a\u5e8f\u6027  \u2462\u5355\u9053\u6027</p> <p>\u4f18\u70b9\uff1a\u51cf\u5c11\u7b49\u5f85\u4eba\u5de5\u64cd\u4f5c\u7684\u65f6\u95f4</p> <p>\u7f3a\u70b9\uff1a \u2460\u4f5c\u4e1a\u72ec\u5360CPU \u2461CPU\u7b49\u5f85I/O\u4f7f\u5f97CPU\u5229\u7528\u7387\u4f4e\uff08\u76f8\u5bf9\u4e8e\u591a\u9053\u7a0b\u5e8f\u7cfb\u7edf\u800c\u8a00\uff09    </p> <p>3\u3001\u591a\u9053\u7a0b\u5e8f\u7cfb\u7edf</p> <p>3.1 \u591a\u9053\u6279\u5904\u7406\u7cfb\u7edf</p> <p>\u7279\u70b9\uff1a\u2460\u591a\u9053\u6027  \u2461\u65e0\u5e8f\u6027 \u2462\u8c03\u5ea6\u6027 \u2463\u590d\u6742\u6027</p> <p>\u4f18\u70b9\uff1a\u2460\u63d0\u9ad8CPU\u5229\u7528\u7387 \u2461\u63d0\u9ad8\u5185\u5b58\u548cI/O\u5229\u7528\u7387 \u2462\u589e\u52a0\u7cfb\u7edf\u541e\u5410\u91cf</p> <p>\u7f3a\u70b9\uff1a \u2460\u5e73\u5747\u5468\u8f6c\u65f6\u95f4   \u2461\u7f3a\u4e4f\u4ea4\u4e92\u80fd\u529b</p> <p>3.2 \u5206\u65f6\u7cfb\u7edf</p> <p>\u8fde\u7eed\u7684\u65f6\u95f4\u7247\u8f6e\u6d41\u4ea4\u66ff\u4f7f\u7528\u3002</p> <p>\u5b9a\u4e49\uff1a\u2460\u4eba\u673a\u4ea4\u4e92   \u2461\u5171\u4eab\u4e3b\u673a  \u2462\u4fbf\u4e8e\u7528\u6237\u4e0a\u673a</p> <p>\u7279\u70b9\uff1a\u2460\u591a\u8def\u6027 \u2461\u72ec\u7acb\u6027 \u2462\u53ca\u65f6\u6027 \u2463\u4ea4\u4e92\u6027</p> <p>\u4f18\u70b9\uff1a\u2460\u63d0\u4f9b\u4eba\u673a\u4ea4\u4e92 \u2461\u591a\u7ec8\u7aef\u5171\u4eab\u4e3b\u673a</p> <p>\u5206\u65f6\u7cfb\u7edf\u5b9e\u73b0\u4e2d\u7684\u5173\u952e\u95ee\u9898\uff1a</p> <p>\u2460\u53ca\u65f6\u63a5\u6536\uff1a\u53ca\u65f6\u63a5\u6536\u7528\u6237\u7684\u547d\u4ee4\u6216\u6570\u636e</p> <p>\u2461\u53ca\u65f6\u5904\u7406\uff1a\u53ca\u65f6\u5904\u7406\u7528\u6237\u547d\u4ee4\u3002\u5e94\u8be5\u4f7f\u6240\u6709\u7684\u7528\u6237\u4f5c\u4e1a\u90fd\u76f4\u63a5\u8fdb\u5165\u5185\u5b58\uff1b\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u4f7f\u6bcf\u4e2a\u4f5c\u4e1a\u90fd\u5f97\u5230\u8fd0\u884c\u3002</p> <p>4\u3001\u5fae\u673a\u64cd\u4f5c\u7cfb\u7edf </p> <p>5\u3001\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf </p> <p>\u5b9a\u4e49\uff1a\u5b9e\u65f6\u7cfb\u7edf\u662f\u652f\u6301\u5b9e\u65f6\u8ba1\u7b97\u7684\u7cfb\u7edf\u3002\u5b9e\u65f6\u8ba1\u7b97\u53ef\u4ee5\u5b9a\u4e49\u6210\u8fd9\u6837\u4e00\u7c7b\u8ba1\u7b97\uff0c\u65e2\u7cfb\u7edf\u7684\u6b63\u786e\u6027\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u8ba1\u7b97\u7684\u903b\u8f91\u7ed3\u679c\uff0c\u800c\u4e14\u8fd8\u4f9d\u8d56\u4e8e\u4ea7\u751f\u7ed3\u679c\u7684\u65f6\u95f4\u3002</p> <p>\u7279\u70b9\uff1a\u2460\u591a\u8def\u6027 \u2461\u72ec\u7acb\u6027 \u2462\u53ca\u65f6\u6027 \u2463\u4ea4\u4e92\u6027 \u2464\u53ef\u9760\u6027</p> <p>\u5b9e\u65f6\u4efb\u52a1\u7684\u7c7b\u578b \u2460\u5468\u671f\u6027\u5b9e\u65f6\u4efb\u52a1 \u2461\u975e\u5468\u671f\u6027\u5b9e\u65f6\u4efb\u52a1 \u2462\u786c\u5b9e\u65f6\u4efb\u52a1  \u2463\u8f6f\u5b9e\u65f6\u4efb\u52a1\u3002</p> <p>\u6ce8\uff1a\u4e00\u4e2a\u5b9e\u9645\u7684OS\u53ef\u4ee5\u540c\u65f6\u5177\u6709\u6279\u5904\u7406\u3001\u5206\u65f6\u548c\u5b9e\u65f6\u7684\u7279\u70b9\uff0c\u5982Windows NT\u3002</p> <p>\u541e\u5410\u91cf\u662f\u6307\u5355\u4f4d\u65f6\u95f4\u5185\u7cfb\u7edf\u5904\u7406\u7684\u4f5c\u4e1a\u91cf/\u4efb\u52a1\u91cf\u3002</p> <p>\u4e8b\u4ef6\u7684\u5f00\u59cb\u622a\u6b62\u65f6\u95f4\uff0c\u5b8c\u6210\u622a\u6b62\u65f6\u95f4\u3002</p> <p>\u4f5c\u4e1a\uff1a\u5728\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4f5c\u4e1a(Job)\u662f\u8ba1\u7b97\u673a\u64cd\u4f5c\u5458(\u6216\u79f0\u4e3a\u4f5c\u4e1a\u8c03\u5ea6\u7a0b\u5e8f\u7684\u7a0b\u5e8f)\u63d0\u4f9b\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u6267\u884c\u4efb\u52a1\u7684\u5de5\u4f5c\u5355\u5143\uff0c\u4e00\u7cfb\u5217\u7a0b\u5e8f+\u6570\u636e\u7684\u96c6\u5408\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#3","title":"3. \u64cd\u4f5c\u7cfb\u7edf\u7684\u7279\u5f81","text":"<p>\u5e76\u53d1\uff1a\u4e24\u4e2a\u6216\u591a\u4e2a\u4e8b\u4ef6\u5728\u540c\u4e00\u65f6\u95f4\u95f4\u9694\u5185\u53d1\u751f\u3002\u5e76\u53d1\u5f3a\u8c03\u201c\u540c\u4e00\u65f6\u95f4\u95f4\u9694\u201d\uff0c\u4e0e\u5e76\u884c\u662f\u4e0d\u540c\u7684\u4e24\u4e2a\u6982\u5ff5\uff0c\u5e76\u884c\u662f\u6307\u591a\u4e2a\u4e8b\u4ef6\u540c\u65f6\u53d1\u751f\u3002</p> <p>\u5171\u4eab\uff1a\u7cfb\u7edf\u4e2d\u7684\u8d44\u6e90\u53ef\u4f9b\u5185\u5b58\u4e2d\u591a\u4e2a\u5e76\u53d1\u6267\u884c\u7684\u8fdb\u7a0b\u5171\u540c\u4f7f\u7528\u3002 \u8d44\u6e90\u5171\u4eab\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5373\uff1a\u4e92\u65a5\u5171\u4eab\u548c\u540c\u65f6\u5171\u4eab\u3002</p> <p>\u865a\u62df\uff1a\u901a\u8fc7\u67d0\u79cd\u6280\u672f\u628a\u4e00\u4e2a\u7269\u7406\u5b9e\u4f53\u53d8\u6210\u82e5\u5e72\u903b\u8f91\u4e0a\u7684\u5bf9\u5e94\u7269\u3002</p> <p>\u5f02\u6b65\uff1a\u8fdb\u7a0b\u4ee5\u4e0d\u53ef\u9884\u77e5\u7684\u987a\u5e8f\u3001\u8fdb\u5ea6\u8fd0\u884c\uff0c\u7cfb\u7edf\u80fd\u5904\u7406\u968f\u673a\u53d1\u751f\u7684\u4e8b\u4ef6\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#4","title":"4 \u64cd\u4f5c\u7cfb\u7edf\u7684\u529f\u80fd","text":"<p>\u5185\u5b58\u7ba1\u7406\u529f\u80fd\u3001\u8fdb\u7a0b\u7ba1\u7406\u529f\u80fd\u3001\u8bbe\u5907\u7ba1\u7406\u529f\u80fd\u3001\u6587\u4ef6\u7ba1\u7406\u529f\u80fd\u3001\u7528\u6237\u63a5\u53e3</p> <p>1\u3001\u5185\u5b58\u7ba1\u7406\u529f\u80fd</p> <p>\u5185\u5b58\u5206\u914d;</p> <p>\u5185\u5b58\u4fdd\u62a4: \u786e\u4fdd\u6bcf\u9053\u7528\u6237\u7a0b\u5e8f\u90fd\u5728\u81ea\u5df1\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u8fd0\u884c\uff0c\u4e92\u4e0d\u5e72\u6270\u3002</p> <p>\u5730\u5740\u6620\u5c04;</p> <p>\u2460\u903b\u8f91\u5730\u5740\u548c\u7269\u7406\u5730\u5740</p> <p>\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7ecf\u7f16\u8bd1\u540e\uff0c\u901a\u5e38\u4f1a\u5f62\u6210\u82e5\u5e72\u4e2a\u76ee\u6807\u7a0b\u5e8f\uff0c\u8fd9\u4e9b\u76ee\u6807\u7a0b\u5e8f\u518d\u7ecf\u8fc7\u94fe\u63a5\u800c\u5f62\u6210\u53ef\u88c5\u5165\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u7a0b\u5e8f\u7684\u5730\u5740\u90fd\u662f\u4ece\u67d0\u4e00\u8d77\u59cb\u5730\u5740\u5f00\u59cb\u7684\uff0c\u7a0b\u5e8f\u4e2d\u7684\u5176\u5b83\u5730\u5740\u90fd\u662f\u76f8\u5bf9\u4e8e\u8d77\u59cb\u5730\u5740\u8ba1\u7b97\u7684\uff1b\u7531\u8fd9\u4e9b\u5730\u5740\u6240\u5f62\u6210\u7684\u5730\u5740\u8303\u56f4\u79f0\u201c\u5730\u5740\u7a7a\u95f4\u201d\uff0c\u5176\u4e2d\u7684\u5730\u5740\u79f0\u4e3a\u201c\u903b\u8f91\u5730\u5740\u201d\u3002</p> <p>\u7531\u5185\u5b58\u4e2d\u7684\u4e00\u7cfb\u5217\u5355\u5143\u6240\u9650\u5b9a\u7684\u5730\u5740\u8303\u56f4\u79f0\u4e3a\u201c\u5185\u5b58\u7a7a\u95f4\u201d\uff0c\u5176\u4e2d\u7684\u5730\u5740\u79f0\u4e3a\u201c\u7269\u7406\u5730\u5740\u201d\u3002</p> <p>\u2461\u5730\u5740\u6620\u5c04</p> <p>\u5185\u5b58\u6269\u5145\uff1b\u865a\u62df\u5185\u5b58\u3002</p> <p>\u5185\u5b58\u56de\u6536\uff1a\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u6216\u6587\u4ef6\u88ab\u5173\u95ed\uff0c\u7cfb\u7edf\u5c06\u7a0b\u5e8f\u3001\u6587\u4ef6\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u6807\u8bb0\u4e3a\u7a7a\u95f2\u72b6\u6001\u3002</p> <p>2\u3001\u8fdb\u7a0b\u7ba1\u7406\u529f\u80fd</p> <p>\u8fdb\u7a0b\u63a7\u5236</p> <p>\u8fdb\u7a0b\u540c\u6b65</p> <p>\u8fdb\u7a0b\u901a\u4fe1</p> <p>\u8fdb\u7a0b\u8c03\u5ea6</p> <p>3\u3001\u8bbe\u5907\u7ba1\u7406\u529f\u80fd</p> <p>\u7f13\u51b2\u7ba1\u7406\uff1a\u7ba1\u7406\u5404\u79cd\u7f13\u51b2\u533a\u3002</p> <p>\u8bbe\u5907\u5206\u914d\uff1a\u5206\u914d\u7528\u6237I/O \u6240\u9700\u8981\u7684\u8bbe\u5907\u3002</p> <p>\u8bbe\u5907\u5904\u7406\uff1a\u7531\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u6765\u5b9e\u73b0CPU\u4e0e\u8bbe\u5907\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u3002</p> <p>\u8bbe\u5907\u72ec\u7acb\u6027\uff1a\u5e94\u7528\u7a0b\u5e8f\u4e0e\u5177\u4f53\u7684\u7269\u7406\u8bbe\u5907\u65e0\u5173\u3002</p> <p>\u865a\u62df\u8bbe\u5907\uff1a\u591a\u4e2a\u7528\u6237\u3001\u591a\u4e2a\u8fdb\u7a0b\u8bfe\u5171\u4eab\u540c\u4e00\u4e2a\u7269\u7406\u8bbe\u5907\u3002</p> <p>4\u3001\u6587\u4ef6\u7ba1\u7406\u529f\u80fd</p> <p>\u6587\u4ef6\u7684\u6309\u540d\u8bbf\u95ee</p> <p>\u6587\u4ef6\u7684\u5b58\u50a8</p> <p>5\u3001\u63d0\u4f9b\u7528\u6237\u63a5\u53e3</p> <p>\u547d\u4ee4\u63a5\u53e3</p> <p>\u56fe\u5f62\u63a5\u53e3\uff1a\u91c7\u7528\u56fe\u5f62\u5316\u7684\u64cd\u4f5c\u754c\u9762\u3002</p> <p>\u7a0b\u5e8f\u63a5\u53e3\uff1a\u7531\u4e00\u7ec4\u7cfb\u7edf\u8c03\u7528\u7ec4\u6210\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#5","title":"5 \u6307\u4ee4\u7684\u6267\u884c","text":"<p>1\u3001\u53d6\u6307\u4ee4\u4e0e\u6267\u884c\u6307\u4ee4</p> <p>1.1 \u53d6\u6307\u4ee4</p> <p>\u5728\u6bcf\u4e2a\u6307\u4ee4\u5468\u671f\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u5904\u7406\u5668\u4ece\u5b58\u50a8\u5668\u4e2d\u53d6\u4e00\u6761\u6307\u4ee4\uff0c\u5728\u5178\u578b\u7684\u5904\u7406\u5668\u4e2d\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668\uff08PC\uff09\u4fdd\u5b58\u6709\u4e0b\u4e00\u6b21\u8981\u53d6\u7684\u6307\u4ee4\u7684\u5730\u5740\u3002\u9664\u975e\u63a5\u6536\u5230\u522b\u7684\u6307\u793a\uff08\u5982\u6267\u884c\u8df3\u8f6c\u6307\u4ee4\uff09\uff0c\u5426\u5219\u5904\u7406\u5668\u5728\u6bcf\u6b21\u5b8c\u6210\u53d6\u6307\u4ee4\u540e\u603b\u662f\u5bf9PC\u9012\u589e\uff0c\u4f7f\u5b83\u80fd\u591f\u6309\u987a\u5e8f\u53d6\u5f97\u4e0b\u4e00\u6761\u6307\u4ee4\u3002\uff08\u5373\u4f4d\u4e8e\u4e0b\u4e00\u4e2a\u9ad8\u7aef\u5b58\u50a8\u5668\u5730\u5740\u7684\u6307\u4ee4\uff09\u3002</p> <p>1.2 \u6267\u884c\u6307\u4ee4</p> <p>\u53d6\u5230\u7684\u6307\u4ee4\u88ab\u653e\u7f6e\u5728\u5904\u7406\u5668\u4e2d\u7684\u6307\u4ee4\u5bc4\u5b58\u5668\uff08IR\u4e2d\u3002\u6307\u4ee4\u4e2d\u5305\u542b\u786e\u5b9a\u5904\u7406\u5668\u5c06\u8981\u91c7\u53d6\u52a8\u4f5c\u7684\u4f4d\uff0c\u5904\u7406\u5668\u89e3\u91ca\u6307\u4ee4\u5e76\u6267\u884c\u8981\u6c42\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u53ef\u5206\u4e3a4\u7c7b\uff1a</p> <p>\u2460\u5904\u7406\u5668-\u5b58\u50a8\u5668:\u6570\u636e\u5728\u5b58\u50a8\u5668\u548c\u5904\u7406\u5668\u4e4b\u95f4\u4f20\u9001\uff1b   </p> <p>\u2461\u5904\u7406\u5668-I/O\uff1a\u6570\u636e\u5728I/O\u8bbe\u5907\u548c\u5904\u7406\u5668\u4e4b\u95f4\u4f20\u9001\uff1b</p> <p>\u2462\u6570\u636e\u5904\u7406\uff1a\u7b97\u672f\u64cd\u4f5c\u6216\u903b\u8f91\u64cd\u4f5c\uff1b</p> <p>\u2463\u63a7\u5236\uff1a\u4fee\u6539\u6307\u4ee4\u7684\u6267\u884c\u987a\u5e8f\u3002</p> <p>2\u3001\u5185\u90e8CPU\u5bc4\u5b58\u5668</p> <p>\u7a0b\u5e8f\u8ba1\u6570\u5668\uff08PC\uff09----\u5b58\u6307\u4ee4\u5730\u5740</p> <p>\u6307\u4ee4\u5bc4\u5b58\u5668\uff08IR) ----\u5b58\u6b63\u5728\u6267\u884c\u7684\u6307\u4ee4</p> <p>\u7d2f\u52a0\u5668\uff08AC)     ----\u4e34\u65f6\u5b58\u50a8\u4f53\u548c\u7d2f\u52a0\u64cd\u4f5c</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#6","title":"6 \u5c0f\u7ed3","text":"<ol> <li> <p>\u7a0b\u5e8f\u6267\u884c\u7684\u8fc7\u7a0b\u662f\u53cd\u590d\u53d6\u6307\u4ee4\u548c\u6267\u884c\u6307\u4ee4\u7684\u8fc7\u7a0b\uff1b</p> </li> <li> <p>PC\u59cb\u7ec8\u5b58\u6709\u4e0b\u4e00\u6761\u5f85\u53d6\u6307\u4ee4\u7684\u5730\u5740\uff1b</p> </li> <li> <p>\u6307\u4ee4\u6267\u884c\u7684\u7ed3\u679c\u5c31\u662f\u4f7f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u5355\u5143\u7684\u503c\u53d1\u751f\u53d8\u5316\u3002\u6307\u4ee4\u6267\u884c\u7684\u8fc7\u7a0b\u4e5f\u5c31\u662f\u5b58\u50a8\u4f53\u5185\u5bb9\u4e0d\u65ad\u53d8\u5316\u7684\u8fc7\u7a0b\u3002</p> </li> <li> <p>\u53d6\u6307\u4ee4\u548c\u6267\u884c\u6307\u4ee4\u662f\u7531\u786c\u4ef6\u5b8c\u6210\u7684\u3002</p> </li> <li> <p>\u4e0d\u540c\u786c\u4ef6\u7684\u4f53\u7cfb\u7ed3\u6784\u652f\u6301\u4e0d\u540c\u7684\u6307\u4ee4\u96c6\u5408\uff0c\u4e3a\u67d0\u79cd\u786c\u4ef6\u5e73\u53f0\u5f00\u53d1\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u80fd\u76f4\u63a5\u5728\u53e6\u4e00\u79cd\u4f53\u7cfb\u7ed3\u6784\u7684\u786c\u4ef6\u4e0a\u8fd0\u884c\u3002</p> </li> <li> <p>\u4efb\u4f55\u9ad8\u7ea7\u8bed\u8a00\u7a0b\u5e8f\u88ab\u7f16\u8bd1\u6210\u6307\u4ee4\u96c6\u5408\uff0c\u5176\u4e2d\u7684\u6bcf\u4e00\u6761\u6307\u4ee4\u5c5e\u4e8e\u673a\u5668\u4f53\u7cfb\u7ed3\u6784\u6307\u4ee4\u96c6\u3002CPU\u6267\u884c\u7684\u6700\u5c0f\u7a0b\u5e8f\u5355\u4f4d\u662f\u6307\u4ee4\u800c\u4e0d\u662f\u9ad8\u7ea7\u8bed\u8a00\u7a0b\u5e8f\u7684\u8bed\u53e5\u3002</p> </li> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u7ec4\u63a7\u5236\u548c\u7ba1\u7406\u8ba1\u7b97\u673a\u786c\u4ef6\u548c\u8f6f\u4ef6\u8d44\u6e90\u3001\u5408\u7406\u5730\u5bf9\u5404\u7c7b\u4f5c\u4e1a\u8fdb\u884c\u8c03\u5ea6\u4ee5\u53ca\u65b9\u4fbf\u7528\u6237\u7684\u7a0b\u5e8f\u96c6\u5408\u3002</p> </li> <li> <p>\u8bf4\u660e\u903b\u8f91\u5730\u5740\u5bf9\u4e8e\u7a0b\u5e8f\u7684\u81ea\u52a8\u6267\u884c\u800c\u8a00\u6709\u4ec0\u4e48\u610f\u4e49\uff1f\u903b\u8f91\u5730\u5740\u7684\u5b58\u5728\u4f7f\u5f97\u7f16\u8bd1\u5668\u80fd\u591f\u5ffd\u7565\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u548c\u786c\u4ef6\u7684\u5dee\u5f02\u5e76\u4e14\u53ea\u9488\u5bf9\u7edf\u4e00\u7684\u7f16\u5740\u7a7a\u95f4\u6267\u884c\u4f18\u5316\u3002</p> </li> <li> <p>\u4ee5printf\u7684\u6267\u884c\u4e3a\u4f8b\u8bf4\u660e\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e86\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u7684\u65b9\u4fbf\u6027\u3001\u64cd\u4f5c\u7cfb\u7edf\u5c4f\u853d\u4e86\u786c\u4ef6\u7ec6\u8282\u7684\u4f5c\u7528\u3002</p> </li> </ol> <p>\u5c01\u88c5\u8c03\u7528\u7cfb\u7edf\u8c03\u7528\uff0csys_print()\u7cfb\u7edf\u8c03\u7528\u5e76\u8fd4\u56de\u3002</p> <ol> <li> <p>\u8bf7\u7b80\u8981\u8bf4\u660e\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684\u6267\u884c\u505a\u4e86\u54ea\u4e9b\u5de5\u4f5c\uff1f</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u5230\u5916\u5b58\u67e5\u627e\u53ef\u6267\u884c\u6587\u4ef6</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u5185\u5b58\uff0c\u5c06\u7a0b\u5e8f\u88c5\u5165\u5185\u5b58</p> <p>\u4e3a\u6267\u884chello\u7a0b\u5e8f\u521b\u5efa\u6267\u884c\u73af\u5883\uff08\u521b\u5efa\u65b0\u8fdb\u7a0b\uff09</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u7f6eCPU\u4e0a\u4e0b\u6587\u73af\u5883\uff0c\u5e76\u8df3\u5230\u7a0b\u5e8f\u5f00\u59cb\u5904</p> <p>\u7a0b\u5e8f\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u6267\u884c</p> <p>\u7a0b\u5e8f\u6267\u884c\u4e0eprintf\u5bf9\u5e94\u7684\u5e93\u51fd\u6570\u3001\u7cfb\u7edf\u8c03\u7528</p> <p>\u6267\u884c\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f</p> <p>\u5c06\u50cf\u7d20\u5199\u5165\u5b58\u50a8\u6620\u50cf\u533a(\u663e\u5b58\uff09</p> </li> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u5177\u6709\u54ea\u4e9b\u7279\u5f81\uff1f\u4ec0\u4e48\u662f\u5e76\u53d1\uff1f\u4ec0\u4e48\u662f\u5171\u4eab\uff1f\u5b83\u4eec\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f</p> <p>\u5e76\u53d1\u6027\uff08Concurrence\uff09</p> <p>\u5e76\u884c\u6027\u548c\u5e76\u53d1\u6027\u662f\u65e2\u76f8\u4f3c\u53c8\u6709\u533a\u522b\u7684\u4e24\u4e2a\u6982\u5ff5\u3002\u5e76\u884c\u6027\u662f\u6307\u4e24\u4e2a\u6216\u591a\u4e2a\u4e8b\u4ef6\u5728\u540c\u4e00\u65f6\u523b\u53d1\u751f\uff0c\u800c\u5e76\u53d1\u6027\u662f\u6307\u4e24\u4e2a\u6216\u591a\u4e2a\u5728\u540c\u4e00\u65f6\u95f4\u95f4\u9694\u5185\u53d1\u751f\u3002\u5728\u591a\u9053\u7a0b\u5e8f\u73af\u5883\u4e0b\uff0c\u5e76\u53d1\u6027\u662f\u6307\u5b8f\u89c2\u4e0a\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u6709\u591a\u9053\u7a0b\u5e8f\u5728\u540c\u65f6\u6267\u884c\u3002\u4f46\u5728\u5355\u5904\u7406\u673a\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u65f6\u523bCPU\u4ec5\u80fd\u6267\u884c\u4e00\u9053\u7a0b\u5e8f\uff0c\u6545\u5fae\u89c2\u4e0a\uff0c\u8fd9\u4e9b\u7a0b\u5e8f\u662f\u5728CPU\u4e0a\u4ea4\u4e92\u6267\u884c\u3002</p> <p>\u5171\u4eab\u6027\uff08Sharing\uff09</p> <p>\u5171\u4eab\u662f\u6307\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u8d44\u6e90\u4e0d\u518d\u4e3a\u4e00\u4e2a\u7a0b\u5e8f\u6240\u72ec\u5360\uff0c\u800c\u662f\u4f9b\u540c\u65f6\u5b58\u5728\u4e8e\u7cfb\u7edf\u4e2d\u7684\u591a\u9053\u7a0b\u5e8f\u6240\u5171\u540c\u4f7f\u7528\u3002\u6839\u636e\u8d44\u6e90\u5c5e\u6027\u4e0d\u540c\uff0c\u53ef\u6709\u4e92\u65a5\u5171\u4eab\u548c\u540c\u65f6\u5171\u4eab\u4e24\u79cd\u4e0d\u540c\u7684\u5171\u4eab\u65b9\u5f0f\u3002 \u5e76\u53d1\u548c\u5171\u4eab\u5173\u7cfb\uff1a</p> <p>\u5e76\u53d1\u548c\u5171\u4eab\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e24\u4e2a\u6700\u57fa\u672c\u7684\u7279\u6027\uff0c\u5b83\u4eec\u53c8\u662f\u4e92\u4e3a\u5b58\u5728\u6761\u4ef6\u3002\u4e00\u65b9\u9762\u8d44\u6e90\u5171\u4eab\u662f\u4ee5\u7a0b\u5e8f\uff08\u8fdb\u7a0b\uff09\u7684\u5e76\u53d1\u6027\u6267\u884c\u4e3a\u6761\u4ef6\u7684\uff0c\u82e5\u7cfb\u7edf\u4e0d\u5141\u8bb8\u7a0b\u5e8f\u5e76\u53d1\u6267\u884c\uff0c\u81ea\u7136\u4e0d\u5b58\u5728\u8d44\u6e90\u5171\u4eab\u95ee\u9898\u3002\u53e6\u4e00\u65b9\u9762\u82e5\u7cfb\u7edf\u4e0d\u80fd\u5bf9\u8d44\u6e90\u5171\u4eab\u5b9e\u65bd\u6709\u6548\u7ba1\u7406\uff0c\u5219\u4e5f\u5fc5\u5c06\u5f71\u54cd\u5230\u7a0b\u5e8f\u5e76\u53d1\u6267\u884c\u3002</p> </li> </ol>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_4","title":"\u7b2c\u4e8c\u7ae0 \u8fdb\u7a0b\u7684\u63cf\u8ff0\u4e0e\u63a7\u5236","text":""},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#1_1","title":"1 \u7a0b\u5e8f\u7684\u5e76\u53d1\u8fd0\u884c","text":"<p>1 \u6982\u5ff5</p> <p>\u5728\u540c\u4e00\u65f6\u95f4\u95f4\u9694\u5185\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u53ef\u4ee5\u8fd0\u884c\u5176\u5b83\u7684\u7a0b\u5e8f\uff0c\u5bf9\u7528\u6237\u800c\u8a00\uff0c\u770b\u5230\u7684\u662f\u8ba1\u7b97\u673a\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\u3002</p> <p>\u7a0b\u5e8f\u5e76\u53d1\u6267\u884c\u7684\u65b9\u5f0f\u53ef\u4ee5\u662f\u591a\u4e2a\u7a0b\u5e8f\u5206\u65f6\u4f7f\u7528\u591aCPU\u6216\u5355CPU\u3002 </p> <p>2 \u7279\u70b9</p> <p>\u2460\u95f4\u65ad\u6027 \u2461\u591a\u4e2a\u7a0b\u5e8f\u5171\u4eab\u7cfb\u7edf\u8d44\u6e90\uff08\u5931\u53bb\u5c01\u95ed\u6027\uff09\u2462\u4e0d\u53ef\u518d\u73b0\u6027 </p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#2_1","title":"2 \u8fdb\u7a0b\u7684\u63cf\u8ff0","text":"<p>\u8fdb\u7a0b\u6982\u5ff5\u7684\u5f15\u5165\u662f\u4e3a\u4e86\u8ddf\u8e2a\u5e76\u63cf\u8ff0\u7a0b\u5e8f\u7684\u5e76\u53d1\u6267\u884c\u3002\u5f53\u5141\u8bb8\u7a0b\u5e8f\u5e76\u53d1\u6267\u884c\u65f6\uff0c\u5e76\u53d1\u6267\u884c\u7684\u7a0b\u5e8f\u53ef\u80fd\u662f\u540c\u4e00\u4e2a\u7a0b\u5e8f\u5728\u4e0d\u540c\u6570\u636e\u96c6\u5408\u4e0a\u7684\u6267\u884c\uff0c\u4e5f\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u7a0b\u5e8f\u5728\u4e0d\u540c\u6570\u636e\u96c6\u5408\u4e0a\u7684\u6267\u884c\uff0c\u5b83\u4eec\u5171\u4eab\u7cfb\u7edf\u8d44\u6e90\uff0c\u7528\u7a0b\u5e8f\u5df2\u4e0d\u80fd\u65b9\u4fbf\u5730\u63cf\u8ff0\u7a0b\u5e8f\u7684\u5e76\u53d1\u6267\u884c\uff0c\u6240\u4ee5\u5f15\u5165\u4e86\u8fdb\u7a0b\u7684\u6982\u5ff5 \u3002</p> <p>1 \u8fdb\u7a0b\u7684\u5b9a\u4e49</p> <p>\u5b9a\u4e491\uff1a\u8fdb\u7a0b\u662f\u5141\u8bb8\u5e76\u53d1\u6267\u884c\u7684\u7a0b\u5e8f\u5728\u67d0\u4e2a\u6570\u636e\u96c6\u5408\u4e0a\u7684\u6267\u884c\u8fc7\u7a0b\u3002</p> <p>\u5b9a\u4e492\uff1a\u8fdb\u7a0b\u662f\u7531\u7528\u6237\u6570\u636e\u3001\u7cfb\u7edf\u6570\u636e\u548c\u7a0b\u5e8f\u6784\u6210\u7684\u5b9e\u4f53\u3002</p> <p>2 \u8fdb\u7a0b\u7684\u7279\u5f81</p> <p>\u5e76\u53d1\u6027\uff1a\u591a\u4e2a\u8fdb\u7a0b\u5b9e\u4f53\uff0c\u540c\u5b58\u4e8e\u5185\u5b58\u4e2d\uff0c\u80fd\u5728\u4e00 \u6bb5\u65f6\u95f4\u5185\u540c\u65f6\u8fd0\u884c\u3002 </p> <p>\u52a8\u6001\u6027\uff1a\u8fdb\u7a0b\u662f\u8fdb\u7a0b\u5b9e\u4f53\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u5bf9\u5e94\u4e86\u5b58\u50a8\u4f53\u7684\u4e0d\u65ad\u53d8\u5316\uff1b\u6709\u521b\u5efa\u3001\u6267\u884c\u3001\u72b6\u6001\u53d8\u5316\u548c\u8fd0\u884c\u7ec8\u6b62\u88ab\u64a4\u6d88\u7684\u8fc7\u7a0b</p> <p>\u72ec\u7acb\u6027\uff1a\u72ec\u7acb\u8fd0\u884c\u548c\u8d44\u6e90\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002</p> <p>\u5f02\u6b65\u6027\uff1a\u4ee5\u4e0d\u540c\u7684\u3001\u4e0d\u53ef\u9884\u77e5\u7684\u901f\u5ea6\u5411\u524d\u63a8\u8fdb\u3002</p> <p>\u7ed3\u6784\u7279\u5f81\uff1a\u8fdb\u7a0b\u5305\u62ec\u7528\u6237\u6570\u636e\u3001\u7a0b\u5e8f\u3001\u7cfb\u7edf\u6570\u636e\u3002</p> <p>3 \u8fdb\u7a0b\u4e0e\u7a0b\u5e8f\u7684\u6bd4\u8f83</p> <p>\u533a\u522b \uff1a</p> <p>\u2460\u7a0b\u5e8f\u662f\u9759\u6001\u7684\u6982\u5ff5\uff0c\u8fdb\u7a0b\u662f\u52a8\u6001\u7684\u6982\u5ff5 </p> <p>\u2461\u7a0b\u5e8f\u662f\u6c38\u4e45\u7684\uff0c\u8fdb\u7a0b\u662f\u6682\u65f6\u5b58\u5728\u7684 </p> <p>\u2462\u7a0b\u5e8f\u4e0e\u8fdb\u7a0b\u7684\u5b58\u5728\u5b9e\u4f53\u4e0d\u540c </p> <p>\u8054\u7cfb \uff1a</p> <p>\u2460\u8fdb\u7a0b\u662f\u7a0b\u5e8f\u7684\u4e00\u6b21\u6267\u884c\uff0c\u8fdb\u7a0b\u603b\u662f\u5bf9\u5e94\u4e00\u4e2a\u7279\u5b9a\u7684\u7a0b\u5e8f\uff0c\u6267\u884c\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u5fc5\u7136\u5bf9\u5e94\u81f3\u5c11\u4e00\u6bb5\u7a0b\u5e8f\u3002</p> <p>\u2461\u4e00\u4e2a\u7a0b\u5e8f\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u8fdb\u7a0b\u3002\u540c\u4e00\u4e2a\u7a0b\u5e8f\u6bb5\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u6570\u636e\u96c6\u5408\u4e0a\u8fd0\u884c\uff0c\u56e0\u800c\u6784\u6210\u82e5\u5e72\u4e2a\u4e0d\u540c\u7684\u8fdb\u7a0b\u3002</p> <p>4 \u7a0b\u5e8f\u63a7\u5236\u5757</p> <p>\u8fdb\u7a0b\u63a7\u5236\u5757\u662f\u8fdb\u7a0b\u5b9e\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u4e0e\u8fdb\u7a0b\u4e00\u4e00\u5bf9\u5e94\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6700\u91cd\u8981\u7684\u8bb0\u5f55\u578b\u6570\u636e\u7ed3\u6784\uff0cPCB\u4e2d\u8bb0\u5f55\u4e86\u64cd\u4f5c\u7cfb\u7edf\u6240\u9700\u8981\u7684\u7528\u4e8e\u63cf\u8ff0\u8fdb\u7a0b\u60c5\u51b5\u53ca\u63a7\u5236\u8fdb\u7a0b\u8fd0\u884c\u6240\u9700\u7684\u5168\u90e8\u4fe1\u606f\uff0c\u53ea\u6709\u5185\u6838\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u3002</p> <p>4.1 \u8fdb\u7a0b\u63a7\u5236\u5757\u4e2d\u7684\u4fe1\u606f</p> <p>1\uff09 \u8fdb\u7a0b\u6807\u8bc6\u7b26\u4fe1\u606f</p> <p>\u2460 \u5916\u90e8\u6807\u8bc6\u7b26 \u2461 \u5185\u90e8\u6807\u8bc6\u7b26 \u2462 \u7236\u8fdb\u7a0b\u6807\u8bc6\u7b26 \u2463\u5b50\u8fdb\u7a0b\u6807\u8bc6\u7b26</p> <p>2\uff09\u5904\u7406\u673a\u72b6\u6001\u4fe1\u606f</p> <p>\u2460\u901a\u7528\u5bc4\u5b58\u5668 \u2461\u6307\u4ee4\u8ba1\u6570\u5668 \u2462\u7a0b\u5e8f\u72b6\u6001\u5b57PSW \u2463\u7528\u6237\u6808\u6307\u9488</p> <p>3\uff09\u8fdb\u7a0b\u8c03\u5ea6\u4fe1\u606f \u2460\u8fdb\u7a0b\u72b6\u6001\u4fe1\u606f \u2461\u8fdb\u7a0b\u4f18\u5148\u7ea7 \u2462\u8fdb\u7a0b\u8c03\u5ea6\u6240\u9700\u8981\u7684\u5176\u4ed6\u4fe1\u606f \u2463\u4e8b\u4ef6</p> <p>4\uff09\u8fdb\u7a0b\u63a7\u5236\u4fe1\u606f \u2460\u7a0b\u5e8f\u548c\u6570\u636e\u7684\u5730\u5740 \u2461\u8fdb\u7a0b\u540c\u6b65\u548c\u901a\u4fe1\u673a\u5236 \u2462\u8d44\u6e90\u6e05\u5355 \u2463\u94fe\u63a5\u6307\u9488</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#3-linux","title":"3 Linux\u7684\u8fdb\u7a0b\u63a7\u5236\u5757","text":"<p>Linux PCB\u5927\u5c0f\u4e3a8KB</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#4_1","title":"4 \u8fdb\u7a0b\u63a7\u5236","text":"<p>1\u3001\u8fdb\u7a0b\u7684\u57fa\u672c\u72b6\u6001</p> <p>1.1 \u8fdb\u7a0b\u7684\u4e09\u79cd\u57fa\u672c\u72b6\u6001</p> <p>\u5c31\u7eea\u72b6\u6001\uff1a\u8fdb\u7a0b\u4e00\u4f46\u83b7\u5f97CPU\u5c31\u53ef\u4ee5\u6295\u5165\u8fd0\u884c\u7684\u72b6\u6001\u3002</p> <p>\u6267\u884c\u72b6\u6001\uff1a\u8fdb\u7a0b\u83b7\u5f97CPU\u6b63\u5728\u8fd0\u884c\u7684\u72b6\u6001\u3002</p> <p>\u963b\u585e\u72b6\u6001\uff1a\u8fdb\u7a0b\u7531\u4e8e\u7b49\u5f85\u8d44\u6e90\u6216\u67d0\u4e2a\u4e8b\u4ef6\u7684\u53d1\u751f\u800c\u6682\u505c\u6267\u884c\u7684\u72b6\u6001\u3002 </p> <p>1.2 \u8fdb\u7a0b\u72b6\u6001\u7684\u8f6c\u6362</p> <p></p> <p>1.3 \u8fdb\u7a0b\u7684\u7ec4\u7ec7</p> <p>\u200b   \u5f53\u7cfb\u7edf\u4e2d\u6709\u5f88\u591a\u8fdb\u7a0b\u65f6\uff0c\u53ef\u4ee5\u7528\u961f\u5217\u628a\u8fdb\u7a0b\u63a7\u5236\u5757\u7ec4\u7ec7\u8d77\u6765\uff0c\u5f62\u6210\u8fdb\u7a0b\u961f\u5217\u3002\u628a\u5177\u6709\u76f8\u540c\u72b6\u6001\u7684\u8fdb\u7a0b\u653e\u5728\u540c\u4e00\u4e2a\u961f\u5217\u4e2d\uff0c\u5177\u6709\u4e0d\u540c\u72b6\u6001\u7684\u8fdb\u7a0b\u5c31\u53ef\u5f62\u6210\u4e0d\u540c\u7684\u8fdb\u7a0b\u961f\u5217\u3002\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u7684\u8fdb\u7a0b\u6784\u6210\u7684\u8fdb\u7a0b\u961f\u5217\u79f0\u4e3a\u5c31\u7eea\u961f\u5217\uff0c\u5904\u4e8e\u963b\u585e\u72b6\u6001\u7684\u8fdb\u7a0b\u6784\u6210\u7684\u8fdb\u7a0b\u961f\u5217\u79f0\u4e3a\u963b\u585e\u961f\u5217\u3002</p> <p>1.4 \u94fe\u63a5\u65b9\u5f0f</p> <p>\u200b    \u628a\u5177\u6709\u76f8\u540c\u72b6\u6001\u7684PCB\u7528\u5176\u4e2d\u7684\u94fe\u63a5\u5b57\uff0c\u94fe\u63a5\u6210\u4e00\u4e2a\u961f\u5217\u3002\u5c31\u7eea\u961f\u5217\u3001\u6267\u884c\u961f\u5217\u548c\u963b\u585e\u961f\u5217\u3002</p> <p>\u200b   \u8fdb\u7a0b\u94fe\u8868\uff0c\u5faa\u73af\u961f\u5217</p> <p>\u200b   Pidhash\u8868\u53ca\u94fe\u8868 \u53c2\u8003\uff1aLinux\u5185\u6838\u63a2\u79d8\u2014\u2014\u8fdb\u7a0b\uff08\u4e8c\uff09</p> <p>\u200b   \u8fdb\u7a0b\u6811</p> <p>\u200b   \u7ed3\u6784\u6570\u7ec4</p> <p>2\u3001\u8fdb\u7a0b\u7684\u521b\u5efa</p> <p>2.1 \u5f15\u8d77\u521b\u5efa\u8fdb\u7a0b\u7684\u4e8b\u4ef6\uff1a\u2460 \u7528\u6237\u767b\u5f55 \u2461 \u4f5c\u4e1a\u8c03\u5ea6\u2462 \u63d0\u4f9b\u670d\u52a1\u2463 \u5e94\u7528\u8bf7\u6c42     </p> <p>2.2 \u8fdb\u7a0b\u521b\u5efa \u8c03\u7528\u521b\u5efa\u65b0\u8fdb\u7a0b\u7684\u539f\u8bed\u6765\u521b\u5efa\u8fdb\u7a0b\uff0c\u4e00\u822c\u6b65\u9aa4\u4e3a\uff1a \u2460 \u7533\u8bf7\u7a7a\u767dPCB\u2461 \u4e3a\u65b0\u8fdb\u7a0b\u5206\u914d\u8d44\u6e90\u2462 \u521d\u59cb\u5316\u8fdb\u7a0b\u63a7\u5236\u5757 \u2463 \u5c06\u65b0\u8fdb\u7a0b\u63d2\u5165\u5c31\u7eea\u961f\u5217</p> <p>3\u3001\u8fdb\u7a0b\u963b\u585e</p> <p>3.1 \u5f15\u8d77\u8fdb\u7a0b\u963b\u585e\u548c\u5524\u9192\u7684\u4e8b\u4ef6\u2460\u8bf7\u6c42\u7cfb\u7edf\u670d\u52a1\uff0c\u5982\uff1a\u6253\u5370\u670d\u52a1\u3002\u2461\u542f\u52a8\u67d0\u79cd\u64cd\u4f5c\uff0c\u5982\uff1a\u542f\u52a8I/O\u6216\u542f\u52a8\u6253\u5370\u673a\u3002\u2462 \u65b0\u6570\u636e\u5c1a\u672a\u5230\u8fbe\uff0c\u5982\uff1a\u4e00\u4e2a\u8ba1\u7b97\u8fdb\u7a0b\uff0c\u5982\u679c\u65b0\u7684\u8f93\u5165 \u6570\u636e\u8fd8\u6ca1\u6709\u5230\u8fbe\uff0c\u5219\u8ba1\u7b97\u8fdb\u7a0b\u9700\u8981\u963b\u585e\u7b49\u5f85\u3002</p> <p>3.2 \u8fdb\u7a0b\u963b\u585e\u7684\u7b80\u5316\u8fc7\u7a0b\u2460\u6682\u505c\u8fdb\u7a0b\u7684\u6267\u884c\uff0c\u5c06\u8fdb\u7a0b\u7684\u72b6\u6001\u6539\u4e3a\u963b\u585e\u6001\u3002\u2461\u5c06\u8fdb\u7a0b\u63d2\u5165\u76f8\u5e94\u7684\u963b\u585e\u961f\u5217\u3002\u2462\u8f6c\u8fdb\u7a0b\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u91cd\u65b0\u8fdb\u884c\u8fdb\u7a0b\u8c03\u5ea6\u3002</p> <p>4\u3001\u8fdb\u7a0b\u5524\u9192</p> <p>4.1 \u8fdb\u7a0b\u5524\u9192\u8fc7\u7a0b \u2460\u5c06\u8fdb\u7a0b\u4ece\u963b\u585e\u961f\u5217\u4e2d\u79fb\u51fa \u2461\u5c06\u8fdb\u7a0b\u72b6\u6001\u7531\u963b\u585e\u6539\u4e3a\u5c31\u7eea \u2462\u5c06\u8fdb\u7a0b\u63d2\u5165\u5c31\u7eea\u961f\u5217</p> <p>5\u3001\u8fdb\u7a0b\u7684\u7ec8\u6b62</p> <p>5.1 \u5f15\u8d77\u8fdb\u7a0b\u7ec8\u6b62\u7684\u4e8b\u4ef6\u2460\u6b63\u5e38\u7ed3\u675f\u2461\u5f02\u5e38\u7ed3\u675f\u2462\u5916\u754c\u5e72\u9884</p> <p>5.2 \u8fdb\u7a0b\u7ec8\u6b62\u8fc7\u7a0b \u2460\u4ece\u8fdb\u7a0bPCB\u4e2d\u8bfb\u8fdb\u7a0b\u72b6\u6001\u2461\u82e5\u8fdb\u7a0b\u6b63\u5728\u6267\u884c\u5219\u7ec8\u6b62\u8fdb\u7a0b\u7684\u6267\u884c\u2462\u82e5\u8fdb\u7a0b\u6709\u5b50\u5b59\u8fdb\u7a0b\u5219\u7ec8\u6b62\u5b50\u5b59\u8fdb\u7a0b*(\u4e0d\u4e00\u5b9a\uff09\u2463\u91ca\u653e\u8d44\u6e90 \u2464\u5c06\u7ec8\u6b62\u8fdb\u7a0b\u7684PCB\u201c\u79fb\u201d\u51fa</p> <p>\u6ce8\uff1a\u7cfb\u7edf\u5f15\u5bfc\u8fc7\u7a0b\uff1a</p> <p>\u6267\u884cBIOS\u7a0b\u5e8f\u5c06BOOT\u7a0b\u5e8f\u52a0\u8f7d\u5165\u5185\u5b58</p> <p>\u6267\u884cBOOT\u7a0b\u5e8f\uff0c\u4ece\u5916\u5b58\u627e\u5230Loader\u7a0b\u5e8f\uff0c\u5c06\u5176\u52a0\u8f7d\u5165\u5185\u5b58\uff0c\u5e76\u6267\u884c\u8be5\u7a0b\u5e8f</p> <p>Loader\u7a0b\u5e8f\u5c06\u5185\u6838\u7a0b\u5e8f\u4ece\u5916\u5b58\u52a0\u8f7d\u5165\u5185\u5b58</p> <p>\u5185\u6838\u5f00\u59cb\u6267\u884c</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#5_1","title":"5 \u64cd\u4f5c\u7cfb\u7edf\u5185\u6838","text":"<p>1\u3001\u4e2d\u65ad</p> <p>\u4e2d\u65ad\u662f\u6539\u53d8\u5904\u7406\u5668\u6267\u884c\u6307\u4ee4\u987a\u5e8f\u7684\u4e00\u79cd\u4e8b\u4ef6\u3002\u8fd9\u6837\u7684\u4e8b\u4ef6\u4e0eCPU\u82af\u7247\u5185\u5916\u90e8 \u786c\u4ef6\u7535\u8def\u4ea7\u751f\u7684\u7535\u4fe1\u53f7\u76f8\u5bf9\u5e94 \u3002</p> <p>\u8ba1\u7b97\u673a\u5728\u6267\u884c\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u51fa\u73b0\u4e2d\u65ad\u65f6\uff0c\u8ba1\u7b97\u673a\u505c\u6b62\u73b0\u884c\u7a0b\u5e8f\u7684\u8fd0\u884c\uff0c\u8f6c\u5411\u5bf9\u8fd9\u4e9b\u4e2d\u65ad\u4e8b\u4ef6\u7684\u5904\u7406\uff0c\u5904\u7406\u7ed3\u675f\u540e\u518d\u8fd4\u56de\u5230\u73b0\u884c\u7a0b\u5e8f\u7684\u95f4\u65ad\u5904\u3002</p> <p>\u5f15\u5165\u4e2d\u65ad\u673a\u5236\u80fd\u6709\u6548\u63d0\u9ad8CPU\u7684\u5229\u7528\u7387\uff0c\u6539\u5584\u7cfb\u7edf\u6027\u80fd\u3002</p> <p>\u4e3a\u4ec0\u4e48\u5f15\u5165\u4e2d\u65ad\uff1f\u5f15\u5165\u4e2d\u65ad\u673a\u5236\u540e\uff0cCPU\u53ef\u4ee5\u4e0e\u5176\u5b83\u8bbe\u5907\u5e76\u884c\u5de5\u4f5c\uff0c\u80fd\u6709\u6548\u63d0\u9ad8CPU\u7684\u5229\u7528\u7387\uff0c\u6539\u5584\u7cfb\u7edf\u6027\u80fd\uff0c\u652f\u6301\u7cfb\u7edf\u7684\u5f02\u6b65\u6027\u3002</p> <p>1.1 \u4e2d\u65ad\u7c7b\u578b</p> <p>\u5185\u90e8\u4e2d\u65ad\u548c\u5916\u90e8\u4e2d\u65ad</p> <p>1.2 \u4e2d\u65ad\u54cd\u5e94</p> <p>\u54cd\u5e94\u5916\u90e8\u4e2d\u65ad\u7684\u6761\u4ef6:\u5f00\u4e2d\u65ad</p> <p>\u54cd\u5e94\u5916\u90e8\u4e2d\u65ad\u7684\u65f6\u673a:CPU\u6bcf\u6267\u884c\u5b8c\u4e00\u6761\u6307\u4ee4</p> <p>\u5185\u90e8\u4e2d\u65ad\uff1a\u968f\u65f6\u53ef\u80fd\u4ea7\u751f</p> <p>1.3 \u5355\u91cd\u4e2d\u65ad\u7684\u6267\u884c</p> <p></p> <p>\u6ce8\uff1a\u73b0\u5728\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u5927\u591a\u5141\u8bb8\u4e2d\u65ad\u5d4c\u5957\uff0c\u5728\u8fd9\u6837\u7684\u7cfb\u7edf\u4e2d\uff0c\u4fdd\u62a4\u5b8c\u73b0\u573a\u540e\u5c31\u53ef\u4ee5\u6253\u5f00\u4e2d\u65ad\uff0c\u5141\u8bb8\u54cd\u5e94\u65b0\u7684\u4e2d\u65ad\u3002</p> <p>1.4 \u5982\u4f55\u627e\u5230\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\uff1f</p> <p>\u4e0d\u540c\u4e2d\u65ad\u6e90\u5bf9\u5e94\u4e0d\u540c\u7684\u4e2d\u65ad\u5411\u91cf</p> <p>\u6839\u636e\u4e2d\u65ad\u5411\u91cf\u67e5\u627e\u4e2d\u65ad\u5411\u91cf\u8868</p> <p>\u4ece\u4e2d\u65ad\u5411\u91cf\u8868\u4e2d\u8bfb\u53d6\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\u76f8\u5173\u4fe1\u606f</p> <p>\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\u76f8\u5173\u4fe1\u606f\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740=idtr\u4e2d\u7684\u5730\u5740+\u4e2d\u65ad\u5411\u91cf\u8868\u8868\u9879\u7684\u957f\u5ea6\u00d7\u4e2d\u65ad\u5411\u91cf\u7684\u503c\uff0cidtr\u4e2d\u7684\u5730\u5740\u5373\u4e3a\u4e2d\u65ad\u5411\u91cf\u8868\u7684\u8d77\u59cb\u5730\u5740\u3002</p> <p>1.5 \u5173\u4e8e\u4e2d\u65adOS\u8981\u505a\u7684\u4e8b\u60c5</p> <p>\u521d\u59cb\u5316\u4e2d\u65ad\u5411\u91cf\u8868</p> <p>\u521d\u59cb\u5316\u4e2d\u65ad\u5411\u91cf\u8868\u5bc4\u5b58\u5668\uff08idtr\u5bc4\u5b58\u5668\uff09</p> <p>\u6267\u884c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f</p> <p>1.6 \u9700\u8981\u4e86\u89e3\u7684\u786c\u4ef6\uff1a</p> <p>\u4e0d\u540c\u4e2d\u65ad\u6e90\u5bf9\u5e94\u7684\u4e2d\u65ad\u5411\u91cf\u503c</p> <p>\u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668\u63a5\u53e3\uff08PIC \u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668\uff09</p> <p>\u4e0e\u4e2d\u65ad\u76f8\u5173\u7684\u5bc4\u5b58\u5668\u540d\u79f0\u53ca\u5176\u7528\u9014</p> <p>2\u3001\u65f6\u949f\u7ba1\u7406</p> <p>2.1 \u65f6\u949f\u7684\u91cd\u8981\u6027</p> <p>\u5b9a\u65f6\u6d4b\u91cf </p> <p>\u7f16\u8bd1\u7a0b\u5e8f</p> <p>\u9632\u6b62\u8fdb\u7a0b\u5784\u65adCPU\u6216\u5176\u4ed6\u8d44\u6e90(CPU\u65f6\u95f4\u7247)</p> <p>\u4e0e\u65f6\u949f\u76f8\u5173\u7684\u8f6f\u4ef6\u9700\u8981\u65f6\u949f\u652f\u6301</p> <p>2.2 \u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7684\u65f6\u949f</p> <p>\u5927\u90e8\u5206PC\u673a\u4e2d\u6709\u4e24\u4e2a\u65f6\u949f\u6e90\uff0c\u5206\u522b\u53eb\u505aRTC\u548cOS\u65f6\u949f\u3002</p> <p>RTC\u65f6\u949f\u4e5f\u53ebCMOS\u65f6\u949f\uff0c\u662f\u4e00\u5757\u65f6\u949f\u82af\u7247\uff0c\u9760\u7535\u6c60\u4f9b\u7535\uff0c\u4e3a\u8ba1\u7b97\u673a\u63d0\u4f9b\u8ba1\u65f6\u6807\u51c6\uff0c\u662f\u6700\u539f\u59cb\u3001\u6700\u5e95\u5c42\u7684\u6570\u636e\u3002</p> <p>OS\u65f6\u949f\u4ea7\u751f\u4e8ePC\u4e3b\u677f\u4e0a\u7684\u5b9a\u65f6/\u8ba1\u6570\u82af\u7247\uff0c\u5728\u5f00\u673a\u65f6\u6709\u6548\u3002</p> <p></p> <p>2.3 \u64cd\u4f5c\u7cfb\u7edf\u7684\u65f6\u949f\u673a\u5236</p> <p>2.3.1 \u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u9700\u8981\u5b8c\u6210\u7684\u5b9a\u65f6\u6d4b\u91cf\u529f\u80fd\uff1a</p> <p>1.\u4fdd\u5b58\u5f53\u524d\u7684\u65e5\u671f\u548c\u65f6\u95f4\uff1b2.\u7ef4\u6301\u5b9a\u65f6\u5668\u3002</p> <p>2.3.2 \u5982\u4f55\u5b9e\u73b0\uff1f</p> <p>1.\u64cd\u4f5c\u7cfb\u7edf\u4f9d\u9760\u65f6\u949f\u786c\u4ef6\uff08\u53ef\u7f16\u7a0b\u95f4\u9694\u5b9a\u65f6\u5668\uff092.\u65f6\u949f\u8f6f\u4ef6\uff08\u65f6\u949f\u9a71\u52a8\u7a0b\u5e8f\uff09</p> <p>2.3.3 OS\u65f6\u949f\u786c\u4ef6\uff08\u53ef\u7f16\u7a0b\u95f4\u9694\u5b9a\u65f6\u5668PIT\uff0cProgrammable Interval Timer)\uff09</p> <p>\u529f\u80fd\uff1a\u6309\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u4ea7\u751f\u65f6\u949f\u4e2d\u65ad\uff0c\u6d4b\u91cf\u901d\u53bb\u7684\u65f6\u95f4,\u5e76\u89e6\u53d1\u4e0e\u65f6\u95f4\u6709\u5173\u7684\u64cd\u4f5c\u3002</p> <p>\u7ec4\u6210\uff1aOS\u65f6\u949f\u7531\u4e09\u4e2a\u5143\u4ef6\u7ec4\u6210\uff1a\u6676\u632f\u3001\u8ba1\u6570\u5668\u3001\u4fdd\u6301\u5bc4\u5b58\u5668\u3002</p> <p></p> <p></p> <p>2.3.4 \u65f6\u949f\u8f6f\u4ef6\uff08\u65f6\u949f\u9a71\u52a8\u7a0b\u5e8f\uff09</p> <p>\u65f6\u949f\u9a71\u52a8\u7a0b\u5e8f\u505a\u7684\u51e0\u4ef6\u4e8b\uff1a</p> <p>\u2460\u7ef4\u62a4\u65e5\u671f\u3001\u65f6\u95f4   \u2461\u9012\u51cf\u65f6\u95f4\u7247\u5e76\u68c0\u67e5\u662f\u5426\u4e3a\u96f6\uff0c\u9632\u6b62\u8fdb\u7a0b\u8fd0\u884c\u8d85\u65f6 \u2462\u5bf9 CPU\u7684\u4f7f\u7528\u60c5\u51b5\u8bb0\u5e10 \u2463\u9012\u51cf\u62a5\u8b66\u8ba1\u6570\u5668</p> <p>3\u3001\u7cfb\u7edf\u8c03\u7528</p> <p>\u7cfb\u7edf\u8c03\u7528\u662f\u4e00\u7fa4\u9884\u5148\u5b9a\u4e49\u597d\u7684\u6a21\u5757,\u5b83\u4eec\u63d0\u4f9b\u4e00\u6761\u7ba1\u9053\u8ba9\u5e94\u7528\u7a0b\u5e8f\u6216\u4e00\u822c\u7528\u6237\u80fd\u7531\u6b64\u5f97\u5230\u6838\u5fc3\u7a0b\u5e8f\u7684\u670d\u52a1\u3002\u7cfb\u7edf\u8c03\u7528\u662f\u6838\u5fc3\u7a0b\u5e8f\u4e0e\u7528\u6237\u7a0b\u5e8f\u4e4b\u95f4\u7684\u63a5\u53e3\uff0c\u5728\u7c7bUNIX\u7cfb\u7edf\u4e2d\uff0c\u7cfb\u7edf\u8c03\u7528\u591a\u4f7f\u7528C\u8bed\u8a00\u6240\u63d0\u4f9b\u7684\u51fd\u6570\u5e93\u63a5\u53e3\u3002\u5982\uff1a\u5728\u7a0b\u5e8f\u4e2d\uff0c\u4f7f\u7528C\u7684\u51fd\u6570printf(   )\u3002</p> <p>3.1 \u7cfb\u7edf\u8c03\u7528\u4e0e\u4e00\u822c\u51fd\u6570\u7684\u533a\u522b</p> <p>\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u4f8b\u7a0b\u8fd0\u884c\u5728\u7cfb\u7edf\u6001\uff08\u6838\u5fc3\u6001\uff09\u800c\u4e00\u822c\u51fd\u6570\u8fd0\u884c\u5728\u7528\u6237\u6001\u3002</p> <p>\u7cfb\u7edf\u8c03\u7528\u4e0e\u4e00\u822c\u51fd\u6570\u8c03\u7528\u7684\u6267\u884c\u8fc7\u7a0b\u662f\u4e0d\u540c\u7684\u3002\u5f53\u7cfb\u7edf\u8c03\u7528\u6267\u884c\u65f6\uff0c\u5f53\u524d\u8fdb\u7a0b\u88ab\u4e2d\u65ad\uff0c\u7531\u7cfb\u7edf\u627e\u76f8\u5e94\u7684\u7cfb\u7edf\u8c03\u5b9e\u73b0\u4f8b\u7a0b\uff0c\u5e76\u5728\u7cfb\u7edf\u6001\u4e0b\u6267\u884c\uff0c\u6267\u884c\u7ed3\u679c\u8fd4\u56de\u8fdb\u7a0b\u3002 </p> <p>\u7cfb\u7edf\u8c03\u7528\u8981\u8fdb\u884c\u201c\u4e2d\u65ad\u5904\u7406\u201d\u6bd4\u4e00\u822c\u51fd\u6570\u8c03\u7528\u591a\u4e86\u4e00\u4e9b\u7cfb\u7edf\u5f00\u9500\u3002</p> <p>\u6ce8\uff1aCPU\u5185\u6838\u6001\u548c\u7528\u6237\u6001</p> <p>\uff081\uff09\u5185\u6838\u6001\u6267\u884c</p> <p>\u5185\u6838\u7a7a\u95f4\u662f\u6307\u542b\u6709\u4e00\u5207\u7cfb\u7edf\u6838\u5fc3\u4ee3\u7801\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5f53CPU\u6267\u884c\u7cfb\u7edf\u6838\u5fc3\u4ee3\u7801\u65f6\uff0c\u79f0\u8fdb\u7a0b\u5904\u4e8e\u5185\u6838\u6001\u6267\u884c\uff0cCPU\u72b6\u6001\u4e3a\u5185\u6838\u6001\u3002</p> <p>\uff082\uff09\u7528\u6237\u6001\u6267\u884c</p> <p>\u7528\u6237\u7a7a\u95f4\u662f\u6307\u7528\u6237\u8fdb\u7a0b\u6240\u5904\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5f53CPU\u6267\u884c\u7528\u6237\u7a7a\u95f4\u7684\u4ee3\u7801\u65f6\uff0c\u79f0\u8be5\u8fdb\u7a0b\u5728\u7528\u6237\u6001\u6267\u884c\u3002CPU\u72b6\u6001\u4e3a\u7528\u6237\u6001</p> <p>0x 0000_0000 ~  0x BFFF_FFFF \u7528\u6237\u7a7a\u95f4 3GB</p> <p>0x C000_0000 ~  0x FFFF_FFFF \u5185\u6838\u7a7a\u95f4 1GB</p> <p>3.2 Linux\u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0</p> <p>system_call()</p> <p>\u7cfb\u7edf\u8c03\u7528\u53f7:\u4e0e\u7cfb\u7edf\u8c03\u7528\u4e00\u4e00\u5bf9\u5e94\u7684\u6574\u6570</p> <p>\u7cfb\u7edf\u8c03\u7528\u8868:\u5b58\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u4f8b\u7a0b\u8d77\u59cb\u5730\u5740\u7684\u6570\u636e\u7ed3\u6784 \uff0c\u7531\u7cfb\u7edf\u5728\u521d\u59cb\u5316\u65f6\u5efa\u7acb\u3002\u5728Linux2.4.18\u548cLinux2.6.11\u4e2d\u8fd9\u4e2a\u8868\u662fsys_call_table\u6570\u7ec4\uff0c\u6709NR_syscalls\u4e2a\u8868\u9879\uff08\u901a\u5e38\u662f256\u4e2a,\u5728linux2.6.11\u4e2d\u662f289\uff09\uff1a\u7b2cn\u4e2a\u8868\u9879\u5305\u542b\u7cfb\u7edf\u8c03\u7528\u53f7\u4e3an\u7684\u670d\u52a1\u4f8b\u7a0b\u7684\u5730\u5740\u3002</p> <p>\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u4f8b\u7a0b</p> <p>TODO \uff1a\u7c7b\u4f3c\u4e8e\u5916\u8bbe\u7684\u63a7\u5236</p> <p>int 0x80 sysenter \u90fd\u53ef\u4ee5\u5b8c\u6210\u4ece\u7528\u6237\u6001\u5230\u5185\u6838\u6001\u7684\u5207\u6362</p> <p></p> <p>3.3 \u7cfb\u7edf\u8c03\u7528\u7684\u7c7b\u578b</p> <p>\u8fdb\u7a0b\u63a7\u5236\u7c7b\u7cfb\u7edf\u8c03\u7528:\u521b\u5efa\u3001\u64a4\u6d88\u8fdb\u7a0b\uff1b\u83b7\u5f97\u3001\u6539\u53d8\u8fdb\u7a0b\u5c5e\u6027\uff1b</p> <p>\u6587\u4ef6\u64cd\u7eb5\u7cfb\u7edf\u8c03\u7528\uff1a\u521b\u5efa\u3001\u5220\u9664\u3001\u6253\u5f00\u3001\u5173\u95ed\u3001\u8bfb\u3001\u5199\u6587\u4ef6\uff1b</p> <p>\u8bbe\u5907\u7ba1\u7406\u7cfb\u7edf\u8c03\u7528\uff1a\u8bf7\u6c42\u3001\u91ca\u653e\u8bbe\u5907\uff1b</p> <p>\u901a\u4fe1\u7528\u7cfb\u7edf\u8c03\u7528\uff1a\u6253\u5f00\u3001\u5173\u95ed\u8fde\u63a5\u3001\u4ea4\u6362\u4fe1\u606f\uff1b</p> <p>\u4fe1\u606f\u7ef4\u62a4\uff1a\u8fd4\u56de\u7cfb\u7edf\u5f53\u524d\u65e5\u671f\u3001\u65f6\u95f4\u3001\u7248\u672c\u53f7\u3001\u7528\u6237\u6570\u3001\u7a7a\u95f2\u5185\u5b58\u3001\u78c1\u76d8\u7a7a\u95f4\u5927\u5c0f\u3002</p> <p>3.4 Linux\u4e2d\u7684\u7cfb\u7edf\u8c03\u7528\u4e3e\u4f8b</p> <p>fork\u521b\u5efa\u4e00\u4e2a\u65b0\u8fdb\u7a0b clone\u6309\u6307\u5b9a\u6761\u4ef6\u521b\u5efa\u5b50\u8fdb\u7a0b execve\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6 exit\u4e2d\u6b62\u8fdb\u7a0b</p> <p>open\u6253\u5f00\u6587\u4ef6 creat\u521b\u5efa\u65b0\u6587\u4ef6 close\u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u5b57 read\u8bfb\u6587\u4ef6 write\u5199\u6587\u4ef6</p> <p>3.5 \u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7cfb\u7edf\u8c03\u7528\u7684\u4f18\u70b9</p> <p>\u4f7f\u7f16\u7a0b\u66f4\u52a0\u5bb9\u6613\uff0c\u628a\u7528\u6237\u4ece\u5b66\u4e60\u786c\u4ef6\u8bbe\u5907\u7684\u4f4e\u7ea7\u7f16\u7a0b\u7279\u6027\u4e2d\u89e3\u653e\u51fa\u6765\uff1b</p> <p>\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u3002</p> <p>4\u3001\u7ebf\u7a0b</p> <p>\u7ebf\u7a0b\u662f\u8fdb\u7a0b\u4e2d\u7684\u4e00\u4e2a\u5b9e\u4f53\uff0c\u662f\u88ab\u7cfb\u7edf\u72ec\u7acb\u8c03\u5ea6\u548c\u5206\u6d3e\u7684\u57fa\u672c\u5355\u4f4d\u3002\u7ebf\u7a0b\u53ea\u62e5\u6709\u5728\u8fd0\u884c\u4e2d\u5fc5\u9700\u7684\u8d44\u6e90\uff0c\u5305\u62ec\u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u4e00\u7ec4\u5bc4\u5b58\u5668\u548c\u6808\uff0c\u4f46\u5b83\u53ef\u4ee5\u4e0e\u540c\u5c5e\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5176\u4ed6\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u5168\u90e8\u8d44\u6e90\uff0c\u5982\uff1a\u865a\u62df\u5730\u5740\u7a7a\u95f4\u3001\u6587\u4ef6\u3002</p> <p>\u6ce8\uff1a\u8fdb\u7a0b\u4f5c\u4e3a\u62e5\u6709\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\u3002</p> <p>4.1 \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u5173\u7cfb</p> <p></p> <p>4.2 \u7ebf\u7a0b\u7684\u4e09\u79cd\u57fa\u672c\u72b6\u6001</p> <p>\u5c31\u7eea\uff0c\u8fd0\u884c\uff0c\u963b\u585e\u4e09\u79cd\u72b6\u6001\uff08\u540c\u8fdb\u7a0b\u7684\u4e09\u79cd\u57fa\u672c\u72b6\u6001\uff09</p> <p>4.3 \u7ebf\u7a0b\u63a7\u5236\u5757TCB</p> <p>\u7ebf\u7a0b\u63a7\u5236\u5757</p> <p>\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u7531\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u8868\u793a\uff0c\u5305\u62ec\u5b83\u7684\u57fa\u672c\u72b6\u6001\u3001\u6807\u8bc6\u4ee5\u53ca\u8bb0\u8d26\u4fe1\u606f\u3002</p> <p>\u7ebf\u7a0b\u63a7\u5236\u5757\u4e2d\u7684\u4fe1\u606f</p> <p>\u2460\u7ebf\u7a0b\u6807\u8bc6\u7b26\u4fe1\u606f \u2461\u5904\u7406\u673a\u72b6\u6001\u4fe1\u606f \u2462\u7ebf\u7a0b\u8c03\u5ea6\u4fe1\u606f \u2463\u7ebf\u7a0b\u63a7\u5236\u4fe1\u606f</p> <p>4.4 \u7ebf\u7a0b\u63a7\u5236\u5757\u7684\u7ec4\u7ec7\u65b9\u5f0f</p> <p>\u6b63\u5728\u6267\u884c\u961f\u5217\u3001\u5c31\u7eea\u961f\u5217\u548c\u963b\u585e\u961f\u5217\u3002</p> <p>4.5 \u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u7684\u5173\u7cfb</p> <p>\u2460\u8d44\u6e90\u548c\u8c03\u5ea6 \u2461\u5730\u5740\u7a7a\u95f4\u8d44\u6e90   \u2462\u901a\u4fe1\u5173\u7cfb \u2463\u5e76\u53d1\u6027 \u2464\u7cfb\u7edf\u5f00\u9500</p> <p>TODO \uff1a\u67e5\u8be2\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p>4.6 \u7ebf\u7a0b\u7684\u63a7\u5236</p> <p>(1) \u7ebf\u7a0b\u7684\u521b\u5efa (2) \u7ebf\u7a0b\u7684\u7ec8\u6b62 (3) \u7ebf\u7a0b\u7684\u8c03\u5ea6  (4) \u7ebf\u7a0b\u7684\u963b\u585e\u4e0e\u5524\u9192  (5)\u7ebf\u7a0b\u7684\u540c\u6b65</p> <p>4.7 \u7ebf\u7a0b\u5b9e\u73b0\u7684\u6a21\u578b</p> <p>\u591a\u5bf9\u4e00\u6a21\u578b\u3001\u4e00\u5bf9\u4e00\u6a21\u578b\u3001\u591a\u5bf9\u591a\u6a21\u578b</p> <p>\u53c2\u8003\uff1a</p> <p>\u7cfb\u7edf\u7ebf\u7a0b\uff08\u5185\u6838\u7ebf\u7a0b\uff09\u548c\u7528\u6237\u7ebf\u7a0b\u533a\u522b</p> <p>\u7528\u6237\u6001\u7ebf\u7a0b\u548c\u5185\u6838\u6001\u7ebf\u7a0b\u6709\u4ec0\u4e48\u533a\u522b\uff1f</p> <p>\u5185\u6838\u7ebf\u7a0b\u4e0e\u7528\u6237\u7ebf\u7a0b\u533a\u522b\u3001\u540c\u6b65\u4e92\u65a5\u7684\u5b9e\u73b0\u539f\u7406\u2014\u2014\u8be6\u89e3</p> <p>\u7528\u6237\u7ebf\u7a0b\u3001\u5185\u6838\u7ebf\u7a0b\u5bf9\u5e94\u5173\u7cfb\u7684\u4e09\u79cd\u6a21\u578b</p> <p>TODO\uff1a\u67e5\u8be2\u5185\u6838\u7ebf\u7a0b\u548c\u7528\u6237\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p>\u6ce8\uff1a\u6279\u5904\u7406\u7cfb\u7edf\u53ef\u4ee5\u5206\u4e3a\u5355\u9053\u6279\u5904\u7406\u7cfb\u7edf\u548c\u591a\u9053\u6279\u5904\u7406\u7cfb\u7edf\u3002\u6279\u5904\u7406\u662f\u6307\u7528\u6237\u5c06\u4e00\u6279\u4f5c\u4e1a\u63d0\u4ea4\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u540e\u5c31\u4e0d\u518d\u5e72\u9884,\u7531\u64cd\u4f5c\u7cfb\u7edf\u63a7\u5236\u5b83\u4eec\u81ea\u52a8\u8fd0\u884c\u3002</p> <p>\u8fdb\u7a0b\u5b58\u5728\u7684\u6807\u5fd7\u662f\uff08\u8fdb\u7a0b\u63a7\u5236\u5757PCB\uff09\u3002</p> <p>1\u3001\u4ec0\u4e48\u662f\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\ufe56\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u4e3b\u8981\u5b8c\u6210\u4ec0\u4e48\u529f\u80fd?</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u662f\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u7b2c\u4e00\u6b21\u6269\u5145\uff0c\u5185\u6838\u6267\u884cOS\u4e0e\u786c\u4ef6\u5173\u7cfb\u5bc6\u5207\uff0c\u6267\u884c\u9891\u7387\u9ad8\u7684\u6a21\u5757\uff0c\u5e38\u9a7b\u5185\u5b58\u3002</p> <p>\u4e0d\u540c\u7684OS\u5185\u6838\u5305\u62ec\u7684\u529f\u80fd\u4e0d\u540c\uff0c\u591a\u6570OS\u5185\u6838\u5305\u62ec\u4e0b\u8ff0\u529f\u80fd:</p> <p>\u652f\u6491\u529f\u80fd:</p> <p>\u4e2d\u65ad\u5904\u7406\u3001\u65f6\u949f\u7ba1\u7406\u3001\u539f\u8bed\u64cd\u4f5c</p> <p>\u8d44\u6e90\u7ba1\u7406\u529f\u80fd:</p> <p>\u8fdb\u7a0b\u7ba1\u7406\u3001\u5b58\u50a8\u5668\u7ba1\u7406\u3001\u8bbe\u5907\u7ba1\u7406</p> <p>2\u3001\u64cd\u4f5c\u7cfb\u7edf\u5728\u4ec0\u4e48\u65f6\u5019\u521b\u5efa\u8fdb\u7a0b\ufe56\u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\ufe56\u4e3e\u4f8b\u8bf4\u660e\u64cd\u4f5c\u7cfb\u7edf\u521b\u5efa\u8fdb\u7a0b\u7684\u8fc7\u7a0b\u548c\u8fdb\u7a0b\u6267\u884c\u7684\u529f\u80fd\u3002(\u7406\u89e3)</p> <p>\u5f15\u8d77\u521b\u5efa\u8fdb\u7a0b\u7684\u4e8b\u4ef6</p> <p>1\u3001\u7528\u6237\u767b\u5f552\u3001\u4f5c\u4e1a\u8c03\u5ea6 3\u3001\u63d0\u4f9b\u670d\u52a14\u3001\u5e94\u7528\u8bf7\u6c42\u3002</p> <p>\u8c03\u7528\u521b\u5efa\u65b0\u8fdb\u7a0b\u7684\u539f\u8bed\u6765\u521b\u5efa\u8fdb\u7a0b\uff0c\u4e00\u822c\u6b65\u9aa4\u4e3a:</p> <p>1\u3001\u7533\u8bf7\u7a7a\u767dPCB\u30022\u3001\u4e3a\u65b0\u8fdb\u7a0b\u5206\u914d\u8d44\u6e90\u30023\u3001\u521d\u59cb\u5316\u8fdb\u7a0b\u63a7\u5236\u5757\u30024\u3001\u5c06\u65b0\u8fdb\u7a0b\u63d2\u5165\u5c31\u7eea\u961f\u5217\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#6_1","title":"6 \u95ee\u9898","text":"<p>1\u3001\u4ec0\u4e48\u662f\u7cfb\u7edf\u6001\u548c\u7528\u6237\u6001\uff1f</p> <p>\u7528\u6237\u6001\u6267\u884c\uff1a\u7528\u6237\u7a7a\u95f4\u662f\u6307\u7528\u6237\u8fdb\u7a0b\u6240\u5904\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u5728\u7528\u6237\u7a7a\u95f4\u6267\u884c\u65f6\uff0c\u79f0\u8be5\u8fdb\u7a0b\u5728\u7528\u6237\u6001\u6267\u884c\u3002 \u7cfb\u7edf\u6001\u6267\u884c\uff1a\u7cfb\u7edf\u6838\u5fc3\u7a7a\u95f4\u662f\u6307\u542b\u6709\u4e00\u5207\u7cfb\u7edf\u6838\u5fc3\u4ee3\u7801\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5f53\u8fdb\u7a0b\u5904\u4e8e\u5177\u6709\u6267\u884c\u7cfb\u7edf\u6838\u5fc3\u4ee3\u7801\u7684\u6743\u529b\u4e4b\u72b6\u6001\u65f6\uff0c\u79f0\u4e3a\u8fdb\u7a0b\u5904\u4e8e\u7cfb\u7edf\u6001\u6267\u884c\u3002</p> <p>2\u3001\u4ec0\u4e48\u662f\u7cfb\u7edf\u8c03\u7528\uff1f\u7cfb\u7edf\u8c03\u7528\u4e0e\u5e93\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u7b80\u8981\u8bf4\u660e\u7cfb\u7edf\u8c03\u7528\u7684\u6267\u884c\u8fc7\u7a0b\u3002</p> <p>\u7b54\uff1a\u7cfb\u7edf\u8c03\u7528\u662f\u4e00\u7fa4\u9884\u5148\u5b9a\u4e49\u597d\u7684\u6a21\u5757,\u5b83\u4eec\u63d0\u4f9b\u4e00\u6761\u7ba1\u9053\u8ba9\u5e94\u7528\u7a0b\u5e8f\u6216\u4e00\u822c\u7528\u6237\u80fd\u7531\u6b64\u5f97\u5230\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\u7a0b\u5e8f\u7684\u670d\u52a1\u3002</p> <p>\u7cfb\u7edf\u8c03\u7528\u4e0e\u5e93\u51fd\u6570\u7684\u533a\u522b\uff1a</p> <p>\u7cfb\u7edf\u8c03\u7528\u8fd0\u884c\u5728\u7cfb\u7edf\u6001\uff08\u6838\u5fc3\u6001\uff09\u800c\u4e00\u822c\u51fd\u6570\u8fd0\u884c\u5728\u7528\u6237\u6001\u3002</p> <p>\u7cfb\u7edf\u8c03\u7528\u4e0e\u4e00\u822c\u51fd\u6570\u8c03\u7528\u7684\u6267\u884c\u8fc7\u7a0b\u4e0d\u540c\u3002</p> <p>\u7cfb\u7edf\u8c03\u7528\u8981\u8fdb\u884c\u201c\u4e2d\u65ad\u5904\u7406\u201d\u6bd4\u4e00\u822c\u51fd\u6570\u8c03\u7528\u591a\u4e86\u7cfb\u7edf\u5f00\u9500</p> <p>\u7cfb\u7edf\u8c03\u7528\u7684\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p>1\uff09\u4fdd\u5b58\u7cfb\u7edf\u8c03\u7528\u53f7\uff1b</p> <p>2\uff09\u6267\u884c\u9677\u5165\u6307\u4ee4\uff1b</p> <p>3\uff09\u6267\u884c\u4e0e\u9677\u5165\u6307\u4ee4\u76f8\u5173\u7684\u5904\u7406\u7a0b\u5e8f\uff1b</p> <p>4\uff09\u4ee5\u7cfb\u7edf\u8c03\u7528\u53f7\u4e3a\u7d22\u5f15\uff0c\u5728\u7cfb\u7edf\u8c03\u7528\u8868\u4e2d\u627e\u5230\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u4f8b\u7a0b\u7684\u8d77\u59cb\u5730\u5740\uff1b</p> <p>5\uff09\u6267\u884c\u7cfb\u7edf\u8c03\u7528\u4f8b\u7a0b\uff0c\u8fd4\u56de\u7528\u6237\u6001\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_5","title":"\u7b2c\u4e09\u7ae0   \u8fdb\u7a0b\u540c\u6b65","text":"<p>1\u3001\u4e3a\u4ec0\u4e48\u9700\u8981\u540c\u6b65\u673a\u5236\uff1f</p> <p>\u56e0\u4e3a\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u65e2\u8981\u652f\u6301\u591a\u8fdb\u7a0b\uff08\u591a\u7ebf\u7a0b\uff09\u7684\u5e76\u53d1\u6267\u884c\uff0c\u53c8\u8981\u4fdd\u8bc1\u5e76\u53d1\u6267\u884c\u7684\u7a0b\u5e8f\u7ed3\u679c\u662f\u53ef\u518d\u73b0\u7684\u3002</p> <p>2\u3001\u5728\u591a\u9053\u7a0b\u5e8f\u73af\u5883\u4e0b\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u4e24\u79cd\u5173\u7cfb\uff1a</p> <p>1.\u8d44\u6e90\u5171\u4eab 2.\u76f8\u4e92\u5408\u4f5c</p> <p>\u8fdb\u7a0b\u540c\u6b65\u7684\u4efb\u52a1\u5c31\u662f\uff1a</p> <p>1.\u5728\u8d44\u6e90\u5171\u4eab\u7684\u60c5\u51b5\u4e0b\uff1a\u4fdd\u8bc1\u8bf8\u8fdb\u7a0b\u4ee5\u4e92\u65a5\u7684\u65b9\u5f0f\u8bbf\u95ee\u4e34\u754c\u8d44\u6e90\u2014\u5fc5\u987b\u4ee5\u4e92\u65a5\u65b9  \u5f0f\u8bbf\u95ee\u7684\u5171\u4eab\u8d44\u6e90\uff1b</p> <p>2.\u5728\u76f8\u4e92\u5408\u4f5c\u7684\u5173\u7cfb\u4e2d\uff1a\u8fdb\u7a0b\u540c\u6b65\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u4fdd\u8bc1\u76f8\u4e92\u5408\u4f5c\u7684\u8bf8\u8fdb\u7a0b\u5728\u6267\u884c\u6b21\u5e8f\u4e0a\u534f\u8c03\uff0c\uff08\u6709\u4e9b\u6559\u6750\u628a\u8fd9\u79cd\u529f\u80fd\u79f0\u505a\u201c\u540c\u6b65\u201d\uff09\u3002\u76f8\u4e92\u5408\u4f5c\u7684\u8fdb\u7a0b\u53ef\u80fd\u540c\u65f6\u5b58\u5728\u8d44\u6e90\u5171\u4eab\u7684\u5173\u7cfb\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#1_2","title":"1 \u4e34\u754c\u8d44\u6e90","text":"<p>1\u3001\u4e34\u754c\u8d44\u6e90\u7684\u5b9a\u4e49</p> <p>\u4e34\u754c\u8d44\u6e90\uff1a\u4ee5\u4e92\u65a5\u65b9\u5f0f\u8bbf\u95ee\u7684\u5171\u4eab\u8d44\u6e90\u53eb\u505a\u4e34\u754c\u8d44\u6e90\u3002</p> <p>\u4e34\u754c\u533a\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u8bbf\u95ee\u4e34\u754c\u8d44\u6e90\u7684\u90a3\u6bb5\u4ee3\u7801\u79f0\u4e3a\u4e34\u754c\u533a\u3002</p> <p>\u8fdb\u5165\u533a\uff1a\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u8fdb\u5165\u4e34\u754c\u533a\u5e76\u5bf9\u4e34\u754c\u533a\u201c\u52a0\u9501\u201d\u7684\u4ee3\u7801\u3002</p> <p>\u9000\u51fa\u533a\uff1a\u91ca\u653e\u4e34\u754c\u533a\u8bbf\u95ee\u6743\u7684\u4ee3\u7801\u3002\u3001</p> <pre><code>P\n\uff5b\u2026 \u2026\n\u8fdb\u5165\u533a\nCS\n\u9000\u51fa\u533a\n\u2026 \u2026\n\uff5d\n</code></pre> <p>2\u3001\u540c\u6b65\u673a\u5236\u5e94\u9075\u5faa\u7684\u51c6\u5219 </p> <p>\u63a7\u5236\u4e34\u754c\u8d44\u6e90\u8bbf\u95ee\u6743\u7684\u63a7\u5236\u7b97\u6cd5\u5728\u8bbe\u8ba1\u4e0a\u5e94\u9075\u5faa\u7684\u539f\u5219 :</p> <p>1.\u7a7a\u95f2\u8ba9\u8fdb 2. \u5fd9\u5219\u7b49\u5f85 3. \u6709\u9650\u7b49\u5f85 4. \u8ba9\u6743\u7b49\u5f85</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#2_2","title":"2 \u4fe1\u53f7\u91cf\u673a\u5236","text":"<p>\u200b   \u5728\u4fe1\u53f7\u91cf\u673a\u5236\u4e2d\uff0c\u7528\u67d0\u79cd\u7c7b\u578b\u7684\u53d8\u91cf-\u4fe1\u53f7\u91cf\u7684\u53d6\u503c\u6765\u8868\u793a\u8d44\u6e90\u7684\u4f7f\u7528\u72b6\u51b5\uff0c\u6216\u67d0\u79cd\u4e8b\u4ef6\u662f\u5426\u53d1\u751f\uff0c\u4ee5\u6b64\u4e3a\u57fa\u7840\u5b9e\u73b0\u8fdb\u7a0b\u7684\u540c\u6b65\u3002\u6211\u4eec\u5c06\u4ecb\u7ecd\u6574\u578b\u4fe1\u53f7\u91cf\u673a\u5236\u3001\u8bb0\u5f55\u578b\u4fe1\u53f7\u91cf\u673a\u5236\u3001AND\u578b\u4fe1\u53f7\u91cf\u673a\u5236\u3002</p> <p>1\u3001\u6574\u578b\u4fe1\u53f7\u91cf</p> <p>\u200b   \u6574\u578b\u4fe1\u53f7\u91cf\u662f\u8868\u793a\u5171\u4eab\u8d44\u6e90\u72b6\u6001\u4e14\u53ea\u80fd\u7531\u7279\u6b8a\u64cd\u4f5c\u6539\u53d8\u7684\u6574\u578b\u91cf\u3002\uff08\u5176\u503c\u597d\u6bd4\u4fe1\u53f7\u706f\u7684\u989c\u8272\uff09</p> <p>\u200b   \u4fe1\u53f7\u91cf\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff08\u53ef\u4ee5\u662f\u6574\u578b\u6570\u3001\u6574\u578b\u6570\u7ec4\u3001\u94fe\u8868\u3001\u8bb0\u5f55\u578b\u53d8\u91cf\uff08\u7ed3\u6784\u4f53\uff09\uff09\u3002\u4fe1\u53f7\u91cf\u7684\u503c\u4e0e\u76f8\u5e94\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\u6709\u5173\u3002\u4fe1\u53f7\u91cf\u7684\u503c\u4ec5\u7531P\u3001V\u64cd\u4f5c\u6539\u53d8\u3002</p> <p>\u200b   \u601d\u8def\uff1a\u5b9a\u4e49\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\uff0c\u7528\u6574\u578b\u53d8\u91cf\u503c\u6807\u8bb0\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\uff1a\u5982\u6574\u578b\u91cf&gt;0,\u8bf4\u660e\u6709\u53ef\u7528\u8d44\u6e90\uff1b\u6574\u578b\u91cf\u22640\u8bf4\u660e\u8d44\u6e90\u5fd9\uff0c\u8fdb\u7a0b\u5fc5\u987b\u7b49\u5f85\u3002\u5bf9\u4e8e\u4e00\u6b21\u53ea\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u8bbf\u95ee\u7684CS\uff0c\u53ef\u5b9a\u4e49\u4e00\u4e2a\u7528\u4e8e\u4e92\u65a5\u7684\u6574\u578b\u4fe1\u53f7\u91cf\uff0c\u5e76\u88ab\u521d\u59cb\u5316\u4e3a1\u3002</p> <p>\u200b   \u6574\u578b\u4fe1\u53f7\u91cf\u7684wait\u548csignal\u64cd\u4f5c</p> <p>\u200b   wait(s)\u548csignal(s)\u662f\u539f\u5b50\u64cd\u4f5c\uff08\u6700\u57fa\u672c\u3001\u6700\u5c0f\u7684\u3001\u4e2d\u95f4\u4e0d\u5141\u8bb8\u63d2\u5165\u4efb\u4f55\u4e2d\u65ad\u7684\u64cd\u4f5c\u3002\u8981\u6267\u884c\u5c31\u8981\u6267\u884c\u5b8c\uff09\uff0c\u53ea\u8981\u4fe1\u53f7\u91cfs\u22640\u5c31\u4e0d\u65ad\u6d4b\u8bd5\uff0c\u4e0d\u6ee1\u8db3\u8ba9\u6743\u7b49\u5f85\u3002</p> <pre><code>var s:integer;      //s\u4e3a\u6574\u578b\u4fe1\u53f7\u91cf\nwait(s){            //\u7528\u4e8e\u7533\u8bf7\u8d44\u6e90\nwhile s\u22640 do no-op;\ns=s-1;\n}\n\nsignal(s){          //\u7528\u4e8e\u91ca\u653e\u8d44\u6e90\ns=s+1;\n}\n</code></pre> <p>\u6574\u578b\u4fe1\u53f7\u91cf\u5e94\u7528\u4e3e\u4f8b\uff1a</p> <p>\u7528\u6574\u578b\u4fe1\u53f7\u91cf\u5b9e\u73b0\u8fdb\u7a0b\u4e92\u65a5</p> <p>\u601d\u8def\uff1a\u4e3a\u5fc5\u987b\u4e92\u65a5\u8bbf\u95ee\u7684CS\u5b9a\u4e49\u4e00\u4e2a\u4e92\u65a5\u4fe1\u53f7\u91cfmutex\uff0c\u521d\u59cb\u503c\u4e3a1\u3002\u7136\u540e\uff0c\u5c06CS\u653e\u5728wait(mutex)\u548csignal(mutex)\u4e4b\u95f4\uff0c\u5f53CS\u53ef\u8bbf\u95ee\u65f6\uff0cwait(mutex)\u624d\u80fd\u6b63\u5e38\u7ed3\u675f\u4f7f\u8fdb\u7a0b\u8fdb\u5165\u4e34\u754c\u533a\u3002</p> <p>\u4f2a\u4ee3\u7801\uff1a</p> <pre><code>P1:\n{   \u2026\nwait(mutex);\ncounter=counter+1;\nsignal(mutex);\n\u2026\n}\nP2:\n{   \u2026\nwait(mutex);\ncounter=counter+1;\nsignal(mutex);\n\u2026\n}\n</code></pre> <p>\u7528\u6574\u578b\u4fe1\u53f7\u91cf\u5b9e\u73b0\u8fdb\u7a0b\u534f\u8c03</p> <p>\u6709p1\u548cp2\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u8981\u6c42p2\u5fc5\u987b\u5728p1\u7ed3\u675f\u540e\u6267\u884c\uff0c\u4e3a\u6b64\u53ef\u8bbe\u7f6e\u4e00\u4e2a\u4fe1\u53f7\u91cfs\uff0c\u521d\u59cb\u503c\u7f6e\u4e3a0\uff0c\u540c\u6b65\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>parbegin\n  begin p1; signal(s); end\n  begin wait(s); p2; end\nparend\n</code></pre> <p>\u5bf9\u6574\u578b\u4fe1\u53f7\u91cf\u673a\u5236\u7684\u603b\u7ed3</p> <p>\u2460\u6574\u578b\u4fe1\u53f7\u91cf\u7684\u503c\u53ea\u80fd\u7531wait\u548csignal\u64cd\u4f5c\u6539\u53d8</p> <p>\u2461==wait\u548csignal \u4e24\u4e2a\u64cd\u4f5c\u4e2d\u5bf9\u4fe1\u53f7\u91cf\u7684\u8bbf\u95ee\u662f\u4e0d\u80fd\u88ab\u4e2d\u65ad\u7684\u3002==\uff08\u4e3a\u4ec0\u4e48\uff1f\uff09</p> <p>\u2462\u539f\u5b50\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u5173\u4e2d\u65ad\u6765\u5b9e\u73b0\u3002\uff08\u4e3a\u4ec0\u4e48\u5bf9\u4e34\u754c\u8d44\u6e90\u7684\u8bbf\u95ee\u4e0d\u7b80\u5355\u5730\u901a\u8fc7\u5173\u4e2d\u65ad\u6765\u5b9e\u73b0\uff1f\uff09</p> <p>\u2463\u6574\u578b\u4fe1\u53f7\u91cf\u673a\u5236\u7684\u5b9e\u4f8b:Linux\u4e2d\u7684\u81ea\u65cb\u9501SpinLock</p> <p>\u2464\u4e0d\u540c\u7684\u8d44\u6e90\u5bf9\u5e94\u4e0d\u540c\u7684\u4fe1\u53f7\u91cf\uff0c\u5e76\u4e0d\u662f\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u8d44\u6e90\u7528\u540c\u4e00\u4e2a\u4fe1\u53f7\u91cf\u8868\u793a\u3002</p> <p>2\u3001\u8bb0\u5f55\u578b\u4fe1\u53f7\u91cf</p> <p>\uff081\uff09\u8bb0\u5f55\u578b\u4fe1\u53f7\u91cf\u7684\u6570\u636e\u7c7b\u578b </p> <pre><code>Type  semaphore=record\nvalue:integer        //\u8d44\u6e90\u6570\u91cf\nL:list of process   //\u963b\u585e\u961f\u5217\nend.\n</code></pre> <p>\uff082\uff09\u8bb0\u5f55\u578b\u4fe1\u53f7\u91cf\u7684wait(s)\u548csignal\uff08s\uff09\u64cd\u4f5c</p> <pre><code>procedure wait(s)\nvar s:semaphore\nbegin\ns.value=s.value-1;\nif s.value&lt;0 then  block(s.L)\nend.\n\nprocedure signal(s)\nvar s:semaphore\nbegin\ns.value=s.value+1;\nif s.value&lt;=0 then  wakeup(s.L)\nend.\n</code></pre> <p>\uff083\uff09\u5229\u7528\u8bb0\u5f55\u578b\u4fe1\u53f7\u91cf\u5b9e\u73b0\u4e92\u65a5</p> <pre><code>var s:semaphore  s.value=1\nbegin                repeat\nwait(s);\ncritical section\nsignal(s)\nremainder section\nuntil false;\nend\n</code></pre> <p>(4)\u5229\u7528\u8bb0\u5f55\u578b\u4fe1\u53f7\u91cf\u5b9e\u73b0\u201c\u534f\u8c03\u201d\u7684\u5e94\u7528\u4e3e\u4f8b</p> <p>\u8f93\u5165\u8fdb\u7a0b\uff1a\u4ece\u5916\u5b58\u8bfb\u53d6\u6570\u636e\u5e76\u5c06\u6570\u636e\u653e\u5165\u5185\u5b58\u7f13\u51b2\u533a\u3002</p> <p>\u8ba1\u7b97\u8fdb\u7a0b\uff1a\u4ece\u5185\u5b58\u7f13\u51b2\u533a\u53d6\u6570\u636e\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\u3002</p> <p>\u8f93\u5165\u8fdb\u7a0b\u548c\u8ba1\u7b97\u8fdb\u7a0b\u5171\u7528\u5185\u5b58\u7f13\u51b2\u533a\uff0c\u7f13\u51b2\u533a\u6700\u591a\u80fd\u5bb9\u7eb32\u4e2a\u6570\u636e\u3002\u8981\u6c42\uff1a\u7f13\u51b2\u533a\u6ee1\u65f6\uff0c\u8f93\u5165\u8fdb\u7a0b\u963b\u585e\uff1b\u7f13\u51b2\u533a\u7a7a\u65f6\u8ba1\u7b97\u8fdb\u7a0b\u963b\u585e\u3002</p> <p>\u8bd5\u91c7\u7528\u8bb0\u5f55\u578b\u4fe1\u53f7\u91cf\u673a\u5236\u5b9e\u73b0\u8f93\u5165\u8fdb\u7a0b\u4e0e\u8ba1\u7b97\u8fdb\u7a0b\u7684\u540c\u6b65\u3002</p> <pre><code>\u89e3\uff1a\u8bbe\u7f6e\u4e24\u4e2a\u4fe1\u53f7\u91cf var empty\u3001full:semaphore\u3002\n\u521d\u59cb\uff1a        empty.value=2, full.value=0\n\u8f93\u5165\u8fdb\u7a0b\uff1a\n{\n\u4ece\u5916\u5b58\u8bfb\u6570\u636e\uff1b\nwait(empty).\n\u5f80\u7f13\u51b2\u533a\u4e2d\u653e\u6570\u636e\nsignal(full)\n}\n\u8ba1\u7b97\u8fdb\u7a0b\uff1a\n{\nwait(full)\uff1b\n\u4ece\u7f13\u51b2\u8bfb\u53d6\u6570\u636e\uff1b\nsignal(empty)\n\u5904\u7406\u6570\u636e\uff1b\n}\n</code></pre>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#3_1","title":"3 \u7ecf\u5178\u540c\u6b65\u95ee\u9898","text":"<p>1\u3001\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u95ee\u9898</p> <p>(1)\u95ee\u9898\u63cf\u8ff0</p> <p>\u751f\u4ea7\u8005\u8fdb\u7a0b\u751f\u4ea7\u4ea7\u54c1\uff0c\u5e76\u5c06\u4ea7\u54c1\u63d0\u4f9b\u7ed9\u6d88\u8d39\u8005\u8fdb\u7a0b\u6d88\u8d39\u3002\u4e3a\u4f7f\u751f\u4ea7\u8005\u8fdb\u7a0b\u548c\u6d88\u8d39\u8005\u8fdb\u7a0b\u80fd\u5e76\u53d1\u6267\u884c\uff0c\u5728\u5b83\u4eec\u4e4b\u95f4\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u5177\u6709n\u4e2a\u7f13\u51b2\u533a\u7684\u7f13\u51b2\u6c60\uff0c\u751f\u4ea7\u8005\u8fdb\u7a0b\u53ef\u4ee5\u5c06\u5b83\u6240\u751f\u4ea7\u7684\u4ea7\u54c1\u653e\u5165\u4e00\u4e2a\u7f13\u51b2\u533a\u4e2d\uff0c\u6d88\u8d39\u8005\u8fdb\u7a0b\u53ef\u4ee5\u4ece\u4e00\u4e2a\u7f13\u51b2\u533a\u4e2d\u53d6\u5f97\u4e00\u4e2a\u4ea7\u54c1\u6d88\u8d39\u3002\u4efb\u610f\u4e24\u4e2a\u8fdb\u7a0b\u5fc5\u987b\u4ee5\u4e92\u65a5\u7684\u65b9\u5f0f\u8bbf\u95ee\u516c\u5171\u7f13\u51b2\u6c60\u3002\u5f53\u7f13\u51b2\u6c60\u7a7a\u65f6\uff0c\u6d88\u8d39\u8005\u8fdb\u7a0b\u5fc5\u987b\u7b49\u5f85\uff1b\u5f53\u7f13\u51b2\u6c60\u88c5\u6ee1\u4ea7\u54c1\u65f6\uff0c\u751f\u4ea7\u8005\u8fdb\u7a0b\u5fc5\u987b\u7b49\u5f85\u3002</p> <p>(2) \u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898</p> <p>\u2460==\u5bf9\u7f13\u51b2\u6c60\u7684\u4e92\u65a5\u8bbf\u95ee\u3002==</p> <p>\u2461\u5bf9\u751f\u4ea7\u8005\u8fdb\u7a0b\u3001\u6d88\u8d39\u8005\u8fdb\u7a0b\u7684\u201c\u534f\u8c03\u201d\uff0c\u5373\uff1a\u6709\u4ea7\u54c1\u65f6\u624d\u80fd\u6d88\u8d39\uff0c\u65e0\u4ea7\u54c1\u65f6\uff0c\u5fc5\u987b\u5148\u751f\u4ea7\u540e\u6d88\u8d39\uff1b\u6709\u7a7a\u95f4\u65f6\u624d\u80fd\u751f\u4ea7\uff0c\u7a7a\u95f4\u6ee1\u65f6\uff0c\u5fc5\u987b\u5148\u6d88\u8d39\u518d\u751f\u4ea7\u3002</p> <p>(3)\u4fe1\u53f7\u91cf\u7684\u8bbe\u7f6e</p> <p>\u2460\u4e00\u4e2a\u4e92\u65a5\u4fe1\u53f7\u91cf\uff0cmutex\u7528\u4e8e\u5b9e\u73b0\u5bf9\u516c\u5171\u7f13\u51b2\u6c60\u7684\u4e92\u65a5\u8bbf\u95ee\uff0c\u521d\u503c\u4e3a1\u3002</p> <p>\u2461\u4e24\u4e2a\u540c\u6b65\u4fe1\u53f7\u91cf\uff0c\u5206\u522b\u8868\u793a\u53ef\u7528\u8d44\u6e90\u6570\u3002</p> <p>\u200b     empty\uff1a\u8868\u793a\u7a7a\u7f13\u51b2\u533a\u6570,\u521d\u503c\u4e3an</p> <p>\u200b     full\uff1a \u8868\u793a\u88c5\u6709\u4ea7\u54c1\u7684\u7f13\u51b2\u533a\u6570\uff0c\u521d\u503c\u4e3a0\uff0c(\u4e00\u4e2a\u7f13\u51b2\u533a\u4e2d\u653e\u4e00\u4e2a\u4ea7\u54c1\uff09</p> <p>(4)\u540c\u6b65\u7a0b\u5e8f</p> <pre><code> Producer:                               begin                                  repeat                                 \u2026                                     produce an item in nextp;                    wait(empty);                             wait(mutex);                              buffer(in):=nextp;                        in:=(in+1)mod n\nsignal(mutex);                            signal(full)\uff1b\nuntil false;  end       Consumer:\nbegin\nrepeat\n\u2026\nwait(full);\nwait(mutex);\nnextc:=buffer(out);\nout:=(out+1)mod n;\nsignal(mutex);\nsignal(empty)\uff1b\nconsume item in nextc;\nuntil false; end\n</code></pre> <p>(5)\u8bf4\u660e</p> <p>\u2460wait \u548csignal\u64cd\u4f5c\u6210\u5bf9\u51fa\u73b0</p> <p>\u2461wait\u64cd\u4f5c\u7684\u987a\u5e8f\u4e0d\u80fd\u98a0\u5012</p> <p>\u2462\u5bf9\u5177\u6709\u76f8\u4e92\u5408\u4f5c\u5173\u7cfb\u7684\u8fdb\u7a0b\uff0c\u63d0\u4f9b\u89e3\u51b3\u95ee\u9898\u7684\u6a21\u578b</p> <p>2\u3001\u4e60\u9898\uff1a</p> <p>TODO</p> <p>\u67d0\u7cfb\u7edf\u6709\u540c\u5c5e\u4e00\u4e2a\u8fdb\u7a0b\u7684\u4e24\u4e2a\u7ebf\u7a0bP\u548cQ\uff0c\u5171\u4eab\u4e00\u4e2a\u6570\u636e\u533aB\uff0c\u5047\u8bbeB\u533a\u7a7a\u95f4\u8db3\u591f\u5927\u3002\u7ebf\u7a0bP\u8d1f\u8d23\u5468\u671f\u6027\u68c0\u6d4b\u5de5\u4f5c\u573a\u6240\u7684\u6e29\u5ea6\uff0c\u5c06\u6240\u6d4b\u7ed3\u679c\u9001\u5165\u6570\u636e\u533aB\u3002\u7ebf\u7a0bQ\u5219\u6bcf\u6b21\u4ece\u6570\u636e\u533aB\u53d6\u51fa\u4e00\u4e2a\u6700\u65b0\u7684\u68c0\u6d4b\u6570\u636e\u8fdb\u884c\u5904\u7406\u3002\u5982\u679cB\u533a\u4e2d\u6ca1\u6709\u68c0\u6d4b\u6570\u636e\uff0c\u5219\u7ebf\u7a0bQ\u963b\u585e\u7b49\u5f85\u3002\u8bf7\u56de\u7b54\u4e0b\u5217\u95ee\u9898\uff1a</p> <p>\uff081\uff09\u6570\u636e\u533aB\u5e94\u91c7\u7528\u4ec0\u4e48\u6837\u7684\u6570\u636e\u7ed3\u6784\uff1f\u6808</p> <p>\uff082\uff09\u7528\u8bb0\u5f55\u578b\u4fe1\u53f7\u91cf\u673a\u5236\u5b9e\u73b0\u8fdb\u7a0bP\u4e0eQ\u4e4b\u95f4\u7684\u540c\u6b65\u5173\u7cfb\u3002\uff08\u8bf4\u660e\u4fe1\u53f7\u91cf\u7684\u4f5c\u7528\u53ca\u521d\u503c\uff09</p> <pre><code>\u89e3\uff1a\u8bbe\u7f6e\u4e24\u4e2a\u4fe1\u53f7\u91cf var empty,mutex:semaphore\u3002\n\u521d\u59cb\uff1a        empty.value=0,mutex.value=1\nP\u8fdb\u7a0b\uff1a\n{\nwait(mutex)\n\u4ece\u5916\u5b58\u8bfb\u6570\u636e\uff1b\nsignal(empty)\nsignal(mutex)\n}\nQ\u8fdb\u7a0b\uff1a\n{\nwait(empty)\nwait(mutex)\n\u4ece\u7f13\u51b2\u8bfb\u53d6\u6570\u636e\uff1b\n\u5904\u7406\u6570\u636e\uff1b\nsignal(mutex)\n}\n</code></pre> <p>3\u3001 \u8bfb\u8005-\u5199\u8005\u95ee\u9898</p> <p>(1)\u95ee\u9898\u63cf\u8ff0</p> <p>D\u662f\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7684\u6570\u636e\u533a\uff0c\u5141\u8bb8\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8bfbD\u533a\u4e2d\u7684\u6570\u636e\uff1b\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u5f80D\u533a\u5199\u6570\u636e\uff0c\u6709\u4e00\u4e2a\u8fdb\u7a0b\u5728D\u533a\u4e2d\u6267\u884c\u5199\u64cd\u4f5c\u65f6\uff0c\u4e0d\u80fd\u6709\u5176\u5b83\u4efb\u4f55\u8fdb\u7a0b\u5728D\u533a\u4e2d\u6267\u884c\u8bfb\u6216\u5199\u64cd\u4f5c\u3002</p> <p>(2)\u4fe1\u53f7\u91cf\u7684\u8bbe\u7f6e</p> <p>\u2460\u5168\u5c40\u91cfreadcount \u7528\u4e8e\u5bf9\u8fdb\u5165\u5171\u4eab\u533a\u7684\u8bfb\u8fdb\u7a0b\u8ba1\u6570\u3002</p> <p>\u2461rmutex\u7528\u4e8e\u5bf9\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7684\u53d8\u91cfreadcount\u7684\u4e92\u65a5\u8bbf\u95ee\u3002</p> <p>\u2462wmutex\u7528\u4e8e\u5b9e\u73b0\u8bfb/\u5199\u4e92\u65a5\u3001\u5199/\u5199\u4e92\u65a5\u3002</p> <p>(3)\u540c\u6b65\u7a0b\u5e8f</p> <pre><code>\u89e3\uff1a\u8bbe\u7f6e\u4e24\u4e2a\u4fe1\u53f7\u91cf var rmutex,wmutex:semaphore\u3002\n   \u521d\u59cb\uff1a        rmutex.value=1,wmutex.value=1\n   \u53d8\u91cf\uff1avar readcount.\n   \u521d\u59cb\uff1areadcount=0\n\u8bfb\u8fdb\u7a0b\uff1a\n{\n    wait(rmutex)\n    if(readcount==0)\n        wait(wmutex);\n    readcount++;\n    signal(rmutex)\n    \u8bfb\u6570\u636e\n    wait(rmutex)\n    readcount--;\n    if(readcount==0)\n        signal(wmutex);\n    signal(rmutex)\n}\n\u5199\u8fdb\u7a0b\uff1a\n{\n    wait(wmutex);\n    \u5199\u6570\u636e\n    signal(wmutex);\n}\n</code></pre>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#4_2","title":"4 \u7ba1\u7a0b","text":"<p>\u4fe1\u53f7\u91cf\u673a\u5236\u7684\u7f3a\u9677\uff1a\u6bcf\u4e2a\u8bbf\u95ee\u4e34\u754c\u8d44\u6e90\u7684\u8fdb\u7a0b\u90fd\u5fc5\u987b\u81ea\u5907\u540c\u6b65\u64cd\u4f5cwait(s)\u548csignal(s)\u3002\u8fd9\u5c31\u4f7f\u5927\u91cf\u7684\u540c\u6b65\u64cd\u4f5c\u5206\u6563\u5728\u5404\u4e2a\u8fdb\u7a0b\u4e2d\uff0c\u8fd9\u4e0d\u4ec5\u7ed9\u7cfb\u7edf\u7684\u7ba1\u7406\u5e26\u6765\u9ebb\u70e6\uff0c\u800c\u4e14\u8fd8\u4f1a\u56e0\u540c\u6b65\u64cd\u4f5c\u7684\u4f7f\u7528\u4e0d\u5f53\u800c\u5bfc\u81f4\u7cfb\u7edf\u51fa\u9519,\u56e0\u6b64\u5f15\u5165\u4e86\u201c\u7ba1\u7a0b\u201d\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p>1\u3001\u7ba1\u7a0b\u7684\u5b9a\u4e49</p> <p>\u7ba1\u7a0b\u662f\u63cf\u8ff0\u5171\u4eab\u8d44\u6e90\u7684\u6570\u636e\u7ed3\u6784\u548c\u5728\u6570\u636e\u7ed3\u6784\u4e0a\u7684\u5171\u4eab\u8d44\u6e90\u7ba1\u7406\u7a0b\u5e8f\u7684\u96c6\u5408\u3002</p> <p>2\u3001\u5bf9\u7ba1\u7a0b\u7684\u8bf4\u660e</p> <p>\u2460\u7ba1\u7a0b\u662f\u53ef\u4f9b\u7a0b\u5e8f\u5458\u8c03\u7528\u7684\u8f6f\u4ef6\u5305\uff0c\u4e00\u4e2a\u7ba1\u7a0b\u662f\u4e00\u4e2a\u7531\u8fc7\u7a0b\u3001\u53d8\u91cf\u7b49\u7ec4\u6210\u7684\u4e00\u4e2a\u96c6\u5408\uff0c\u5b83\u4eec\u7ec4\u6210\u4e00\u4e2a\u7279\u6b8a\u7684\u6a21\u5757\u6216\u8f6f\u4ef6\u5305\u3002\u8fdb\u7a0b\u53ef\u4ee5\u5728\u4efb\u4f55\u9700\u8981\u7684\u65f6\u5019\u8c03\u7528\u7ba1\u7a0b\u4e2d\u7684\u8fc7\u7a0b\uff0c\u4f46\u5b83\u4eec\u4e0d\u80fd\u5728\u7ba1\u7a0b\u5916\u7684\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u8bbf\u95ee\u7ba1\u7a0b\u5185\u7684\u53d8\u91cf\u3002 </p> <p>\u2461\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u8c03\u7528\u7ba1\u7a0b\u6267\u884c\uff0c\u4efb\u4e00\u65f6\u523b\u7ba1\u7a0b\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a\u6d3b\u8dc3\u8fdb\u7a0b\u3002\u82e5\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8c03\u7528\u4e00\u4e2a\u7ba1\u7a0b\u4e2d\u7684\u8fc7\u7a0b\uff0c\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u5f97\u4ee5\u8fdb\u5165\u7ba1\u7a0b\uff0c\u7ee7\u7eed\u8fd0\u884c\uff0c\u5176\u5b83\u8fdb\u7a0b\u9700\u8981\u7b49\u5f85\u3002 </p> <p>\u2462\u7ba1\u7a0b\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u6784\u4ef6\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u77e5\u9053\u5b83\u4eec\u5f88\u7279\u6b8a\uff0c\u5e76\u53ef\u4ee5\u91c7\u7528\u4e0e\u5176\u4ed6\u8fc7\u7a0b\u8c03\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u5904\u7406\u5b83\u4eec\u3002\u5178\u578b\u7684\uff0c\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u8c03\u7528\u7ba1\u7a0b\u4e2d\u7684\u8fc7\u7a0b\u65f6\uff0c\u524d\u51e0\u6761\u6307\u4ee4\u5c06\u68c0\u67e5\u5728\u7ba1\u7a0b\u4e2d\u662f\u5426\u6709\u5176\u4ed6\u7684\u6d3b\u8dc3\u8fdb\u7a0b\uff0c\u5982\u679c\u6709\uff0c\u8c03\u7528\u8fdb\u7a0b\u5c06\u6302\u8d77\uff0c\u76f4\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u79bb\u5f00\u7ba1\u7a0b\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u8c03\u7528\u8fdb\u7a0b\u8fdb\u5165\u7ba1\u7a0b\u3002</p> <p>\u5982\u679cP\u5524\u9192Q\uff0c\u53ef\u80fd\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u5904\u7406\u65b9\u6848\uff1a</p> <p>P\u7ee7\u7eed\u5728\u7ba1\u7a0b\u4e2d\u6267\u884c\uff0cQ\u7b49\u5f85\uff1bP\u7b49\u5f85\uff0c\u8ba9Q\u5148\u6267\u884c\u7ba1\u7a0b\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>3\u3001\u6761\u4ef6\u53d8\u91cf</p> <p>\u4e3a\u4e86\u8fdb\u884c\u5e76\u53d1\u5904\u7406\uff0c\u7ba1\u7a0b\u5fc5\u987b\u5305\u542b\u540c\u6b65\u5de5\u5177,\u4f8b\u5982\uff1a\u5047\u8bbe\u4e00\u4e2a\u8fdb\u7a0b\u8c03\u7528\u4e86\u7ba1\u7a0b\uff0c\u5e76\u4e14\u5f53\u5b83\u5728\u7ba1\u7a0b\u4e2d\u65f6\u5fc5\u987b\u88ab\u963b\u585e\uff0c\u76f4\u5230\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u3002\u8fd9\u5c31\u9700\u8981\u4e00\u79cd\u673a\u5236\uff0c\u4f7f\u5f97\u8be5\u8fdb\u7a0b\u4e0d\u4ec5\u88ab\u963b\u585e\u800c\u4e14\u80fd\u91ca\u653e\u8fd9\u4e2a\u8fdb\u7a0b\uff0c\u4ee5\u4fbf\u67d0\u4e9b\u522b\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8fdb\u5165\u3002\u4ee5\u540e\u5f53\u6761\u4ef6\u6ee1\u8db3\u5e76\u4e14\u7ba1\u7a0b\u518d\u6b21\u53ef\u7528\u65f6\uff0c\u9700\u8981\u6062\u590d\u8be5\u8fdb\u7a0b\u5e76\u5141\u8bb8\u5b83\u5728\u963b\u585e\u70b9\u91cd\u65b0\u8fdb\u5165\u7ba1\u7a0b\u3002\u7ba1\u7a0b\u901a\u8fc7\u4f7f\u7528\u6761\u4ef6\u53d8\u91cf\u63d0\u4f9b\u540c\u6b65\u7684\u652f\u6301\uff0c\u8fd9\u4e9b\u6761\u4ef6\u53d8\u91cf\u5305\u542b\u5728\u7ba1\u7a0b\u4e2d\uff0c\u5e76\u4e14\u53ea\u6709\u5728\u7ba1\u7a0b\u4e2d\u624d\u80fd\u88ab\u8bbf\u95ee\u3002</p> <p>\u4e00\u4e2a\u7ba1\u7a0b\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u7528\u5728\u67d0\u6761\u4ef6\u53d8\u91cf\u4e0a\u6267\u884cwait\u64cd\u4f5c\uff0c\u5c06\u8c03\u7528\u7684\u8fdb\u7a0b\u963b\u585e\u5e76\u63d2\u5165\u8be5\u6761\u4ef6\u7684\u963b\u585e\u961f\u5217 \uff0c\u4e5f\u53ef\u4ee5\u7528\u5728\u6761\u4ef6\u53d8\u91cf\u4e0a\u6267\u884csignal\u64cd\u4f5c\uff0c\u5524\u9192\u5728\u8be5\u6761\u4ef6\u4e0a\u963b\u585e\u7684\u8fdb\u7a0b\u3002</p> <p>4\u3001\u7ba1\u7a0b\u7684\u5e94\u7528</p> <p>\uff081\uff09\u5229\u7528\u7ba1\u7a0b\u89e3\u51b3\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u95ee\u9898</p> <pre><code>type PC=monitor\ncondition full, empty;\ninteger count;\nprocedure enter(item)\nbegin\nif count=N then wait(full);\nenter\u2013item;\ncount=count+1;\nsignal(empty) //\u5524\u9192\u56e0\u4e3a\u961f\u5217\u7a7a\u800c\u963b\u585e\u7684\u8fdb\u7a0b\nend\n\nprocedure remove(item)\nbegin\nif count=0 then wait(empty);\nremove\u2013item;\ncount=count-1;\nsignal(full) //\u5524\u9192\u56e0\u4e3a\u961f\u5217\u6ee1\u800c\u963b\u585e\u7684\u8fdb\u7a0b\nend\ncount=0;\nend monitor;\n\nProducer:\nbegin\nrepeat\nproduce an item in nextp;\nPC.enter(item);\nuntil false;\nend\n\nConsumer:\nbegin\nrepeat\nPC.remove(item);\nconsume the item in nextc;\nuntil false;\nend\n</code></pre> <p>\uff082\uff09\u5229\u7528\u7ba1\u7a0b\u89e3\u51b3\u54f2\u5b66\u5bb6\u8fdb\u9910\u95ee\u9898</p> <p>\u95ee\u9898\u63cf\u8ff0</p> <p>\u6709\u4e94\u4e2a\u54f2\u5b66\u5bb6\u56f4\u5750\u5728\u4e00\u4e2a\u5706\u684c\u65c1\uff0c\u6bcf\u4e24\u4eba\u4e4b\u95f4\u653e\u4e00\u53ea\u7b77\u5b50\uff0c\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u7684\u884c\u4e3a\u662f\u601d\u8003\uff0c\u611f\u5230\u9965\u997f\uff0c\u7136\u540e\u7528\u9910\u3002\u4e3a\u4e86\u80fd\u591f\u8fdb\u9910\uff0c\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u5fc5\u987b\u62ff\u5230\u4e24\u53ea\u7b77\u5b50\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4eba\u53ea\u80fd\u76f4\u63a5\u4ece\u81ea\u5df1\u7684\u5de6\u8fb9\u6216\u53f3\u8fb9\u53bb\u53d6\u7b77\u5b50\u3002</p> <p>\u4ee3\u7801</p> <pre><code>    type dining-philosophers=monitor\nvar state:array[0..4] of (thinking,hungry,eating);\nvar self:array [0..4]  of condition;\n\nprocedure entry pickup(i:0..4);\nbegin\nstate[i]=hungry;\ntest(i);\nif state[i]\u2260eating then self[i].wait;\nend;    procedure entry putdown(i:0..4);\nbegin\nstate[i]=thinking;\ntest(i+4 mod 5);\ntest(i+1 mod 5);\nend\n\nprocedure test(k:0..4);\nbegin\nif state[k+4 mod 5] \u2260eating\nand state[k]=hungry\nand state[k+1 mod 5] \u2260eating\nthen begin\nstate[k]=eating\nself[k].signal;\nend\nend\n\nbegin\nfor i:=0 to 4\ndo state[i]=thinking;\nend\n\nvoid philosopher(int i)\n{\nwhile(true)\n{\nthink();\npickup(i);\neat();\nputdown(i);\n}\n}\n</code></pre>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#5_2","title":"5 \u8fdb\u7a0b\u95f4\u901a\u4fe1","text":""},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#6_2","title":"6 \u5c0f\u7ed3","text":"<p>1\u3001\u5b9e\u73b0\u8fdb\u7a0b\u4e92\u65a5\u7684\u57fa\u672c\u539f\u7406\u662f\u4ec0\u4e48?</p> <p>\u8bb0\u5f55\u6027\u4fe1\u53f7\u91cf\u673a\u5236:\u5728\u8bb0\u5f55\u6027\u4fe1\u53f7\u673a\u5236\u91cc\u9762\u6709S .value\uff0c\u8bb0\u5f55\u7684\u662f\u8d44\u6e90\u7684\u4fe1\u53f7\u7684\u91cf\uff0c\u901a\u8fc7\u53bb\u9a8c\u8bc1\u6bcf\u6b21\u8fd9\u4e2a\u503c\u662f\u5426\u5927\u4e8e0\uff0c\u6765\u5224\u65ad\u662f\u5426\u8ba9\u8fdb\u7a0b\u6765\u4f7f\u7528\u6b64\u8d44\u6e90\uff0c\u4f46\u662f\uff0c\u4e00\u65e6\u8fd9\u4e2a\u503c s.value=1\u5c31\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u8bbf\u95ee\u8be5\u8d44\u6e90\u3002\u4ece\u800c\u5b9e\u73b0\u4e86\u8fdb\u7a0b\u7684\u4e92\u65a5\u3002\u8fd9\u79cd\u673a\u5236\u7528\u4e8e\u5404\u4e2a\u8fdb\u7a0b\u5bf9\u4e00\u4e2a\u8d44\u6e90\u7684\u5171\u4eab\u3002</p> <p>AND\u578b\u4fe1\u53f7\u7684\u673a\u5236:\u5c06\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u6240\u6709\u9700\u8981\u7684\u8d44\u6e90\uff0c\u90fd\u4e00\u6b21\u6027\u5168\u90e8\u5206\u914d\u7ed9\u8fdb\u7a0b\u3002\u5f85\u8fdb\u7a0b\u4f7f\u7528\u5b8c\u6210\u540e\uff0c\u5728\u4e00\u5e76\u7684\u53bb\u91ca\u653e\u3002\u8fd9\u662f\u597d\u51e0\u4e2a\u8fdb\u7a0b\u5bf9\u597d\u51e0\u4e2a\u5171\u4eab\u8d44\u6e90\u7684\u4e00\u4e2a\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002</p> <p>\u7ba1\u7a0b\u673a\u5236:\u5229\u7528\u5171\u4eab\u6570\u636e\u7ed3\u6784\u62bd\u60f3\u7684\u8868\u793a\u7cfb\u7edf\u7684\u5171\u4eab\u8d44\u6e90\u3002\u628a\u5bf9\u8be5\u5171\u4eab\u6570\u636e\u7684\u64cd\u4f5c\u5b9a\u4e49\u4e3a\u4e00\u7ec4\u8fc7\u7a0b\u3002\u8fdb\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u8fd9\u7ec4\u8fc7\u7a0b\u5bf9\u5171\u4eab\u6570\u636e\u7684\u4e00\u4e2a\u64cd\u4f5c\u3002</p> <p>\u8fdb\u7a0b\u4e92\u65a5\u7684\u76ee\u7684\u662f\u4f7f\u8fdb\u7a0b\u4ee5\u4e92\u65a5\u7684\u65b9\u5f0f\u8bbf\u95ee\u4e34\u754c\u8d44\u6e90\uff0c\u53ea\u8981\u80fd\u4f7f\u8fdb\u7a0b\u4ee5\u4e92\u65a5\u7684\u65b9\u5f0f\u8fdb\u5165\u4e34\u754c\u533a\u5c31\u80fd\u591f\u4fdd\u8bc1\u8fdb\u7a0b\u5bf9\u4e34\u754c\u8d44\u6e90\u7684\u4e92\u65a5\u8bbf\u95ee\u3002\u6240\u4ee5\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u4e34\u754c\u533a\u524d\u52a0\u8fdb\u5165\u533a\u4ee3\u7801\uff0c\u5728\u4e34\u754c\u533a\u540e\u9762\u52a0\u9000\u51fa\u533a\u4ee3\u7801\u6765\u5b9e\u73b0\u8fdb\u7a0b\u7684\u4e92\u65a5\u3002</p> <p>\u4e34\u754c\u533a\u662f\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u8bbf\u95ee\u4e34\u754c\u8d44\u6e90\u7684\u90a3\u6bb5\u4ee3\u7801\u3002\u8fdb\u5165\u533a\u662f\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u8fdb\u5165\u4e34\u754c\u533a\u5e76\u5bf9\u4e34\u754c\u533a\u201c\u52a0\u9501\u201d\u7684\u4ee3\u7801\u3002\u9000\u51fa\u533a\u662f\u91ca\u653e\u4e34\u754c\u533a\u8bbf\u95ee\u6743\u7684\u4ee3\u7801\u3002</p> <p>2\u3001\u8fdb\u7a0b\u540c\u6b65\u673a\u5236\u7684\u4efb\u52a1\u662f\u4ec0\u4e48\uff1f</p> <p>\u8fdb\u7a0b\u540c\u6b65\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u5bf9\u591a\u4e2a\u76f8\u5173\u8fdb\u7a0b\u5728\u6267\u884c\u6b21\u5e8f\u4e0a\u8fdb\u884c\u534f\u8c03,\u4ee5\u4f7f\u5e76\u53d1\u6267\u884c\u7684\u8bf8\u8fdb\u7a0b\u4e4b\u95f4\u80fd\u6709\u6548\u5730\u5171\u4eab\u8d44\u6e90\u548c\u76f8\u4e92\u5408\u4f5c,\u4ece\u800c\u4f7f\u7a0b\u5e8f\u7684\u6267\u884c\u5177\u6709\u53ef\u518d\u73b0\u6027\u3002</p> <p>3\u3001\u4e3a\u4ec0\u4e48\u5728\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u95ee\u9898\u4e2dwait\u64cd\u4f5c\u7684\u987a\u5e8f\u4e0d\u80fd\u98a0\u5012\uff1f</p> <p>\u5982\u679c\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u8fdb\u7a0b\u90fd\u5148\u901a\u8fc7\u6267\u884c\u7b49\u5f85(\u4e92\u65a5)\u7533\u8bf7\u516c\u5171\u7f13\u51b2\u6c60\u7684\u4e92\u65a5\u8bbf\u95ee\u6743\uff0c\u7136\u540e\u901a\u8fc7\u7533\u8bf7\u8d44\u6e90\u4fe1\u53f7\u91cf\u7533\u8bf7\u7a7a\u7f13\u51b2\u533a\u6216\u88c5\u6ee1\u4ea7\u54c1\u7684\u7f13\u51b2\u533a\uff0c\u5f53\u7f13\u51b2\u6c60\u6ee1\u65f6\uff0c\u82e5\u751f\u4ea7\u8005\u8fdb\u7a0b\u5148\u7533\u8bf7\u5230\u516c\u5171\u7f13\u51b2\u6c60\u7684\u4e92\u65a5\u8bbf\u95ee\u6743\uff0c\u7136\u540e\u7533\u8bf7\u7a7a\u7f13\u51b2\u533a\uff0c\u56e0\u7f13\u51b2\u6c60\u4e2d\u6ca1\u6709\u7a7a\u7f13\u51b2\u533a\uff0c\u751f\u4ea7\u8005\u8fdb\u7a0b\u963b\u585e\u3002\u6d88\u8d39\u8005\u8fdb\u7a0b\u56e0\u65e0\u6cd5\u7533\u8bf7\u5230\u516c\u5171\u7f13\u51b2\u6c60\u7684\u4e92\u65a5\u8bbf\u95ee\u6743\uff0c\u4e5f\u4f1a\u88ab\u963b\u585e.\u751f\u4ea7\u8005\u8fdb\u7a0b\u7b49\u5f85\u6d88\u8d39\u8005\u8fdb\u7a0b\u91ca\u653e\u7a7a\u7f13\u51b2\u533a\uff0c\u6d88\u8d39\u8005\u8fdb\u7a0b\u7b49\u5f85\u751f\u4ea7\u8005\u8fdb\u7a0b\u91ca\u653e\u516c\u5171\u7f13\u51b2\u6c60\u7684\u4e92\u65a5\u8bbf\u95ee\u6743\uff0c\u8fdb\u7a0b\u56e0\u4e92\u76f8\u7b49\u5f85\u5bf9\u65b9\u91ca\u653e\u8d44\u6e90\u800c\u5904\u4e8e\u4e0d\u80fd\u6267\u884c\u7684\u50f5\u6301\u72b6\u6001.</p> <p>4\u3001\u4e3a\u4ec0\u4e48\u5bf910\u4e2a\u4e0d\u540c\u7684\u4e34\u754c\u8d44\u6e90(counter1-counter10)\u4e0d\u80fd\u53ea\u7528\u4e00\u4e2a\u4e92\u65a5\u4fe1\u53f7\u91cf\ufe56(\u7406\u89e3)</p> <p>\u82e5\u7528\u4e00\u4e2a\u4e92\u65a5\u4fe1\u53f7\u91cf\u5b9e\u73b0\u5bf9\u591a\u4e2a\u4e34\u754c\u8d44\u6e90\u7684\u4e92\u65a5\u8bbf\u95ee\uff0c\u5219\u4f1a\u9020\u6210\u8d44\u6e90\u7684\u6d6a\u8d39\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u7533\u8bf7\u4e00\u4e2a\u8d44\u6e90\u65f6\uff0c\u4f1a\u540c\u65f6\u5360\u7528\u5176\u4e0d\u9700\u8981\u7684\u8d44\u6e90\uff0c\u5219\u5176\u4ed6\u8fdb\u7a0b\u4e0d\u80fd\u8bbf\u95ee\u88ab\u9501\u4f4f\u5374\u5e76\u6ca1\u6709\u88ab\u4f7f\u7528\u7684\u8d44\u6e90\u3002</p> <p>\u654510\u4e2a\u4e0d\u540c\u7684\u4e34\u754c\u8d44\u6e90\u4e0d\u80fd\u53ea\u7528\u4e00\u4e2a\u4e92\u65a5\u4fe1\u53f7\u91cf\u3002</p> <p>5\u3001\u4e09\u4e2a\u8fdb\u7a0bP1\u3001P2\u3001P3\u4e92\u65a5\u4f7f\u7528\u4e00\u4e2a\u5305\u542bN\uff08N &gt; 0\uff09\u4e2a\u5355\u5143\u7684\u7f13\u51b2\u533a\u3002P1\u6bcf\u6b21\u7528produce()\u751f\u6210\u4e00\u4e2a\u6b63\u6574\u6570\u5e76\u7528put()\u9001\u5165\u7f13\u51b2\u533a\u67d0\u4e00\u7a7a\u5355\u5143\u4e2d\uff1bP2\u6bcf\u6b21\u7528getodd()\u4ece\u8be5\u7f13\u51b2\u533a\u4e2d\u53d6\u51fa\u4e00\u4e2a\u5947\u6570\u5e76\u7528countodd()\u7edf\u8ba1\u5947\u6570\u4e2a\u6570\uff1bP3\u6bcf\u6b21\u7528geteven()\u4ece\u8be5\u7f13\u51b2\u533a\u4e2d\u53d6\u51fa\u4e00\u4e2a\u5076\u6570\u5e76\u7528counteven()\u7edf\u8ba1\u5076\u6570\u4e2a\u6570\u3002\u8bf7\u7528\u4fe1\u53f7\u91cf\u673a\u5236\u5b9e\u73b0\u8fd9\u4e09\u4e2a\u8fdb\u7a0b\u7684\u540c\u6b65\u4e0e\u4e92\u65a5\u6d3b\u52a8\uff0c\u5e76\u8bf4\u660e\u6240\u5b9a\u4e49\u4fe1\u53f7\u91cf\u7684\u542b\u4e49\u3002\u8981\u6c42\u7528\u4f2a\u4ee3\u7801\u63cf\u8ff0\u3002 </p> <p>\u91c7\u7528\u8bb0\u5f55\u578b\u4fe1\u53f7\u91cf\u6765\u5b9e\u73b0\uff0c\u4f2a\u4ee3\u7801\u5982\u4e0b\u3002</p> <pre><code>\u89e3\uff1a\u8bbe\u7f6e\u4e24\u4e2a\u4fe1\u53f7\u91cf var mutex,empty,odd,even:semaphore\u3002\n   \u521d\u59cb\uff1a        mutex.value=1,empty=N,odd=0,even=0\nP1\u8fdb\u7a0b\uff1a\n{\n    wait(empty)\n    wait(mutex)\n    num = produce()\n    signal(mutex)\n    if(num%2==0)\n        signal(even)\n    else\n        signal(odd)\n}\nP2\u8fdb\u7a0b\uff1a\n{\n    wait(odd)\n    wait(mutex)\n    getodd()\n    countodd()\n    signal(mutex)\n    signal(empty)\n}\nP3\u8fdb\u7a0b\uff1a\n{\n    wait(even)\n    wait(mutex)\n    geteven()\n    counteven()\n    signal(mutex)\n    signal(empty)\n}\n</code></pre>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#7","title":"7 \u53c2\u8003","text":"<p>Linux\u5185\u6838\u81ea\u65cb\u9501(spinlock)\u4f7f\u7528\u4e0e\u6e90\u7801\u5206\u6790</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u7b2c\u4e09\u7ae0\uff1a\u8fdb\u7a0b\u540c\u6b65\u548c\u4e92\u65a5</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#8","title":"8 \u95ee\u9898","text":"<p>1\u3001\u5b9e\u73b0\u8fdb\u7a0b\u4e92\u65a5\u7684\u57fa\u672c\u539f\u7406\u662f\u4ec0\u4e48\uff1f</p> <p>\u8fdb\u7a0b\u4e92\u65a5\u7684\u76ee\u7684\u662f\u4f7f\u8fdb\u7a0b\u4ee5\u4e92\u65a5\u7684\u65b9\u5f0f\u8bbf\u95ee\u4e34\u754c\u8d44\u6e90\uff0c\u53ea\u8981\u80fd\u4f7f\u8fdb\u7a0b\u4ee5\u4e92\u65a5\u7684\u65b9\u5f0f\u8fdb\u5165\u4e34\u754c\u533a\u5c31\u80fd\u591f\u4fdd\u8bc1\u8fdb\u7a0b\u5bf9 \u4e34\u754c\u8d44\u6e90\u7684\u4e92\u65a5\u8bbf\u95ee\u3002\u6240\u4ee5\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u4e34\u754c\u533a\u524d\u52a0\u8fdb\u5165\u533a\u4ee3\u7801\uff0c\u5728\u4e34\u754c\u533a\u540e\u52a0\u9000\u51fa\u533a\u4ee3\u7801\u6765\u5b9e\u73b0\u8fdb\u7a0b\u7684\u4e92\u65a5\u3002 \u8fdb\u5165\u533a\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u8fdb\u5165\u4e34\u754c\u533a\u5e76\u5bf9\u4e34\u754c\u533a\u201c\u52a0\u9501 \u201d \u3002\u9000\u51fa\u533a\u91ca\u653e\u4e34\u754c\u533a\u8bbf\u95ee\u6743\u3002</p> <p>2\u3001\u5199\u51fa\u8bb0\u5f55\u578b\u4fe1\u53f7\u91cfwait\u64cd\u4f5c\u548csignal\u64cd\u4f5c\u7684\u7b97\u6cd5\u63cf\u8ff0\uff08\u8bf4\u660e\u4fe1\u53f7\u91cf\u7684\u6570\u636e\u7ed3\u6784\uff09</p> <pre><code>Type  semaphore=record\n                 Value:integer          \u8d44\u6e90\u6570\u91cf\n                 L:list of process       \u963b\u585e\u961f\u5217\n           end\n\nprocedure wait(s)\n  var s:semaphore\n   begin\n      s.value:=s.value-1;\n      if s.value&lt;0 then  \n            block(s.L)\nend.\n\nprocedure signal(s)\n  var s:semaphore\n   begin\n      s.value:=s.value+1;\n      if s.value&lt;=0 then  \n            wakeup(s.L)\nend.\n</code></pre>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_6","title":"\u7b2c\u56db\u7ae0 \u8fdb\u7a0b\u8c03\u5ea6","text":"<p>\u8c03\u5ea6\u7b97\u6cd5\u662f\u6307\uff1a\u6839\u636e\u7cfb\u7edf\u7684\u8d44\u6e90\u5206\u914d\u7b56\u7565\u6240\u89c4\u5b9a\u7684\u8d44\u6e90\u5206\u914d\u7b97\u6cd5 \u3002\u672c\u7ae0\u4ecb\u7ecd\u4f5c\u4e1a\u8c03\u5ea6\u7b97\u6cd5\u548c\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\u3002</p> <p>\u4f5c\u4e1a\u8c03\u5ea6\uff1a\u4ece\u540e\u5907\u4f5c\u4e1a\u961f\u5217\u7684\u591a\u4e2a\u4f5c\u4e1a\u4e2d\u9009\u62e9\u4e00\u4e2a\u4f5c\u4e1a\u8fdb\u5165\u5185\u5b58\u7684\u7b97\u6cd5</p> <p>\u8fdb\u7a0b\u8c03\u5ea6\uff1a\u4ece\u591a\u4e2a\u5c31\u7eea\u8fdb\u7a0b\u4e2d\u9009\u62e9\u8fdb\u7a0b\u5e76\u4e3a\u5176\u5206\u914dCPU\u7684\u7b97\u6cd5</p> <p>\u4e2d\u7ea7\u8c03\u5ea6\uff1a\u5185\u5b58\u4e2d\u4e0d\u80fd\u6709\u592a\u591a\u7684\u8fdb\u7a0b\uff0c\u628a\u8fdb\u7a0b\u4ece\u5185\u5b58\u79fb\u5230\u5916\u5b58\uff0c\u5f53\u5185\u5b58\u6709\u8db3\u591f\u7a7a\u95f4\u65f6\uff0c\u518d\u5c06\u5408\u9002\u7684\u8fdb\u7a0b\u6362\u5165\u5185\u5b58\uff0c\u7b49\u5f85\u8fdb\u7a0b\u8c03\u5ea6\u3002\u4e2d\u7ea7\u8c03\u5ea6\u5b9e\u9645\u4e0a\u5c31\u662f\u5b58\u50a8\u5668\u7ba1\u7406\u4e2d\u7684\u5bf9\u8c03\u529f\u80fd\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#1_3","title":"1 \u8c03\u5ea6\u7c7b\u578b\u548c\u6a21\u578b","text":"<p>\u6839\u636e\u7cfb\u7edf\u7684\u4e0d\u540c\u9700\u6c42\uff0c\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u8c03\u5ea6\u7c7b\u578b\u7ec4\u5408\uff0c\u4ece\u800c\u5f62\u6210\u4ee5\u4e0b\u51e0\u79cd\u8c03\u5ea6\u961f\u5217\u6a21\u578b\u3002</p> <p>(1)\u4ec5\u6709\u8fdb\u7a0b\u8c03\u5ea6\u7684\u8c03\u5ea6\u961f\u5217\u6a21\u578b\u3002</p> <p>(2)\u5177\u6709\u4f5c\u4e1a\u8c03\u5ea6\u548c\u8fdb\u7a0b\u8c03\u5ea6\u7684\u8c03\u5ea6\u961f\u5217\u6a21\u578b\u3002</p> <p>(3)\u540c\u65f6\u5177\u6709\u4e09\u7ea7\u8c03\u5ea6\u7684\u8c03\u5ea6\u961f\u5217\u6a21\u578b\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#2_3","title":"2 \u8c03\u5ea6\u7b97\u6cd5","text":"<p>1\u3001\u9009\u62e9\u8c03\u5ea6\u65b9\u5f0f\u548c\u7b97\u6cd5\u7684\u82e5\u5e72\u51c6\u5219</p> <p>\u9762\u5411\u7528\u6237\u7684\u51c6\u5219</p> <p>(1) \u5468\u8f6c\u65f6\u95f4\u77ed  (2) \u54cd\u5e94\u65f6\u95f4\u5feb (3) \u622a\u6b62\u65f6\u95f4\u7684\u4fdd\u8bc1</p> <p>\u9762\u5411\u7cfb\u7edf\u7684\u51c6\u5219</p> <p>(1) \u7cfb\u7edf\u541e\u5410\u91cf\u9ad8 (2) \u5904\u7406\u673a\u5229\u7528\u7387\u9ad8</p> <p>2\u3001\u8c03\u5ea6\u7b97\u6cd5</p> <p>2.1 \u5148\u6765\u5148\u670d\u52a1\u8c03\u5ea6\u7b97\u6cd5</p> <p>\u5728\u4f5c\u4e1a\u8c03\u5ea6\u4e2d\uff0cFCFS\u5c31\u662f\u4ece\u540e\u5907\u4f5c\u4e1a\u961f\u5217\u4e2d\uff0c\u9009\u62e9\u6700\u5148\u8fdb\u5165\u8be5\u961f\u5217\u7684\u4f5c\u4e1a\u8fdb\u884c\u8c03\u5ea6\u3002</p> <p>\u5728\u8fdb\u7a0b\u8c03\u5ea6\u4e2d\uff0cFCFS  \u662f\u9009\u62e9\u6700\u5148\u8fdb\u5165\u5c31\u7eea\u961f\u5217\u7684\u8fdb\u7a0b\uff0c\u4e3a\u8be5\u8fdb\u7a0b\u5206\u914dCPU\u3002 </p> <p>\u6027\u80fd\u5206\u6790</p> <p>FCFS\u9002\u5408\u957f\u4f5c\u4e1a(\u8fdb\u7a0b\uff09\uff0c\u4e0d\u5229\u4e8e\u77ed\u4f5c\u4e1a\uff08\u8fdb\u7a0b\uff09\uff0c\u4f5c\u4e1a\uff08\u8fdb\u7a0b\uff09\u7b49\u5f85\u65f6\u95f4\u592a\u957f\u3002FCFS\u4f7f\u77ed\u4f5c\u4e1a\u7684\u5468\u8f6c\u65f6\u95f4\u8fc7\u957f\u3002</p> <p>FCFS\u6709\u5229\u4e8eCPU\u7e41\u5fd9\u578b\u4f5c\u4e1a\uff08\u8fdb\u7a0b\uff09\uff0c\u5982\u79d1\u5b66\u8ba1\u7b97\u3002\u4e0d\u5229\u4e8eI/O\u7e41\u5fd9\u578b\u4f5c\u4e1a \uff08\u8fdb\u7a0b\uff09\uff0c\u5982\u591a\u6570\u7684\u4e8b\u52a1\u5904\u7406\u3002</p> <p>2.2 \u77ed\u4f5c\u4e1a(\u8fdb\u7a0b)\u4f18\u5148\u8c03\u5ea6\u7b97\u6cd5</p> <p>\u77ed\u4f5c\u4e1a\u4f18\u5148(SJF) \u7684\u8c03\u5ea6\u7b97\u6cd5\u3002</p> <p>\u77ed\u8fdb\u7a0b\u4f18\u5148(SPF)\u7684\u8c03\u5ea6\u7b97\u6cd5\u3002</p> <p>\u7b97\u6cd5\u4f18\u70b9</p> <p>\u4e0eFCFS\u7b97\u6cd5\u76f8\u6bd4 \uff0c\u77ed\u4f5c\u4e1a(\u8fdb\u7a0b)\u7b97\u6cd5\u80fd\u6709\u6548\u964d\u4f4e\u4f5c\u4e1a\uff08\u8fdb\u7a0b\uff09\u7684\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\u3001\u5e73\u5747\u5468\u8f6c\u65f6\u95f4\u548c\u5e26\u6743\u5e73\u5747\u5468\u8f6c\u65f6\u95f4\u3001 \u63d0\u9ad8\u7cfb\u7edf\u7684\u541e\u5410\u91cf\u3002</p> <p>\u6ce8\uff1a\u5468\u8f6c\u65f6\u95f4\u5b9a\u4e49\uff1a</p> <p>\u5468\u8f6c\u65f6\u95f4(\u4f5c\u4e1a\u5468\u8f6c\u65f6\u95f4)\u6307\u7684\u662f\u4ece\u4f5c\u4e1a\u88ab\u63d0\u4ea4\u7ed9\u7cfb\u7edf\u5f00\u59cb, \u5230\u4f5c\u4e1a\u5b8c\u6210\u4e3a\u6b62\u7684\u8fd9\u6bb5\u65f6\u95f4</p> <p>\u5468\u8f6c\u65f6\u95f4\u5305\u62ec\u56db\u90e8\u5206:</p> <p>1\uff09 \u4f5c\u4e1a\u5728\u5916\u5b58\u540e\u5907\u961f\u5217\u4e0a\u7b49\u5f85\u4f5c\u4e1a\u8c03\u5ea6\u7684\u65f6\u95f4</p> <p>2\uff09\u8fdb\u7a0b\u5728\u5c31\u7eea\u961f\u5217\u4e0a\u7b49\u5f85\u8fdb\u7a0b\u8c03\u5ea6\u7684\u65f6\u95f4</p> <p>3\uff09\u8fdb\u7a0b\u5728cpu\u4e0a\u6267\u884c\u7684\u65f6\u95f4</p> <p>4\uff09\u8fdb\u7a0b\u7b49\u5f85I/O\u64cd\u4f5c\u5b8c\u6210\u7684\u65f6\u95f4</p> <p>\u5468\u8f6c\u65f6\u95f4=\u4f5c\u4e1a\u5b8c\u6210\u65f6\u95f4\u2212\u4f5c\u4e1a\u63d0\u4ea4\u65f6\u95f4</p> <p>\u5e73\u5747\u5468\u8f6c\u65f6\u95f4=(\u4f5c\u4e1a1\u7684\u5468\u8f6c\u65f6\u95f4+\u2026+\u4f5c\u4e1an\u7684\u5468\u8f6c\u65f6\u95f4)/n</p> <p>\u5e26\u6743\u5468\u8f6c\u65f6\u95f4=\u4f5c\u4e1a\u5468\u8f6c\u65f6\u95f4\u4f5c\u4e1a/\u5b9e\u9645\u8fd0\u884c\u65f6\u95f4</p> <p>\u5e73\u5747\u5e26\u6743\u5468\u8f6c\u65f6\u95f4=(\u4f5c\u4e1a1\u7684\u5e26\u6743\u5468\u8f6c\u65f6\u95f4+\u2026+\u4f5c\u4e1an\u7684\u5e26\u6743\u5468\u8f6c\u65f6\u95f4)/n</p> <p>\u53c2\u8003\uff1a\u5468\u8f6c\u65f6\u95f4, \u5e73\u5747\u5468\u8f6c\u65f6\u95f4, \u5e26\u6743\u5468\u8f6c\u65f6\u95f4</p> <p>\u7b97\u6cd5\u7684\u7f3a\u9677</p> <p>\u5bf9\u957f\u4f5c\u4e1a\u4e0d\u5229\uff0c\u957f\u4f5c\u4e1a\u53ef\u80fd\u957f\u65f6\u95f4\u5f97\u4e0d\u5230\u8c03\u5ea6\u3002</p> <p>\u4e0d\u80fd\u4fdd\u8bc1\u7d27\u8feb\u4f5c\u4e1a\u7684\u53ca\u65f6\u5904\u7406\uff0c\u56e0\u4e3a\u8be5\u7b97\u6cd5\u4e0d\u8003\u8651\u4f5c\u4e1a\u7684\u7d27\u8feb\u7a0b\u5ea6\u3002</p> <p>\u4f5c\u4e1a\u957f\u77ed\u6839\u636e\u7528\u6237\u7684\u4f30\u8ba1\u800c\u5b9a\uff0c\u6545\u4e0d\u4e00\u5b9a\u80fd\u771f\u6b63\u505a\u5230\u77ed\u4f5c\u4e1a\u4f18\u5148</p> <p>\u4e60\u9898\uff1a</p> <p>\u8fdb\u7a0bp1,p2,p3\u5230\u8fbe\u7cfb\u7edf\u7684\u65f6\u95f4\u5206\u522b\u4e3a0ms\uff0c0ms\uff0c6ms\u65f6\u523b\uff0c\u5b83\u4eec\u9700\u8981\u7684\u670d\u52a1\u65f6\u95f4\u5206\u522b\u4e3a16ms\uff0c8ms\uff0c4ms\uff0c\u82e5\u7cfb\u7edf\u91c7\u7528==\u77ed\u8fdb\u7a0b\u4f18\u5148==\u7684==\u975e\u62a2\u5360\u5f0f==\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\uff0c\u4ece0ms\u65f6\u523b\u5f00\u59cb\u8fdb\u884c\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u8fdb\u7a0b\u7684\u8c03\u5ea6\u987a\u5e8f\u662f\uff08             \uff09\uff0c\u7cfb\u7edf\u7684\u5e73\u5747\u5468\u8f6c\u65f6\u95f4\u662f\uff08          \uff09\u3002</p> <p>\u8fdb\u7a0b\u8c03\u5ea6\u987a\u5e8f\u4e3a P2 \u2192 p3 \u2192 p1</p> <p>\u5e73\u5747\u5468\u8f6c\u65f6\u95f4\u4e3a (28ms + 8ms + 6ms) / 3 = 14ms</p> <p>3\u3001\u4f18\u5148\u6743\u8c03\u5ea6\u7b97\u6cd5</p> <p>\u5f53\u4f7f\u7528\u4f18\u5148\u6743\u8c03\u5ea6\u7b97\u6cd5\u8fdb\u884c\u4f5c\u4e1a\u8c03\u5ea6\u65f6\uff0c\u7cfb\u7edf\u5c06\u4ece\u540e\u5907\u961f\u5217\u4e2d\u9009\u62e9\u4f18\u5148\u6743\u6700\u9ad8\u7684\u4f5c\u4e1a\u8c03\u5165\u5185\u5b58\u3002</p> <p>\u5f53\u4f7f\u7528\u4f18\u5148\u6743\u8c03\u5ea6\u7b97\u6cd5\u8fdb\u884c\u8fdb\u7a0b\u8c03\u5ea6\u65f6\uff0c\u7cfb\u7edf\u5c06CPU\u5206\u914d\u7ed9\u5c31\u7eea\u961f\u5217\u4e2d\u4f18\u5148\u6743\u6700\u9ad8\u7684\u8fdb\u7a0b\u3002</p> <p>\u975e\u62a2\u5360\u5f0f(nonpreemptive)\u8c03\u5ea6</p> <p>\u8fdb\u7a0b\u4e00\u4f46\u5f97\u5230\u5904\u7406\u673a\uff0c\u5219\u8be5\u8fdb\u7a0b\u4fbf\u4e00\u76f4\u8fdb\u884c\u4e0b\u53bb\u76f4\u5230\u5b8c\u6210\u6216\u7531\u4e8e\u67d0\u4e8b\u4ef6\u653e\u5f03\u5904\u7406\u673a\u3002</p> <p>\u62a2\u5360\u5f0f(preemptive)\u8c03\u5ea6</p> <p>\u9ad8\u4f18\u5148\u6743\u7684\u8fdb\u7a0b\u53ef\u4ee5\u62a2\u5360\u5904\u7406\u673a\uff0c\u4f7f\u6b63\u5728\u6267\u884c\u7684\u4f4e\u4f18\u5148\u6743\u8fdb\u7a0b\u4e2d\u65ad\u6267\u884c\u3002 \u5728 UNIX\u4e2d\u5e7f\u6cdb\u91c7\u7528\u62a2\u5360\u5f0f\u3002</p> <p>\u62a2\u5360\u65f6\u673a\uff1a\u57fa\u4e8e\u65f6\u949f\u4e2d\u65ad\u7684\u62a2\u5360\u5f0f\u4f18\u5148\u6743\u8c03\u5ea6\u7b97\u6cd5\u3001\u7acb\u5373\u62a2\u5360\u7684\u4f18\u5148\u6743\u8c03\u5ea6\u7b97\u6cd5</p> <p>3.1 \u4f18\u5148\u6743\u7684\u7c7b\u578b</p> <p>\u9759\u6001\u4f18\u5148\u6743</p> <p>\u4f18\u5148\u6743\u5728\u521b\u5efa\u65f6\u786e\u5b9a\uff0c\u5728\u8fdb\u7a0b\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u4fdd\u6301\u4e0d\u53d8\u3002\u51b3\u5b9a\u9759\u6001\u4f18\u5148\u6743\u7684\u4f9d\u636e\uff1a\u8fdb\u7a0b\u7c7b\u578b\u3001\u8fdb\u7a0b\u5bf9\u8d44\u6e90\u7684\u9700\u6c42\u3001\u7528\u6237\u8981\u6c42 \u3002</p> <p>\u9759\u6001\u4f18\u5148\u6743\u8c03\u5ea6\u7b97\u6cd5\u53ef\u80fd\u5bfc\u81f4\u65e0\u7a77\u963b\u585e(indefinite   blocking)\u6216\u9965\u997f(starvation)\u95ee\u9898\u3002</p> <p>\u52a8\u6001\u4f18\u5148\u6743</p> <p>\u8fdb\u7a0b\u521b\u5efa\u65f6\u83b7\u5f97\u7684\u4f18\u5148\u6743\uff0c\u968f\u8fdb\u7a0b\u7684\u63a8\u8fdb\u800c\u6539\u53d8\u3002</p> <p>4\u3001\u65f6\u95f4\u7247\u8f6e\u8f6c\u8c03\u5ea6\u7b97\u6cd5</p> <p>\u5728\u65e9\u671f\u7684\u65f6\u95f4\u7247\u8f6e\u8f6c\u7b97\u6cd5\u4e2d\uff0c\u7cfb\u7edf\u5c06\u6240\u6709\u7684\u5c31\u7eea\u8fdb\u7a0b\u6309\u5148\u6765\u5148\u670d\u52a1\u7684\u539f\u5219\uff0c\u6392\u6210\u4e00\u4e2a\u961f\u5217\uff0c\u6bcf\u6b21\u8c03\u5ea6\u65f6\u628aCPU\u5206\u914d\u7ed9\u961f\u9996\u8fdb\u7a0b\uff0c\u5e76\u4ee4\u5176\u6267\u884c\u4e00\u4e2a\u65f6\u95f4\u7247\uff0c\u5f53\u65f6\u95f4\u7247\u7528\u5b8c\u65f6\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u7ec8\u6b62\u5f53\u524d\u8fdb\u7a0b\u7684\u6267\u884c\uff0c\u5e76\u5c06\u5b83\u9001\u5230\u5c31\u7eea\u961f\u5217\u7684\u961f\u5c3e\u3002 </p> <p>\u65f6\u95f4\u7247\u5927\u5c0f\u7684\u786e\u5b9a</p> <p>\u7cfb\u7edf\u5bf9\u54cd\u5e94\u65f6\u95f4\u7684\u8981\u6c42\u3001\u5c31\u7eea\u961f\u5217\u4e2d\u8fdb\u7a0b\u7684\u6570\u76ee\u3001\u7cfb\u7edf\u7684\u5904\u7406\u80fd\u529b</p> <p>\u54cd\u5e94\u65f6\u95f4T=Nq</p> <p>N:\u7cfb\u7edf\u4e2d\u7684\u8fdb\u7a0b\u6570\uff1bq: \u65f6\u95f4\u7247\u7684\u5927\u5c0f\u3002</p> <p>1\u3001\uff08\u8fdb\u7a0b\u6570\u4e00\u5b9a\uff09\u5f53\u7cfb\u7edf\u8981\u6c42\u7684\u54cd\u5e94\u65f6\u95f4\u8d8a\u77ed\uff0c\u65f6\u95f4\u7247\u5c31\u8d8a\u77ed\uff1b</p> <p>2\u3001\uff08\u54cd\u5e94\u65f6\u95f4\u4e00\u5b9a\uff09\u7cfb\u7edf\u5141\u8bb8\u7684\u6700\u5927\u8fdb\u7a0b\u6570\u8d8a\u591a\uff0c\u65f6\u95f4\u7247\u4e5f\u8d8a\u77ed\uff1b</p> <p>3\u3001  \u57fa\u672c\u547d\u4ee4\u5e94\u8be5\u5728\u4e00\u4e2a\u65f6\u95f4\u7247\u5185\u6267\u884c\u5b8c\u3002</p> <p>\u6027\u80fd\u8bc4\u4ef7</p> <p>\u65f6\u95f4\u7247\u8f6e\u8f6c\u8c03\u5ea6\u7b97\u6cd5\u7684\u6027\u80fd\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u4e8e\u65f6\u95f4\u7247\u7684\u5927\u5c0f\u3002\u5982\u679c\u65f6\u95f4\u7247\u5f88\u5927\uff0c\u8fdb\u7a0b\u7684\u54cd\u5e94\u65f6\u95f4\u65e0\u6cd5\u4fdd\u8bc1\uff1b\u5982\u679c\u65f6\u95f4\u7247\u5f88\u5c0f\uff0c\u5219\u8fdb\u7a0b\u9700\u8981\u7ecf\u8fc7\u591a\u6b21\u4e0a\u4e0b\u6587\u5207\u6362\u548c\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u589e\u52a0\u4e86CPU\u5728\u8fdb\u7a0b\u5207\u6362\u548c\u8fdb\u7a0b\u8c03\u5ea6\u4e0a\u7684\u5f00\u9500\uff0c\u5f71\u54cd\u7cfb\u7edf\u7684\u541e\u5410\u91cf\u548cCPU\u5229\u7528\u7387\u7b49\u65b9\u9762\u7684\u6027\u80fd\u3002</p> <p>\u6ce8\uff1a\u65f6\u95f4\u7247\u7684\u5927\u5c0f\u901a\u5e38\u4e3a 10~100ms\u3002</p> <p>6\u3001\u591a\u7ea7\u961f\u5217\u8c03\u5ea6\u7b97\u6cd5</p> <p>\u5c06\u5c31\u7eea\u961f\u5217\u5206\u6210\u591a\u4e2a\u72ec\u7acb\u961f\u5217\uff0c\u6839\u636e\u8fdb\u7a0b\u7684\u67d0\u4e9b\u5c5e\u6027\uff08\u5982\u5185\u5b58\u5927\u5c0f\u3001\u8fdb\u7a0b\u4f18\u5148\u6743\u6216\u8fdb\u7a0b\u7c7b\u578b\uff09\uff0c\u8fdb\u7a0b\u4f1a\u88ab\u6c38\u4e45\u5730\u5206\u914d\u5230\u4e00\u4e2a\u961f\u5217\u3002\u6bcf\u4e2a\u961f\u5217\u90fd\u6709\u81ea\u5df1\u7684\u8c03\u5ea6\u7b97\u6cd5\u3002\u4e0d\u540c\u7684\u961f\u5217\u4f18\u5148\u6743\u4e0d\u540c\uff0c\u8c03\u5ea6\u7b97\u6cd5\u4e5f\u53ef\u80fd\u4e0d\u540c\u3002</p> <p>\u5e94\u7528\u4e3e\u4f8bminix\u7684\u591a\u7ea7\u961f\u5217\u8c03\u5ea6</p> <p></p> <p>7\u3001\u591a\u7ea7\u53cd\u9988\u961f\u5217\u8c03\u5ea6\u7b97\u6cd5</p> <p>\u8bbe\u591a\u4e2a\u4f18\u5148\u6743\u4e0d\u540c\u7684\u5c31\u7eea\u961f\u5217</p> <p>\u5141\u8bb8\u8fdb\u7a0b\u5728\u591a\u4e2a\u4e0d\u540c\u7684\u5c31\u7eea\u961f\u5217\u95f4\u79fb\u52a8</p> <p>\u8981\u8003\u8651\u7684\u95ee\u9898\uff1a</p> <p>\u5c31\u7eea\u961f\u5217\u7684\u6570\u91cf</p> <p>\u6839\u636e\u8fdb\u7a0b\u4f18\u5148\u6743\u786e\u5b9a\u8fdb\u7a0b\u5e94\u8be5\u8fdb\u5165\u54ea\u4e2a\u5c31\u7eea\u961f\u5217\u7684\u7b97\u6cd5</p> <p>\u7528\u4e8e\u786e\u5b9a\u8fdb\u7a0b\u4f55\u65f6\u8f6c\u79fb\u5230\u8f83\u9ad8\u4f18\u5148\u6743\u961f\u5217\u7684\u7b97\u6cd5</p> <p>\u7528\u4e8e\u786e\u5b9a\u8fdb\u7a0b\u4f55\u65f6\u8f6c\u79fb\u5230\u8f83\u4f4e\u4f18\u5148\u6743\u961f\u5217\u7684\u7b97\u6cd5</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#3_2","title":"3 \u5b9e\u65f6\u7cfb\u7edf\u4e2d\u7684\u8c03\u5ea6","text":"<p>\u5b9e\u65f6\u7cfb\u7edf\u5bf9\u5904\u7406\u673a\u64cd\u4f5c\u6216\u8005\u6570\u636e\u6d41\u52a8\u5177\u6709\u4e25\u683c\u7684\u65f6\u9650\u5236\uff0c\u5176\u8fdb\u7a0b\u8c03\u5ea6\u5bf9\u4fdd\u8bc1\u65f6\u95f4\u8981\u6c42\u5177\u6709\u91cd\u8981\u4f5c\u7528\u3002</p> <p>3.1 \u5b9e\u73b0\u5b9e\u65f6\u8c03\u5ea6\u7684\u57fa\u672c\u6761\u4ef6</p> <p>(1) \u63d0\u4f9b\u5fc5\u8981\u7684\u8c03\u5ea6\u4fe1\u606f</p> <p>1.\u5c31\u7eea\u65f6\u95f4\u30022.\u5f00\u59cb\u622a\u6b62\u65f6\u95f4\u548c\u5b8c\u6210\u622a\u6b62\u65f6\u95f4 3.\u5904\u7406\u65f6\u95f4 4.\u8d44\u6e90\u8981\u6c42 5.\u4f18\u5148\u7ea7</p> <p>(2)\u7cfb\u7edf\u5904\u7406\u80fd\u529b\u5f3a</p> <ol> <li>\u5355\u5904\u7406\u673a\u60c5\u51b5\u4e0b\u5fc5\u987b\u6ee1\u8db3\u7684\u9650\u5236\u6761\u4ef6</li> </ol> <p>\\sum^{m}_{i=1}{\\frac{C_i}{P_i}} \\le 1 (1\\le i \\le m)</p> <ol> <li>N\u4e2a\u5904\u7406\u673a\u60c5\u51b5\u4e0b\u5fc5\u987b\u6ee1\u8db3\u7684\u9650\u5236\u6761\u4ef6</li> </ol> <p>\\sum^{m}_{i=1}{\\frac{C_i}{P_i}} \\le n (1\\le i \\le m)</p> <p>(3)\u91c7\u7528\u62a2\u5360\u5f0f\u8c03\u5ea6\u673a\u5236</p> <ol> <li>\u57fa\u4e8e\u65f6\u949f\u4e2d\u65ad\u7684\u62a2\u5360\u5f0f\u4f18\u5148\u6743\u8c03\u5ea6</li> <li>\u7acb\u5373\u62a2\u5360\u7684\u4f18\u5148\u6743\u8c03\u5ea6</li> </ol> <p>(4)\u5c3d\u53ef\u80fd\u77ed\u7684\u7cfb\u7edf\u5ef6\u8fdf</p> <ol> <li>\u5bf9\u5916\u90e8\u4e2d\u65ad\u7684\u5feb\u901f\u54cd\u5e94\u80fd\u529b</li> <li>\u5feb\u901f\u7684\u8fdb\u7a0b\u8c03\u5ea6\u4e0e\u5207\u6362\u2019\u2018</li> </ol> <p>3.2 \u5e38\u7528\u7684\u51e0\u79cd\u5b9e\u65f6\u8c03\u5ea6\u7b97\u6cd5</p> <p>\u200b    (1)\u6700\u65e9\u622a\u6b62\u65f6\u95f4\u4f18\u5148EDF(Earliest Deadline First)</p> <p>\u200b    (2)\u6700\u4f4e\u677e\u5f1b\u5ea6\u4f18\u5148LLF(Least Laxity First)</p> <p>\u6ce8\uff1a\u677e\u5f1b\u5ea6\u8ba1\u7b97</p> <p>\u677e\u5f1b\u5ea6(L,Laxity)\u7528\u6765\u8868\u793a\u4e00\u4e2a\u5b9e\u65f6\u4efb\u52a1\u7684\u7d27\u8feb\u7a0b\u5ea6\u3002\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u7684\u5b8c\u6210\u622a\u6b62\u65f6\u95f4\u4e3aT,\u5f53\u524d\u65f6\u523b\u4e3aTc ,\u5904\u7406\u5b8c\u8be5\u4efb\u52a1\u8fd8\u9700\u8981\u7684\u65f6\u95f4\u4e3aTs ,\u5219\u677e\u5f1b\u5ea6\u8ba1\u7b97\u5f0f\u8868\u793a\u4e3a\uff1aL=T-   T_c - T_s</p> <p>\u5047\u5982\u4e00\u4e2a\u5b9e\u65f6\u7cfb\u7edf\u4e2d\u6709\u4e24\u4e2a\u5468\u671f\u6027\u5b9e\u65f6\u4efb\u52a1\uff0cA\u548cB\uff0c\u4efb\u52a1A\u8981\u6c42\u6bcf20ms\u6267\u884c\u4e00\u6b21\uff0c\u6267\u884c\u65f6\u95f4\u4e3a10ms\uff1b\u4efb\u52a1B\u53ea\u8981\u6c42\u6bcf50ms\u6267\u884c\u4e00\u6b21\uff0c\u6267\u884c\u65f6\u95f425ms\u3002 \u56fe\u7ed9\u51fa\u4e86A\u548c B\u622a\u6b62\u7684\u65f6\u95f4\u70b9\u3002</p> <p></p> <p></p> <p></p> <p>\u6ce8\uff1a\u5728t=30\u65f6\u523b\uff0cA\u677e\u5f1b\u5ea6\u964d\u4e3a0\uff0c\u7acb\u5373\u62a2\u5360\u3002</p> <p>\u53c2\u8003\u535a\u5ba2\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5904\u7406\u673a\u7684\u8c03\u5ea6\u95ee\u9898</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#4_3","title":"4 \u5c0f\u7ed3","text":"<p>1\u3001\u5f15\u8d77\u8fdb\u7a0b\u8c03\u5ea6\u7684\u539f\u56e0\u6709\u54ea\u4e9b\uff1f</p> <p>\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\uff1b\u8fdb\u7a0b\u963b\u585e\uff1b\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u65f6\u95f4\u7247\u7528\u5b8c\uff1b\u5728\u652f\u6301\u62a2\u5360\u5f0f\u8c03\u5ea6\u7684\u7cfb\u7edf\u4e2d\u6709\u4f18\u5148\u6743\u9ad8\u7684\u8fdb\u7a0b\u5230\u6765\uff1b\u4e2d\u65ad\u8fd4\u56de\u3002</p> <p>(1)\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\u3002\u8fd9\u65f6\uff0c\u5982\u679c\u4e0d\u9009\u62e9\u65b0\u7684\u5c31\u7eea\u8fdb\u7a0b\u6267\u884c\uff0c\u5c06\u6d6a\u8d39 \u5904\u7406\u673a\u8d44\u6e90\u3002</p> <p>(2)\u6267\u884c\u4e2d\u8fdb\u7a0b\u81ea\u5df1\u8c03\u7528\u963b\u585e\u539f\u8bed\u5c06\u81ea\u5df1\u963b\u585e\u8d77\u6765\u8fdb\u5165\u7761\u7720\u7b49\u72b6\u6001\u3002</p> <p>(3)\u6267\u884c\u4e2d\u8fdb\u7a0b\u8c03\u7528\u4e86P \u539f\u8bed\u64cd\u4f5c\uff0c\u4ece\u800c\u56e0\u8d44\u6e90\u4e0d\u8db3\u800c\u88ab\u963b\u585e\uff1b\u6216\u8c03\u7528\u4e86v\u539f\u8bed\u64cd\u4f5c\u6fc0\u6d3b\u4e86\u7b49\u5f85\u8d44\u6e90\u7684\u8fdb\u7a0b \u961f\u5217\u3002</p> <p>(4)\u6267\u884c\u4e2d\u8fdb\u7a0b\u63d0\u51faI/O\u8bf7\u6c42\u540e\u88ab\u963b\u585e\u3002</p> <p>(5)\u5728 \u5206\u65f6\u7cfb\u7edf\u4e2d\u65f6\u95f4\u7247\u5df2\u7ecf\u7528\u5b8c\u3002</p> <p>(6)\u5728\u6267\u884c\u5b8c \u7cfb\u7edf\u8c03\u7528\u7b49\u7cfb\u7edf\u7a0b\u5e8f\u540e\u8fd4\u56de\u7528\u6237\u8fdb\u7a0b\u65f6\uff0c\u8fd9\u65f6\u53ef\u770b\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u4ece\u800c\u53ef\u8c03\u5ea6\u9009\u62e9\u4e00\u65b0\u7684\u7528\u6237\u8fdb\u7a0b\u6267\u884c\u3002</p> <p>\u4ee5\u4e0a\u90fd\u662f\u5728 \u53ef\u5265\u593a\u65b9\u5f0f\u4e0b\u7684\u5f15\u8d77\u8fdb\u7a0b\u8c03\u5ea6\u7684\u539f\u56e0\u3002\u5728CPU\u6267\u884c\u65b9\u5f0f\u662f\u53ef\u5265\u593a\u65f6\uff0e\u8fd8\u6709</p> <p>(7)\u5c31\u7eea\u961f\u5217\u4e2d\u7684\u67d0\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u53d8\u5f97\u9ad8\u4e8e\u5f53\u524d\u6267\u884c\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\uff0c\u4ece\u800c\u4e5f\u5c06\u5f15\u53d1\u8fdb\u7a0b\u8c03\u5ea6\u3002</p> <p>2\u3001\u652f\u6301\u591a\u4efb\u52a1\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4ec0\u4e48\u9700\u8981\u8fdb\u7a0b\u8c03\u5ea6\u529f\u80fd\uff1f</p> <p>\u5f53\u591a\u4e2a\u8fdb\u7a0b\u5e76\u53d1\u6267\u884c\u65f6\u5019\uff0c\u6240\u6709\u7684\u8fdb\u7a0b\u4f1a\u5171\u4eabcpu\u3002\u5f53\u67d0\u4e00cpu\u4e0a\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u56e0\u4e3a\u963b\u585e\u6216\u8005\u8fd0\u884c\u7ed3\u675f\u65f6\u800c\u4f7fcpu\u53ef\u4ee5\u5206\u914d\u7ed9\u5176\u4ed6\u8fdb\u7a0b\u4f7f\u65f6\uff0c\u5982\u4f55\u4ece\u4f17\u591a\u7684\u5c31\u7eea\u961f\u5217\u4e2d\u9009\u62e9\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5c06cpu\u5206\u914d\u7ed9\u8be5\u8fdb\u7a0b\uff0c\u4f7f\u7cfb\u7edf\u6709\u6548\u8fd0\u884c\u3002\u8fd9\u662f\u591a\u4efb\u52a1\u64cd\u4f5c\u7cfb\u7edf\u5fc5\u987b\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002 \u4e3a\u4e86\u66f4\u597d\u7684\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u8bbe\u8ba1\u4e86\u4e00\u4e9b\u8c03\u5ea6\u7b97\u6cd5\uff0c\u4f7f\u5404\u4e2a\u8fdb\u7a0b\u591f\u66f4\u52a0\u534f\u8c03\u7684\u5de5\u4f5c\u3002</p> <p>3\u3001\u8fdb\u7a0bp1,p2,p3\u5230\u8fbe\u7cfb\u7edf\u7684\u65f6\u95f4\u5206\u522b\u4e3a0ms\uff0c9ms\uff0c9ms\u65f6\u523b\uff0c\u5b83\u4eec\u9700\u8981\u7684\u670d\u52a1\u65f6\u95f4\u5206\u522b\u4e3a8ms\uff0c16ms\uff0c4ms\uff0c\u4f18\u5148\u6743\u5206\u522b\u4e3a100\uff0c120\uff0c140\uff0c\u8bf7\u8bf4\u660e\u5e76\u8ba1\u7b97\u5f53\u7cfb\u7edf\u5206\u522b\u91c7\u7528\u77ed\u8fdb\u7a0b\u4f18\u5148\u7684\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\u548c\u57fa\u4e8e\u4f18\u5148\u6743\u7684\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\u65f6\uff0c\u8fdb\u7a0b\u7684\u8c03\u5ea6\u987a\u5e8f\u53ca\u7cfb\u7edf\u7684\u5e73\u5747\u5468\u8f6c\u65f6\u95f4\u3002(\u4f18\u5148\u6743\u503c\u8d8a\u5927\u4f18\u5148\u6743\u8d8a\u4f4e\uff09</p> <p>\u77ed\u8fdb\u7a0b\u4f18\u5148</p> <p>P1-p3-p2</p> <p>\u5e73\u5747\u5468\u8f6c\u65f6\u95f4=(8ms+4ms+20ms)/3=32/3ms</p> <p>\u57fa\u4e8e\u4f18\u5148\u7ea7\uff08\u975e\u62a2\u5360\u5f0f\uff09</p> <p>p1-p2-p3</p> <p>\u5e73\u5747\u5468\u8f6c\u65f6\u95f4=(8ms+16ms+20ms)/3=44/3ms</p> <p>4\u3001\u5b9e\u73b0\u65f6\u95f4\u7247\u8f6e\u8f6c\u8c03\u5ea6\u7b97\u6cd5\u9700\u8981\u54ea\u4e9b\u7279\u5b9a\u786c\u4ef6\u548c\u8f6f\u4ef6\u7684\u652f\u6301</p> <p>\u7b54\uff1a\u9700\u8981\u7684\u786c\u4ef6\uff1a\u53ef\u7f16\u7a0b\u95f4\u9694\u5b9a\u65f6\u5668\u3001\u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668\u3002</p> <p>\u9700\u8981\u7684\u8f6f\u4ef6\uff1a\u8fdb\u7a0b\u63a7\u5236\u5757\u3001\u5c31\u7eea\u961f\u5217\u3001\u8fdb\u7a0b\u8c03\u5ea6\u7a0b\u5e8f\u3001\u65f6\u949f\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002</p> <p>5\u3001\u4ec0\u4e48\u662f\u57fa\u4e8e\u4f18\u5148\u6743\u7684\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\uff1f\u5728\u57fa\u4e8e\u4f18\u5148\u6743\u7684\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\u4e2d\u5982\u4f55\u4e3a\u8fdb\u7a0b\u7ed9\u5b9a\u4f18\u5148\u6743\u503c\uff1f</p> <p>\u7b54\uff1a\u57fa\u4e8e\u4f18\u5148\u6743\u7684\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\u662f\u7cfb\u7edf\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u8d4b\u4e88\u4e00\u4e2a\u4f18\u5148\u6743\uff0c\u7cfb\u7edf\u5c06CPU\u5206\u914d\u7ed9\u5c31\u7eea\u961f\u5217\u4e2d\u4f18\u5148\u6743\u6700\u9ad8\u7684\u8fdb\u7a0b\u3002</p> <p>\u200b    \u4f18\u5148\u6743\u7684\u7c7b\u578b\u5206\u4e3a\u9759\u6001\u4f18\u5148\u6743\u548c\u52a8\u6001\u4f18\u5148\u6743\u3002</p> <p>\uff081\uff09\u9759\u6001\u4f18\u5148\u6743</p> <p>\u200b       \u9759\u6001\u4f18\u5148\u6743\u5728\u521b\u5efa\u65f6\u786e\u5b9a\uff0c\u5728\u8fdb\u7a0b\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u4fdd\u6301\u4e0d\u53d8\u3002\u9759\u6001\u4f18\u5148\u6743\u503c\u901a\u5e38\u53ef\u4ee5\u6839\u636e\u8fdb\u7a0b\u7684\u7c7b\u578b\u3001\u8fdb\u7a0b\u9700\u8981\u7684\u8d44\u6e90\u6570\u91cf\u3001\u7528\u6237\u7684\u8981\u6c42\u6765\u8bbe\u5b9a\u3002</p> <p>\uff082\uff09\u52a8\u6001\u4f18\u5148\u6743</p> <p>\u200b       \u8fdb\u7a0b\u521b\u5efa\u65f6\u88ab\u8d4b\u4e88\u7684\u4f18\u5148\u6743\uff0c\u968f\u8fdb\u7a0b\u7684\u63a8\u8fdb\u6216\u968f\u5176\u7b49\u5f85\u65f6\u95f4\u7684\u589e\u52a0\u800c\u6539\u53d8\u3002\u52a8\u6001\u4f18\u5148\u6743\u8c03\u5ea6\u7b97\u6cd5\u53ef\u4ee5\u4f7f\u7cfb\u7edf\u83b7\u5f97\u66f4\u597d\u7684\u8c03\u5ea6\u6027\u80fd\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_7","title":"\u7b2c\u4e94\u7ae0 \u6b7b\u9501","text":""},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#1_4","title":"1 \u4ea7\u751f\u6b7b\u9501\u7684\u539f\u56e0\u548c\u5fc5\u8981\u6761\u4ef6","text":"<p>1\u3001\u4ea7\u751f\u6b7b\u9501\u7684\u539f\u56e0</p> <p>(1)\u8fdb\u7a0b\u4f7f\u7528\u8d44\u6e90\u987a\u5e8f</p> <p>\u200b      \u2460\u7533\u8bf7\u8d44\u6e90</p> <p>\u200b      \u2461\u8bbf\u95ee\u8d44\u6e90</p> <p>\u200b      \u2462\u91ca\u653e\u8d44\u6e90</p> <p>(2)\u4ea7\u751f\u6b7b\u9501\u539f\u56e0</p> <p>\u200b      \u2460\u7ade\u4e89\u5171\u4eab\u8d44\u6e90;</p> <p>\u200b      \u2461\u8fdb\u7a0b\u63a8\u8fdb\u987a\u5e8f\u4e0d\u5f53;</p> <p>2\u3001\u4ea7\u751f\u6b7b\u9501\u7684\u5fc5\u8981\u6761\u4ef6</p> <p>\u200b     \u2460\u4e92\u65a5\u6761\u4ef6</p> <p>\u200b     \u2461\u8bf7\u6c42\u548c\u4fdd\u6301\u6761\u4ef6</p> <p>\u200b     \u2462\u4e0d\u5265\u593a\u6761\u4ef6</p> <p>\u200b     \u2463\u73af\u8def\u7b49\u5f85</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#2_4","title":"2 \u5904\u7406\u6b7b\u9501\u7684\u57fa\u672c\u65b9\u6cd5","text":"<p>(1)\u9884\u9632\u6b7b\u9501</p> <p>(2)\u907f\u514d\u6b7b\u9501</p> <p>(3)\u68c0\u6d4b\u6b7b\u9501</p> <p>(4)\u89e3\u9664\u6b7b\u9501\uff1a\u5265\u593a\u8d44\u6e90\u6216\u64a4\u6d88\u8fdb\u7a0b</p> <p>1\u3001\u6b7b\u9501\u7684\u9884\u9632</p> <p>\u6b7b\u9501\u9884\u9632\u7684\u57fa\u672c\u539f\u7406\u662f\uff1a\u7834\u73af\u6b7b\u9501\u7684\u56db\u4e2a\u5fc5\u8981\u6761\u4ef6\u4e4b\u4e00\uff0c\u9664\u4e92\u65a5\u6761\u4ef6\u5916\u3002</p> <p>(1)\u6452\u5f03\uff1a\u8bf7\u6c42\u548c\u4fdd\u6301\u201c\u6761\u4ef6\u201d</p> <p>\u200b    \u2460\u5b9e\u73b0\u65b9\u6cd5\uff1a\u8fdb\u7a0b\u4e00\u6b21\u6027\u7533\u8bf7\u6574\u4e2a\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u5168\u90e8\u8d44\u6e90\uff0c\u53ea\u6709\u7533\u8bf7\u5230\u5168\u90e8\u8d44\u6e90\u540e\uff0c\u65b9\u53ef\u6295\u5165\u8fd0\u884c\uff0c\u8fd0\u884c\u671f\u95f4\u4e0d\u518d\u63d0\u51fa\u8d44\u6e90\u8981\u6c42\u3002</p> <p>\u200b    \u2461\u7f3a\u70b9\uff1a\u8d44\u6e90\u4e25\u91cd\u6d6a\u8d39\uff0c\u8fdb\u7a0b\u5ef6\u8fdf\u8fd0\u884c\u3002 </p> <p>(2)\u6452\u5f03\uff1a\u201c\u4e0d\u5265\u593a\u201d\u6761\u4ef6</p> <p>\u200b    \u2460\u65b9\u6cd5\uff1a\u4e00\u4e2a\u5df2\u4fdd\u6301\u4e86\u67d0\u4e9b\u8d44\u6e90\u7684\u8fdb\u7a0b\uff0c\u5f53\u5b83\u518d\u63d0\u51fa\u65b0\u7684\u8d44\u6e90\u8981\u6c42\u800c\u4e0d\u80fd\u7acb\u5373\u5f97\u5230\u6ee1\u8db3\u65f6\uff0c\u5fc5\u987b\u91ca\u653e\u5b83\u5df2\u7ecf\u4fdd\u6301\u7684\u6240\u6709\u8d44\u6e90\u3002</p> <p>\u200b    \u2461\u7f3a\u70b9\uff1a\u5b9e\u73b0\u590d\u6742\u800c\u4e14\u4ee3\u4ef7\u9ad8 \u3002</p> <p>(3)\u6452\u5f03\uff1a\u201c\u73af\u8def\u7b49\u5f85\u201d</p> <p>\u200b    \u2460\u65b9\u6cd5\uff1a\u201c\u89c4\u5b9a\u8fdb\u7a0b\u5fc5\u987b\u6309\u8d44\u6e90\u6392\u5e8f\u7684\u79e9\u5e8f\u4f9d\u4e00\u5b9a\u987a\u5e8f\u7533\u8bf7\u8d44\u6e90\u3002</p> <p>\u2461\u7f3a\u70b9\uff1a\u9650\u5236\u4e86\u65b0\u8bbe\u5907\u7684\u589e\u52a0\u3002\u7cfb\u7edf\u4e3a\u8d44\u6e90\u5206\u914d\u7684\u5e8f\u53f7\u4e0e\u8fdb\u7a0b\u5b9e\u9645\u4f7f\u7528\u8d44\u6e90\u7684\u987a\u5e8f\u4e0d\u540c\u800c\u9020\u6210\u8d44\u6e90\u6d6a\u8d39\u3002\u7ed9\u7528\u6237\u7f16\u7a0b\u5e26\u6765\u4e86\u9ebb\u70e6\u3002 </p> <p>3\u3001\u6b7b\u9501\u7684\u907f\u514d</p> <p>(1)\u5b89\u5168\u72b6\u6001</p> <p>\u200b    \u5f53\u7cfb\u7edf\u627e\u5230\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u5e8f\u5217\uff0c\u4f7f\u7cfb\u7edf\u53ea\u8981\u6309\u6b64\u5e8f\u5217\u63a8 \u8fdb\u8fdb\u7a0b\u65f6\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u8fdb\u7a0b\u7684\u8d44\u6e90\u5206\u914d\u548c\u987a\u5229\u5b8c\u6210\uff0c\u4e0d\u4f1a\u53d1\u751f\u6b7b\u9501\uff0c\u8fd9\u79cd\u72b6\u6001\u79f0\u5b89\u5168\u72b6\u6001 \u3002</p> <p>(2)\u4e0d\u5b89\u5168\u72b6\u6001\u4e3e\u4f8b</p> <p>\u200b     \u8bbe\u5728T0\u65f6\u523b\uff0c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u60c5\u51b5\u5982\u4e0b\uff0c\u5219\u7cfb\u7edf\u5904\u4e8e\u4e0d\u5b89\u5168\u72b6\u6001\uff0c\u56e0\u4e3a\u5f53\u7cfb\u7edf\u5904\u4e8e\u4e0b\u8868\u6240\u793a\u7684\u72b6\u6001\u65f6\uff0c\u65e0\u8bba\u8fdb\u7a0b\u6309\u4ec0\u4e48\u79e9\u5e8f\u63a8\u8fdb\uff0c\u90fd\u65e0\u6cd5\u907f\u514d\u6b7b\u9501\u3002</p> <p>(3)\u5b89\u5168\u72b6\u6001\u53ef\u4ee5\u5411\u4e0d\u5b89\u5168\u72b6\u6001\u8f6c\u6362</p> <p>\u200b     \u7cfb\u7edf\u4e0d\u6309\u7167\u5b89\u5168\u5e8f\u5217\u5206\u914d\u8d44\u6e90\u65f6\uff0c\u5219\u7cfb\u7edf\u53ef\u80fd\u4f1a\u7531\u5b89\u5168\u72b6\u6001\u8fdb\u5165\u4e0d\u5b89\u5168\u72b6\u6001\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#3_3","title":"3 \u5229\u7528\u94f6\u884c\u5bb6\u7b97\u6cd5\u907f\u514d\u6b7b\u9501","text":"<p>1\u3001\u7b97\u6cd5\u7684\u57fa\u672c\u601d\u60f3</p> <p>\u4e00\u4e2a\u8fdb\u7a0b\u63d0\u51fa\u8bf7\u6c42\u540e\u5148\u8bd5\u5206\u914d\uff0c\u7136\u540e\u68c0\u6d4b\u672c\u6b21\u7684\u5206\u914d\u662f\u5426\u4f7f\u7cfb\u7edf\u5904\u4e8e\u5b89\u5168\u72b6\u6001\uff0c\u5b89\u5168\u5219\u6309\u8bd5\u5206\u914d\u65b9\u6848\u5206\u914d\u8d44\u6e90\uff0c\u5426\u5219\u4e0d\u5206\u914d\u3002</p> <p>2\u3001\u6570\u636e\u7ed3\u6784</p> <p>\u2460available [i]  \u5f53\u524d\u53ef\u5206\u914d\u8d44\u6e90</p> <p>\u2461max[i,j] \u8fdb\u7a0b\u9700\u8981\u7684\u6700\u5927\u8d44\u6e90\u6570\u3002</p> <p>\u2462allocation[i,j] \u67d0\u65f6\u523b\u5df2\u5206\u914d\u7ed9\u8fdb\u7a0b\u7684\u8d44\u6e90\u6570\u3002</p> <p>\u2463need[i,j] \u8fdb\u7a0b\u8fd8\u9700\u8981\u591a\u5c11\u8d44\u6e90\u624d\u80fd\u5c31\u7eea\u3002</p> <p>3\u3001\u94f6\u884c\u5bb6\u7b97\u6cd5\u7684\u8bf4\u660e</p> <p>\u4e24\u4e2a\u8fc7\u7a0b\uff1a</p> <p>\u2460\u8fdb\u884c\u8d44\u6e90\u7684\u8bd5\u5206\u914d(\u5bf9\u6bcf\u4e00\u6b21\u8d44\u6e90\u8bf7\u6c42)\u3002</p> <p>\u2461\u5bf9\u521a\u7ed9\u51fa\u7684\u5206\u914d\u65b9\u6848\u505a\u5b89\u5168\u6027\u68c0\u6d4b\u3002</p> <p>\u68c0\u6d4b\u7ed3\u679c\uff1a     \u82e5\u5f53\u524d\u7684\u5206\u914d\u65b9\u6848\u662f\u5b89\u5168\u7684\uff0c\u5219\u5206\u914d\u8d44\u6e90\u3002\u82e5\u5f53\u524d\u7684\u5206\u914d\u65b9\u6848\u662f\u4e0d\u5b89\u5168\u7684\u5219\u4ee4\u7533\u8bf7\u8d44\u6e90\u7684\u8fdb\u7a0b\u7b49\u5f85\uff0c\u6682\u4e0d\u4e3a\u5b83\u5206\u914d\u8d44\u6e90\u3002</p> <p>\u2460\u8d44\u6e90\u5206\u914d\u7b97\u6cd5</p> <p></p> <p>\u2461\u5b89\u5168\u6027\u68c0\u6d4b\u7b97\u6cd5\uff1a</p> <p>\u6570\u636e\u7ed3\u6784\uff1awork\u3001finish[i]</p> <p>\u7b97\u6cd5\u601d\u60f3\uff1a\u5bf9T\u65f6\u523b\u7684\u5206\u914d\u65b9\u6848\u8fdb\u884c\u68c0\u6d4b\uff0c\u786e\u5b9a\u662f\u5426  \u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u5b89\u5168\u5e8f\u5217\u3002</p> <p></p> <p>4\u3001\u94f6\u884c\u5bb6\u7b97\u6cd5\u7684\u5b9e\u4f8b</p> <p>\u200b     \u5047\u8bbe\u4e00\u4e2a\u7cfb\u7edf\uff0c\u67095\u4e2a\u8fdb\u7a0bp0,p1,p2,p3,p4\uff0c\u67093\u79cd\u7c7b \u578b\u7684\u8d44\u6e90A,B,C\uff0c\u5176\u4e2dA\u7c7b\u8d44\u6e90\u670910\u4e2a\uff0cB\u7c7b\u8d44\u6e90\u67095\u4e2a\uff0cC\u7c7b\u8d44\u6e90\u67097\u4e2a\u3002\u5047\u5b9a\u5728T0\u65f6\u523b\uff0c\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u72b6\u6001\u5982\u4e0b\uff1a</p> \u8fdb\u7a0b\u540d\u79f0 allocation  (A  B  C) max  (A  B  C) need  (A  B  C) available  (A  B  C) p0 0    1   0 7   5    3 7   4    3 3   3    2 p1 2   0    0 3   2    2 1   2    2 p2 3   0    2 9   0    2 6   0    0 p3 2   1    1 2   2    2 0    1   1 p4 0    0   2 4   3    3 4   3    1 <p>\u5728T0\u65f6\u523b\uff0c\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u5b89\u5168\u5e8f\u5217\uff0c\u7cfb\u7edf\u5728T0\u65f6\u523b\u5904\u4e8e\u5b89\u5168\u72b6\u6001\u3002 <p>\u82e5\u6b64\u65f6\u8fdb\u7a0bp1\u63d0\u51fa\u8d44\u6e90\u8bf7\u6c42request1=(1,0,2)\uff0c\u5219\u901a\u8fc7\u94f6\u884c\u5bb6\u7b97\u6cd5\u5148\u8fdb\u884c\u8d44\u6e90\u8bd5\u5206\u914d\uff0c\u7136\u540e\u68c0\u6d4b\u8bd5\u5206\u914d\u540e\u7cfb\u7edf\u5728T1\u65f6\u523b\u7684\u72b6\u6001\u662f\u5426\u5b89\u5168\u3002</p> <p>5\u3001\u94f6\u884c\u5bb6\u7b97\u6cd5\u5e94\u7528\u60c5\u51b5\u7684\u8bf4\u660e</p> <p>\u200b     \u94f6\u884c\u5bb6\u7b97\u6cd5\u7f3a\u4e4f\u5b9e\u7528\u4ef7\u503c\uff0c\u56e0\u4e3a\u5f88\u5c11\u6709\u8fdb\u7a0b\u80fd\u591f\u5728\u8fd0\u884c\u4e4b\u524d\u5c31\u77e5\u9053\u5176\u6240\u9700\u8d44\u6e90\u7684\u6700\u5927\u503c\uff0c\u800c\u4e14\u8fdb\u7a0b\u6570\u4e0d\u662f\u56fa\u5b9a   \u7684\uff0c\u5f80\u5f80\u5728\u4e0d\u65ad\u53d8\u5316\uff0c\u539f\u672c\u53ef\u7528\u7684\u8d44\u6e90\u4e5f\u53ef\u80fd\u7a81\u7136\u95f4\u53d8\u6210\u4e0d\u53ef\u7528(\u5982\u78c1\u5e26\u673a\u53ef\u80fd\u4f1a\u574f\u6389)</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#4_4","title":"4 \u9898\u76ee","text":"<p>1\u3001\u8d44\u6e90\u7684\u6309\u9700\u5206\u914d\u7b56\u7565\u53ef\u4ee5\u7834\u574f\u5faa\u73af\u7b49\u5f85\u6761\u4ef6</p> <p>2\u3001\u67d0\u7cfb\u7edf\u4e2d\u67093\u4e2a\u5e76\u53d1\u8fdb\u7a0b\uff0c\u90fd\u9700\u8981\u540c\u7c7b\u8d44\u6e904\u4e2a\uff0c\u8bd5\u95ee\u8be5\u7cfb\u7edf\u4e0d\u4f1a\u53d1\u751f\u6b7b\u9501\u7684\u6700\u5c11\u8d44\u6e90\u6570\u662f10\u3002</p> <p>\u516c\u5f0f\uff1aM=N*(W-1)+1\uff0cM\uff1a\u6700\u5c0f\u8d44\u6e90\u6570 N\uff1a\u8fdb\u7a0b\u6570 W\uff1a\u6bcf\u8fdb\u7a0b\u9700\u8981\u540c\u7c7b\u8d44\u6e90\u6570 \u672c\u9898\uff1a3*\uff084-1\uff09+1=10</p> <p>3\u4e2a\u8fdb\u7a0b\u8981\u60f3\u4e0d\u6b7b\u9501 \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u9700\u89814\u4e2a\u540c\u7c7b\u8d44\u6e90\uff0c\u6240\u4ee5\u53ea\u8981\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u67093\u4e2a\u8d44\u6e90 \u53e6\u5916\u4e00\u4e2a\u5728\u7ed9\u4e00\u4e2a\u989d\u5916\u7684\u8d44\u6e90\u3002 \u90a3\u4e483\u4e2a\u8fdb\u7a0b\u4e2d\u6709\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u3002\u8fd0\u884c\u5b8c\u4ee5\u540e \u91ca\u653e\u8d44\u6e90\u7136\u540e\u5176\u4f59\u7684 \u8fdb\u7a0b\u5728\u7533\u8bf7\u8d44\u6e90\u5c31\u53ef\u4ee5\u4e86\u554a \u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_8","title":"\u7b2c\u516d\u7ae0 \u5185\u5b58\u7ba1\u7406","text":""},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#1_5","title":"1 \u5b58\u50a8\u5668\u7684\u5c42\u6b21\u7ed3\u6784","text":"<p>\u6ce8\uff1a\u5c40\u90e8\u6027\u539f\u7406</p> <p>\u7a0b\u5e8f\u6267\u884c\u7684\u5c40\u90e8\u6027\u539f\u7406\u6307\u51fa\uff1a\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\u5448\u73b0\u51fa\u5c40\u90e8\u6027\u89c4\u5f8b\uff0c\u5373\u5728\u4e00\u8f83\u77ed\u7684\u65f6\u95f4\u5185\uff0c\u7a0b\u5e8f\u7684\u6267\u884c\u4ec5\u5c40\u9650\u4e8e\u67d0\u4e2a\u90e8\u5206\uff0c\u76f8\u5e94\u5730\uff0c\u5b83\u6240\u8bbf\u95ee\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u5c40\u9650\u4e8e\u67d0\u4e2a\u533a\u57df\u3002\u5173\u4e8e\u7a0b\u5e8f\u6267\u884c\u7684\u5c40\u90e8\u6027\u539f\u7406\u6709\u4ee5\u4e0b\u51e0\u4e2a\u8bba\u70b9\uff1a</p> <p>\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\uff0c\u9664\u4e86\u5c11\u90e8\u5206\u7684\u8f6c\u79fb\u548c\u8fc7\u7a0b\u8c03\u7528\u6307\u4ee4\u4ee5\u5916\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u987a\u5e8f\u6267\u884c\u7684\u3002</p> <p>\u8fc7\u7a0b\u8c03\u7528\u5c06\u4f1a\u4f7f\u7a0b\u5e8f\u7684\u6267\u884c\u8f68\u8ff9\u7531\u4e00\u90e8\u5206\u5185\u5b58\u533a\u57df\u8f6c\u5230\u53e6\u4e00\u90e8\u5206\u5185\u5b58\u533a\u57df\u3002\u4f46\u7814\u7a76\u8868\u660e\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fc7\u7a0b\u8c03\u7528\u7684\u6df1\u5ea6\u90fd\u4e0d\u8d85\u8fc75\uff0c\u8fd9\u5c31\u662f\u8bf4\uff0c\u7a0b\u5e8f\u5c06\u4f1a\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u5c40\u9650\u5728\u8fd9\u4e9b\u8fc7\u7a0b\u7684\u8303\u56f4\u5185\u8fd0\u884c\u3002</p> <p>3.\u7a0b\u5e8f\u4e2d\u5b58\u5728\u5f88\u591a\u5faa\u73af\u7ed3\u6784\uff0c\u5b83\u4eec\u867d\u7136\u7531\u5c11\u6570\u6307\u4ee4\u6784\u6210\uff0c\u4f46\u591a\u6b21\u6267\u884c\u3002</p> <p>4.\u7a0b\u5e8f\u4e2d\u5f80\u5f80\u5305\u62ec\u8bb8\u591a\u5bf9\u6570\u636e\u7ed3\u6784\u7684\u5904\u7406\uff0c\u5982\u5bf9\u6570\u7ec4\u8fdb\u884c\u64cd\u4f5c\uff0c\u5b83\u4eec\u5f80\u5f80\u90fd\u5c40\u9650\u5728\u5f88\u5c0f\u7684\u8303\u56f4\u5185\u3002</p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u5c40\u90e8\u6027\u539f\u7406\u8868\u73b0\u4e3a\u65f6\u95f4\u548c\u7a7a\u95f4\u7684\u5c40\u90e8\u6027\uff1a</p> <p>\u65f6\u95f4\u5c40\u90e8\u6027\uff1a\u5982\u679c\u7a0b\u5e8f\u4e2d\u7684\u67d0\u6761\u6307\u4ee4\u4e00\u65e6\u6267\u884c\uff0c\u5219\u4e0d\u4e45\u540e\u8be5\u6307\u4ee4\u53ef\u80fd\u518d\u6b21\u6267\u884c\uff0c\u5982\u679c\u67d0\u4e2a\u6570\u636e\u7ed3\u6784\u88ab\u8bbf\u95ee\uff0c\u4e0d\u4e45\u4ee5\u540e\u8be5\u6570\u636e\u7ed3\u6784\u53ef\u80fd\u518d\u6b21\u88ab\u8bbf\u95ee\u3002</p> <p>\u7a7a\u95f4\u5c40\u90e8\u6027\uff1a\u4e00\u65e6\u7a0b\u5e8f\u8bbf\u95ee\u4e86\u67d0\u4e2a\u5355\u5143\uff0c\u5728\u4e0d\u4e45\u4e4b\u540e\uff0c\u5176\u9644\u8fd1\u7684\u5b58\u50a8\u5355\u5143\u4e5f\u5c06\u88ab\u8bbf\u95ee\u3002</p> <p>\u5177\u6709\u826f\u597d\u5c40\u90e8\u6027\u7684\u7a0b\u5e8f\u4f1a\u7ecf\u5e38\u8bbf\u95ee\u76f8\u540c\u7684\u6570\u636e\u96c6\u5408\u6216\u5730\u5740\u76f8\u90bb\u7684\u6570\u636e\u96c6\u5408\u3002\u5177\u6709\u826f\u597d\u5c40\u90e8\u6027\u7684\u7a0b\u5e8f\u6bd4\u5c40\u90e8\u6027\u5dee\u7684\u7a0b\u5e8f\u80fd\u66f4\u597d\u5730\u5229\u7528\u5904\u4e8e\u9ad8\u5c42\u6b21\u7684\u50a8\u5b58\u5668\uff0c\u51cf\u5c11\u8bbf\u5b58\u65f6\u95f4\uff0c\u56e0\u6b64\u8fd0\u884c\u901f\u5ea6\u66f4\u5feb\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#2_5","title":"2 \u7a0b\u5e8f\u7684\u88c5\u5165\u548c\u94fe\u63a5","text":"<p>\u5728\u591a\u9053\u7a0b\u5e8f\u73af\u5883\u4e0b\uff0c\u7a0b\u5e8f\u8981\u8fd0\u884c\u5fc5\u987b\u4e3a\u4e4b\u521b\u5efa\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0cCPU\u901a\u8fc7\u8bbf\u95ee\u5185\u5b58\u83b7\u53d6\u5176\u8981\u6267\u884c\u7684\u6307\u4ee4\u3002\u8fdb\u7a0b\u7684\u6267\u884c\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u5c06\u7a0b\u5e8f\u548c\u6570\u636e\u88c5\u5165\u5185\u5b58\u3002\u5c06\u4e00\u4e2a\u7528\u6237\u7684\u6e90\u7a0b\u5e8f\u53d8\u4e3a\u4e00\u4e2a\u53ef\u5728\u5185\u5b58\u4e2d\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u901a\u5e38\u8981\u7ecf\u8fc7\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u88c5\u5165 \u3002</p> <p>\u94fe\u63a5\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff1a\u5c06\u7f16\u8bd1\u540e\u7684\u76ee\u6807\u6a21\u5757\u88c5\u914d\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u7684\u7a0b\u5e8f\u3002</p> <p>\u94fe\u63a5\u7684\u4e24\u79cd\u65b9\u5f0f\uff1a1\u3001\u9759\u6001\u94fe\u63a5 (static Linking) 2\u3001\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5 (Run-time Dynamic Linking)</p> <p>2.1 \u9759\u6001\u94fe\u63a5</p> <p>\u5728\u7a0b\u5e8f\u8fd0\u884c\u524d\uff0c\u7528\u94fe\u63a5\u7a0b\u5e8f\u5c06\u76ee\u6807\u6a21\u5757\u94fe\u63a5\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u88c5\u5165\u6a21\u5757\u3002 </p> <p>\u9759\u6001\u94fe\u63a5\u7684\u4efb\u52a1\uff1a</p> <p>1\uff09\u5bf9\u76f8\u5bf9\u5730\u5740\u8fdb\u884c\u4fee\u6539\uff1a</p> <p>2\uff09\u53d8\u6362\u5916\u90e8\u8c03\u7528\u7b26\u53f7\uff1a\u5c06\u6bcf\u4e2a\u6a21\u5757\u4e2d\u6240\u7528\u7684\u5916\u90e8\u8c03\u7528\u7b26\u53f7\uff0c\u90fd\u53d8\u6362\u4e3a\u76f8\u5bf9\u5730\u5740 </p> <p>\u9759\u6001\u94fe\u63a5\u7684\u7279\u70b9\uff1a</p> <p>1\uff09\u5b58\u50a8\u5f00\u9500\u5927</p> <p>2\uff09\u7a0b\u5e8f\u5f00\u53d1\u4e0d\u65b9\u4fbf</p> <p>3\uff09\u7a0b\u5e8f\u8fd0\u884c\u5feb\uff08\u76f8\u5bf9\u4e8e\u52a8\u6001\u94fe\u63a5\uff09</p> <p>2.2 \u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5</p> <p>\u52a8\u6001\u94fe\u63a5\u7684\u57fa\u672c\u601d\u60f3\u662f\u628a\u7a0b\u5e8f\u6309\u7167\u6a21\u5757\u62c6\u5206\u6210\u5404\u4e2a\u76f8\u5bf9\u72ec\u7acb\u90e8\u5206\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u624d\u5c06\u5b83\u4eec\u94fe\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u50cf\u9759\u6001\u94fe\u63a5\u4e00\u6837\u628a\u6240\u6709\u7a0b\u5e8f\u6a21\u5757\u90fd\u94fe\u63a5\u6210\u4e00\u4e2a\u5355\u72ec\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> <p>\u52a8\u6001\u94fe\u63a5\u7684\u7279\u70b9\uff1a</p> <p>1\uff09\u8282\u7701\u5185\u5b58\u548c\u5916\u5b58\u7a7a\u95f4\uff1b</p> <p>2\uff09\u65b9\u4fbf\u7a0b\u5e8f\u5f00\u53d1\uff1b</p> <p>3\uff09\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u901f\u5ea6\u6162\u4e86\u3002</p> <p>3\u3001\u7a0b\u5e8f\u7684\u88c5\u5165</p> <p>3.1 \u7edd\u5bf9\u88c5\u5165\u65b9\u5f0f</p> <p>\u7f16\u8bd1\u7a0b\u5e8f\u4e8b\u5148\u5df2\u77e5\u7a0b\u5e8f\u5728\u5185\u5b58\u4e2d\u7684\u9a7b\u7559\u4f4d\u7f6e\uff0c\u7f16\u8bd1\u65f6\u4ea7\u751f\u7edd\u5bf9\u5730\u5740\u7684\u76ee\u6807\u4ee3\u7801\uff0c\u7edd\u5bf9\u88c5\u5165\u7a0b\u5e8f\u6309\u7167\u88c5\u5165\u6a21\u5757\u7684\u7edd\u5bf9\u5730\u5740\u5c06\u7a0b\u5e8f\u548c\u6570\u636e\u88c5\u5165\u5185\u5b58\u3002\u88c5\u5165\u6a21\u5757\u88ab\u88c5\u5165\u5185\u5b58\u540e\uff0c\u4e0d\u9700\u5bf9\u7a0b\u5e8f\u548c\u6570\u636e\u7684\u5730\u5740\u8fdb\u884c\u4fee\u6539\u3002 </p> <p>\u903b\u8f91\u5730\u5740 == \u7269\u7406\u5730\u5740</p> <p>3.2 \u53ef\u91cd\u5b9a\u4f4d\u88c5\u5165\u65b9\u5f0f(\u9759\u6001\u91cd\u5b9a\u4f4d)</p> <p>\u5728\u7a0b\u5e8f\u88c5\u5165\u65f6\u5bf9\u76ee\u6807\u7a0b\u5e8f\u4e2d\u7684\u6307\u4ee4\u548c\u6570\u636e\u5730\u5740\u7684\u4fee\u6539\u8fc7\u7a0b\u79f0\u4e3a\u91cd\u5b9a\u4f4d\u3002</p> <p>1\uff09\u7f16\u8bd1\u7a0b\u5e8f\u4f7f\u76ee\u6807\u6a21\u5757\u7684\u8d77\u59cb\u5730\u5740\u4ece0\u5f00\u59cb\u3002</p> <p>2\uff09\u7a0b\u5e8f\u88c5\u5165\u65f6\uff0c\u88c5\u5165\u7a0b\u5e8f\u6839\u636e\u5185\u5b58\u7684\u4f7f\u7528\u60c5\u51b5\u5c06\u88c5\u5165\u6a21\u5757\u88c5\u5165\u5230\u5185\u5b58\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u5bf9\u6a21\u5757\u8fdb\u884c\u91cd\u5b9a\u4f4d\u3002</p> <p>\u7269\u7406\u5730\u5740=\u6709\u6548\u903b\u8f91\u5730\u5740+\u7a0b\u5e8f\u5728\u5185\u5b58\u4e2d\u7684\u8d77\u59cb\u5730\u5740\u3002</p> <p>3.3 \u52a8\u6001\u8fd0\u884c\u65f6\u88c5\u5165 </p> <p>\u8fdb\u7a0b\u6267\u884c\u65f6\u8fdb\u884c\u903b\u8f91\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u8f6c\u6362 \u3002(\u56e0\u4e3a\u8fdb\u7a0b\u5728\u6d3b\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u5728\u7269\u7406\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6bd4\u5982\u5728\u5177\u6709\u5bf9\u6362\u529f\u80fd\u7684\u7cfb\u7edf\u4e2d\uff09\u3002</p> <p>CPU --\u903b\u8f91\u5730\u5740346\u2192 + \u91cd\u5b9a\u4f4d\u5bc4\u5b58\u5668(14000) \u2192 \u7269\u7406\u5730\u5740(14346)---&gt;\u5185\u5b58</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#3_4","title":"3 \u8fde\u7eed\u5206\u914d\u5b58\u50a8\u7ba1\u7406\u65b9\u5f0f","text":"<p>1\u3001\u5355\u4e00\u8fde\u7eed\u5206\u914d</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u9002\u7528\u4e8e\u5355\u7528\u6237\uff0c\u5355\u4efb\u52a1\u7684OS\u3002\u628a\u5185\u5b58\u5206\u4e3a\u7cfb\u7edf\u533a\u548c\u7528\u6237\u533a\u3002\u7cfb\u7edf\u533a\u4ec5\u4f9bOS\u4f7f\u7528\uff0c\u7528\u6237\u533a\u4f9b\u7528\u6237\u4f7f\u7528\u3002</p> <p>\u7528\u6237\u7a0b\u5e8f + OS\u5185\u6838</p> <p>2\u3001\u5206\u533a\u5f0f\u5206\u914d</p> <p>2.1 \u56fa\u5b9a\u5206\u533a\u5206\u914d</p> <p></p> <pre><code>struct {\nint num;  //\u5206\u533a\u7f16\u53f7\nint length; //\u5206\u533a\u5927\u5c0f\nint addr;  //\u5206\u533a\u8d77\u59cb\u5730\u5740   \nint state ;//\u5206\u533a\u72b6\u6001\uff0c\n} mem_block[4]\uff1b\n</code></pre> <p>\u56fa\u5b9a\u5206\u533a\u7684\u7279\u70b9\uff1a</p> <p>1\u3001\u7ba1\u7406\u7b80\u5355 2\u3001\u5185\u5b58\u5229\u7528\u7387\u4f4e</p> <p>2.2 \u52a8\u6001\u5206\u533a\u5206\u914d</p> <p>\u4f7f\u7528\u56fa\u5b9a\u5206\u533a\u4e0d\u5229\u4e8e\u63d0\u9ad8\u5185\u5b58\u5229\u7528\u7387\uff0c\u6545\u4f7f\u7528\u52a8\u6001\u5206\u533a\uff0c\u6839\u636e\u8fdb\u7a0b\u7684\u5177\u4f53\u60c5\u51b5\u5206\u914d\u5185\u5b58\u3002</p> <p>\u672c\u8282\u4e3b\u8981\u5185\u5bb9\uff1a\u52a8\u6001\u5206\u533a\u5206\u914d\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u3001\u52a8\u6001\u5206\u533a\u5206\u914d\u7b97\u6cd5\u3001\u52a8\u6001\u5206\u533a\u7684\u5206\u914d\u548c\u56de\u6536\u64cd\u4f5c </p> <p>2.2.1 \u52a8\u6001\u5206\u533a\u5206\u914d\u7684\u57fa\u672c\u539f\u7406</p> <p>\u200b   \u7cfb\u7edf\u521d\u59cb\u53ea\u6709\u4e00\u4e2a\u5927\u7a7a\u95f2\u533a\uff0c\u5f53\u8fdb\u7a0b\u8bf7\u6c42\u7a7a\u95f4\u65f6\uff0c\u7531\u7cfb\u7edf\u6839\u636e\u8fdb\u7a0b\u9700\u8981\u7684\u7a7a\u95f4\u5927\u5c0f\u5212\u5206\u51fa\u4e00\u7247\u7a7a\u95f2\u533a\u5206\u914d\u7ed9\u8fdb\u7a0b\u3002\u7cfb\u7edf\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u5185\u5b58\u7684\u7a7a\u95f2\u533a\u53ef\u80fd\u6563\u5e03\u5728\u4e0d\u8fde\u7eed\u7684\u533a\u57df\u3002\u7cfb\u7edf\u7ef4\u62a4\u4e00\u4e2a\u8bb0\u5f55\u5f53\u524d\u7a7a\u95f2\u5206\u533a\u60c5\u51b5\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5f53\u8fdb\u7a0b\u8bf7\u6c42\u5185\u5b58\u65f6\uff0c\u7cfb\u7edf\u4ece\u6240\u6709\u7a7a\u95f2\u533a\u4e2d\u627e\u5927\u5c0f\u5408\u9002\u7684\u7a7a\u95f2\u5206\u533a\u8fdb\u884c\u5206\u914d\u3002\u7cfb\u7edf\u4e2d\u5206\u533a\u7684\u5927\u5c0f\u548c\u6570\u91cf\u90fd\u662f\u53d8\u5316\u7684\uff0c\u7a7a\u95f2\u533a\u7684\u5927\u5c0f\u548c\u6570\u91cf\u4e5f\u662f\u53d8\u5316\u7684\u3002</p> <p>2.2.2 \u5206\u533a\u5206\u914d\u4e2d\u7684\u6570\u636e\u7ed3\u6784</p> <p>\u7a7a\u95f2\u5206\u533a\u8868</p> <p>\u5305\u542b\u5206\u533a\u5e8f\u53f7\u3001\u5206\u533a\u59cb\u5740\u53ca\u5206\u533a\u5927\u5c0f\u7b49\u8868\u76ee\u3002</p> \u5e8f\u53f7 \u5206\u533a\u5927\u5c0f\uff08KB) \u5206\u533a\u59cb\u5740\uff08K\uff09 1 12 30 2 30 45 <p>\u7a7a\u95f2\u5206\u533a\u94fe</p> <p>\u4e3a\u6bcf\u4e2a\u7a7a\u95f2\u5206\u533a\u5efa\u7acb\u4e00\u4e2a\u5206\u533a\u7ed3\u70b9</p> <p>\u6bcf\u4e2a\u7ed3\u70b9\u5305\u62ec:\u5411\u524d\u3001\u5411\u540e\u6307\u9488\u3001\u5206\u533a\u8d77\u59cb\u5730\u5740\u53ca\u5927\u5c0f\u3002</p> <p></p> <p>2.2.3 \u52a8\u6001\u5206\u533a\u5206\u914d\u7b97\u6cd5</p> <p>\u6211\u4eec\u4ecb\u7ecd\u4e0b\u9762\u4e09\u79cd\u52a8\u6001\u5206\u533a\u5206\u914d\u7b97\u6cd5\uff1a</p> <p>1\uff09\u9996\u6b21\u9002\u5e94\u7b97\u6cd5FF 2\uff09  \u5faa\u73af\u9996\u6b21\u9002\u5e94\u7b97\u6cd5\u30023\uff09 \u6700\u4f73\u9002\u5e94\u7b97\u6cd5 </p> <p>2.2.3.1 \u9996\u6b21\u9002\u5e94\u7b97\u6cd5FF</p> <p>\u5728\u91c7\u7528\u7a7a\u95f2\u5206\u533a\u94fe\u4f5c\u4e3a\u6570\u636e\u7ed3\u6784\u65f6\uff0cFF\u7b97\u6cd5\u8981\u6c42\u7a7a\u95f2\u5206\u533a\u94fe\u4ee5\u5730\u5740\u9012\u589e\u7684\u6b21\u5e8f\u94fe\u63a5\u3002\u5728\u8fdb\u884c\u5185\u5b58\u5206\u914d\u65f6\uff0c\u4ece\u94fe\u9996\u5f00\u59cb\u987a\u5e8f\u67e5\u627e\uff0c\u76f4\u81f3\u627e\u5230\u4e00\u4e2a\u80fd\u6ee1\u8db3\u5176\u5927\u5c0f\u8981\u6c42\u7684\u7a7a\u95f2\u5206\u533a\u4e3a\u6b62\u3002\u7136\u540e\uff0c\u518d\u6309\u7167\u4f5c\u4e1a\u7684\u5927\u5c0f\uff0c\u4ece\u8be5\u5206\u533a\u4e2d\u5212\u51fa\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u5206\u914d\u7ed9\u8bf7\u6c42\u8005\uff0c\u4f59\u4e0b\u7684\u7a7a\u95f2\u5206\u533a\u4ecd\u7559\u5728\u7a7a\u95f2\u94fe\u4e2d\u3002</p> <p>\u9996\u6b21\u9002\u5e94\u7b97\u6cd5FF\u7684\u7279\u70b9\uff1a</p> <p>1\uff09\u9ad8\u5730\u5740\u90e8\u5206\u5927\u7a7a\u95f2\u533a\u8f83\u591a\uff1b</p> <p>2\uff09\u4f4e\u5730\u5740\u90e8\u5206\u5bb9\u6613\u7559\u4e0b\u5c0f\u5206\u533a\uff1b</p> <p>3\uff09\u67e5\u627e\u4ece\u4f4e\u5730\u5740\u5f00\u59cb\uff0c\u67e5\u627e\u5f00\u9500\u8f83\u5927\u3002</p> <p>2.2.3.2 \u5faa\u73af\u9996\u6b21\u9002\u5e94\u7b97\u6cd5 </p> <p>\u8be5\u7b97\u6cd5\u662f\u7531\u9996\u6b21\u9002\u5e94\u7b97\u6cd5\u6f14\u53d8\u800c\u5f62\u6210\u7684\u3002\u5728\u4e3a\u8fdb\u7a0b\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u65f6\uff0c\u4e0d\u518d\u6bcf\u6b21\u4ece\u94fe\u9996\u5f00\u59cb\u67e5\u627e\uff0c\u800c\u662f\u4ece\u4e0a\u6b21\u627e\u5230\u7684\u7a7a\u95f2\u5206\u533a\u7684\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u5206\u533a\u5f00\u59cb\u67e5\u627e\uff0c\u76f4\u81f3\u627e\u5230\u7b2c\u4e00\u4e2a\u80fd\u6ee1\u8db3\u8981\u6c42\u7684\u7a7a\u95f2\u5206\u533a\uff0c\u5e76\u4ece\u4e2d\u5212\u51fa\u4e00\u5757\u4e0e\u8bf7\u6c42\u7684\u5927\u5c0f\u76f8\u7b49\u7684\u5185\u5b58\u7a7a\u95f4\u5206\u914d\u7ed9\u4f5c\u4e1a\u3002\u4e3a\u5b9e\u73b0\u8be5\u7b97\u6cd5\uff0c\u5e94\u8bbe\u7f6e\u4e00\u8d77\u59cb\u67e5\u627e\u6307\u9488\uff0c\u4ee5\u6307\u793a\u4e0b\u4e00\u6b21\u8d77\u59cb\u67e5\u627e\u7684\u7a7a\u95f2\u5206\u533a\uff0c\u5e76\u91c7\u7528\u5faa\u73af\u67e5\u627e\u65b9\u5f0f\u3002</p> <p>\u5faa\u73af\u9996\u6b21\u9002\u5e94\u7b97\u6cd5\u7684\u7279\u70b9:</p> <p>1\uff09\u7a7a\u95f2\u533a\u5206\u5e03\u5747\u5300</p> <p>2\uff09\u67e5\u627e\u5f00\u9500\u8f83\u5c0f</p> <p>3\uff09\u5bb9\u6613\u4f7f\u7cfb\u7edf\u7f3a\u4e4f\u5927\u7a7a\u95f2\u533a</p> <p>2.2.3.3 \u6700\u4f73\u9002\u5e94\u7b97\u6cd5</p> <p>\u8be5\u7b97\u6cd5\u6bcf\u6b21\u4e3a\u4f5c\u4e1a\u5206\u914d\u5185\u5b58\uff0c\u603b\u662f\u628a\u65e2\u80fd\u6ee1\u8db3\u8981\u6c42\u3001\u53c8\u662f\u6700\u5c0f\u7684\u7a7a\u95f2\u5206\u533a\u5206\u914d\u7ed9\u4f5c\u4e1a\uff0c\u907f\u514d\u4e86\u201c\u5927\u6750\u5c0f\u7528\u201d\u3002\u4e3a\u4e86\u52a0\u901f\u5bfb\u627e\uff0c\u8be5\u7b97\u6cd5\u8981\u6c42\u5c06\u6240\u6709\u7684\u7a7a\u95f2\u533a\uff0c\u6309\u5176\u5927\u5c0f\u4ee5\u9012\u589e\u7684\u987a\u5e8f\u5f62\u6210\u4e00\u7a7a\u95f2\u533a\u3002\u8fd9\u6837\uff0c\u7b2c\u4e00\u6b21\u627e\u5230\u7684\u6ee1\u8db3\u8981\u6c42\u7684\u7a7a\u95f2\u533a\uff0c\u5fc5\u7136\u662f\u6700\u4f18\u7684\u3002</p> <p>\u6700\u4f73\u9002\u5e94\u7b97\u6cd5\u7684\u7279\u70b9\uff1a</p> <p>1\uff09\u907f\u514d\u5927\u6750\u5c0f\u7528\uff0c\u63d0\u9ad8\u5185\u5b58\u5229\u7528\u7387</p> <p>2\uff09\u5bb9\u6613\u7559\u4e0b\u96be\u4ee5\u5229\u7528\u7684\u5c0f\u7a7a\u95f2\u533a</p> <p>2.2.3.4 \u5206\u533a\u5206\u914d\u64cd\u4f5c</p> <p>\u5185\u5b58\u5206\u914d\u6d41\u7a0b</p> <p></p> <p>\u5185\u5b58\u56de\u6536\u6d41\u7a0b </p> <p>1\uff09\u91ca\u653e\u5185\u5b58 2\uff09\u5408\u5e76\u7a7a\u95f2\u533a</p> <p>\u7d27\u51d1</p> <p>\u4e00\u3001\u7d27\u51d1</p> <p>\u628a\u591a\u4e2a\u5206\u6563\u7684\u5c0f\u5206\u533a\u62fc\u63a5\u6210\u5927\u5206\u533a\u7684\u65b9\u6cd5\uff0c\u88ab\u79f0\u4e3a\u201c\u62fc\u63a5\u201d\u6216\u201c\u7d27\u51d1\u201d </p> <p></p> <p>\u4e8c\u3001\u52a8\u6001\u91cd\u5b9a\u4f4d</p> <p>\u7269\u7406\u5730\u5740=\u903b\u8f91\u5730\u5740+\u91cd\u5b9a\u4f4d\u5bc4\u5b58\u5668\u4e2d\u7684\u5730\u5740</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#4_5","title":"4 \u4e0d\u8fde\u7eed\u5206\u914d\u5b58\u50a8\u7ba1\u7406\u65b9\u5f0f","text":""},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#41","title":"4.1 \u57fa\u672c\u5206\u9875\u5b58\u50a8\u7ba1\u7406\u65b9\u5f0f","text":"<p>\u5c06\u4e00\u4e2a\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u5206\u6210\u82e5\u5e72\u4e2a\u5927\u5c0f\u76f8\u7b49\u7684\u9875,\u5c06\u5185\u5b58\u7a7a\u95f4\u5206\u6210\u4e0e\u9875\u76f8\u540c\u5927\u5c0f\u7684\u82e5\u5e72\u4e2a\u7269\u7406\u5757\uff08\u9875\u6846\uff09\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u9875\u5b58\u5728\u4e00\u4e2a\u5185\u5b58\u7269\u7406\u5757\u4e2d,\u9875\u53f7\u8fde\u7eed\u7684\u9875\u53ef\u4ee5\u79bb\u6563\u5b58\u653e\u5728\u7269\u7406\u5757\u53f7\u4e0d\u8fde\u7eed\u7684\u7269\u7406\u5757\u4e2d.\u5229\u7528\u9875\u8868\u5b9e\u73b0\u903b\u8f91\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u3002</p> <p>\u4e00\u3001\u57fa\u672c\u6982\u5ff5</p> <p>1.\u9875\uff1a\u5c06\u4e00\u4e2a\u8fdb\u7a0b\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u5206\u6210\u82e5\u5e72\u4e2a\u5927\u5c0f\u76f8\u7b49\u7684\u7247\uff0c\u79f0\u4e3a\u9875\u9762\u6216\u9875\uff08page\uff09\u3002</p> <p>2.\u7269\u7406\u5757\uff1a\u5c06\u5185\u5b58\u7a7a\u95f4\u5206\u6210\u4e0e\u9875\u76f8\u540c\u5927\u5c0f\u7684\u82e5\u5e72\u4e2a\u5b58\u50a8\u5757\uff0c\u79f0\u4e3a\u7269\u7406\u5757\u6216\u9875\u6846\u6216\u5e27\u3002(page frame)</p> <p>3.\u5206\u9875\u5b58\u50a8\uff1a\u5728\u4e3a\u8fdb\u7a0b\u5206\u914d\u5185\u5b58\u65f6\uff0c\u4ee5\u7269\u7406\u5757\u4e3a\u5355\u4f4d\u5c06\u8fdb\u7a0b\u4e2d\u7684\u82e5\u5e72\u9875\u5206\u522b\u88c5\u5165 \u591a\u4e2a\u53ef\u4ee5\u4e0d\u76f8\u90bb\u63a5\u7684\u7269\u7406\u5757\u4e2d\u3002</p> <p>4.\u9875\u5185\u788e\u7247\uff1a\u8fdb\u7a0b\u7684\u6700\u540e\u4e00\u9875\u4e00\u822c\u88c5\u4e0d\u6ee1\u4e00\u5757\uff0c\u800c\u5f62\u6210\u4e0d\u53ef\u5229\u7528\u7684\u788e\u7247\uff0c\u79f0\u4e3a\u201c\u9875\u5185\u788e\u7247\u201d\u3002 </p> <p>\u4e8c\u3001\u57fa\u672c\u5206\u9875\u5b58\u50a8\u7ba1\u7406\u65b9\u5f0f\u4e2d\u7684\u5730\u5740\u7ed3\u6784</p> <p>1\u3001\u5730\u5740\u7ed3\u6784\u4e2d\u5305\u542b\u4e24\u90e8\u5206\uff1a\u9875\u53f7P\u3001\u9875\u5185\u504f\u79fb\u91cfW\u3002\u82e5\u7528m\u4f4d\u8868\u793a\u903b\u8f91\u5730\u5740\uff0c\u9875\u5927\u5c0f\u4e3a2\u7684n\u6b21\u5e42\uff0c\u5219\u7528\u4f4en\u4f4d\u8868\u793a\u9875\u5185\u504f\u79fb\u91cfw\uff1b\u7528\u9ad8m-n\u4f4d\u8868\u793a\u9875\u53f7P</p> \u9875\u8868\u53f7 \u9875\u5185\u504f\u79fb P(m-n)\u4f4d W(n\u4f4d) <p>\u4ee532\u4f4d\u5730\u5740\u4e3a\u4f8b:\u53ef\u75280~11\u4f4d\u8868\u793a\u9875\u5185\u504f\u79fb\u91cfn=12(\u9875\u51852^{12}\u4e2a\u5355\u5143=\u7269\u7406\u5757\u5927\u5c0f=4KB);12-31\u4f4d(20\u4f4d)\u8868\u793a\u9875\u53f7\uff0c\u5171\u53ef\u67092^{20}\u4e2a\u9875(1M\u4e2a\u9875)\u8fd9\u79cd\u5730\u5740\u7ed3\u6784\u53ef\u4ee5\u8868\u793a4GB\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u3002 </p> <p>\u4e09\u3001\u9875\u8868</p> <p>\u9875\u8868\u662f\u7cfb\u7edf\u4e3a\u8fdb\u7a0b\u5efa\u7acb\u7684\u6570\u636e\u7ed3\u6784\uff0c\u9875\u8868\u7684\u4f5c\u7528\u662f\u5b9e\u73b0\u4ece\u9875\u53f7\u5230\u7269\u7406\u5757\u53f7\u7684\u6620\u5c04\u3002\u5728\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u5185\u7684\u6240\u6709\u9875(0-n)\uff0c\u4f9d\u6b21\u5728\u9875\u8868\u4e2d\u6709\u4e00\u9875\u8868\u9879\uff0c\u5176\u4e2d\u8bb0\u5f55\u4e86\u76f8\u5e94\u9875\u5728\u5185\u5b58\u4e2d\u5bf9\u5e94\u7684\u7269\u7406\u5757\u53f7\uff08\u9875\u6846\u53f7\uff09</p> <p></p> <p>\u56db\u3001\u5730\u5740\u53d8\u6362\u673a\u6784</p> <p>\u4e3a\u4e86\u80fd\u5c06\u7528\u6237\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u903b\u8f91\u5730\u5740\u53d8\u6362\u4e3a\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u7269\u7406\u5730\u5740\uff0c\u5728\u7cfb\u7edf\u4e2d\u5fc5\u987b\u8bbe\u7f6e\u5730\u5740\u53d8\u6362\u673a\u6784\uff0c\u8be5\u673a\u6784\u7684\u57fa\u672c\u4efb\u52a1\u662f\u5b9e\u73b0\u903b\u8f91\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u8f6c\u6362\u3002</p> <p></p> <p>\u5730\u5740\u53d8\u6362\u8fc7\u7a0b</p> <p>1\u3001\u8fdb\u7a0b\u6267\u884c\uff0cPCB\u5757\u4e2d\u9875\u8868\u8d77\u59cb\u5730\u5740\u9001\u9875\u8868\u5bc4\u5b58\u5668\u3002</p> <p>2\u3001CPU\u8bbf\u95ee\u903b\u8f91\u5355\u5143a\u3002</p> <p>3\u3001\u7531\u5206\u9875\u5730\u5740\u53d8\u6362\u673a\u6784\u81ea\u52a8\u5c06 a  \u5206\u4e3a\u9875\u53f7\u548c\u9875\u5185\u5730\u5740\u4e24\u90e8\u5206</p> <p>4\u3001\u7531\u786c\u4ef6\u68c0\u7d22\u673a\u6784\u641c\u7d22\u9875\u8868\uff0c\u5f97\u5230\u7269\u7406\u5757\u53f7\uff08\u9875\u6846\u53f7\uff09\u3002</p> <p>\u641c\u7d22\u539f\u7406\uff1a\u9875\u53f7\u5bf9\u5e94\u7684\u9875\u8868\u9879\u5730\u5740=\u9875\u8868\u8d77\u59cb\u5730\u5740+\u9875\u8868\u9879\u957f\u5ea6*\u9875\u53f7\u3002(\u9875\u8868\u9879\u4e2d\u5b58\u6709\u7269\u7406\u5757\u53f7)\u3002</p> <p>5\u3001\u751f\u6210\u7269\u7406\u5730\u5740\u3002\u7269\u7406\u5730\u5740=\u7269\u7406\u5757\u53f7*\u5757\u5927\u5c0f+\u5757\u5185\u504f\u79fb\u5730\u5740</p> <p>\u9875\u5927\u5c0f\u7684\u9009\u62e9</p> <p>1\u3001\u5728\u5206\u9875\u7cfb\u7edf\u4e2d\u9875\u7684\u5927\u5c0f\u662f\u7531\u673a\u5668\u7684\u4f53\u7cfb\u7ed3\u6784\u6240\u51b3\u5b9a\u7684,\u4ea6\u5373\u7531\u786c\u4ef6\u51b3\u5b9a\u3002\uff08\u5982\uff1a\u5206\u9875\u5355\u5143\u628a\u4f4e12\u4f4d\u903b\u8f91\u5730\u5740\u89e3\u91ca\u4e3a\u9875\u5185\u504f\u79fb\u5730\u5740\uff0c\u5219\u9875\u5927\u5c0f\u5c31\u662f4KB).</p> <p>2\u3001\u5f71\u54cd\u9875\u5927\u5c0f\u8bbe\u8ba1\u7684\u56e0\u7d20</p> <p>1\uff09\u7ba1\u7406\u5185\u5b58\u7684\u5f00\u9500\uff1a</p> <p>\uff081\uff09\u9875\u592a\u5c0f\uff0c\u6709\u5229\u4e8e\u63d0\u9ad8\u5185\u5b58\u7684\u5229\u7528\u7387\u3002\u4f46\u4f1a\u5bfc\u81f4\u8fdb\u7a0b\u6240\u9700\u9875\u591a\uff0c\u9875\u8868\u8fc7\u957f\uff0c\u5360\u7528\u5927\u91cf\u5185\u5b58\u7a7a\u95f4\uff1b\u540c\u65f6\uff0c\u964d\u4f4e\u9875\u6362\u5165\u6362\u51fa\u6548\u7387\u3002 \uff082\uff09\u9875\u592a\u5927\uff0c\u9875\u5185\u788e\u7247\u5927\uff0c\u7a7a\u95f4\u5229\u7528\u7387\u964d\u4f4e\u3002</p> <p>2\uff09\u9875\u7684\u5927\u5c0f</p> <p>(1)\u3001\u9875\u5927\u5c0f\u662f2\u7684\u5e42\u3002</p> <p>(2)\u3001\u9875\u5927\u5c0f\u5728512B~1GB</p> <p>(3)\u3001\u786c\u4ef6\u53ef\u4ee5\u652f\u6301\u591a\u79cd\u4e0d\u540c\u7684\u9875\u5927\u5c0f\u3002\u9875\u5927\u5c0f4KB 16KB 2MB 4MB 8MB 16MB\u7b49\u7b49</p> <p>\u4e94\u3001\u5757\u8868</p> <p>\u5feb\u8868\uff08\u8f6c\u6362\u540e\u63f4\u7f13\u51b2TLB-Translation Lookaside Buffer\uff09,\u662f\u4e3a\u4e86\u63d0\u9ad8CPU\u8bbf\u5b58\u901f\u5ea6\u800c\u91c7\u7528\u7684\u4e13\u7528\u7f13\u5b58\uff0c\u7528\u6765\u5b58\u653e\u6700\u8fd1\u88ab\u8bbf\u95ee\u8fc7\u7684\u9875\u8868\u9879\u3002</p> <p>TLB\u5305\u62ecP1\u548cP2\u9875\u53f7\u4ee5\u53ca\u9875\u5185\u504f\u79fb</p> <p>1\u3001\u5feb\u8868\u7684\u5f15\u5165</p> <p>CPU\u8bfb\u5199\u4e00\u4e2a\u6570\u636e\uff0c\u9700\u4e24\u6b21\u8bbf\u95ee\u5185\u5b58\u3002\u7b2c1\u6b21\u8bbf\u5b58\u8bfb\u7269\u7406\u5757\u53f7\u3001\u7b2c2\u6b21\u53d6\u6307\u4ee4\u6216\u6570\u636e\u3002</p> <p>\u4e3a\u4e86\u63d0\u9ad8\u8bbf\u5b58\u901f\u5ea6\u5f15\u5165\u5feb\u8868\uff0c\u5feb\u8868\u7528\u4e8e\u5b58\u653e\u6700\u8fd1\u4f7f\u7528\u8fc7\u7684\u9875\u8868\u9879\u3002</p> <p>2\u3001\u5f15\u5165TLB\u4e4b\u540e\u7684\u5730\u5740\u53d8\u6362\u8fc7\u7a0b</p> <p></p> <p>3\u3001\u5f15\u5165TLB\u7684\u6027\u80fd\u5206\u6790</p> <p>\u82e5cpu\u8bbf\u95ee\u5185\u5b58\u7684\u65f6\u95f4\u4e3a120ns,\u8bbf\u95eeTLB\u7684\u901f\u5ea6\u4e3a20ns,\u8bd5\u6bd4\u8f83\u6709TLB\u548c\u65e0TLB\u7cfb\u7edf\u7684\u6709\u6548\u8bbf\u95ee\u65f6\u95f4\u3002</p> <p>\u5047\u5b9aTLB\u7684\u547d\u4e2d\u7387\u4e3a90%</p> <p>1\uff09\u6709TLB\u7cfb\u7edf\u7684\u6709\u6548\u8bbf\u95ee\u65f6\u95f4=\uff08120+120+20\uff09* 10%+\uff08120+20\uff09* 90%=152ns</p> <p>2\uff09\u65e0TLB\u7cfb\u7edf\u7684\u6709\u6548\u8bbf\u95ee\u65f6\u95f4=120+120=240ns</p> <p>\u516d\u3001\u4e24\u7ea7\u548c\u591a\u7ea7\u9875\u8868</p> <p>\u5bf9\u4e8e\u5f88\u5927\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff0c\u4f7f\u7528\u5206\u9875\u5b58\u50a8\uff0c\u9700\u8981\u5f88\u5927\u7684\u8fde\u7eed\u7a7a\u95f4\u6765\u5b58\u653e\u9875\u8868\uff0c\u4e3a\u4e86\u5b9e\u73b0\u9875\u8868\u7684\u79bb\u6563\u5b58\u653e\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u4e24\u7ea7\u6216\u591a\u7ea7\u9875\u8868\uff0c\u5176\u597d\u5904\u662f\uff1a</p> <p>1\uff09\u5bf9\u9875\u8868\u6240\u9700\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u91c7\u7528\u79bb\u6563\u5206\u914d\u65b9\u5f0f,\u6765\u89e3\u51b3\u96be\u4ee5\u627e\u5230\u4e00\u5757\u8fde\u7eed\u7684\u5927\u5185\u5b58\u7a7a\u95f4\u4ee5\u53ca\u9875\u8868\u7684\u79bb\u6563\u5b58\u653e\u7684\u95ee\u9898\u3002</p> <p>2\uff09\u53ea\u5c06\u5f53\u524d\u9700\u8981\u7684\u9875\u8868\u8c03\u5165\u5185\u5b58\uff0c\u5176\u4f59\u7684\u9875\u8868\u53ef\u4ee5\u9a7b\u7559\u5728\u5916\u5b58\u4e2d\u3002</p> <p>1\u3001\u4e24\u7ea7\u9875\u8868\u7684\u5b9e\u73b0\u65b9\u6cd5</p> <p>\u200b      \u5c06\u9875\u8868\u518d\u8fdb\u884c\u5206\u9875\uff0c\u4f7f\u6bcf\u4e2a\u9875\u8868\u5206\u9875\u7684\u5927\u5c0f\u4e0e\u5185\u5b58\u7269\u7406\u5757\u7684\u5927\u5c0f\u76f8\u540c\uff0c\u5e76\u4e3a\u5b83\u4eec\u7f16\u53f7\u3002\u5c06\u8fd9\u4e9b\u9875\u8868\u5206\u9875\u5206\u522b\u653e\u5165\u4e0d\u540c\u7684\u3001\u4e0d\u4e00\u5b9a\u76f8\u90bb\u7684\u7269\u7406\u5757\u4e2d\uff0c\u4e3a\u79bb\u6563\u5206\u914d\u7684\u9875\u8868\u5206\u9875\u518d\u5efa\u7acb\u4e00\u5f20\u9875\u8868\uff0c\u79f0\u4e3a\u5916\u5c42\u9875\u8868\uff08\u4e5f\u53eb\u9875\u76ee\u5f55\uff09\uff0c\u5728\u5916\u5c42\u9875\u8868\u4e2d\u7684\u6bcf\u4e2a\u8868\u9879\u4e2d\u8bb0\u5f55\u4e86\u9875\u8868\u5206\u9875\u6240\u5728\u7684\u7269\u7406\u5757\u53f7\u3002 </p> <p></p> <p>2\u3001\u4e24\u7ea7\u9875\u8868\u7684\u5bfb\u5740</p> \u5916\u5c42\u9875\u8868\u7684\u9875\u53f7 \u9875\u8868\u5206\u9875\u4e2d\u7684\u9875\u53f7 \u9875\u5185\u504f\u79fb P1 P2 W <p>1\uff09\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u903b\u8f91\u5730\u5740A,\u7531p1\uff0c\u4ece\u5916\u5c42\u9875\u8868\u4e2d\u627e\u5230\u9875\u8868\u5206\u9875\u6240\u5728\u7684\u7269\u7406\u5757\u53f7\u3002</p> <p>2\uff09\u7531p2\uff0c\u4ece\u9875\u8868\u5206\u9875\u4e2d\u627e\u5230\u8fdb\u7a0b\u9875\u6240\u5728\u7684\u7269\u7406\u5757\u53f7\u3002</p> <p>3\uff09\u7531A\u6240\u5728\u7684\u8fdb\u7a0b\u9875\u7684\u7269\u7406\u5757\u53f7*\u5757\u5927\u5c0f+\u9875\u5185\u504f\u79fb\u5f97\u5230A\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u3002</p> <p></p> <p>\u4f7f\u7528\u4e24\u7ea7\u9875\u8868\u7684\u7cfb\u7edf\uff0c\u5f53\u8fdb\u7a0b\u5207\u6362\u65f6\uff0c\u6b32\u8fd0\u884c\u7684\u8fdb\u7a0b\u7684\u5916\u5c42\u9875\u8868\u8d77\u59cb\u5730\u5740\u88ab\u5199\u5165CPU\u9875\u8868\u5bc4\u5b58\u5668\u3002\u5730\u5740\u6620\u5c04\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p>\uff081\uff09\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u903b\u8f91\u5730\u5740A\uff0c\u7531\u786c\u4ef6\u4ece\u4e2d\u5206\u79bb\u51fa\u5916\u90e8\u9875\u53f7p1\u3001\u9875\u8868\u5206\u9875\u4e2d\u7684\u9875\u53f7p2\u3001\u9875\u5185\u504f\u79fb\u5730\u5740W\u3002</p> <p>\uff082\uff09\u5916\u5c42\u9875\u8868\u7684p1\u53f7\u9875\u8868\u9879\u7684\u8d77\u59cb\u5730\u5740=\u5916\u5c42\u9875\u8868\u7684\u8d77\u59cb\u5730\u5740\uff08\u9875\u8868\u5bc4\u5b58\u5668\u7684\u503c\uff09+p1 \u00d7\u9875\u8868\u9879\u957f\u5ea6</p> <p>\u200b        \u4ece\u8be5\u5730\u5740\u5904\u8bfb\u53d6p1\u53f7\u9875\u8868\u5206\u9875\u6240\u5728\u7684\u7269\u7406\u5757\u53f7d1</p> <p>\uff083\uff09P1\u53f7\u9875\u8868\u5206\u9875\u7684p2\u53f7\u9875\u8868\u9879\u7684\u8d77\u59cb\u5730\u5740=d1 \u00d7\u7269\u7406\u5757\u5927\u5c0f+p2 \u00d7\u9875\u8868\u9879\u957f\u5ea6</p> <p>\u200b       \u4ece\u8be5\u5730\u5740\u5904\u8bfb\u53d6\u8fdb\u7a0b\u9875\u6240\u5728\u7684\u7269\u7406\u5757\u53f7d2</p> <p>\uff084\uff09A\u5bf9\u5e94\u7684\u7269\u7406\u5355\u5143\u7684\u5730\u5740=d2\u00d7\u7269\u7406\u5757\u5927\u5c0f+\u9875\u5185\u504f\u79fb\u5730\u5740W\u3002</p> <p>\u4e03\u3001\u591a\u7ea7\u9875\u8868\u7ed3\u6784</p> <p>\u200b    \u5bf9\u4e8e64\u4f4d\u7684\u673a\u5668\uff0c\u4f7f\u7528\u4e8c\u7ea7\u9875\u8868\uff0c\u4ecd\u5b58\u5728\u8fde\u7eed\u5360\u7528\u5927\u91cf\u5185\u5b58\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u91c7\u7528\u591a\u7ea7\u9875\u8868\u7ed3\u6784\uff0864\u4f4d\u7cfb\u7edf\u7684\u56db\u7ea7\u5206\u9875\u548cULtraSPARC\u76847\u7ea7\u5206\u9875\uff09\uff0c\u5c06\u5916\u5c42\u9875\u8868\u518d\u5206\u82e5\u5e72\u9875\u3002</p> <p></p> <p>\u51cf\u5c11\u9875\u8868\u5360\u7528\u5185\u5b58\u7684\u65b9\u6cd5</p> <p>\u5c06\u5f53\u524d\u6240\u9700\u8981\u7684\u9875\u8868\u548c\u5916\u5c42\u9875\u8868\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u5176\u4f59\u9875\u8868\u653e\u5728\u5916\u5b58\uff0c\u5f53\u6240\u9700\u9875\u8868\u4e0d\u5728\u5185\u5b58\u65f6\uff0c\u4ea7\u751f\u4e2d\u65ad\uff0c\u5c06\u8bf7\u6c42\u7684\u9875\u8868\u8c03\u5165\u5185\u5b58\u3002</p> <p>\u516b\u3001\u53cd\u7f6e\u9875\u8868 </p> <p>\u7528\u53cd\u7f6e\u9875\u8868\uff0c\u4e3a\u6bcf\u4e00\u4e2a\u7269\u7406\u5757\u8bbe\u4e00\u4e2a\u8868\u9879\uff0c\u8868\u9879\u4e2d\u653e\u8fdb\u7a0b\u53f7\u548c\u9875\u53f7\uff0c\u7cfb\u7edf\u53ea\u7ef4\u62a4\u4e00\u5f20\u53cd\u7f6e\u9875\u8868\u3002\u7531\u4e8e\u7269\u7406\u5b58\u50a8\u7a7a\u95f4\u5c0f\u4e8e\u903b\u8f91\u5b58\u50a8\u7a7a\u95f4\uff0c\u6240\u4ee5\u4f7f\u7528\u53cd\u7f6e\u9875\u8868\u51cf\u5c11\u4e86\u9875\u8868\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u3002 </p> <p>\u903b\u8f91\u5730\u5740\uff1a\u8fdb\u7a0b\u53f7\u3001\u9875\u53f7\u3001\u9875\u5185\u504f\u79fb\u5730\u5740</p> <p>\u5bfb\u5740\u8fc7\u7a0b\uff1a\u6839\u636e\u8fdb\u7a0b\u53f7\u548c\u9875\u53f7\u627e\u5230\u7269\u7406\u5757\u53f7</p> <p>\u7269\u7406\u5730\u5740=\u7269\u7406\u5757\u9996\u5740+\u9875\u5185\u504f\u79fb\u5730\u5740</p> \u8fdb\u7a0b\u53f7 \u9875\u53f7 \u7269\u7406\u5757\u53f7 1 1 100 1 2 106 2 1 200 2 2 201 <p>\u4e5d\u3001\u9875\u7684\u5171\u4eab</p> <p></p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#42","title":"4.2 \u5206\u6bb5\u7cfb\u7edf\u7684\u57fa\u672c\u539f\u7406","text":"<p>\u5206\u6bb5\uff1a\u4f5c\u4e1a\u7684\u5730\u5740\u7a7a\u95f4\u88ab\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u6bb5\uff0c\u6bcf\u4e2a\u6bb5\u5b9a\u4e49\u4e86\u4e00\u7ec4\u903b\u8f91\u4fe1\u606f\uff0c\u6bcf\u4e2a\u6bb5\u7684\u5927\u5c0f\u7531\u76f8\u5e94\u7684\u903b\u8f91\u4fe1\u606f\u7ec4\u7684\u957f\u5ea6\u786e\u5b9a\uff0c\u6bb5\u7684\u5927\u5c0f\u4e0d\u4e00\u6837,\u6bcf\u6bb5\u7684\u903b\u8f91\u5730\u5740\u4ece0\u5f00\u59cb\u3002</p> <p>\u5206\u6bb5\u7684\u903b\u8f91\u5730\u5740\u7ed3\u6784\uff1a\u6bb5\u7684\u903b\u8f91\u5730\u5740=\u6bb5\u53f7+\u6bb5\u5185\u504f\u79fb\u5730\u5740</p> <p>\u4e00\u3001\u6bb5\u8868</p> <p>1\uff09\u7cfb\u7edf\u4e3a\u6bcf\u4e2a\u6bb5\u5206\u914d\u4e00\u4e2a\u8fde\u7eed\u5b58\u50a8\u533a\uff0c\u5404\u4e2a\u6bb5\u53ef\u4ee5\u79bb\u6563\u5730\u653e\u5165\u5185\u5b58\u4e0d\u540c\u7684\u533a\u57df\u3002</p> <p>2\uff09\u7cfb\u7edf\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u5efa\u7acb\u4e00\u5f20\u6bb5\u8868\uff0c\u6bb5\u8868\u7684\u6bcf\u4e00\u4e2a\u8868\u9879\u8bb0\u5f55\u4fe1\u606f\uff1a\u6bb5\u53f7\u3001\u6bb5\u957f\u3001\u8be5\u6bb5\u7684\u57fa\u5740\u3002</p> <p>\u4e09\u3001\u6bb5\u8868</p> <p>1\u3001\u7cfb\u7edf\u4e3a\u6bcf\u4e2a\u6bb5\u5206\u914d\u4e00\u4e2a\u8fde\u7eed\u5b58\u50a8\u533a\uff0c\u5404\u4e2a\u6bb5\u53ef\u4ee5\u79bb\u6563\u5730\u653e\u5165\u5185\u5b58\u4e0d\u540c\u7684\u533a\u57df\u3002</p> <p>2\u3001\u7cfb\u7edf\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u5efa\u7acb\u4e00\u5f20\u6bb5\u8868\uff0c\u6bb5\u8868\u7684\u6bcf\u4e00\u4e2a\u8868\u9879\u8bb0\u5f55\u4fe1\u606f\uff1a\u6bb5\u53f7\u3001\u6bb5\u957f\u3001\u8be5\u6bb5\u7684\u57fa\u5740\u3002</p> <p></p> <p></p> <p>\u56db\u3001\u5206\u9875\u548c\u5206\u6bb5\u7684\u4e3b\u8981\u533a\u522b</p> <p>1\uff09\u9875\u662f\u6309\u7269\u7406\u5355\u4f4d\u5212\u5206\u7684,\u6bb5\u662f\u6309\u903b\u8f91\u5355\u4f4d\u5212\u5206\u7684\u3002</p> <p>2\uff09\u9875\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u6bb5\u7684\u5927\u5c0f\u4e0d\u56fa\u5b9a\u3002</p> <p>3\uff09\u5206\u9875\u7684\u5730\u5740\u7a7a\u95f4\u662f\u4e00\u7ef4\u7684\uff0c\u5206\u6bb5\u7684\u5730\u5740\u7a7a\u95f4\u662f\u4e8c\u7ef4\u7684\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#43","title":"4.3 \u6bb5\u9875\u5f0f\u5b58\u50a8\u7ba1\u7406\u65b9\u5f0f","text":"<p>\u200b   \u5c06\u7528\u6237\u8fdb\u7a0b\u7a7a\u95f4\u5148\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u6bb5\uff0c\u6bcf\u4e2a\u6bb5\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u9875\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u4e00\u4e2a\u6bb5\u8868\uff0c\u6bcf\u4e2a\u6bb5\u90fd\u6709\u4e00\u4e2a\u9875\u8868\u3002\u5df2\u77e5\u5730\u5740\u4e3a\u6bb5\u53f7\u548c\u6bb5\u5185\u504f\u79fb\u3002\u6bb5\u9875\u5f0f\u5b58\u50a8\u7ba1\u7406\u7684\u903b\u8f91\u5730\u5740\u5f62\u5f0f\u7531\u6bb5\u53f7\u3001\u6bb5\u5185\u9875\u53f7\u548c\u9875\u5185\u5730\u5740\u4e09\u90e8\u5206\u7ec4\u6210\u3002\u6bcf\u4e00\u6bb5\u8868\u9879\u5b58\u653e\u67d0\u4e2a\u6bb5\u7684\u9875\u8868\u8d77\u59cb\u5730\u5740\u548c\u9875\u8868\u957f\u5ea6\u3002 </p> <p></p> <p>\u4e8c\u3001\u5730\u5740\u53d8\u6362\u8fc7\u7a0b</p> <p>1\uff09\u5229\u7528\u6bb5\u53f7\uff0c\u627e\u5230\u67d0\u6bb5\u7684\u6bb5\u8868\u9879\uff0c\u5f97\u5230\u8be5\u6bb5\u9875\u8868\u7684\u9996\u5730\u5740\u3002</p> <p>2\uff09\u5229\u7528\u6bb5\u5185\u9875\u53f7\u548c\u75311\u5f97\u5230\u7684\u9875\u8868\u8d77\u59cb\u5730\u5740\u5f97\u5230\u9875\u8868\u9879\u3002</p> <p>3\uff09\u7531\u9875\u8868\u9879\u5f97\u5230\u9875\u6240\u5728\u7684\u7269\u7406\u5757\u53f7\u3002</p> <p>4\uff09\u7269\u7406\u5757\u53f7\u4e0e\u9875\u5185\u5730\u5740\u5f97\u5230\u67d0\u903b\u8f91\u5730\u5740\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u3002</p> <p></p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#5_3","title":"5 \u9898\u76ee","text":"<p>1\u3001\u82e5CPU\u8bbf\u95ee\u5185\u5b58\u7684\u901f\u5ea6\u4e3a120ns,\u8bbf\u95eeTLB\u7684\u901f\u5ea6\u4e3a20ns,\u8bd5\u6bd4\u8f83\u6709TLB\u548c\u65e0TLB\u7cfb\u7edf\u7684\u6709\u6548\u8bbf\u95ee\u65f6\u95f4\u3002</p> <p>\u5047\u5b9aTLB\u547d\u4e2d\u7387\u4e3a90%\uff0c\u5219\u7531TLB\u65f6(120+120+20)*10%+(120+20)*90%\uff0c\u65e0TLB\u65f6(120+120)</p> <p>2\u3001\u9875\u592a\u5927\u6216\u8005\u592a\u5c0f\u5bf9\u5185\u5b58\u7ba1\u7406\u7684 \u6548\u7387\u548c\u5185\u5b58\u5229\u7528\u7387\u5206\u522b\u6709\u4ec0\u4e48\u5f71\u54cd\uff1f\u5206\u9875\u7cfb\u7edf\u4e00\u822c\u91c7\u7528\u591a\u5927\u7684\u9875\uff1f</p> <p>\u7b54\uff1a\u9875\u592a\u5c0f\uff0c\u9875\u5185\u788e\u7247\u5c0f\uff0c\u4f46\u4f1a\u5bfc\u81f4\u8fdb\u7a0b\u6240\u9700\u9875\u591a\uff0c\u9875\u8868\u8fc7\u957f\uff0c\u5360\u7528\u5927\u91cf\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\uff1b\u540c\u65f6\uff0c\u5bfc\u81f4\u8f83\u9ad8\u7684\u7f3a\u9875\u7387\u3002\u9875\u592a\u5927\uff0c\u8fdb\u7a0b\u9875\u8868\u5360\u7528\u7684\u8fde\u7eed\u7a7a\u95f4\u5c0f\uff0c\u7f3a\u9875\u7387\u4f4e\u3002\u4f46\u9875\u5185\u788e\u7247\u5927\uff0c\u7a7a\u95f4\u5229\u7528\u7387\u964d\u4f4e\u3002</p> <p>\u4e00\u822c\u9875\u5927\u5c0f\u5728512\u4e2a\u5b57\u8282~4KB\u3002</p> <p>3\u3001\u8bf4\u660e\u5206\u9875\u5b58\u50a8\u7ba1\u7406\u7684\u5730\u5740\u6620\u5c04\u8fc7\u7a0b\u3002</p> <p>\u7b54\uff1a\u5206\u9875\u5b58\u50a8\u7ba1\u7406\u7684\u5730\u5740\u6620\u5c04\u8fc7\u7a0b\u8bf4\u660e\u5982\u4e0b\uff1a</p> <p>\u8fdb\u7a0b\u6267\u884c\uff0c\u9875\u8868\u8d77\u59cb\u5730\u5740\u548c\u9875\u8868\u957f\u5ea6\u9001\u9875\u8868\u5bc4\u5b58\u5668\u3002</p> <p>CPU\u8bbf\u95ee\u903b\u8f91\u5355\u5143a\u3002</p> <p>\u7531\u5206\u9875\u5730\u5740\u53d8\u6362\u673a\u6784\u81ea\u52a8\u5c06a\u5206\u4e3a\u9875\u53f7\u548c\u9875\u5185\u5730\u5740\u4e24\u90e8\u5206</p> <p>\u7531\u786c\u4ef6\u68c0\u7d22\u673a\u6784\u641c\u7d22\u9875\u8868\uff0c\u5f97\u5230\u7269\u7406\u5757\u53f7\u3002</p> <p>\u641c\u7d22\u539f\u7406\uff1a\u9875\u53f7\u5bf9\u5e94\u7684\u9875\u8868\u9879\u5730\u5740=\u9875\u8868\u8d77\u59cb\u5730\u5740+\u9875\u8868\u9879\u957f\u5ea6*\u9875\u53f7\u3002(\u9875\u8868\u9879\u4e2d\u5b58\u6709\u7269\u7406\u5757\u53f7)\u3002 \u7269\u7406\u5730\u5740=\u7269\u7406\u5757\u53f7*\u7269\u7406\u5757\u5927\u5c0f+\u9875\u5185\u504f\u79fb\u5730\u5740\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_9","title":"\u7b2c\u4e03\u7ae0 \u865a\u62df\u5185\u5b58\u7ba1\u7406","text":""},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#1_6","title":"1 \u865a\u62df\u5b58\u50a8\u5668\u6982\u8ff0","text":"<p>\u4e00\u3001\u4ec0\u4e48\u662f\u865a\u62df\u5b58\u50a8\u5668 </p> <p>\u865a\u62df\u5b58\u50a8\u5668\u662f\u6307\u5177\u6709\u8bf7\u6c42\u8c03\u5165\u529f\u80fd\u548c\u7f6e\u6362\u529f\u80fd\uff0c\u80fd\u4ece\u903b\u8f91\u4e0a\u5bf9\u5185\u5b58\u5bb9\u91cf\u8fdb\u884c\u6269\u5145\u7684\u4e00\u79cd\u5b58\u50a8\u5668\u7cfb\u7edf\u3002\u5728\u865a\u62df\u5b58\u50a8\u5668\u7cfb\u7edf\u4e2d\uff0c\u8fdb\u7a0b\u65e0\u9700\u5168\u90e8\u88c5\u5165\uff0c\u53ea\u8981\u88c5\u5165\u4e00\u90e8\u5206\u5c31\u53ef\u8fd0\u884c\u3002</p> <p>\u4e8c\u3001\u4e3a\u4ec0\u4e48\u5f15\u5165\u865a\u62df\u5b58\u50a8\u6280\u672f</p> <p>1.\u63d0\u9ad8\u5185\u5b58\u5229\u7528\u7387</p> <p>2.\u63d0\u9ad8\u591a\u9053\u7a0b\u5e8f\u5ea6</p> <p>\u6ce8\uff1a\u591a\u9053\u7a0b\u5e8f\u5ea6\u662f\u6307\u540c\u65f6\u9a7b\u5b58\u5728\u5185\u5b58\u7684\u8fdb\u7a0b\u6570</p> <p>3.\u4f7f\u7a0b\u5e8f\u5458\u4e0d\u7528\u62c5\u5fc3\u7269\u7406\u5185\u5b58\u7684\u5bb9\u91cf\u5bf9\u7f16\u7a0b\u7684\u9650\u5236\u3002</p> <p>\u4e09\u3001 \u865a\u62df\u5b58\u50a8\u5668\u7684\u7279\u5f81</p> <p>1\uff09\u79bb\u6563\u6027 2\uff09\u591a\u6b21\u6027  3\uff09\u5bf9\u6362\u6027 4\uff09\u865a\u62df\u6027</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#2-","title":"2 \u865a\u62df\u5b58\u50a8\u5668\u7684\u5b9e\u73b0\u65b9\u5f0f-\u8bf7\u6c42\u5206\u9875\u7cfb\u7edf","text":"<p>\u8bf7\u6c42\u5206\u9875\u7cfb\u7edf\u662f\u5728\u5206\u9875\u7cfb\u7edf\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u8bf7\u6c42\u8c03\u9875\u529f\u80fd\u3001\u9875\u7f6e\u6362\u529f\u80fd\u6240\u5f62\u6210\u7684\u9875\u5f0f\u865a\u62df\u5b58\u50a8\u7cfb\u7edf\u3002\u5176\u5b9e\u73b0\u5305\u62ec\uff1a</p> <p>1\uff09\u8bf7\u6c42\u5206\u9875\u7684\u9875\u8868 2\uff09\u7f3a\u9875\u4e2d\u65ad\u5904\u7406\u673a\u5236 3\uff09\u5730\u5740\u53d8\u6362</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#3_5","title":"3 \u8bf7\u6c42\u5206\u9875\u5b58\u50a8\u7ba1\u7406\u65b9\u5f0f","text":"<p>\u4e00\u3001\u8bf7\u6c42\u5206\u9875\u4e2d\u7684\u8f6f/\u786c\u4ef6\u652f\u6301</p> <p>\u9875\u8868\u9879\u5305\u62ec\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <p>1\uff09\u7269\u7406\u5757\u53f7  2\uff09\u72b6\u6001\u4f4dP 3\uff09\u8bbf\u95ee\u5b57\u4f4dA  4\uff09\u4fee\u6539\u4f4dM 5\uff09\u5916\u5b58\u5730\u5740 </p> <p>\u82e5\u5b58\u5728\u4f4d\u4e3a0\uff0c\u5219\u4ea7\u751f\u5374\u4e5f\u5f02\u5e38\u4e2d\u65ad\uff0c\u7f3a\u9875\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u4e3b\u8981\u5b8c\u6210\u7684\u529f\u80fd\u6709\uff1a\u4fdd\u62a4\u73b0\u573a\u3001\u5c06\u7f3a\u9875\u8c03\u5165\u5185\u5b58\u3001\u66f4\u65b0\u9875\u8868\u3002</p> <p>\u4e8c\u3001\u7f3a\u9875\u4e2d\u65ad\u5904\u7406\u673a\u5236</p> <p>1.\u5728\u6307\u4ee4\u6267\u884c\u671f\u95f4\u4ea7\u751f\u4e2d\u65ad</p> <p>2.\u56de\u5230\u4e2d\u65ad\u524d\u7684\u6307\u4ee4\u5904\u91cd\u65b0\u6267\u884c\u88ab\u4e2d\u65ad\u7684\u6307\u4ee4 </p> <p>\u4e09\u3001\u5730\u5740\u53d8\u6362</p> <p></p> <p>\u56db\u3001\u9875\u9762\u5206\u914d</p> <p>4.1 \u6700\u5c0f\u7269\u7406\u5757\u6570</p> <p>\u200b    \u4fdd\u8bc1\u8fdb\u7a0b\u6b63\u5e38\u8fd0\u884c\u6240\u9700\u8981\u7684\u6700\u5c11\u7269\u7406\u5757\u6570\uff0c\u5b83\u4e0e\u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u7ed3\u6784\u6709\u5173\uff0c\u53d6\u51b3\u4e8e\u6307\u4ee4\u7684\u683c\u5f0f\u3001\u529f\u80fd\u548c\u5bfb\u5740\u65b9\u5f0f\u3002</p> <p>4.2 \u9875\u5206\u914d\u548c\u7f6e\u6362\u7b56\u7565</p> <p>1\uff09\u56fa\u5b9a\u5206\u914d\u5c40\u90e8\u7f6e\u6362\u3002 2\uff09\u53ef\u53d8\u5206\u914d\u5168\u5c40\u7f6e\u6362\u3002  3\uff09 \u53ef\u53d8\u5206\u914d\u5c40\u90e8\u7f6e\u6362 </p> <p>4.3 \u5206\u914d\u7b97\u6cd5   1\uff09\u5e73\u5747\u5206\u914d\u7b97\u6cd5  2\uff09\u6309\u6bd4\u4f8b\u5206\u914d\u7b97\u6cd5   3\uff09\u8003\u8651\u4f18\u5148\u6743\u7684\u5206\u914d\u7b97\u6cd5</p> <p>\u4e94\u3001\u9875\u9762\u8c03\u5165\u7b56\u7565</p> <p>\u4f55\u65f6\u8c03\u5165\u9875\u9762</p> <p>1\uff09\u9884\u8c03\u9875\u7b56\u7565\uff1a\u5c06\u9884\u8ba1\u4e0d\u4e45\u4e4b\u540e\u4f1a\u88ab\u8bbf\u95ee\u7684\u9875\uff0c\u9884\u5148\u8c03\u5165\u5185\u5b58\u3002</p> <p>2\uff09\u8bf7\u6c42\u8c03\u9875\u7b56\u7565\u3002 </p> <p>\u4ece\u4f55\u5904\u8c03\u5165\u9875\u9762\uff08\u6559\u6750P188\u9875\uff09</p> <p>1\uff09\u5bf9\u6362\u533a\u8c03\u5165\uff1a\u5bf9\u6362\u7a7a\u95f4\u8db3\u591f\u5927,\u8fdb\u7a0b\u8fd0\u884c\u524d,\u5c06\u76f8\u5173\u6587\u4ef6\u4ece\u6587\u4ef6\u533a\u62f7\u8d1d\u5230\u5bf9\u6362\u533a\uff0c\u53d1\u751f\u7f3a\u9875\u8bf7\u6c42\u65f6\uff0c\u4ece\u5bf9\u6362\u533a\u8c03\u5165\u7f3a\u9875\u3002   2\uff09\u4ece\u6587\u4ef6\u533a\u8c03\u5165\uff1a\u5bf9\u4e0d\u4f1a\u4fee\u6539\u7684\u9875\uff0c\u4ece\u6587\u4ef6\u533a\u8c03\u5165\uff1b\u53ef\u80fd\u88ab\u4fee\u6539\u7684\u90e8\u5206\uff0c\u6362\u51fa\u65f6\u5199\u5165\u5bf9\u6362\u533a\uff0c\u518d\u6362\u5165\u65f6\uff0c\u4ece\u5bf9\u6362\u533a\u8c03\u5165\u3002   3\uff09Unix\u65b9\u5f0f:\u4e0e\u8fdb\u7a0b\u6709\u5173\u7684\u6587\u4ef6\u90fd\u653e\u5728\u6587\u4ef6\u533a,\u51e1\u662f\u672a\u8fd0\u884c\u8fc7\u7684\u9875\u9762\u90fd\u5e94\u8be5\u4ece\u6587\u4ef6\u533a\u8c03\u5165,\u66fe\u7ecf\u8fd0\u884c\u8fc7\u53c8\u88ab\u6362\u51fa\u7684\u9875\u9762\u4ece\u5bf9\u6362\u533a\u8c03\u5165\u3002 </p> <p>\u516d\u3001\u9875\u9762\u7f6e\u6362\u7b97\u6cd5</p> <p>6.1 \u6700\u4f73\u7f6e\u6362\u7b97\u6cd5</p> <p>\u7b56\u7565\uff1a\u5c06\u672a\u6765\u6700\u957f\u65f6\u95f4\u5185\u4e0d\u518d\u88ab\u8bbf\u95ee\u7684\u9875\u6362\u51fa\u3002</p> <p>\u7f3a\u70b9\uff1a\u4e0d\u53ef\u5b9e\u73b0\u3002</p> <p>\u4f18\u70b9\uff1a\u6362\u9875\u7387\u6700\u4f4e\u3002</p> <p></p> <p>\u4e3a\u4ec0\u4e48\u9009\u62e9\u6700\u8fd1\u65e2\u6ca1\u6709\u88ab\u8bbf\u95ee\u4e5f\u6ca1\u6709\u88ab\u4fee\u6539\u7684\u9875\u9762\u4f5c\u4e3a\u6dd8\u6c70\u9875\uff1f</p> <p>\u56e0\u4e3a\u6700\u8fd1\u6ca1\u6709\u88ab\u8bbf\u95ee\u7684\u9875\u9762\u5728\u5c06\u6765\u88ab\u8bbf\u95ee\u7684\u53ef\u80fd\u6027\u5c0f\uff0c\u9009\u62e9\u8fd9\u6837\u7684\u9875\u9762\u6362\u51fa\u80fd\u964d\u4f4e\u7f3a\u9875\u7387\u3002\u6ca1\u6709\u88ab\u4fee\u6539\u7684\u9875\u9762\u6362\u51fa\u65f6\u4e0d\u9700\u8981\u628a\u9875\u9762\u5185\u5bb9\u5199\u56de\u78c1\u76d8\uff0c\u907f\u514d\u4e86\u8bbf\u95ee\u78c1\u76d8\u9020\u6210\u7684\u65f6\u95f4\u5f00\u9500\u3002</p> <p>6.2 \u5148\u8fdb\u5148\u51fa\u9875\u9762\u7f6e\u6362</p> <p>\u7b56\u7565\uff1a\u6700\u5148\u8fdb\u5165\u5185\u5b58\u7684\u9875\u6700\u5148\u88ab\u6dd8\u6c70\u3002</p> <p>\u5b9e\u73b0\uff1a\u91c7\u7528\u4e00\u4e2a\u5148\u8fdb\u5148\u51fa\u961f\u5217\u3002</p> <p>\u7f3a\u70b9\uff1a\u65e0\u6cd5\u4fdd\u8bc1\u5e38\u7528\u9875\u9762\u4e0d\u88ab\u6362\u51fa\uff0c\u5bfc\u81f4\u8f83\u4f4e\u7684\u6548\u7387\u3002</p> <p>\u4f18\u70b9\uff1a\u5b9e\u73b0\u7b80\u5355\u3002</p> <p></p> <p>6.3 \u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\uff08Least Recently Used\uff09LRU\u7f6e\u6362\u7b97\u6cd5</p> <p>LRU\u7f6e\u6362\u7b97\u6cd5\u662f\u9009\u62e9\u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\u7684\u9875\u9762\u4e88\u4ee5\u6dd8\u6c70\u3002 \u5411\u5de6\u770b\uff08\u7f6e\u6362\u56fe\uff09P191-192\u9875</p> <p>LRU\u7b97\u6cd5\u7684\u5b9e\u73b0\u8981\u6c42\u7cfb\u7edf\u5177\u6709\u8f83\u591a\u7684\u786c\u4ef6\u652f\u6301\u3002\u8981\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\uff1a</p> <p>1\uff09\u4e00\u4e2a\u8fdb\u7a0b\u5728\u5185\u5b58\u4e2d\u7684\u5404\u4e2a\u9875\u5404\u6709\u591a\u4e45\u65f6\u95f4\u672a\u88ab\u8fdb\u7a0b\u8bbf\u95ee\uff1b</p> <p>2\uff09\u5982\u4f55\u5feb\u901f\u5730\u77e5\u9053\u54ea\u4e00\u9875\u662f\u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\u7684\u9875\u3002</p> <p>LRU\u7b97\u6cd5\u7684\u5b9e\u73b0</p> <p>\u6808\uff1a\u53ef\u5229\u7528\u4e00\u4e2a\u7279\u6b8a\u7684\u6808\u6765\u4fdd\u5b58\u5f53\u524d\u4f7f\u7528\u7684\u5404\u4e2a\u9875\u9762\u7684\u9875\u9762\u53f7\u3002\u6bcf\u5f53\u8fdb\u7a0b\u8bbf\u95ee\u67d0\u9875\u9762\u65f6\uff0c\u4fbf\u5c06\u8be5\u9875\u9762\u7684\u9875\u9762\u53f7\u4ece\u6808\u4e2d\u79fb\u51fa\uff0c\u5c06\u5b83\u538b\u5165\u6808\u9876\u3002\u56e0\u6b64\uff0c\u6808\u9876\u59cb\u7ec8\u662f\u6700\u65b0\u88ab\u8bbf\u95ee\u9875\u9762\u7684\u7f16\u53f7\uff0c\u800c\u6808\u5e95\u5219\u662f\u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\u7684\u9875\u9762\u53f7\u3002</p> <p>\u65f6\u95f4\u8ba1\u6570\u5668\uff1a\u4e3a\u6bcf\u4e2a\u9875\u8868\u9879\u589e\u52a0\u4e00\u4e2a\u65f6\u95f4\u5b57\u6bb5\uff0c\u5e76\u4e3aCPU\u589e\u52a0\u4e00\u4e2a\u903b\u8f91\u65f6\u949f\u6216\u8ba1\u6570\u5668\u3002\u6bcf\u6b21\u8bbf\u95ee\u5185\u5b58\u67d0\u4e2a\u9875\u65f6\uff0c\u5c31\u5c06\u9012\u589e\u4e86\u7684\u65f6\u949f\u5bc4\u5b58\u5668\u7684\u503c\u8d4b\u7ed9\u8fd9\u4e2a\u9875\u5bf9\u5e94\u7684\u9875\u8868\u9879\u7684\u65f6\u95f4\u5b57\u6bb5\uff0c\u6bcf\u6b21\u7f6e\u6362\u65f6\u9009\u62e9\u65f6\u95f4\u5b57\u6bb5\u503c\u6700\u5c0f\u7684\u9875\u4f5c\u4e3a\u6362\u51fa\u9875\u3002</p> <p>LRU\u7684\u8fd1\u4f3c\u7b97\u6cd5</p> <p>\u9644\u52a0\u5f15\u7528\u4f4d\u7b97\u6cd5\uff1a\u4e3a\u5185\u5b58\u7684\u9875\u4fdd\u7559\u4e00\u4e2a8\u4f4d\u7684\u5b57\u8282\uff0c\u5728\u89c4\u5b9a\u65f6\u95f4\u95f4\u9694\u5185\uff0c\u64cd\u4f5c\u7cfb\u7edf\u628a\u6bcf\u4e2a\u9875\u7684\u5f15\u7528\u4f4d\uff08\u4e5f\u5c31\u662f\u8bbf\u95ee\u4f4dA\uff09\u8f6c\u79fb\u5230\u51768bit\u5b57\u8282\u7684\u9ad8\u4f4d\uff0c\u5c06\u5176\u4ed6\u4f4d\u53f3\u79fb\uff0c\u5e76\u629b\u5f03\u6700\u4f4e\u4f4d\u3002\u7f6e\u6362\u65f6\u9009\u9644\u52a0\u4f4d\u503c\u6700\u5c0f\u7684\u9875\u3002</p> <p>\u7b80\u5355\u7684Clock\u7f6e\u6362\u7b97\u6cd5\uff1a\u5229\u7528Clock\u7b97\u6cd5\u65f6\uff0c\u4e3a\u6bcf\u4e00\u9875\u8bbe\u7f6e\u4e00\u4f4d\u8bbf\u95ee\u4f4d\uff0c\u518d\u5c06\u5185\u5b58\u4e2d\u7684\u6240\u6709\u9875\u90fd\u901a\u8fc7\u94fe\u63a5\u6307\u9488\u94fe\u63a5\u6210\u4e00\u4e2a\u5faa\u73af\u961f\u5217\u3002\u5f53\u67d0\u9875\u88ab\u8bbf\u95ee\u65f6\uff0c\u5176\u8bbf\u95ee\u4f4d\u88ab\u7f6e1\u3002\u7f6e\u6362\u7b97\u6cd5\u5728\u9009\u62e9\u4e00\u9875\u6dd8\u6c70\u65f6\uff0c\u53ea\u9700\u68c0\u67e5\u5176\u8bbf\u95ee\u4f4d\u3002\u5982\u679c\u662f0\uff0c\u5c31\u9009\u62e9\u8be5\u9875\u6362\u51fa\uff1b\u82e5\u4e3a1\uff0c\u5219\u91cd\u65b0\u5c06\u5b83\u590d0\uff0c\u6682\u4e0d\u6362\u51fa\u800c\u7ed9\u8be5\u9875\u7b2c\u4e8c\u6b21\u9a7b\u7559\u5185\u5b58\u7684\u673a\u4f1a\uff0c\u518d\u6309\u7167FIFO\u7b97\u6cd5\u68c0\u67e5\u4e0b\u4e00\u4e2a\u9875\u9762\u3002\u5f53\u68c0\u67e5\u5230\u961f\u5217\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u9875\u65f6 \uff0c\u82e5\u5176\u8bbf\u95ee\u4f4d\u4ecd\u4e3a1\uff0c\u5219\u8fd4\u56de\u5230\u961f\u9996\u518d\u53bb\u68c0\u67e5\u7b2c\u4e00\u4e2a\u9875\u3002</p> <p>\u6539\u8fdb\u578bClock\u7f6e\u6362\u7b97\u6cd5\uff1a\u5728\u5c06\u4e00\u4e2a\u9875\u6362\u51fa\u65f6\uff0c\u5982\u679c\u8be5\u9875\u5df2\u88ab\u4fee\u6539\u8fc7\uff0c\u4fbf\u987b\u5c06\u5b83\u91cd\u65b0\u5199\u5230\u78c1\u76d8\u4e0a\uff0c\u4f46\u5982\u679c\u8be5\u9875\u672a\u88ab\u4fee\u6539\u8fc7\uff0c\u5219\u4e0d\u5fc5\u5c06\u5b83\u5199\u56de\u78c1\u76d8\u3002\u6362\u8a00\u4e4b\uff0c\u5bf9\u4e8e\u4fee\u6539\u8fc7\u7684\u9875\u5728\u6362\u51fa\u65f6\u6240\u4ed8\u51fa\u7684\u5f00\u9500\u5c06\u6bd4\u672a\u4fee\u6539\u8fc7\u7684\u9875\u5f00\u9500\u5927\u3002\u5728\u6539\u8fdb\u578bClock\u7b97\u6cd5\u4e2d\uff0c\u9664\u8003\u8651\u9875\u7684\u4f7f\u7528\u60c5\u51b5\u5916\uff0c\u8fd8\u987b\u518d\u589e\u52a0\u4e00\u4e2a\u7f6e\u6362\u4ee3\u4ef7\u8fd9\u4e00\u56e0\u7d20\u3002\u8fd9\u6837\uff0c\u9009\u62e9\u6362\u51fa\u9875\u65f6\uff0c\u65e2\u8981\u662f\u672a\u4f7f\u7528\u8fc7\u7684\u9875\uff0c\u53c8\u8981\u662f\u672a\u88ab\u4fee\u6539\u8fc7\u7684\u9875\u3002\u628a\u540c\u65f6\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\u7684\u9875\u4f5c\u4e3a\u9996\u9009\u7684\u6dd8\u6c70\u9875\u3002</p> <p>\u5728\u8be5\u7b97\u6cd5\u4e2d\uff0c\u7531\u8bbf\u95ee\u4f4dA\u548c\u4fee\u6539\u4f4dM\u53ef\u4ee5\u7ec4\u5408\u6210\u4e0b\u9762\u56db\u79cd\u7c7b\u578b\u7684\u9875\u9762\uff1a</p> <p>1\uff08A=0,M=0)\u8be5\u9875\u6700\u8fd1\u65e2\u672a\u88ab\u8bbf\u95ee\u3001\u53c8\u672a\u88ab\u4fee\u6539\uff0c\u662f\u6700\u4f73\u6dd8\u6c70\u9875\u3002 </p> <p>2\uff08A=0,M=1)\u8be5\u9875\u6700\u8fd1\u672a\u88ab\u8bbf\u95ee\u4f46\u5df2\u88ab\u4fee\u6539\uff0c\u5e76\u4e0d\u662f\u5f88\u597d\u7684\u6dd8\u6c70\u9875\u3002</p> <p>3\uff08A=1,M=0)\u6700\u8fd1\u5df2\u88ab\u8bbf\u95ee\uff0c\u4f46\u672a\u88ab\u4fee\u6539\uff0c\u8be5\u9875\u6709\u53ef\u80fd\u518d\u88ab\u8bbf\u95ee\u3002</p> <p>4\uff08A=1,M=1)\u6700\u8fd1\u5df2\u88ab\u8bbf\u95ee\u4e14\u88ab\u4fee\u6539\uff0c\u8be5\u9875\u53ef\u80fd\u518d\u88ab\u8bbf\u95ee\u3002</p> <p>\u6539\u8fdb\u578bClock\u7f6e\u6362\u7b97\u6cd5\u53ef\u5206\u4e3a\u4ee5\u4e0b\u4e09\u6b65\uff1a</p> <p>1\u3001\u4ece\u6307\u9488\u6240\u6307\u793a\u7684\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\uff0c\u626b\u63cf\u5faa\u73af\u961f\u5217\uff0c\u5bfb\u627eA=0\u4e14M=0\u7684\u7b2c\u4e00\u7c7b\u9875\u3002\u5c06\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u9875\u4f5c\u4e3a\u6240\u9009\u4e2d\u7684\u6dd8\u6c70\u9875\u3002\u5728\u7b2c\u4e00\u6b21\u626b\u63cf\u671f\u95f4\u4e0d\u6539\u53d8\u8bbf\u95ee\u4f4dA\u3002</p> <p>2\u3001\u5982\u679c\u7b2c\u4e00\u6b65\u5931\u8d25\uff0c\u5219\u5f00\u59cb\u7b2c\u4e8c\u8bba\u626b\u63cf\uff0c\u5bfb\u627eA=0\u4e14M=1\u7684\u7b2c\u4e8c\u7c7b\u9875\u9762\uff0c\u5c06\u6240\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u8fd9\u7c7b\u9875\u9762\u4f5c\u4e3a\u6dd8\u6c70\u9875\u3002\u5728\u7b2c\u4e8c\u8f6e\u626b\u63cf\u671f\u95f4\uff0c\u5c06\u6240\u6709\u7ecf\u8fc7\u7684\u9875\u9762\u7684\u8bbf\u95ee\u4f4d\u7f6e0\u3002</p> <p>3\u3001\u5982\u679c\u7b2c\u4e8c\u6b65\u4e5f\u5931\u8d25\uff0c\u5373\u672a\u627e\u5230\u7b2c\u4e8c\u7c7b\u9875\u9762\uff0c\u5219\u5c06\u6307\u9488\u8fd4\u56de\u5230\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002\u7136\u540e\uff0c\u91cd\u590d\u7b2c\u4e00\u6b65\uff0c\u5982\u679c\u4ecd\u5931\u8d25\u518d\u91cd\u590d\u7b2c\u4e8c\u6b65\uff0c\u6b64\u65f6\u4e00\u5b9a\u80fd\u627e\u5230\u88ab\u6dd8\u6c70\u7684\u9875\u3002</p> <p>\u6700\u574f\u9700\u8981\u56db\u6b21\u626b\u63cf\u3002</p> <p></p> <p>6.4 \u6700\u5c11\u4f7f\u7528\u7f6e\u6362\u7b97\u6cd5</p> <p>\u8be5\u7f6e\u6362\u7b97\u6cd5\u9009\u62e9\u5728\u6700\u8fd1\u65f6\u671f\u4f7f\u7528\u6700\u5c11\u7684\u9875\u9762\u4f5c\u4e3a\u6dd8\u6c70\u9875\u3002 </p> <p>6.5 \u9875\u7f13\u51b2\u7b97\u6cd5</p> <p>\u91c7\u7528\u53ef\u53d8\u5206\u914d\u548c\u5c40\u90e8\u7f6e\u6362\u65b9\u5f0f\uff0c\u7f6e\u6362\u7b97\u6cd5\u91c7\u7528\u7684\u662fFIFO\u3002\u7b97\u6cd5\u89c4\u5b9a\u5982\u679c\u88ab\u6dd8\u6c70\u7684\u9875\u9762\u672a\u88ab\u4fee\u6539\uff0c\u5c31\u5c06\u5b83\u76f4\u63a5\u653e\u5165\u7a7a\u95f2\u94fe\u8868\u4e2d\uff0c\u5426\u5219\uff0c\u4fbf\u653e\u5165\u5df2\u4fee\u6539\u9875\u9762\u7684\u94fe\u8868\u4e2d\u3002 </p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#4_6","title":"4 \u8bf7\u6c42\u5206\u9875\u7cfb\u7edf\u7684\u6027\u80fd\u5206\u6790","text":"<p>1\u3001\u7f3a\u9875\u7387\u5bf9\u6709\u6548\u8bbf\u95ee\u65f6\u95f4\u7684\u5f71\u54cd \u6709\u6548\u8bbf\u95ee\u65f6\u95f4\uff1a\u6210\u529f\u8bbf\u5b58\u6240\u7528\u7684\u65f6\u95f4\u3002</p> <p>P\uff1a\u7f3a\u9875\u7387\u3002Ma\uff1a\u5185\u5b58\u8bbf\u95ee\u65f6\u95f4</p> <p>\u6709\u6548\u8bbf\u95ee\u65f6\u95f4=(1-P)\u00d7ma+P\u00d7\u7f3a\u9875\u65f6\u95f4\u3002</p> <p>\u7f3a\u9875\u65f6\u95f4=\u7f3a\u9875\u670d\u52a1\u65f6\u95f4+\u7f3a\u9875\u8bfb\u5165\u65f6\u95f4+\u8fdb\u7a0b\u91cd\u65b0\u6267\u884c\u65f6\u95f4</p> <p>2\u3001\u5de5\u4f5c\u96c6</p> <p>\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u5bf9\u9875\u7684\u8bbf\u95ee\u662f\u4e0d\u5747\u5300\u7684\uff1b\u5373\u5f80\u5f80\u5728\u67d0\u6bb5\u65f6\u95f4\u5185\u7684\u8bbf\u95ee\u4ec5\u5c40\u9650\u4e8e\u8f83\u5c11\u7684\u82e5\u5e72\u4e2a\u9875\uff0c\u800c\u5728\u53e6\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u5219\u53c8\u53ef\u80fd\u4ec5\u5c40\u9650\u4e8e\u5bf9\u53e6\u4e00\u4e9b\u8f83\u5c11\u7684\u9875\u8fdb\u884c\u8bbf\u95ee\uff0c\u82e5\u80fd\u9884\u77e5\u7a0b\u5e8f\u5728\u67d0\u6bb5\u65f6\u95f4\u95f4\u9694\u5185\u8981\u8bbf\u95ee\u54ea\u4e9b\u9875\uff0c\u5e76\u80fd\u5c06\u5b83\u4eec\u63d0\u524d\u8c03\u5165\u5185\u5b58\uff0c\u5c06\u4f1a\u5927\u5927\u964d\u4f4e\u7f3a\u9875\u7387\uff0c\u4ece\u800c\u51cf\u5c11\u7f6e\u6362\u5de5\u4f5c\uff0c\u63d0\u9ad8CPU\u7684\u5229\u7528\u7387\u3002 </p> <p>\u5728\u67d0\u6bb5\u65f6\u95f4\u95f4\u9694\u25b3\u91cc\uff0c\u8fdb\u7a0b\u5b9e\u9645\u8981\u8bbf\u95ee\u7684\u9875\u7684\u96c6\u5408\u3002\u8981\u4f7f\u7f3a\u9875\u5c11\u53d1\u751f\uff0c\u5fc5\u987b\u4f7f\u7a0b\u5e8f\u7684\u5de5\u4f5c\u96c6\u5168\u90e8\u5728\u5185\u5b58\u4e2d\u3002 </p> <p>\u4e09\u3001W(t, \u25b3) \u5de5\u4f5c\u96c6\u7684\u7a97\u53e3</p> <p>\u25b3\u53c8\u53eb\u5de5\u4f5c\u96c6\u7684\u201c\u7a97\u53e3\u5c3a\u5bf8\u201d\uff0c \u25b3\u592a\u5927\uff0c\u5f71\u54cd\u5b58\u50a8\u5668\u5229\u7528\u7387\u3002</p> <p>\u25b3\u592a\u5c0f\uff0c\u7f3a\u9875\u7387\u9ad8\uff0c\u964d\u4f4e\u7a0b\u5e8f\u6267\u884c\u7684\u65f6\u95f4\u6027\u80fd\uff0c\u964d\u4f4e\u7cfb\u7edf\u541e\u5410\u91cf\u3002</p> <p>W(t\uff0c\u25b3)\u4e0et\u76f8\u5173\uff0c\u4e0d\u540c\u7684t\u5bf9\u5e94\u4e0d\u540c\u7684\u5de5\u4f5c\u96c6\u3002</p> <p>\u5373\uff1a\u7a0b\u5e8f\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd0\u884c\u5230\u4e0d\u540c\u7684\u65f6\u523b\uff0c\u9700\u8981\u8bbf\u95ee\u7684\u9875\u4e0d\u540c\u3002 </p> <p>\u6ce8\uff1a\u6700\u5c0f\u5de5\u4f5c\u96c6\uff0c\u662f\u8fdb\u7a0b\u6b63\u5e38\u8fd0\u884c\u9700\u8981\u8c03\u5165\u5185\u5b58\u7684\u6700\u5c0f\u9875\u6570\u3002</p> <p>\u5f53\u5185\u5b58\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u65f6\uff0c\u53ef\u4ee5\u4e3a\u8fdb\u7a0b\u5206\u914d\u8db3\u591f\u7684\u7a7a\u95f4\u4ee5\u88c5\u5165\u5b83\u7684\u6700\u5927\u5de5\u4f5c\u96c6\u3002</p> <p>3\u3001\u6296\u52a8</p> <p>\u591a\u9053\u7a0b\u5e8f\u5ea6\u592a\u9ad8\uff0c\u4f7f\u8fd0\u884c\u8fdb\u7a0b\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u7528\u4e8e\u8fdb\u884c\u9875\u7684\u6362\u5165/\u6362\u51fa\uff0c\u800c\u51e0\u4e4e\u4e0d\u80fd\u5b8c\u6210\u4efb\u4f55\u6709\u6548\u7684\u5de5\u4f5c\u7684\u72b6\u6001\u79f0\u4e3a\u201c\u6296\u52a8\u201d\u3002</p> <p>\u6296\u52a8\u7684\u9884\u9632</p> <p>1\uff09\u91c7\u53d6\u5c40\u90e8\u7f6e\u6362\u7b56\u7565\u3002\u5f53\u8fdb\u7a0b\u53d1\u73b0\u7f3a\u9875\u540e\uff0c\u4ec5\u5728\u81ea\u5df1\u7684\u5185\u5b58\u7a7a\u95f4\u8303\u56f4\u5185\u7f6e\u6362\u9875\u9762\uff0c\u4e0d\u5141\u8bb8\u4ece\u5176\u4ed6\u8fdb\u7a0b\u83b7\u5f97\u65b0\u7684\u7269\u7406\u5757\u3002 2\uff09\u5728CPU\u8c03\u5ea6\u7a0b\u5e8f\u4e2d\u5f15\u5165\u5de5\u4f5c\u96c6\u7b97\u6cd5\u3002\u53ea\u6709\u5f53\u6bcf\u4e2a\u8fdb\u7a0b\u5728\u5185\u5b58\u4e2d\u90fd\u6709\u8db3\u591f\u5927\u7684\u9a7b\u7559\u96c6\u65f6\uff0c\u65b9\u80fd\u518d\u4ece\u5916\u5b58\u4e0a\u8c03\u5165\u65b0\u7684\u4f5c\u4e1a\u3002 3\uff09\u6302\u8d77\u82e5\u5e72\u8fdb\u7a0b\u3002\u4e3a\u4e86\u9884\u9632\u6296\u52a8\uff0c\u6302\u8d77\u82e5\u5e72\u8fdb\u7a0b\uff0c\u817e\u51fa\u8fdb\u7a0b\u5360\u7528\u7684\u7a7a\u95f4\u3002 </p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_10","title":"\u7b2c\u516b\u7ae0 \u6587\u4ef6\u7cfb\u7edf","text":""},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#1_7","title":"1 \u6587\u4ef6","text":"<p>1\u3001\u6587\u4ef6\u547d\u540d</p> <p>\u6587\u4ef6\u547d\u540d\u5411\u7528\u6237\u63d0\u4f9b\u6587\u4ef6\u8bbf\u95ee\u7684\u62bd\u8c61\u673a\u5236</p> <p>2\u3001\u6587\u4ef6\u7684\u547d\u540d\u89c4\u5219</p> <p>\u4e0d\u540c\u7cfb\u7edf\u7684\u6587\u4ef6\u547d\u540d\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\u90fd\u5141\u8bb8\u7528\u4e00\u5230\u516b\u4e2a\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6587\u4ef6\u540d\u3002</p> <p>\u6709\u7684\u6587\u4ef6\u7cfb\u7edf\u53ef\u652f\u6301\u957f\u6587\u4ef6\u540d\uff0c255\u4e2a\u5b57\u7b26\u7684\u6587\u4ef6\u540d\u3002</p> <p>\u6587\u4ef6\u540d\u7684\u5927\u5c0f\u5199:\u6709\u7684\u7cfb\u7edf\u533a\u5206\u6587\u4ef6\u540d\u7684\u5927\u5c0f\u5199\uff0c\u5982\uff1aUNIX\uff1b</p> <p>\u6709\u7684\u7cfb\u7edf\u4e0d\u533a\u5206\u6587\u4ef6\u540d\u7684\u5927\u5c0f\u5199\uff0c\u5982DOS\u3002 </p> <p>3\u3001\u6587\u4ef6\u6269\u5c55\u540d</p> <p>\u6587\u4ef6\u6269\u5c55\u540d\u7684\u4f5c\u7528\u6709\u4e24\u79cd\uff1a</p> <p>\u4e00\u79cd\u6269\u5c55\u540d\u4e0d\u7ed9\u8ba1\u7b97\u673a\u4f20\u9001\u7279\u522b\u4fe1\u606f\uff0c\u53ea\u662f\u7528\u4e8e\u8868\u793a\u8fd9\u4e2a\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u7ed9\u7528\u6237\u4e00\u4e2a\u63d0\u793a\u4fe1\u606f\u3002</p> <p>\u53e6\u4e00\u79cd\u6269\u5c55\u540d\uff0c\u5982C\u7a0b\u5e8f\u7684\u6269\u5c55\u540d\uff0c\u5219\u4e3a\u7f16\u8bd1\u5668\u3001\u94fe\u63a5\u7a0b\u5e8f\u548c\u7cfb\u7edf\u63d0\u4f9b\u4fe1\u606f,\u4f7f\u5b83\u4eec\u80fd\u591f\u533a\u5206\u54ea\u4e9b\u662fC\u6587\u4ef6\uff0c\u54ea\u4e9b\u662f\u6c47\u7f16\u6587\u4ef6\uff0c\u54ea\u4e9b\u662f\u5176\u5b83\u6587\u4ef6\u3002</p> <p>4\u3001\u6587\u4ef6\u7ed3\u6784</p> <p>(1)\u65e0\u7ed3\u6784\u5b57\u8282\u5e8f\u5217</p> <p>(2)\u56fa\u5b9a\u957f\u5ea6\u8bb0\u5f55\u5e8f\u5217</p> <p>\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u6587\u4ef6\u662f\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u8bb0\u5f55\u7684\u5e8f\u5217\uff0c\u6bcf\u6761\u8bb0\u5f55\u90fd\u6709\u5185\u90e8\u7ed3\u6784\uff0c\u628a\u6587\u4ef6\u4f5c\u4e3a\u8bb0\u5f55\u5e8f\u5217\u7684\u4e2d\u5fc3\u601d\u60f3\u662f\uff1a\u8bfb\u64cd\u4f5c\u8fd4\u56de\u4e00\u6761\u8bb0\u5f55\uff0c\u800c\u5199\u64cd\u4f5c\u91cd\u5199\u6216\u8ffd\u52a0\u4e00\u6761\u8bb0\u5f55\u3002</p> <p>5\u3001\u6587\u4ef6\u7c7b\u578b</p> <p>OS\u8bbe\u8ba1\u8981\u8003\u8651\uff1a\u7cfb\u7edf\u5e94\u8be5\u652f\u6301\u54ea\u4e9b\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u5e76\u4e3a\u6bcf\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\u5b9a\u4e49\u5408\u6cd5\u7684\u64cd\u4f5c\u3002\u6587\u4ef6\u7684\u7c7b\u578b\u6709\uff1a</p> <p>\u6b63\u89c4\u6587\u4ef6\u3001\u76ee\u5f55\u6587\u4ef6\u3001\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\u3001\u5757\u8bbe\u5907\u6587\u4ef6\u7b49</p> <p>\u672c\u8282\u4e3b\u8981\u4ecb\u7ecd\u6b63\u89c4\u6587\u4ef6\uff0c\u6b63\u89c4\u6587\u4ef6\u4e2d\u5305\u542b\u7528\u6237\u4fe1\u606f\uff0c\u4e00\u822c\u4e3aASCII\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 </p> <p>5.1 ASCLL\u6587\u4ef6</p> <p>\u7531\u591a\u884c\u6b63\u6587\u7ec4\u6210\uff0c\u6bcf\u884c\u7528\u56de\u8f66\u7b26\u6216\u6362\u884c\u7b26\uff0c\u6216\u56de\u8f66\u6362\u884c\u7b26\u7ed3\u675f\u3002</p> <p>ASCII\u6587\u4ef6\u53ef\u4ee5\u539f\u6837\u5730\u663e\u793a\u548c\u6253\u5370\uff0c\u4e5f\u53ef\u4ee5\u7528\u901a\u5e38\u7684\u6587\u672c\u7f16\u8f91\u5668\u8fdb\u884c\u7f16\u8f91\u3002</p> <p>5.2 \u4e8c\u8fdb\u5236\u6587\u4ef6</p> <p>\u5177\u6709\u4e00\u5b9a\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u4e0d\u80fd\u76f4\u63a5\u7528\u901a\u5e38\u7684\u7f16\u8f91\u5668\u663e\u793a \u6216\u6253\u5370\u3002\u4e0d\u540c\u7684OS\u53ef\u4ee5\u8bc6\u522b\u4e0d\u540c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u628a\u67d0\u4e00\u79cd\u7ed3\u6784\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u505a\u4e3a\u7cfb\u7edf\u4e2d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> <p>6\u3001\u6587\u4ef6\u5b58\u53d6</p> <p>\u987a\u5e8f\u5b58\u53d6\uff1a\u8fdb\u7a0b\u53ef\u4ee5\u4ece\u6587\u4ef6\u5f00\u59cb\u5904\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5b57\u8282\u6216\u8005\u8bb0\u5f55\uff0c\u4f46\u4e0d\u80fd\u8df3\u8fc7\u67d0\u4e9b\u5185\u5bb9  </p> <p>\u968f\u673a\u5b58\u53d6\uff1a\u53ef\u4ee5\u4ee5\u4efb\u610f\u987a\u5e8f\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u5b57\u8282\u6216\u8bb0\u5f55\u3002</p> <p>7\u3001\u6587\u4ef6\u5c5e\u6027</p> <p>\u6587\u4ef6\u5c5e\u6027\u662f\u7528\u6765\u63cf\u8ff0\u6587\u4ef6\u7684\u4fe1\u606f\uff0c\u5982\u6587\u4ef6\u957f\u5ea6\u3001\u6587\u4ef6\u7684\u521b\u5efa\u65e5\u671f\uff0c\u4e0d\u540c\u7684\u7cfb\u7edf\u4e3a\u6587\u4ef6\u5b9a\u4e49\u4e0d\u540c\u7684\u5c5e\u6027\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u901a\u8fc7\u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c\u3002</p> <p>(1)CREATE   \u521b\u5efa\u6587\u4ef6\uff0c\u5e76\u8bbe\u7f6e\u6587\u4ef6\u5c5e\u6027\u3002</p> <p>(2)DELETE   \u5220\u9664\u6587\u4ef6\u91ca\u653e\u78c1\u76d8\u7a7a\u95f4\u3002</p> <p>(3)OPEN    \u4f7f\u7528\u6587\u4ef6\u4e4b\u524d\uff0c\u8fdb\u7a0b\u5fc5\u987b\u6253\u5f00\u6587\u4ef6\u3002OPEN \u8c03\u7528\u7684\u76ee\u7684\u662f\uff1a\u5c06\u6587\u4ef6\u5c5e\u6027\u548c\u78c1\u76d8\u5730\u5740\u8868\u8f7d\u5165\u4e3b\u5b58\uff0c\u4fbf\u4e8e\u4ee5\u540e\u7684\u5feb\u901f\u5b58\u53d6\u3002</p> <p>(4)CLOSE  \u5f53\u5b58\u53d6\u7ed3\u675f\u540e\uff0c\u6587\u4ef6\u5c5e\u6027\u548c\u78c1\u76d8\u5730\u5740\u5c31\u4e0d\u518d\u9700\u8981\u4e86\uff0c\u8fd9\u65f6\u5e94\u8be5\u5173\u95ed\u6587\u4ef6\uff0c\u4ee5\u91ca\u653e\u5185\u90e8\u8868\u7a7a\u95f4\uff0c\u8bb8\u591a\u7cfb\u7edf\u9650\u5236\u8fdb\u7a0b\u6253\u5f00\u7684\u6587\u4ef6\u6570\uff0c\u9f13\u52b1\u7528\u6237\u5173\u95ed\u4e0d\u518d\u4f7f\u7528\u7684\u6587\u4ef6\u3002 </p> <p>(5)READ   \u6587\u4ef6\u8bfb\u53d6\u6570\u636e\uff0c\u5e94\u8be5\u6307\u660e\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u53ca\u8bfb\u5165\u6570\u636e\u5b58\u653e\u7684\u7f13\u51b2\u533a\u3002</p> <p>(6)WRITE  \u5199\u6587\u4ef6\u5c3e\uff0c\u5219\u6587\u4ef6\u957f\u5ea6\u589e\u52a0\uff1b\u5199\u4e2d\u95f4\uff0c\u5219\u6587\u4ef6\u539f\u6570\u636e\u4e22\u5931\u3002</p> <p>(7)APPEND \u53ea\u80fd\u5728\u6587\u4ef6\u5c3e\u6dfb\u52a0\u6570\u636e\u3002</p> <p>(8)SEEK    \u5bf9\u4e8e\u968f\u673a\u5b58\u53d6\u6587\u4ef6\uff0cSEEK\u7528\u4e8e\u5c06\u6587\u4ef6\u6307\u9488\u6307\u5411\u7279\u5b9a\u4f4d\u7f6e\u3002</p> <p>(9)GETATTRIBUTES</p> <p>(10)SETATTRIBUTES</p> <p>(11)RENAME</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#2_6","title":"2 \u76ee\u5f55","text":"<p>\u76ee\u5f55\u901a\u5e38\u5305\u542b\u6709\u8bb8\u591a\u76ee\u5f55\u9879\uff0c\u6bcf\u4e2a\u76ee\u5f55\u9879\u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6\u3002 </p> <p>1\u3001\u76ee\u5f55\u7ed3\u6784</p> <p>1\uff09\u5c5e\u6027\u548c\u5730\u5740\u4fe1\u606f\u653e\u5728\u76ee\u5f55\u9879\u4e2d</p> \u6587\u4ef6\u540d \u6269\u5c55\u540d \u5c5e\u6027 \u4fdd\u7559 \u65f6\u95f4 \u65e5\u671f \u7b2c\u4e00\u5757\u53f7 \u957f\u5ea6 <p>2\uff09\u5c5e\u6027\u548c\u5730\u5740\u4fe1\u606f\u4e0d\u5728\u76ee\u5f55\u9879\u4e2d</p> \u6587\u4ef6\u540d i\u8282\u70b9\u53f7 <p>2\u3001\u76ee\u5f55\u7684\u7ed3\u6784</p> <p></p> <p>3\u3001\u76ee\u5f55\u7c7b\u578b</p> <p>\u2460\u5355\u5c42\u76ee\u5f55</p> <p>\u2461\u4e24\u7ea7\u76ee\u5f55(\u4e00\u4e2a\u7528\u6237\u4e00\u4e2a\u76ee\u5f55)</p> <p>\u2462\u6811\u578b\u76ee\u5f55</p> <p>\u7528\u6237\u9700\u8981\u7684\u662f\u76ee\u5f55\u6811\uff0c\u4f7f\u6bcf\u4e2a\u7528\u6237\u53ef\u4ee5\u62e5\u6709\u6240\u9700\u8981\u7684\u591a\u4e2a\u76ee\u5f55\uff0c\u4ee5\u4fbf\u81ea\u7136\u5730\u7ec4\u7ec7\u4ed6\u4eec\u7684\u6587\u4ef6\u3002</p> <p>4\u3001\u8def\u5f84\u540d</p> <p>(1)\u7edd\u5bf9\u8def\u5f84\u540d</p> <p>\u5b83\u7531\u4ece\u6839\u76ee\u5f55\u5230\u6587\u4ef6\u7684\u8def\u5f84\u7ec4\u6210\uff0c\u7edd\u5bf9\u8def\u5f84\u540d\u603b\u662f\u4ece\u6839\u76ee\u5f55\u5f00\u59cb\uff0c\u5e76\u4e14\u662f\u552f\u4e00\u7684\u3002</p> <p>(2)\u76f8\u5bf9\u8def\u5f84\u540d</p> <p>\u6240\u6709\u7684\u8def\u5f84\u540d\uff0c\u5982\u679c\u4e0d\u662f\u4ece\u6839\u76ee\u5f55\u5f00\u59cb\u7684\uff0c\u90fd\u662f\u76f8\u5bf9\u4e8e\u5f53\u524d\u76ee\u5f55(\u5de5\u4f5c\u76ee\u5f55)\u7684\uff0c\u540c\u4e00\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84\u53ef\u80fd\u6709\u591a\u4e2a\uff0c\u7531\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u800c\u5b9a\u3002</p> <p>5\u3001\u76ee\u5f55\u64cd\u4f5c       \u76f8\u5bf9\u4e8e\u6587\u4ef6\u7684\u7cfb\u7edf\u8c03\u7528\u800c\u8a00\uff0c\u5404\u4e2a\u7cfb\u7edf\u4e2d\u7528\u4e8e\u7ba1\u7406\u76ee\u5f55\u7684\u7cfb\u7edf\u8c03\u7528\u5dee\u522b\u66f4\u5927\uff0c\u6211\u4eec\u4ee5UNIX\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5bf9\u7cfb\u7edf\u76ee\u5f55\u6709\u54ea\u4e9b\u64cd\u4f5c\u3002</p> <p>CREATE </p> <p>DELETE</p> <p>OPENDIR </p> <p>CLOSEDIR </p> <p>READDIR </p> <p>RENAME</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#3_6","title":"3 \u6587\u4ef6\u7cfb\u7edf\u7684\u6309\u540d\u8bbf\u95ee","text":"<p>1\u3001\u8fde\u7eed\u5206\u914d</p> <p>\u8fde\u7eed\u5206\u914d\u662f\u5c06\u6587\u4ef6\u4f5c\u4e3a\u8fde\u7eed\u6570\u636e\u5757\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u3002</p> <p>\u4f18\u70b9\uff1a\u7b80\u5355\u6613\u5b9e\u73b0\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u6587\u4ef6\u7528\u5230\u7684\u78c1\u76d8\u5757\u4ec5\u9700\u4e00\u4e2a\u6570\u5b57\uff0c\u5373\u7b2c\u4e00\u5757\u7684\u78c1\u76d8\u5730\u5740\u4ee5\u53ca\u6587\u4ef6\u6240\u5360\u78c1\u76d8\u5757\u6570\u91cf\u3002\u6027\u80fd\u597d\uff0c\u4e00\u6b21\u64cd\u4f5c\uff0c\u53ef\u8bfb\u51fa\u6574\u4e2a\u6587\u4ef6\u3002</p> <p>\u7f3a\u70b9\uff1a\u65e0\u6cd5\u77e5\u9053\u8be5\u4e3a\u6587\u4ef6\u5206\u591a\u5c11\u7a7a\u95f4\uff0c\u6587\u4ef6\u957f\u5ea6\u662f\u4f1a\u53d8\u7684\uff0c\u9020\u6210\u78c1\u76d8\u788e\u7247\u3002</p> <p>2\u3001\u94fe\u5f0f\u5206\u914d</p> <p>\u4e3a\u6bcf\u4e2a\u6587\u4ef6\u6784\u9020\u78c1\u76d8\u5757\u7684\u94fe\u63a5\uff0c\u6bcf\u4e2a\u5757\u7684\u7b2c\u4e00\u4e2a\u5b57\u7528\u4e8e\u6307\u5411\u4e0b\u4e00\u5757\u7684\u6307\u9488\uff0c\u5757\u7684\u5176\u5b83\u90e8\u5206\u5b58\u653e\u6570\u636e\u3002\u5728\u76ee\u5f55\u9879\u4e2d\u53ea\u9700\u5b58\u653e\u6587\u4ef6\u7b2c\u4e00\u4e2a\u6570\u636e\u5757\u6240\u5728\u7684\u78c1\u76d8\u5730\u5740\uff0c\u6587\u4ef6\u7684\u5176\u5b83\u5757\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u5730\u5740\u6765\u67e5\u627e\u3002</p> <p>\u4f18\u70b9\uff1a\u78c1\u76d8\u7a7a\u95f4\u5229\u7528\u7387\u9ad8\uff0c\u7ba1\u7406\u7b80\u5355\u3002</p> <p>\u7f3a\u70b9\uff1a\u968f\u673a\u5b58\u53d6\u7684\u901f\u5ea6\u6162\u3002</p> <p>3\u3001\u4f7f\u7528\u7d22\u5f15\u7684\u94fe\u63a5\u8868\u5206\u914d</p> <p>\u4f7f\u7528\u65b9\u6cd5\u4e8c\u5b9e\u73b0\u6587\u4ef6\uff0c\u53d6\u51fa\u6bcf\u4e2a\u78c1\u76d8\u5757\u7684\u5730\u5740\u4fe1\u606f\uff08\u5982\uff1a\u7c07\u53f7\uff09\uff0c\u628a\u5b83\u653e\u5728\u5185\u5b58\u7684\u8868\u6216\u7d22\u5f15\u4e2d\u3002\u968f\u673a\u67e5\u627e\u65f6\uff0c\u987a\u7740\u94fe\u67e5\u627e\u78c1\u76d8\u5757\uff0c\u4f46\u53ea\u9700\u67e5\u627e\u5185\u5b58\u4e2d\u7684\u94fe\u8868\uff0c\u4e0d\u9700\u8bbf\u95ee\u78c1\u76d8\u3002</p> <p>\u540c\u4ee5\u524d\u7684\u65b9\u6cd5\u4e00\u6837\uff0c\u4e0d\u7ba1\u6587\u4ef6\u6709\u591a\u5927\uff0c\u5728\u76ee\u5f55\u9879\u4e2d\u53ea\u9700\u8bb0\u5f55\u4e00\u4e2a\u6574\u6570\uff0c\u6839\u636e\u5b83\u53ef\u4ee5\u627e\u5230\u6587\u4ef6\u7684\u6240\u6709\u5757\u3002MS-DOS\u5c31\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u8fdb\u884c\u78c1\u76d8\u5206\u914d\u3002</p> <p>4\u3001\u6587\u4ef6\u6309\u540d\u8bbf\u95ee\u7684\u5b9e\u73b0</p> <p>\u76ee\u5f55\u7cfb\u7edf\u7684\u4e3b\u8981\u529f\u80fd\u662f\u628aASC\u2161\u6587\u4ef6\u540d\u6620\u5c04\u6210\u67e5\u627e\u6587\u4ef6\u6570\u636e\u6240\u9700\u7684\u5730\u5740\u4fe1\u606f\u3002</p> <p>\uff081\uff09CP/M\u4e2d\u7684\u76ee\u5f55</p> <p>CP/M\u4e2d\u53ea\u6709\u4e00\u5c42\u76ee\u5f55\uff0c\u56e0\u6b64\u53ea\u6709\u4e00\u4e2a\u76ee\u5f55(\u6587\u4ef6)\uff0c\u67e5\u627e\u6587\u4ef6\u540d\uff0c\u5c31\u662f\u5728\u8fd9\u4e2a\u552f\u4e00\u7684\u76ee\u5f55\u4e2d\u627e\u5230\u6587\u4ef6\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\uff0c\u4ece\u76ee\u5f55\u9879\u4e2d\u83b7\u5f97\u6587\u4ef6\u5b58\u653e\u7684\u78c1\u76d8\u5730\u5740\u3002 </p> <p></p> <p>\uff082\uff09MS\u2014DOS\u4e2d\u7684\u76ee\u5f55</p> <p>\u200b      \u6bcf\u4e2a\u76ee\u5f55\u9879\u5305\u542b\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u5c5e\u6027\u3001\u548c\u7b2c\u4e00\u4e2a\u78c1\u76d8\u5757\u53f7\uff0c\u6839\u636e\u7b2c\u4e00\u4e2a\u78c1\u76d8\u5757\u7684\u5757\u53f7\uff0c\u53ef\u4ee5\u627e\u5230\u6240\u6709\u7684\u6587\u4ef6\u5757\u3002MS-DOS\u662f\u6811\u578b\u76ee\u5f55(\u5c42\u6b21\u578b\u76ee\u5f55)\u3002</p> <p></p> <p>\u76ee\u5f55\u7ed3\u5408FAT\u8868</p> <p></p> <p>\uff083\uff09FAT12</p> <p>FAT12\u91c7\u752812\u4f4d\u6587\u4ef6\u5206\u914d\u8868\uff0c\u78c1\u76d8\u5757\u5927\u5c0f\u4e3a2KB\uff0c\u5219FAT12\u53ef\u4ee5\u7ba1\u7406\u7684\u78c1\u76d8\u5bb9\u91cf\u662f8M\u30022KB\u00d74K\uff08\u4e2a\uff09\uff082^12\u4e2a\u78c1\u76d8\u5757\uff09=8MB</p> <p>FAT12\u6587\u4ef6\u7cfb\u7edf\u7684\u6587\u4ef6\u540d\uff1a\u53ea\u80fd\u662f8.3\u683c\u5f0f\u7684\u6587\u4ef6\u540d\u3002</p> <p>\u8bf4\u660e\uff1a\u6587\u4ef6\u7cfb\u7edf\u4ee5\u7c07\uff08\u78c1\u76d8\u5757\uff09\u4e3a\u5355\u4f4d\u4e3a\u6587\u4ef6\u5206\u914d\u5b58\u50a8\u7a7a\u95f4</p> <p>(4)UNIX\u4e2d\u7684\u76ee\u5f55</p> <p>UNIX\u4e2d\u4f7f\u7528\u7684\u76ee\u5f55\u7ed3\u6784\u975e\u5e38\u7b80\u5355\uff0c\u6bcf\u4e2a\u76ee\u5f55\u9879\u53ea\u5305\u542b\u4e00\u4e2a\u6587\u4ef6\u540d\u53ca\u5176i\u8282\u70b9\u53f7\u3002\u6587\u4ef6\u7c7b\u578b\u3001\u957f\u5ea6\u3001\u65f6\u95f4\u3001\u62e5\u6709\u8005\u548c\u5730\u5740\u7b49\u6240\u6709\u4fe1\u606f\u90fd\u653e\u5728i-\u8282\u70b9\u4e2d \u3002\u5f53\u67e5\u627e\u6587\u4ef6\u65f6\u5148\u627e\u5230\u8be5\u6587\u4ef6\u7684i\u8282\u70b9\u5b58\u653e\u7684\u4f4d\u7f6e\uff0c\u518d\u4ecei\u8282\u70b9\u4e2d\u627e\u5230\u8be5\u6587\u4ef6\u7684\u78c1\u76d8\u5757\u53f7\u3002 </p> \u6587\u4ef6\u540d i\u8282\u70b9\u53f7 <p></p> <p>i\u8282\u70b9</p> <p>\u7ed9\u6bcf\u4e2a\u6587\u4ef6\u8d4b\u4e88\u4e00\u5f20\u79f0\u4e3ai\u8282\u70b9\u7684\u5c0f\u578b\u8868\u5176\u4e2d\u5217\u51fa\u4e86\u6587\u4ef6\u5c5e\u6027\u548c\u5404\u6570\u636e\u5757\u5728\u78c1\u76d8\u4e0a\u7684\u5730\u5740\uff0c\u5bf9\u4e8e\u5927\u6587\u4ef6\uff0c\u7531\u4e8e\u5305\u542b\u7684\u78c1\u76d8\u5757\u6570\u5f88\u591a\uff0c\u53ef\u4ee5\u5728i\u8282\u70b9\u4e2d\u5b58\u653e\u4e00\u6b21\u95f4\u63a5\u5730\u5740\uff0c\u6216\u4e8c\u6b21\u95f4\u63a5\u5730\u5740\uff0c\u6216\u4e09\u6b21\u95f4\u63a5\u5730\u5740\u3002UNIX\u4e2d\u4f7f\u7528\u8fd9\u79cd\u5206\u914d\u65b9\u6848\u3002</p> <p></p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#4_7","title":"4 \u78c1\u76d8\u7a7a\u95f4\u7684\u7ba1\u7406","text":"<p>1\u3001\u78c1\u76d8\u7a7a\u95f4\u7ba1\u7406</p> <p>\u6587\u4ef6\u901a\u5e38\u5b58\u653e\u5728\u78c1\u76d8\u4e0a\uff0c\u6240\u4ee5\u7a7a\u95f4\u7684\u7ba1\u7406\u662f\u7cfb\u7edf\u8bbe\u8ba1\u8005\u8981\u8003\u8651\u7684\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u3002</p> <p>\u6587\u4ef6\u7684\u5b58\u653e\u6709\u4e24\u4e2a\u7b56\u7565\uff1a\u8fde\u7eed\u5b58\u653e\u548c\u4e0d\u8fde\u7eed\u5730\u5206\u5757\u5b58\u653e\u3002\u8fde\u7eed\u5b58\u653e\u5b58\u5728\u4e00\u4e2a\u7f3a\u9677\uff0c\u5f53\u6587\u4ef6\u6269\u5927\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u79fb\u52a8\u6587\u4ef6\uff0c\u800c\u5728\u78c1\u76d8\u4e0a\u79fb\u52a8\u6587\u4ef6\u662f\u5f88\u6162\u7684\u3002\u6240\u4ee5\u51e0\u4e4e\u6240\u6709\u7684\u6587\u4ef6\u7cfb\u7edf\u90fd\u628a\u6587\u4ef6\u5206\u5272\u6210\u56fa\u5b9a\u5927\u5c0f\u7684\u5757\u6765\u5b58\u50a8\u3002\u5404\u5757\u4e0d\u5fc5\u76f8\u90bb\u3002 </p> <p>2\u3001\u5757\uff08\u7c07\uff09\u5927\u5c0f</p> <p>\u7ed9\u6587\u4ef6\u5206\u914d\u5757\u592a\u5927\uff0c\u6d6a\u8d39\u78c1\u76d8\u7a7a\u95f4\u3002\u5757\u592a\u5c0f\uff0c\u67e5\u627e\u4e00\u4e2a\u6587\u4ef6\u591a\u6b21\u5bfb\u9053,\u6d6a\u8d39\u65f6\u95f4\u3002\u4e00\u822c\u9009\u62e9\u7684\u5757\u5927\u5c0f\u4e3a2n\u4e2a\u8fde\u7eed\u7684\u6247\u533a\u3002\u82e5\u6247\u533a\u5927\u5c0f\u4e3a512\u4e2a\u5b57\u8282\uff0c\u78c1\u76d8\u5757\u7684\u5927\u5c0f\u9009\u5b9a\u4e3a4KB\uff0c\u5219\u6587\u4ef6\u7cfb\u7edf\u8bfb\u51998\u4e2a\u8fde\u7eed\u7684\u6247\u533a\uff0c\u5e76\u628a\u5b83\u4eec\u770b\u6210\u4e0d\u53ef\u5206\u5272\u7684\u5355\u5143\u3002 </p> <p>\u73b0\u5728\u7684\u78c1\u76d8\u6247\u533a\u5927\u5c0f\u6709\u7684\u662f1KB\u30014KB\u4e0d\u4e00\u5b9a\u662f512\u5b57\u8282\u3002</p> <p>3\u3001\u8bb0\u5f55\u7a7a\u95f2\u5757</p> <p>\u7a7a\u767d\u78c1\u76d8\u5757\u7684\u94fe\u63a5\u8868</p> <p>\u7528\u4e00\u4e9b\u7a7a\u767d\u78c1\u76d8\u5757\u5b58\u653e\u7a7a\u95f2\u78c1\u76d8\u5757\u5757\u53f7\u3002\u4e00\u4e2a\u78c1\u76d8\u5757\u5b58\u653e\u5c3d\u53ef\u80fd\u591a\u7684\u7a7a\u95f2\u76d8\u5757\u53f7\uff0c\u5e76\u4e13\u95e8\u7559\u51fa\u6700\u540e\u51e0\u4e2a\u5b57\u8282\u5b58\u653e\u6307\u5411\u4e0b\u4e00\u4e2a\u5b58\u653e\u7a7a\u95f2\u76d8\u5757\u53f7\u7684\u78c1\u76d8\u5757\u7684\u6307\u9488 \u3002</p> <p>\u7528n\u4f4d\u4f4d\u56fe\u8868\u793a\u78c1\u76d8\u5757\u4f7f\u7528\u60c5\u51b5</p> <p>\u78c1\u76d8\u88ab\u5212\u5206\u6210n\u5757\uff0c\u7528n\u4f4d\u4f4d\u56fe\u8868\u793a\u78c1\u76d8\u5757\u4f7f\u7528\u60c5\u51b5,\u6bcf\u4e00\u4f4d\u4ee3\u8868\u4e00\u4e2a\u76d8\u5757\uff0c\u6bd4\u5982\u7528\uff1a\u4f4d\u7684\u503c\u4e3a0\u8868\u793a\u78c1\u76d8\u7a7a\u95f2\uff0c\u4f4d\u7684\u503c\u4e3a1\u8868\u793a\u78c1\u76d8\u5df2\u5206\u914d\u3002</p> <p>4\u3001\u865a\u62df\u6587\u4ef6\u7cfb\u7edf(VFS)</p> <p>\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff08Virtual Filesystem\uff09\u4e5f\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u8f6c\u6362\uff08Virtual Filesystem Switch\uff09\u6216VFS\uff0c\u662f\u4e00\u4e2a\u5185\u6838\u8f6f\u4ef6\u5c42\uff0c\u7528\u6765\u5904\u7406\u4e0eUnix\u6807\u51c6\u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u7684\u6240\u6709\u7cfb\u7edf\u8c03\u7528,\u80fd\u4e3a\u5404\u79cd\u6587\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u4e00\u4e2a\u901a\u7528\u7684\u63a5\u53e3\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#5_4","title":"5 \u9898\u76ee","text":"<p>1\u3001\u4e3e\u4f8b\u8bf4\u660e\u6587\u4ef6\u7cfb\u7edf\u662f\u5982\u4f55\u5b9e\u73b0\u6587\u4ef6\u7684\u6309\u540d\u5b58\u53d6\u7684\u3002</p> <p>\u7b54:\u5728\u7c7bUnix\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u76ee\u5f55\u6587\u4ef6\u4e2d\u5b58\u6709\u5b50\u76ee\u5f55\u6587\u4ef6\u548c\u7528\u6237\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u548ci\u7ed3\u70b9\u53f7\uff0c\u5148\u4ee5\u6587\u4ef6\u540d\u4e3a\u7d22\u5f15\u5728\u76ee\u5f55\u6587\u4ef6\u4e2d\u627e\u5230\u6587\u4ef6\u7684i\u7ed3\u70b9\u53f7\uff0c\u6839\u636ei\u7ed3\u70b9\u53f7\u53ef\u4ee5\u627e\u5230\u8be5\u6587\u4ef6\u7684i\u7ed3\u70b9\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6587\u4ef6\u7684\u5c5e\u6027\u548c\u5730\u5740\u4fe1\u606f\u3002</p> <p>2\u3001\u4e3e\u4f8b\u8bf4\u660e\u6587\u4ef6\u7cfb\u7edf\u6240\u80fd\u7ba1\u7406\u7684\u6587\u4ef6\u5927\u5c0f\u662f\u7531\u4ec0\u4e48\u51b3\u5b9a\uff1f</p> <p>\u4f8b\u5982:FAT12\u91c7\u752812\u4f4d\u6587\u4ef6\u5206\u914d\u8868\uff0c\u7c07\u5757\u5927\u5c0f\u662f\u8fde\u7eed\u7684\u56db\u4e2a\u6247\u533a\uff0c\u53ef\u4ee5\u7ba1\u7406\u7684\u78c1\u76d8\u5bb9\u91cf\u662f8M=4\u4e2a\u6247\u533a*512B*2^12\u3002</p> <p>3\u3001\u201c\u6253\u5f00\"\u64cd\u4f5c\u3002\u7528\u6237\u8981\u4f7f\u7528\u5b58\u653e\u5728\u5b58\u50a8\u4ecb\u8d28\u4e0a\u7684\u6587\u4ef6\u524d\uff0c\u5fc5\u9700\u63d0\u51fa\u201c\u6253\u5f00\"\u8981\u6c42\u3002\u7cfb\u7edf\u5728\u63a5\u5230\u7528\u6237\u7684\u201c\u6253\u5f00\"\u8981\u6c42\u540e\uff0c\u627e\u5230\u8be5\u7528\u6237\u7684\u6587\u4ef6\uff0c\u5728\u6587\u4ef6\u76ee\u5f55\u4e2d\u627e\u5230\u4e0e\u7528\u6237\u7684\u9700\u6c42\u76f8\u7b26\u5408\u7684\u76ee\u5f55\u9879,\u53d6\u51fa\u6587\u4ef6\u5b58\u653e\u7684\u7269\u7406\u5730\u5740\u3002\u5982\u679c\u662f\u7d22\u5f15\u6587\u4ef6\uff0c\u8fd8\u8981\u5c06\u8fd9\u4e2a\u6587\u4ef6\u7684\u7d22\u5f15\u8868\u4e5f\u8c03\u5165\u5230\u4e3b\u5b58\u4e2d\uff0c\u8fd9\u6837\uff0c\u540e\u7ee7\u7684\u8bfb\u64cd\u4f5c\u80fd\u591f\u5f88\u5feb\u5730\u8fdb\u884c\u3002</p> <p>4\u3001\u6587\u4ef6\u7cfb\u7edf\u7684\u6253\u5f00\u64cd\u4f5c\u5b8c\u6210\u4ec0\u4e48\u529f\u80fd\uff1f\u8bf4\u660eFAT12\u6587\u4ef6\u7cfb\u7edf\u5b8c\u6210\u6309\u540d\u8bbf\u95ee\u9700\u8981\u54ea\u4e9b\u6570\u636e\u7ed3\u6784\uff1f\u662f\u5982\u4f55\u5b8c\u6210\u6587\u4ef6\u7684\u6309\u540d\u8bbf\u95ee\u7684\u3002</p> <p>\u6587\u4ef6\u7cfb\u7edf\u7684\u6253\u5f00\u64cd\u4f5c\u5b8c\u6210\u7684\u529f\u80fd\u662f\u5c06\u6587\u4ef6\u5c5e\u6027\u548c\u6587\u4ef6\u7684\u5730\u5740\u4fe1\u606f\u88c5\u5165\u4e3b\u5b58\u3002</p> <p>FAT12\u6587\u4ef6\u7cfb\u7edf\u5b8c\u6210\u6309\u540d\u8bbf\u95ee\u9700\u8981\u76ee\u5f55\u548cFAT\u8868\u7684\u652f\u6301\u3002</p> <p>\u5176\u5b8c\u6210\u6309\u540d\u8bbf\u95ee\u7684\u8fc7\u7a0b\u662f\uff1a\u6587\u4ef6\u7cfb\u7edf\u7684\u76ee\u5f55\u9879\u4e2d\u5b58\u6709\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u5757\u5728\u78c1\u76d8\u4e2d\u7684\u7c07\u53f7\u3002\u5728FAT\u8868\u4e2d\u5b58\u6709\u540e\u7eed\u6570\u636e\u5757\u5728\u78c1\u76d8\u4e2d\u7684\u7c07\u53f7\u3002 FAT12\u6587\u4ef6\u7cfb\u7edf\u5148\u4ee5\u6587\u4ef6\u540d\u4e3a\u7d22\u5f15\u641c\u7d22\u76ee\u5f55\uff0c\u627e\u5230\u76f8\u5e94\u7684\u76ee\u5f55\u9879\u540e\u83b7\u53d6\u6587\u4ef6\u7b2c\u4e00\u4e2a\u6570\u636e\u5757\u5728\u78c1\u76d8\u4e2d\u7684\u7c07\u53f7\u3002\u6839\u636e\u7b2c\u4e00\u4e2a\u6570\u636e\u5757\u5728\u78c1\u76d8\u4e2d\u7684\u7c07\u53f7\u4eceFAT\u8868\u4e2d\u53ef\u4ee5\u627e\u5230\u6587\u4ef6\u7684\u5176\u4ed6\u6240\u6709\u6570\u636e\u5757\u7684\u7c07\u53f7\u3002 </p> <p>\u6ce8\uff1a</p> <p>\u4ec0\u4e48\u662f\u6247\u533a\uff1f</p> <p>\u76d8\u9762\u4e2d\u4e00\u5708\u5708\u7070\u8272\u540c\u5fc3\u5706\u4e3a\u4e00\u6761\u6761\u78c1\u9053\uff0c\u4ece\u5706\u5fc3\u5411\u5916\u753b\u76f4\u7ebf\uff0c\u53ef\u4ee5\u5c06\u78c1\u9053\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u5f27\u6bb5\uff0c\u6bcf\u4e2a\u78c1\u9053\u4e0a\u4e00\u4e2a\u5f27\u6bb5\u88ab\u79f0\u4e4b\u4e3a\u4e00\u4e2a\u6247\u533a\u3002\u6247\u533a\u662f\u78c1\u76d8\u7684\u6700\u5c0f\u7ec4\u6210\u5355\u5143\uff0c\u901a\u5e38\u662f512\u5b57\u8282\u3002\uff08\u7531\u4e8e\u4e0d\u65ad\u63d0\u9ad8\u78c1\u76d8\u7684\u5927\u5c0f\uff0c\u90e8\u5206\u5382\u5546\u8bbe\u5b9a\u6bcf\u4e2a\u6247\u533a\u7684\u5927\u5c0f\u662f4096\u5b57\u8282\uff09</p> <p>\u4ec0\u4e48\u662f\u78c1\u76d8\u5757\uff1f</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u4e0e\u78c1\u76d8\u4e4b\u95f4\u4ea4\u6d41\u7684\u6700\u5c0f\u5355\u4f4d\u5c31\u662f\u78c1\u76d8\u5757\uff0c\u5b83\u662f\u4e00\u4e2a\u865a\u62df\u7684\u6982\u5ff5\u3002\u662f\u5bf9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\uff08\u8f6f\u4ef6\uff09\u6765\u8bf4\u6709\u610f\u4e49\u7684\u6982\u5ff5\u3002</p> <p>\u7531\u4e8e\u6247\u533a\u7684\u6570\u91cf\u6bd4\u8f83\u5c0f\uff0c\u6570\u76ee\u4f17\u591a\u5728\u5bfb\u5740\u65f6\u6bd4\u8f83\u56f0\u96be\uff0c\u6240\u4ee5\u64cd\u4f5c\u7cfb\u7edf\u5c31\u5c06\u76f8\u90bb\u7684\u6247\u533a\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u5757\uff0c\u518d\u5bf9\u5757\u8fdb\u884c\u6574\u4f53\u7684\u64cd\u4f5c\u3002</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u5ffd\u7565\u5bf9\u5e95\u5c42\u7269\u7406\u5b58\u50a8\u7ed3\u6784\u7684\u8bbe\u8ba1\u3002\u901a\u8fc7\u865a\u62df\u51fa\u6765\u78c1\u76d8\u5757\u7684\u6982\u5ff5\uff0c\u5728\u7cfb\u7edf\u4e2d\u8ba4\u4e3a\u5757\u662f\u6700\u5c0f\u7684\u5355\u4f4d\u3002</p> <p>\u78c1\u76d8\u7684\u8bfb\u5199\u57fa\u672c\u5355\u4f4d\u662f\u4ec0\u4e48\uff1f</p> <p>\u8bfb\u5199\u57fa\u672c\u5355\u4f4d\u662f\u6247\u533a\u3002\u78c1\u76d8\u7684\u539f\u7406\uff0c\u7269\u7406\u5b9e\u73b0\uff0c\u78c1\u76d8\u63a7\u5236\u5668\u662f\u6309\u7167\u6247\u533a\u8fd9\u4e2a\u5355\u4f4d\u8bfb\u53d6\u7b49\u64cd\u4f5c\u6570\u636e\u7684\u3002\u6b64\u9898\u95ee\u78c1\u76d8\u7684\u8bfb\u5199\uff0c\u548c\u64cd\u4f5c\u7cfb\u7edf\u6ca1\u6709\u5173\u7cfb\uff0c\u5343\u4e07\u4e0d\u8981\u8054\u7cfb\u5230\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u53bb\u4e86\u3002</p> <p>\u78c1\u76d8\u5757\u4e0e\u6247\u533a\u7684\u5927\u5c0f\u5173\u7cfb</p> <p>\u65e2\u7136\u78c1\u76d8\u5757\u662f\u4e00\u4e2a\u865a\u62df\u6982\u5ff5\u3002\u662f\u64cd\u4f5c\u7cfb\u7edf\u81ea\u5df1\uff02\u675c\u64b0\uff02\u7684\u3002\u8f6f\u4ef6\u7684\u6982\u5ff5\uff0c\u4e0d\u662f\u771f\u5b9e\u7684\u3002\u6240\u4ee5\u5927\u5c0f\u7531\u64cd\u4f5c\u7cfb\u7edf\u51b3\u5b9a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a\u5757\u591a\u5927\u3002\u4e00\u4e2a\u5757\u5927\u5c0f=\u4e00\u4e2a\u6247\u533a\u5927\u5c0f*2\u7684n\u6b21\u65b9\u3002N\u662f\u53ef\u4ee5\u4fee\u6539\u7684\u3002</p> <p>\u5757\u4e0e\u9875\u7684\u5173\u7cfb</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u7ecf\u5e38\u4e0e\u5185\u5b58\u548c\u786c\u76d8\u8fd9\u4e24\u79cd\u5b58\u50a8\u8bbe\u5907\u8fdb\u884c\u901a\u4fe1\uff0c\u7c7b\u4f3c\u4e8e\u201c\u5757\u201d\u7684\u6982\u5ff5\uff0c\u90fd\u9700\u8981\u4e00\u79cd\u865a\u62df\u7684\u57fa\u672c\u5355\u4f4d\u3002\u6240\u4ee5\uff0c\u4e0e\u5185\u5b58\u64cd\u4f5c\uff0c\u662f\u865a\u62df\u4e00\u4e2a\u9875\u7684\u6982\u5ff5\u6765\u4f5c\u4e3a\u6700\u5c0f\u5355\u4f4d\u3002\u4e0e\u786c\u76d8\u6253\u4ea4\u9053\uff0c\u5c31\u662f\u4ee5\u5757\u4e3a\u6700\u5c0f\u5355\u4f4d\u3002</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_11","title":"\u7b2c\u4e5d\u7ae0 \u8bbe\u5907\u7ba1\u7406","text":""},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#1-io","title":"1 I/O\u7cfb\u7edf\u7684\u7ec4\u6210","text":"<p>1\u3001I/O\u7cfb\u7edf\u7684\u7ed3\u6784</p> <p>\uff081\uff09\u5fae\u673aI/O\u7cfb\u7edf \uff08\u603b\u7ebf\u578bI/O\u7cfb\u7edf\u7ed3\u6784\uff09</p> <p></p> <p>\uff082\uff09\u4e3b\u673aI/O\u7cfb\u7edf\uff08\u5177\u6709\u901a\u9053\u7684I/O\u7cfb\u7edf\u7ed3\u6784\uff09</p> <p></p> <p>2\u3001I/O\u8bbe\u5907\u7684\u5206\u7c7b</p> <p>(1)\u6309\u4f20\u8f93\u7684\u901f\u7387\u5206\u7c7b</p> <p>\u2460\u4f4e\u901f\u8bbe\u5907\uff1a\u952e\u76d8\u9f20\u6807\uff0c\u51e0\u4e2a\u5b57\u8282-\u51e0\u767e\u5b57\u8282/\u79d2</p> <p>\u2461\u4e2d\u901f\u8bbe\u5907\uff1a\u6253\u5370\u673a\uff0c\u6570\u5343~\u6570\u5341\u5343\u5b57\u8282/\u79d2</p> <p>\u2462\u9ad8\u901f\u8bbe\u5907\uff1a\u78c1\u5e26\u673a\u3001\u78c1\u76d8\u673a\u3001\u5149\u76d8\u673a \u51e0\u5341\u4e07~\u51e0\u5146/\u79d2</p> <p>(2)\u6309\u4fe1\u606f\u4ea4\u6362\u7684\u5355\u4f4d\u5206\u7c7b</p> <p>\u2460\u5757\u8bbe\u5907\uff1a\u6570\u636e\u7684\u5b58\u53d6\u4ee5\u6570\u636e\u5757\u4e3a\u5355\u4f4d\uff0c\u5982\u78c1\u76d8\u3002\u5757\u8bbe\u5907\u5728\u5757\u4e2d\u4fdd\u5b58\u4fe1\u606f\uff0c\u5757\u7684\u5927\u5c0f\u901a\u5e38\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u4e00\u6b21\u53ea\u4f20\u9001\u4e00\u5757\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u5757\u53f7\u8bbf\u95ee\u6570\u636e\u3002</p> <p>\u2461\u5b57\u7b26\u8bbe\u5907\uff1a\u4f20\u9001\u5b57\u8282\u6d41\uff0c\u6ca1\u6709\u4f7f\u7528\u5757\u7ed3\u6784\u3002\u7ec8\u7aef\u3001\u6253\u5370\u673a\u3001\u901a\u4fe1\u7aef\u53e3\u3001\u9f20\u6807\u7b49\u90fd\u662f\u5b57\u7b26\u8bbe\u5907\u3002</p> <p>(3)\u6309\u8bbe\u5907\u7684\u5171\u4eab\u5c5e\u6027\u5206\u7c7b</p> <p>\u2460\u72ec\u5360\u8bbe\u5907 \u2461\u5171\u4eab\u8bbe\u5907 \u2462\u865a\u62df\u8bbe\u5907</p> <p>3\u3001\u8bbe\u5907\u63a7\u5236\u5668</p> <p>I/O\u903b\u8f91</p> <p>\u4e00\u4e2a\u63a7\u5236\u5668\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u5916\u8bbe\u3001\u4e00\u4e2a\u901a\u9053\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u63a7\u5236\u5668</p> <p></p> <p>I/O\u901a\u9053</p> <p>I/O\u901a\u9053\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5904\u7406\u673a\uff0c\u5b83\u5177\u6709\u6267\u884cI/O\u6307\u4ee4\u7684\u80fd\u529b\uff0c\u5e76\u901a\u8fc7\u6267\u884c\u901a\u9053\u7a0b\u5e8f\u6765\u63a7\u5236I/O\u64cd\u4f5c\u3002\u7b80\u5355\u8bf4\uff0c\u901a\u9053\u662f\u5927\u578b\u4e3b\u673a\u7cfb\u7edf\u4e2d\u4e13\u95e8\u7528\u4e8eI/O\u7684\u4e13\u7528\u8ba1\u7b97\u673a\u3002 </p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#2-io","title":"2 I/O\u63a7\u5236\u65b9\u5f0f","text":"<p>1\u3001I/O\u63a7\u5236\u7684\u53d1\u5c55</p> <p>\u7a0b\u5e8fI/O\u65b9\u5f0f      \u2193 \u4e2d\u65ad\u9a71\u52a8\u65b9\u5f0f      \u2193 DMA\u63a7\u5236\u5668\uff08\u4f7f\u4f20\u8f93\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u53d8\u6210\u4ee5\u6570\u636e\u5757\u4e3a\u5355\u4f4d\u3002\uff09      \u2193 \u901a\u9053\uff08\u4f7fI/O\u7684\u7ec4\u7ec7\u548c\u6570\u636e\u7684\u4f20\u9001\uff0c\u90fd\u80fd\u72ec\u7acb\u8fdb\u884c\uff0c\u65e0\u9700CPU\u5e72\u9884\u3002\uff09</p> <p>2\u3001\u8f6e\u8be2\u63a7\u5236\u65b9\u5f0f</p> <p>\u4e3b\u673a\u5728\u8bd5\u56fe\u53d1\u9001I/O\u63a7\u5236\u547d\u4ee4\u4e4b\u524d\u5148\u53cd\u590d\u68c0\u6d4b\u8bbe\u5907\u63a7\u5236\u5668\u72b6\u6001\u5bc4\u5b58\u5668\u7684\u5fd9/\u95f2\u6807\u5fd7\u4f4d\uff0c\u82e5\u8bbe\u5907\u5fd9\uff0c\u5219\u4e3b\u673a\u7ee7\u7eed\u68c0\u6d4b\u8be5\u6807\u5fd7\u4f4d\uff0c\u76f4\u5230\u8be5\u6807\u5fd7\u4f4d\u4e3a\u201c\u7a7a\u95f2\u201d\uff0c\u7136\u540e\u53d1\u9001I/O\u6307\u4ee4\u3002</p> <p>3\u3001\u4e2d\u65ad\u63a7\u5236\u65b9\u5f0f</p> <p>\u4e0e\u8f6e\u8be2\u63a7\u5236\u65b9\u5f0f\u76f8\u6bd4\uff0c\u4e2d\u65ad\u9a71\u52a8I/O\u63a7\u5236\u65b9\u5f0f\u53ef\u4ee5\u6781\u5927\u5730\u63d0\u9ad8CPU\u7684\u5229\u7528\u7387\u3002</p> <p>4\u3001DMA\u63a7\u5236\u65b9\u5f0f</p> <p></p> <p>(1)\u6ca1\u6709\u4f7f\u7528DMA\u65f6\u4ece\u78c1\u76d8\u8bfb\u6570\u7684\u8fc7\u7a0b</p> <p>\u2460\u9996\u5148\u63a7\u5236\u5668\u4ece\u8bbe\u5907\u5b8c\u6574\u5730\u8bfb\u51fa\u4e00\u5757\u6570\u636e\u653e\u5165\u6570\u636e\u5bc4\u5b58\u5668\u4e2d\u3002</p> <p>\u2461\u8ba1\u7b97\u8be5\u5757\u6570\u636e\u7684\u68c0\u9a8c\u548c\u4ee5\u4fdd\u8bc1\u8bfb\u53d6\u6b63\u786e\u3002</p> <p>\u2462\u63a7\u5236\u5668\u53d1\u4e2d\u65ad\u4fe1\u53f7\uff0cCPU\u5f00\u59cb\u4ece\u63a7\u5236\u5668\u7684\u8bbe\u5907\u5bc4\u5b58\u5668\u4e2d\u5c06\u6570\u636e\u8bfb\u5165\u5185\u5b58\u3002</p> <p>\u5728\u8fd9\u79cd\u65b9\u5f0f\u4e0b,\u6bcf\u4f20\u9001\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u8282,CPU\u5c31\u8981\u5904\u7406\u4e00\u6b21\u4e2d\u65ad,\u628a\u6570\u636e\u4ece\u63a7\u5236\u5668\u7684\u6570\u636e\u7f13\u5b58\u9001\u5165\u5185\u5b58\u3002</p> <p>(2)DMA\u63a7\u5236\u65b9\u5f0f</p> <p>CPU\u53d1\u9001I/O\u6307\u4ee4--\u547d\u4ee4\u5199\u5165CR\u5bc4\u5b58\u5668--\u5185\u5b58\u8d77\u59cb\u5730\u5740\u5199\u5165MAR--I/O\u5b57\u8282\u6570\u5199\u5165DC--\u5c06I/O\u8bbe\u5907\u5730\u5740\u9001I/O\u63a7\u5236\u903b\u8f91--\u542f\u52a8DMA</p> <p>(3)DMA\u63a7\u5236\u4ece\u78c1\u76d8\u8bfb\u6570\u7684\u8fc7\u7a0b</p> <p></p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#3_7","title":"3 \u7f13\u51b2\u7ba1\u7406","text":"<p>1\u3001\u7f13\u51b2\u7684\u5f15\u5165</p> <p>\u5728\u6570\u636e\u5230\u8fbe\u548c\u6570\u636e\u79bb\u53bb\u7684\u901f\u5ea6\u4e0d\u4e00\u81f4\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u5f15\u5165\u7f13\u51b2\u3002</p> <p>2\u3001\u5355\u7f13\u51b2\u7684\u5de5\u4f5c</p> <p></p> <p>2\u3001\u53cc\u7f13\u51b2\u7684\u5de5\u4f5c</p> <p></p> <p>3\u3001\u5faa\u73af\u7f13\u51b2</p> <p>\u89c1\u8bfe\u672c252\u9875</p> <p>(1)\u5f15\u5165\u5faa\u73af\u7f13\u51b2\u7684\u7406\u7531</p> <p>(2)\u5faa\u73af\u7f13\u51b2\u7684\u7ec4\u6210</p> <p>(3)\u7f13\u51b2\u533a\u7684\u4f7f\u7528</p> <p>(4)\u8fdb\u7a0b\u540c\u6b65</p> <p>4\u3001\u7f13\u51b2\u6c60</p> <p>\u89c1\u8bfe\u672c252\u9875</p> <p>(1)\u7f13\u51b2\u6c60\u7684\u7ec4\u6210</p> <p>(2)Getbuf\u8fc7\u7a0b\u548cPutbuf\u8fc7\u7a0b</p> <p>(3)\u7f13\u51b2\u533a\u7684\u5de5\u4f5c\u65b9\u5f0f</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#4_8","title":"4 \u8bbe\u5907\u5206\u914d","text":"<p>1\u3001\u8bbe\u5907\u5206\u914d\u4e2d\u7684\u6570\u636e\u7ed3\u6784</p> <p>\u5728\u8fdb\u884c\u8bbe\u5907\u5206\u914d\u65f6\u6240\u9700\u7684\u6570\u636e\u7ed3\u6784\u6709\uff1a</p> <p>(1)\u8bbe\u5907\u63a7\u5236\u8868</p> <p>(2)\u63a7\u5236\u5668\u63a7\u5236\u8868</p> <p>(3)\u901a\u9053\u63a7\u5236\u8868</p> <p>(4)\u7cfb\u7edf\u8bbe\u5907\u8868</p> <p>(1)\u8bbe\u5907\u63a7\u5236\u8868DCT</p> <p>\u2460\u8bbe\u5907\u7c7b\u578b</p> <p>\u2461\u8bbe\u5907\u6807\u8bc6\u7b26</p> <p>\u2462\u8bbe\u5907\u72b6\u6001\uff1a\u7b49\u5f85/\u4e0d\u7b49\u5f85\uff0c\u5fd9 \u3001\u95f2</p> <p>\u2463\u6307\u5411\u63a7\u5236\u5668\u8868\u7684\u6307\u9488</p> <p>\u2464\u91cd\u590d\u6267\u884c\u7684\u6b21\u6570\u6216\u65f6\u95f4 </p> <p>(2)\u63a7\u5236\u5668\u63a7\u5236\u8868COCT</p> <p>\u2460\u63a7\u5236\u5668\u6807\u793a\u7b26</p> <p>\u2461\u63a7\u5236\u5668\u72b6\u6001</p> <p>\u2462\u4e0e\u63a7\u5236\u5668\u76f8\u8fde\u63a5\u7684\u901a\u9053\u8868\u6307\u9488</p> <p>\u2463\u63a7\u5236\u5668\u961f\u5217\u7684\u961f\u9996\u6307\u9488  </p> <p>(3)\u901a\u9053\u63a7\u5236\u8868CHCT</p> <p>\u2460\u901a\u9053\u6807\u793a\u7b26</p> <p>\u2461\u901a\u9053\u72b6\u6001</p> <p>\u2462\u4e0e\u901a\u9053\u8fde\u63a5\u7684\u63a7\u5236\u5668\u8868\u9996\u5740</p> <p>\u2463\u901a\u9053\u961f\u5217\u7684\u961f\u9996\u6307\u9488</p> <p>(4)\u7cfb\u7edf\u8bbe\u5907\u8868SDT</p> <p></p> <p>(5)\u8bbe\u5907\u5206\u914d\u4e0e\u6570\u636e\u7ed3\u6784</p> <p></p> <p>2\u3001\u8bbe\u5907\u5206\u914d\u65f6\u5e94\u8003\u8651\u7684\u82e5\u5e72\u56e0\u7d20</p> <p>(1)\u8bbe\u5907\u7684\u56fa\u6709\u5c5e\u6027</p> <p>\u2460\u72ec\u5360\u8bbe\u5907</p> <p>\u2461\u5171\u4eab\u8bbe\u5907</p> <p>\u2462\u865a\u62df\u8bbe\u5907</p> <p>(2)\u8bbe\u5907\u5206\u914d\u7b97\u6cd5</p> <p>\u2460\u5148\u6765\u5148\u670d\u52a1</p> <p>\u2461\u4f18\u5148\u7ea7\u9ad8\u8005\u4f18\u5148</p> <p>(3)\u8bbe\u5907\u5206\u914d\u4e2d\u7684\u5b89\u5168\u6027</p> <p>\u2460\u5b89\u5168\u5206\u914d\u65b9\u5f0f</p> <p>\u2461\u4e0d\u5b89\u5168\u5206\u914d\u65b9\u5f0f</p> <p>3\u3001\u8bbe\u5907\u72ec\u7acb\u6027</p> <p>(1)\u8bbe\u5907\u72ec\u7acb\u6027\u7684\u6982\u5ff5</p> <p>\u8bbe\u5907\u72ec\u7acb\u6027\u4e5f\u79f0\u8bbe\u5907\u65e0\u5173\u6027\uff0c\u5176\u57fa\u672c\u542b\u4e49\u662f\uff1a \u5e94\u7528\u7a0b\u5e8f\u72ec\u7acb\u4e8e\u5177\u4f53\u4f7f\u7528\u7684\u7269\u7406\u8bbe\u5907</p> <p>(2)\u5b9e\u73b0\u8bbe\u5907\u72ec\u7acb\u6027\u5e26\u6765\u7684\u597d\u5904</p> <p>\u2460\u7528\u6237\u7a0b\u5e8f\u4e0e\u7269\u7406\u7684\u5916\u56f4\u8bbe\u5907\u65e0\u5173\uff0c\u7cfb\u7edf\u589e\u51cf\u6216\u53d8\u66f4\u5916\u56f4\u8bbe\u5907\u65f6\u4e0d\u9700\u8981\u4fee\u6539\u5e94\u7528\u7a0b\u5e8f\u3002</p> <p>\u2461\u6613\u4e8e\u5904\u7406\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u7684\u6545\u969c\u3002</p> <p>\u903b\u8f91\u8bbe\u5907\u8868\uff1a\u4e3a\u4e86\u5b9e\u73b0\u8bbe\u5907\u7684\u72ec\u7acb\u6027\uff0c\u7cfb\u7edf\u5fc5\u987b\u80fd\u591f\u5c06\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6240\u4f7f\u7528\u7684\u903b\u8f91\u8bbe\u5907\u540d\u6620\u5c04\u4e3a\u7269\u7406\u8bbe\u5907\u540d\u3002\u53ef\u4ee5\u4f7f  \u7528\u903b\u8f91\u8bbe\u5907\u8868\u5b9e\u73b0\u8be5\u6620\u5c04\u529f\u80fd\u3002</p> <p>4\u3001\u72ec\u5360\u8bbe\u5907\u7684\u5206\u914d\u7a0b\u5e8f</p> <p>\u5bf9\u4e8e\u5177\u6709I/O\u901a\u9053\u7684\u7cfb\u7edf\uff0c\u5728\u8fdb\u7a0b\u63d0\u51faI/O\u8bf7\u6c42\u540e\uff0c\u7cfb\u7edf\u7684\u8bbe\u5907\u5206\u914d\u7a0b\u5e8f\u53ef\u6309\u4e0b\u8ff0\u6b65\u9aa4\u4f9d\u6b21\u8fdb\u884c\u8bbe\u5907\u5206\u914d\uff1a</p> <p>(1)\u5206\u914d\u8bbe\u5907  (2)\u5206\u914d\u63a7\u5236\u5668  (3)\u5206\u914d\u901a\u9053</p> <p>5\u3001SPOOLing\u7684\u6982\u5ff5</p> <p>\u5728\u591a\u9053\u7a0b\u5e8f\u73af\u5883\u4e0b\uff0c\u5229\u7528\u4e00\u9053\u7a0b\u5e8f\u6765\u6a21\u62df\u8131\u673a\u8f93\u5165\u65f6\u7684\u5916\u56f4\u63a7\u5236\u673a\u7684\u529f\u80fd\uff0c\u628a\u4f4e\u901fI/O\u8bbe\u5907\u4e0a\u7684\u6570\u636e\u4f20\u9001\u5230\u9ad8\u901f\u78c1\u76d8\u4e0a\uff1b\u518d\u5229\u7528\u53e6\u4e00\u9053\u7a0b\u5e8f\u6765\u6a21\u62df\u8131\u673a\u8f93\u51fa\u65f6\u5916\u56f4\u63a7\u5236\u673a\u7684\u529f\u80fd\uff0c\u628a\u6570\u636e\u4ece\u78c1\u76d8\u4f20\u9001\u5230\u4f4e\u901f\u8f93\u51fa\u8bbe\u5907\u4e0a\u3002\u8fd9\u79cd\u5728\u8054\u673a\u60c5\u51b5\u4e0b\u5b9e\u73b0\u7684\u540c\u65f6\u5916\u56f4\u64cd\u4f5c\u79f0\u4e3aSpooling(Simultaneous Periheral Operations On-Line)\u3002</p> <p>1\uff09SPOOLing\u7cfb\u7edf\u7684\u7ec4\u6210</p> <p></p> <p>2\uff09\u5229\u7528SPOOLing\u6280\u672f\u5b9e\u73b0\u5171\u4eab\u6253\u5370\u673a</p> <p>\u5f53\u7528\u6237\u8fdb\u7a0b\u63d0\u51fa\u6253\u5370\u8bf7\u6c42\u65f6\uff0cSPOOling\u7cfb\u7edf\u5148\u4e3a\u7528\u6237\u505a\u4e24\u4ef6\u4e8b\uff1a</p> <p>\u7b2c\u4e00\u6b65\uff1a\u7531\u8f93\u51fa\u8fdb\u7a0b\u5728\u8f93\u51fa\u4e95\u4e2d\u4e3a\u4e4b\u7533\u8bf7\u4e00\u7a7a\u95f2\u76d8\u5757\u533a\uff0c\u5e76\u5c06\u8981\u6253\u5370\u7684\u6570\u636e\u9001\u5165\u5176\u4e2d\u3002</p> <p>\u7b2c\u4e8c\u6b65\uff1a\u8f93\u51fa\u8fdb\u7a0b\u518d\u4e3a\u7528\u6237\u7533\u8bf7\u3001\u5e76\u586b\u5199\u4e00\u5f20\u7528\u6237\u8bf7\u6c42\u6253\u5370\u8868\uff0c\u5c06\u8be5\u8868\u6302\u5230\u8bf7\u6c42\u6253\u5370\u961f\u5217\u4e0a\u3002\u5f53\u6253\u5370\u673a\u7a7a\u95f2\u65f6\uff0c\u51fa\u8fdb\u7a0b\u5b8c\u6210\u4ee5\u4e0b\u52a8\u4f5c\u3002</p> <p>\u2460\u4ece\u8bf7\u6c42\u6253\u5370\u961f\u5217\u961f\u9996\u53d6\u4e00\u5f20\u8bf7\u6c42\u6253\u5370\u8868\u3002</p> <p>\u2461\u5c06\u6253\u5370\u6570\u636e\u4ece\u8f93\u51fa\u4e95\u9001\u6253\u5370\u673a\u7f13\u51b2\u533a(\u8f93\u51fa\u7f13\u51b2\u533a)\u3002</p> <p>\u2462\u6253\u5370\u3002</p> <p>\u2463\u82e5\u6253\u5370\u5b8c\u8f6c\u7b2c\u2460\u6b65\uff0c\u53d6\u4e0b\u4e00\u4e2a\u6253\u5370\u8bf7\u6c42\u8868\u3002</p> <p>3\uff09SPOOLing\u7684\u7279\u70b9</p> <p>\u2460\u63d0\u9ad8I/O\u901f\u5ea6</p> <p>\u2461\u5c06\u72ec\u5360\u8bbe\u5907\u6539\u9020\u4e3a\u5171\u4eab\u8bbe\u5907</p> <p>\u2462\u5b9e\u73b0\u4e86\u865a\u62df\u8bbe\u5907\u529f\u80fd</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#5-io","title":"5 I/O\u8f6f\u4ef6\u539f\u7406","text":"<p>1\u3001\u8bbe\u5907\u7ba1\u7406\u8f6f\u4ef6\u7684\u5c42\u6b21\u7ed3\u6784</p> <p></p> <p>\u8bbe\u5907\u65e0\u5173\u5c42\u8f6f\u4ef6\u4e3b\u8981\u5b9e\u73b0\u54ea\u4e9b\u529f\u80fd\uff1f</p> <p>\u4e3b\u8981\u5b9e\u73b0\u7f13\u51b2\u7ba1\u7406\u3001\u8bbe\u5907\u5206\u914d\u3001\u8bbe\u5907\u7684\u72ec\u7acb\u6027\u548c\u865a\u62df\u8bbe\u5907\u7b49\u529f\u80fd\u3002</p> <p>2\u3001\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f</p> <p>I/O\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u4f5c\u7528\u662f\u5c06\u53d1\u51faI/O\u8bf7\u6c42\u800c\u88ab\u963b\u585e\u7684\u8fdb\u7a0b\u5524\u9192\u3002\u7528\u6237\u8fdb\u7a0b\u5728\u53d1\u51faI/O\u8bf7\u6c42\u540e\uff0c\u7531\u4e8e\u7b49\u5f85I/O\u800c\u88ab\u963b\u585e\u3002CPU\u8f6c\u53bb\u6267\u884c\u5176\u5b83\u4efb\u52a1\uff0c\u5f53I/O\u4efb\u52a1\u5b8c\u6210\uff0c\u63a7\u5236\u5668\u5411CPU\u53d1\u4e2d\u65ad\u8bf7\u6c42\u4fe1\u53f7\uff0cCPU\u8f6c\u53bb\u6267\u884c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u7531\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5524\u9192\u88ab\u963b\u585e\u7684\u7528\u6237\u8fdb\u7a0b\u3002</p> <p>3\u3001\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f</p> <p>\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u662fI/O\u8fdb\u7a0b\u4e0e\u8bbe\u5907\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u7a0b\u5e8f\u3002\u5176\u4e3b\u8981\u4efb\u52a1\u662f\u63a5\u6536\u4e0a\u5c42\u8f6f\u4ef6\u53d1\u6765\u7684\u62bd\u8c61\u8981\u6c42\uff0c\u518d\u628a\u5b83\u8f6c\u6362\u6210\u5177\u4f53\u8981\u6c42\u540e\u53d1\u9001\u7ed9\u8bbe\u5907\u63a7\u5236\u5668\uff0c\u542f\u52a8\u8bbe\u5907\u53bb\u6267\u884c\u3002\u6b64\u5916\uff0c\u5b83\u4e5f\u5c06\u7531\u8bbe\u5907\u63a7\u5236\u5668\u53d1\u6765\u7684\u4fe1\u53f7\u4f20\u9001\u7ed9\u4e0a\u5c42\u8f6f\u4ef6\u3002\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u5305\u62ec\u4e86\u6240\u6709\u4e0e\u8bbe\u5907\u76f8\u5173\u7684\u4ee3\u7801,\u662f\u6570\u636e\u7ed3\u6784\u4e0e\u51fd\u6570\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u53ea\u5904\u7406\u4e00\u79cd\u8bbe\u5907\uff0c\u6216\u8005\u4e00\u7c7b\u7d27\u5bc6\u76f8\u5173\u7684\u8bbe\u5907\u3002\u53ea\u6709\u9a71\u52a8\u7a0b\u5e8f\u624d\u77e5\u9053\u67d0\u7c7b\u8bbe\u5907\u63a7\u5236\u5668\u6709\u591a\u5c11\u4e2a\u5bc4\u5b58\u5668\u53ca\u5b83\u4eec\u7684\u7528\u9014\u3002</p> <p>1\uff09\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u5de5\u4f5c\u6d41\u7a0b</p> <p>\u9a71\u52a8\u7a0b\u5e8f\u63a5\u6536CPU\u7684I/O\u547d\u4ee4--\u5c06\u63a5\u6536\u5230\u7684\u62bd\u8c61I/O\u547d\u4ee4\u8f6c\u5316\u4e3a\u8bbe\u5907\u63a7\u5236\u5668\u80fd\u6267\u884c\u7684\u547d\u4ee4\u5e8f\u5217--\u5411\u63a7\u5236\u5668\u7684\u5bc4\u5b58\u5668\u53d1\u9001\u8fd9\u4e9b\u547d\u4ee4\u5e8f\u5217</p> <p>2\uff09\u78c1\u76d8\u9a71\u52a8\u7a0b\u5e8f</p> <p>\u5f53\u6709\u4e00\u4e2a\u8bfb\u7b2cN\u5757\u78c1\u76d8\u7684\u8bf7\u6c42\u65f6\uff0c\u78c1\u76d8\u9a71\u52a8\u7a0b\u5e8f\u8981\u5b8c\u6210\u4ee5\u4e0b\u7684\u5de5\u4f5c\uff1a</p> <p>\u2460\u8ba1\u7b97\u51fa\u6240\u8bf7\u6c42\u5757\u7684\u7269\u7406\u5730\u5740\u3002</p> <p>\u2461\u68c0\u67e5\u9a71\u52a8\u5668\u7535\u673a\u662f\u5426\u5728\u8fd0\u8f6c\u3002</p> <p>\u2462\u68c0\u67e5\u78c1\u5934\u81c2\u662f\u5426\u5b9a\u4f4d\u5728\u6b63\u786e\u7684\u67f1\u9762\u3002</p> <p>\u2463\u786e\u5b9a\u9700\u8981\u54ea\u4e9b\u63a7\u5236\u5668\u547d\u4ee4\u53ca\u547d\u4ee4\u7684\u6267\u884c\u6b21\u5e8f\u3002</p> <p>\u2464\u5411\u8bbe\u5907\u63a7\u5236\u5668\u7684\u8bbe\u5907\u63a7\u5236\u5bc4\u5b58\u5668\u4e2d\u5199\u5165\u547d\u4ee4\u3002</p> <p>\u2465\u963b\u585e\u8fdb\u7a0b\uff0cI/O\u5b8c\u6210\u540e\u5411\u4e0a\u5c42\u8f6f\u4ef6\u4f20\u9001\u6570\u636e\u5e76\u5524\u9192\u8fdb\u7a0b\u3002 </p> <p>4\u3001\u78c1\u76d8\u7ba1\u7406</p> <p>1\uff09\u78c1\u76d8\u8c03\u5ea6</p> <p>\u78c1\u76d8\u8c03\u5ea6\u7b97\u6cd5\u7528\u6765\u4ece\u78c1\u76d8\u8bf7\u6c42\u961f\u5217\u4e2d\u9009\u62e9\u4e00\u4e2a\u5f53\u524d\u8bbf\u95ee\u78c1\u76d8\u7684\u4efb\u52a1\u3002</p> <p>(1) FCFS\u8c03\u5ea6</p> <p>\u5148\u5230\u5148\u670d\u52a1</p> <p>(2) SSTF\u8c03\u5ea6</p> <p>\u6700\u77ed\u8def\u5f84</p> <p>(3) SCAN</p> <p>\u4ece\u5916\u5411\u91cc--\u4ece\u91cc\u5411\u5916--\u4ece\u5916\u5411\u91cc--\u4ece\u91cc\u5411\u5916</p> <p>(4) C-SCAN</p> <p>\u4ece\u5916\u5411\u91cc--\u4ece\u5916\u5411\u91cc</p> <p>(5) NStepSCAN\u548cFSCAN\u7b97\u6cd5\u3001</p> <p>NStepSCAN\u7b97\u6cd5\u662f\u5c06\u78c1\u76d8\u8bf7\u6c42\u961f\u5217\u5206\u4e3aN\u4e2a\u78c1\u76d8\u8bf7\u6c42\u961f\u5217\uff0c\u6bcf\u4e2a\u961f\u5217\u6309\u7167FSFC\u539f\u5219\u8fdb\u884c\u8c03\u5ea6\u3002</p> <p>FSCAN\u662f\u4e24\u4e2a\u961f\u5217\u7684NStepSCAN\u3002</p> <p>\u6ce8\uff1aSCAN\u3001SSTF\u548cCSCAN\u4e09\u79cd\u626b\u63cf\u65b9\u6cd5\u5747\u6709\u53ef\u80fd\u51fa\u73b0\u9965\u997f\u73b0\u8c61\u3002</p> <p>\u78c1\u76d8\u7c98\u7740\u73b0\u8c61</p> <p>\u63d0\u9ad8\u78c1\u76d8I/O\u901f\u5ea6\u7684\u65b9\u6cd5</p> <p>\uff081\uff09\u63d0\u524d\u8bfb</p> <p>\uff082\uff09\u5ef6\u8fdf\u5199</p> <p>\uff083\uff09\u4f18\u5316\u7269\u7406\u5757\u7684\u5e03\u5c40</p> <p>\uff084\uff09\u865a\u62df\u78c1\u76d8</p> <p>\uff085\uff09\u78c1\u76d8\u9ad8\u901f\u7f13\u5b58</p>"},{"location":"course/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#6_3","title":"6 \u9898\u76ee","text":"<p>1\u3001\u8bbe\u7f6e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u4e3b\u8981\u76ee\u7684\u662f( )\u3002 </p> <p>A\uff0e\u8282\u7701\u5916\u5b58\u7a7a\u95f4B\uff0e\u8282\u7701\u5185\u5b58\u7a7a\u95f4C\uff0e\u52a0\u5feb\u6587\u4ef6\u7684\u68c0\u7d22\u901f\u5ea6D\uff0e\u52a0\u5feb\u6587\u4ef6\u7684\u8bfb/\u5199\u901f\u5ea6</p> <p>C\u8bbe\u7f6e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u53ef\u4ee5\u51cf\u5c11\u8bbf\u95ee\u6587\u4ef6\u65f6\u8bfb\u53d6\u78c1\u76d8\u7d22\u5f15\u5757\u7684\u4e2a\u6570\uff0c\u4ece\u800c\u52a0\u5feb\u6587\u4ef6\u7684\u68c0\u7d22\u901f\u5ea6\u3002</p> <p>2\u3001\u5728\u7cfb\u7edf\u5185\u5b58\u4e2d\u8bbe\u7f6e\u78c1\u76d8\u7f13\u51b2\u533a\u7684\u4e3b\u8981\u76ee\u7684\u662f\u4ec0\u4e48</p> <p>\u5728\u7cfb\u7edf\u5185\u5b58\u4e2d\u8bbe\u7f6e\u78c1\u76d8\u7f13\u51b2\u533a\u7684\u4e3b\u8981\u76ee\u7684\u662f\u51cf\u5c11\u78c1\u76d8I/O\u6b21\u6570\u3002\u78c1\u76d8\u7f13\u51b2\u533a\u662f\u786c\u76d8\u4e0e\u5916\u90e8\u603b\u7ebf\u4ea4\u6362\u6570\u636e\u7684\u573a\u6240\uff0c\u5b83\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u5927\u5927\u8d85\u8fc7\u78c1\u76d8\u7f13\u5b58\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u3002</p> <p>3\u3001\u73b0\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a10 GB\u7684\u78c1\u76d8\u5206\u533a\uff0c\u78c1\u76d8\u7a7a\u95f4\u4ee5\u7c07\uff08Cluster\uff09\u4e3a\u5355\u4f4d\u8fdb\u884c\u5206\u914d\uff0c\u7c07\u7684\u5927\u5c0f\u4e3a4 KB\uff0c\u82e5\u91c7\u7528\u4f4d\u56fe\u6cd5\u7ba1\u7406\u8be5\u5206\u533a\u7684\u7a7a\u95f2\u7a7a\u95f4\uff0c\u5373\u7528\u4e00\u4f4d\uff08bit\uff09\u6807\u8bc6\u4e00\u4e2a\u7c07\u662f\u5426\u88ab\u5206\u914d\uff0c\u5219\u5b58\u653e\u8be5\u4f4d\u56fe\u6240\u9700\u7c07\u7684\u4e2a\u6570\u4e3a</p> <p>10GB/4KB=10*1024*1024/4=2621440/8/1024=320KB=80\u7c07</p> <p>4\u3001\u5047\u8bbe\u78c1\u5934\u5f53\u524d\u4f4d\u4e8e\u7b2c105\u9053\uff0c\u6b63\u5728\u5411\u78c1\u9053\u5e8f\u53f7\u589e\u52a0\u7684\u65b9\u5411\u79fb\u52a8\u3002\u73b0\u6709\u4e00\u4e2a\u78c1\u9053\u8bbf\u95ee\u8bf7\u6c42\u5e8f\u5217\u4e3a35, 45, 12, 68, 110, 180, 170, 195\uff0c\u91c7\u7528SCAN\u8c03\u5ea6\uff08\u7535\u68af\u8c03\u5ea6\uff09\u7b97\u6cd5\u5f97\u5230\u7684\u78c1\u9053\u8bbf\u95ee\u5e8f\u5217\u662f\uff1f</p> <p>110-170-180-195-68-45-35-12</p> <p>5\u3001\u5728\u91c7\u7528\u4e2d\u65ad\u63a7\u5236\u65b9\u5f0f\u8fdb\u884c\u8f93\u5165\u8f93\u51fa\u65f6\uff0c\u8fdb\u7a0b\u4ece\u63d0\u51faI/O\u8bf7\u6c42\u5230\u672c\u6b21I/O\u7ed3\u675f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8981\u6267\u884c\u54ea\u4e9b\u7a0b\u5e8f\uff1f</p> <p>\u7b54\uff1a\u6267\u884c\u7cfb\u7edf\u8c03\u7528\u7a0b\u5e8f\u3001\u8bbe\u5907\u5206\u914d\u7a0b\u5e8f\u3001\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u3001\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3001\u8fdb\u7a0b\u8c03\u5ea6\u7a0b\u5e8f\u3002</p> <p>6\u3001Ext2\u6587\u4ef6\u7cfb\u7edf\u7684\u4e00\u4e2ai\u7ed3\u70b9\u5305\u62ec15\u4e2a\u5730\u5740\u9879\uff0c\u6bcf\u4e2a\u5730\u5740\u9879\u5b5832\u4f4d\u5730\u5740\uff084\u4e2a\u5b57\u8282\uff09\uff0c\u5176\u4e2d12\u4e2a\u5730\u5740\u9879\u5b58\u76f4\u63a5\u5730\u5740\uff1b\u4e00\u4e2a\u5730\u5740\u9879\u5b58\u4e00\u6b21\u95f4\u63a5\u5730\u5740\uff1b\u4e00\u4e2a\u5730\u5740\u9879\u5b58\u4e8c\u6b21\u95f4\u63a5\u5730\u5740\uff0c\u4e00\u4e2a\u5730\u5740\u9879\u5b58\u4e09\u6b21\u95f4\u63a5\u5730\u5740\u3002\u5f53\u4e00\u4e2a\u903b\u8f91\u5757\u5927\u5c0f\u4e3a4KB\u65f6\uff0cEXT2\u80fd\u7ba1\u7406\u7684\u6587\u4ef6\u7684\u6700\u5927\u957f\u5ea6\u662f\u591a\u5c11\uff1f</p> <p>\u7b54\uff1a\u9996\u5148\uff0c12\u4e2a\u5730\u5740\u9879\u5b58\u653e\u7684\u662f\u78c1\u76d8\u5757\u53f7\uff0c\u6240\u4ee5\u57fa\u672c\u7684\u78c1\u76d8\u5730\u5740\u53ef\u8868\u793a\u7684\u6587\u4ef6\u5927\u5c0f\u4e3a12\u00d74KB\u3002\u5176\u6b21\uff0c\u6bcf\u4e2a\u78c1\u76d8\u5757\u5927\u5c0f\u4e3a4KB\uff0c\u6bcf\u4e2a\u5730\u5740\u9879\u53604\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5\uff0c\u6bcf\u4e2a\u78c1\u76d8\u5757\u4e2d\u53ef\u4ee5\u5b58\u653e1024\u4e2a\u5730\u5740\u9879\uff0c\u8fd9\u6837\uff0c\u4e00\u6b21\u95f4\u63a5\u5757\u53ef\u4ee5\u8868\u793a\u7684\u6587\u4ef6\u5927\u5c0f\u4e3a1024\u00d74KB\u3002\u4f9d\u6b21\u7c7b\u63a8\uff0c\u4e8c\u6b21\u95f4\u63a5\u5757\u53ef\u4ee5\u8868\u793a\u7684\u6587\u4ef6\u5927\u5c0f\u4e3a1024\u00d71024\u00d74KB\uff0c\u4e09\u6b21\u95f4\u63a5\u5757\u53ef\u4ee5\u8868\u793a\u7684\u6587\u4ef6\u5927\u5c0f\u4e3a1024\u00d71024\u00d71024\u00d74KB\u3002\u4e00\u4e2a\u6587\u4ef6\u7684\u6700\u5927\u957f\u5ea6\u4e3a12\u00d74KB+1024\u00d71024\u00d74KB+1024\u00d71024\u00d71024\u00d74KB</p>"},{"location":"course/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/","title":"\u8f6f\u4ef6\u5de5\u7a0b","text":""},{"location":"course/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_1","title":"\u8f6f\u4ef6\u5de5\u7a0b\u590d\u4e60","text":""},{"location":"course/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_2","title":"\u7b2c\u4e00\u7ae0 \u8f6f\u4ef6\u5de5\u7a0b\u5b66\u6982\u8ff0","text":"<p>\u8f6f\u4ef6\u5b9a\u4e49</p> <p>Software = Program + Data + Document </p> <p>\u8f6f\u4ef6(software)\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u4e0e\u786c\u4ef6(hardware)\u76f8\u4e92\u4f9d\u5b58\u7684\uff0c\u53e6\u4e00\u90e8\u5206\uff0c\u5b83\u5305\u62ec\u7a0b\u5e8f(program)\u3001\u76f8\u5173\u6570\u636e(data)\u53ca\u5176\u8bf4\u660e\u6587\u6863 (document)\u3002 </p> <p>\u7a0b\u5e8f\uff1a\u662f\u6309\u4e8b\u5148\u8bbe\u8ba1\u7684\u529f\u80fd\u548c\u6027\u80fd\u8981\u6c42\u6267\u884c\u7684\u6307\u4ee4\u5e8f\u5217\uff1b </p> <p>\u6570\u636e\uff1a\u662f\u4f7f\u7a0b\u5e8f\u80fd\u6b63\u5e38\u64cd\u7eb5\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\uff1b </p> <p>\u6587\u6863\uff1a\u662f\u4e0e\u7a0b\u5e8f\u5f00\u53d1\u3001\u7ef4\u62a4\u548c\u4f7f\u7528\u6709\u5173\u7684\u56fe\u6587\u6750\u6599\u3002</p> <p>\u8f6f\u4ef6\u7684\u7279\u70b9</p> <ol> <li> <p>\u8f6f\u4ef6\u662f\u4e00\u79cd\u903b\u8f91\u5b9e\u4f53\uff0c\u5177\u6709\u62bd\u8c61\u6027\uff1b </p> </li> <li> <p>\u8f6f\u4ef6\u662f\u5f00\u53d1\u7684\uff0c\u800c\u4e0d\u662f\u5236\u9020\u7684\uff1b </p> </li> <li> <p>\u5728\u8f6f\u4ef6\u7684\u8fd0\u884c\u548c\u4f7f\u7528\u671f\u95f4\uff0c\u6ca1\u6709\u786c\u4ef6\u90a3\u6837\u7684\u673a\u68b0\u78e8\u635f\uff0c\u8001\u5316\u95ee\u9898;</p> </li> <li>\u8f6f\u4ef6\u7684\u5f00\u53d1\u81f3\u4eca\u5c1a\u672a\u5b8c\u5168\u6446\u8131\u624b\u5de5\u4f5c\u574a\u5f0f\u7684\u5f00\u53d1\u65b9\u5f0f\uff0c\u751f\u4ea7\u6548\u7387\u4f4e\uff1b</li> <li>\u8f6f\u4ef6\u5177\u6709\u590d\u6742\u6027\uff1b</li> <li>\u8f6f\u4ef6\u7684\u6210\u672c\u76f8\u5f53\u6602\u8d35\uff1b</li> <li>\u8f6f\u4ef6\u5bf9\u786c\u4ef6\u548c\u73af\u5883\u6709\u7740\u4e0d\u540c\u7a0b\u5ea6\u7684\u4f9d\u8d56\u6027\uff1b</li> <li>\u8f6f\u4ef6\u5de5\u4f5c\u7275\u6d89\u5230\u5f88\u591a\u793e\u4f1a\u56e0\u7d20\u3002</li> </ol> <p>\u8f6f\u4ef6\u5de5\u7a0b\u4e09\u8981\u7d20</p> <ol> <li>\u8f6f\u4ef6\u5de5\u7a0b\u7684\u65b9\u6cd5\uff1a\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u63d0\u4f9b\u201c\u5982\u4f55\u505a\u201d\u7684\u6280\u672f\uff0c\u5f53\u524d\u6709\u4f20\u7edf\u7684\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u548c\u9762\u5411\u5bf9\u8c61\u7684\u8f6f\u4ef6\u5f00 \u53d1\u65b9\u6cd5\u3002</li> <li> <p>\u8f6f\u4ef6\u5de5\u7a0b\u7684\u8fc7\u7a0b\uff1a\u662f\u7ba1\u7406\u548c\u63a7\u5236\u4ea7\u54c1\u8d28\u91cf\u7684\u5173\u952e\uff0c\u5b9e\u73b0\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u548c\u9884\u7b97\u5185\u5f00\u53d1\u9ad8\u8d28\u91cf\u8f6f\u4ef6\u7684\u76ee\u6807\u3002</p> </li> <li> <p>\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5de5\u5177\uff1a\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u65b9\u6cd5 \u63d0\u4f9b\u4e86\u81ea\u52a8\u7684\u6216\u534a\u81ea\u52a8\u7684\u8f6f\u4ef6\u652f\u6491 \u73af\u5883\uff0c\u8f85\u52a9\u8f6f\u4ef6\u5f00\u53d1\u4efb\u52a1\u7684\u5b8c\u6210\u3002 CASE</p> </li> </ol> <p>\u8f6f\u4ef6\u5de5\u7a0b\u5c42\u6b21\uff1a\u8d28\u91cf\u7126\u70b9&gt;\u8fc7\u7a0b&gt;\u65b9\u6cd5&gt;\u5de5\u5177</p> <p>\u55b7\u6cc9\u6a21\u578b</p> <p>\u55b7\u6cc9\u6a21\u578b\u662f\u4e00\u79cd\u4ee5\u7528\u6237\u9700\u6c42\u4e3a\u52a8\u529b\uff0c \u4ee5\u5bf9\u8c61\u4e3a\u9a71\u52a8\u7684\u6a21\u578b\uff0c\u4e3b\u8981\u7528\u4e8e\u63cf\u8ff0\u9762\u5411\u5bf9\u8c61\u7684\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u3002 </p> <p>\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u81ea\u4e0b\u800c\u4e0a\u5468\u671f\u7684\u5404\u9636\u6bb5\u662f\u76f8\u4e92\u91cd\u53e0\u548c\u591a\u6b21\u53cd\u590d\u7684\uff0c\u5c31\u50cf\u6c34\u55b7\u4e0a\u53bb\u53c8\u53ef\u4ee5\u843d\u4e0b\u6765\uff0c\u7c7b\u4f3c\u4e00\u4e2a\u55b7\u6cc9\u3002 \u5404\u4e2a\u5f00\u53d1\u9636\u6bb5\u6ca1\u6709\u7279\u5b9a\u7684\u6b21\u5e8f\u8981\u6c42\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ea4\u4e92\u8fdb\u884c\uff0c\u53ef\u4ee5\u5728\u67d0\u4e2a\u5f00\u53d1\u9636\u6bb5\u4e2d\u968f\u65f6\u8865\u5145\u5176\u4ed6\u4efb\u4f55\u5f00\u53d1\u9636\u6bb5\u4e2d\u7684\u9057\u6f0f\u3002</p> <p>\u4f18\u70b9: \u8be5\u6a21\u578b\u7684\u5404\u4e2a\u9636\u6bb5\u6ca1\u6709\u660e\u663e\u7684\u754c\u9650\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u540c\u6b65\u8fdb\u884c\u5f00 \u53d1\uff0c\u53ef\u4ee5\u63d0\u9ad8\u8f6f\u4ef6\u9879\u76ee\u5f00\u53d1\u6548\u7387\uff0c\u8282\u7701\u5f00\u53d1\u65f6\u95f4\uff0c\u9002\u5e94\u4e8e\u9762\u5411\u5bf9\u8c61 \u7684\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u3002 </p> <p>\u7f3a\u70b9\uff1a \u7531\u4e8e\u8be5\u6a21\u578b\u5728\u5404\u4e2a\u5f00\u53d1\u9636\u6bb5\u662f\u91cd\u53e0\u7684\uff0c\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9700\u8981\u5927\u91cf \u7684\u5f00\u53d1\u4eba\u5458\uff0c\u56e0\u6b64\u4e0d\u5229\u4e8e\u9879\u76ee\u7684\u7ba1\u7406\u3002 \u8be5\u6a21\u578b\u8981\u6c42\u4e25\u683c\u7ba1\u7406\u6587\u6863\uff0c\u4f7f\u5f97\u5ba1\u6838\u7684\u96be\u5ea6\u52a0\u5927\uff0c\u5c24\u5176\u662f\u9762\u5bf9 \u53ef\u80fd\u968f\u65f6\u52a0\u5165\u5404\u79cd\u4fe1\u606f\u3001\u9700\u6c42\u4e0e\u8d44\u6599\u7684\u60c5\u51b5\u3002</p> <p>\u8f6f\u4ef6\u5de5\u7a0b\u4e0e\u4e00\u822c\u5de5\u7a0b\u7684\u5dee\u5f02</p> <p>\u8f6f\u4ef6\u662f\u903b\u8f91\u4ea7\u54c1\u800c\u4e0d\u662f\u5b9e\u7269\u4ea7\u54c1 \u3001\u8f6f\u4ef6\u7684\u529f\u80fd\u4f9d\u8d56\u4e8e\u786c\u4ef6\u548c\u8f6f\u4ef6\u7684\u8fd0\u884c\u73af\u5883\u4ee5 \u53ca\u4eba\u4eec\u5bf9\u5b83\u7684\u64cd\u4f5c\u3001\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u590d\u6742\u6027\u3001\u8f6f\u4ef6\u7279\u5f81\uff1a \u529f\u80fd\u7684\u591a\u6837\u6027 \u5b9e\u73b0\u7684\u591a\u6837\u6027 \u80fd\u89c1\u5ea6\u4f4e \u8f6f\u4ef6\u7ed3\u6784\u5408\u7406\u6027\u5dee \u3001\u667a\u529b\u5bc6\u96c6\u53ca\u77e5\u8bc6\u4ea7\u6743\u4fdd\u62a4</p>"},{"location":"course/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_3","title":"\u7b2c\u4e8c\u7ae0 \u53ef\u884c\u6027\u7814\u7a76","text":"<p>\u6570\u636e\u6d41\u56fe\u7684\u5c42\u6b21\u7ed3\u6784</p> <p>\u4e3a\u4e86\u8868\u8fbe\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u7684\u6570\u636e\u52a0\u5de5\u60c5\u51b5\uff0c\u9700\u8981\u91c7\u7528\u5c42\u6b21\u7ed3\u6784\u7684\u6570\u636e\u6d41\u56fe\u3002\u6309\u7167\u7cfb\u7edf\u7684\u5c42\u6b21\u7ed3\u6784\u8fdb\u884c\u9010\u6b65\u5206\u89e3\uff0c\u5e76\u4ee5\u5206\u5c42\u7684\u6570\u636e \u6d41\u56fe\u53cd\u6620\u8fd9\u79cd\u7ed3\u6784\u5173\u7cfb\uff0c\u80fd\u6e05\u695a\u5730\u8868\u8fbe\u548c\u5bb9\u6613\u7406\u89e3\u6574\u4e2a\u7cfb\u7edf\u3002</p> <p>\u5728\u591a\u5c42\u6570\u636e\u6d41\u56fe\u4e2d\uff0c\u9876\u5c42\u6d41\u56fe\u4ec5\u5305\u542b\u4e00\u4e2a\u52a0\u5de5\uff0c\u5b83\u4ee3\u8868\u88ab\u5f00\u53d1\u7cfb\u7edf\u3002\u5b83\u7684\u8f93\u5165\u6d41\u662f\u8be5\u7cfb\u7edf\u7684\u8f93\u5165\u6570\u636e\uff0c\u8f93\u51fa\u6d41\u662f\u7cfb\u7edf\u6240\u8f93\u51fa\u6570\u636e\u3002\u9876\u5c42\u6570\u636e\u6d41\u56fe\u7684\u4f5c\u7528\u5728\u4e8e\u8868\u660e\u88ab\u5f00\u53d1\u7cfb\u7edf\u7684\u8303\u56f4\u4ee5\u53ca\u5b83\u548c\u5468\u56f4\u73af\u5883\u7684\u6570\u636e\u4ea4\u6362\u5173\u7cfb\u3002\u5bf9\u4e8e\u9876\u5c42\u6570\u636e\u6d41\u56fe\u901a\u5e38\u53ef\u4ee5\u4e0d\u8003\u8651\u6570\u636e \u5b58\u50a8\u3002</p> <p>\u5e95\u5c42\u6d41\u56fe\u662f\u6307\u5176\u52a0\u5de5\u4e0d\u9700\u518d\u505a\u5206\u89e3\u7684\u6570\u636e\u6d41\u56fe\uff0c\u5b83\u5904\u5728\u6700\u5e95\u5c42\u3002</p> <p>\u4e2d\u95f4\u5c42\u6d41\u56fe\u5219\u8868\u793a\u5bf9\u5176\u4e0a\u5c42\u7236\u56fe\u7684\u7ec6\u5316\u3002\u5b83\u7684\u6bcf\u4e00\u52a0\u5de5\u53ef\u80fd\u7ee7\u7eed\u7ec6\u5316\uff0c\u5f62\u6210\u5b50\u56fe\u3002</p> <p></p> <p>\u6570\u636e\u5b57\u5178\u5b9e\u4f8b</p> <p></p> <p>\u6570\u636e\u6d41\u56fe\u5b9e\u4f8b</p> <p></p> <p></p> <p></p>"},{"location":"course/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_4","title":"\u7b2c\u56db\u7ae0 \u603b\u4f53\u8bbe\u8ba1","text":"<p>\u7406\u60f3\u6a21\u5757\u7684\u7279\u70b9\uff1a</p> <ol> <li> <p>\u6bcf\u4e2a\u7406\u60f3\u6a21\u5757\u53ea\u89e3\u51b3\u4e00\u95ee\u9898\uff1b</p> </li> <li> <p>\u6bcf\u4e2a\u7406\u60f3\u6a21\u5757\u7684\u529f\u80fd\u90fd\u5e94\u8be5\u660e\u786e\uff0c\u4f7f\u4eba\u5bb9\u6613\u89e3\uff1b</p> </li> <li>\u7406\u60f3\u6a21\u5757\u4e4b\u95f4\u7684\u8054\u7ed3\u5173\u7cfb\u7b80\u5355\uff0c\u5177\u6709\u72ec\u7acb\u6027\uff1b</li> <li>\u7531\u7406\u60f3\u6a21\u5757\u6784\u6210\u7684\u7cfb\u7edf\uff0c\u5bb9\u6613\u4f7f\u4eba\u89e3\u4e8e\u7f16\u7a0b\u6d4b \u8bd5\uff0c\u6613\u4e8e\u4fee\u6539\u548c\u7ef4\u62a4\u3002</li> </ol> <p>\u975e\u76f4\u63a5\u8026\u5408</p> <p>\u4e24\u4e2a\u6a21\u5757\u4e4b\u95f4\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8054\u7cfb\u5b8c\u5168\u662f\u901a\u8fc7\u4e3b \u6a21\u5757\u7684\u63a7\u5236\u548c\u8c03\u7528\u6765\u5b9e\u73b0\u7684\u3002 </p> <p>\u975e\u76f4\u63a5\u8026\u5408\u7684\u6a21\u5757\u72ec\u7acb\u6027\u6700\u5f3a\u3002</p> <p>\u5916\u90e8\u8026\u5408</p> <p>\u4e00\u7ec4\u6a21\u5757\u90fd\u8bbf\u95ee\u540c\u4e00\u5168\u5c40\u7b80\u5355\u53d8\u91cf\u800c\u4e0d\u662f\u540c\u4e00\u5168\u5c40\u6570\u636e\u7ed3\u6784\uff0c \u800c\u4e14\u4e0d\u662f\u901a\u8fc7\u53c2\u6570\u8868\u4f20\u9012\u8be5\u5168\u5c40\u53d8\u91cf\u7684\u4fe1\u606f\uff0c\u5219\u79f0\u4e4b\u4e3a\u5916\u90e8 \u8026\u5408\u3002 </p> <p>\u4f8b\u5982\uff1aC\u8bed\u8a00\u7a0b\u5e8f\u4e2d\u5404\u4e2a\u6a21\u5757\u90fd\u8bbf\u95ee\u88ab\u8bf4\u660e\u4e3aextern\u7c7b\u578b\u7684 \u5916\u90e8\u53d8\u91cf\u3002</p> <p>\u63a7\u5236\u8026\u5408</p> <p>\u63a7\u5236\u8026\u5408\u589e\u52a0\u4e86\u7406\u89e3\u548c\u7f16\u7a0b\u7684\u590d\u6742\u6027\uff0c\u8c03\u7528\u6a21\u5757\u5fc5\u987b\u77e5\u9053\u88ab \u8c03\u6a21\u5757\u7684\u5185\u90e8\u903b\u8f91\uff0c\u589e\u52a0\u4e86\u76f8\u4e92\u4f9d\u8d56\u3002\u53bb\u9664\u6a21\u5757\u95f4\u63a7\u5236\u8026\u5408\u7684\u65b9\u6cd5\uff1a\u5c06\u88ab\u8c03\u7528\u6a21\u5757\u5185\u7684\u5224\u5b9a\u4e0a\u79fb\u5230\u8c03\u7528\u6a21\u5757\u4e2d\u8fdb\u884c\uff1b\u88ab\u8c03\u7528\u6a21\u5757\u5206\u89e3\u6210\u82e5\u5e72\u5355\u4e00\u529f\u80fd\u6a21\u5757\u3002</p> <p>\u516c\u5171\u8026\u5408</p> <p>\u516c\u5171\u8026\u5408\u7684\u590d\u6742\u7a0b\u5ea6\u968f\u8026\u5408\u6a21\u5757\u7684\u4e2a\u6570\u589e\u52a0\u800c\u663e\u8457\u589e\u52a0\u3002\u82e5\u53ea \u662f\u4e24\u6a21\u5757\u95f4\u6709\u516c\u5171\u6570\u636e\u73af\u5883\uff0c\u5219\u516c\u5171\u8026\u5408\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u5373\u677e\u6563\u516c \u5171\u8026\u5408\u548c\u7d27\u5bc6\u516c\u5171\u8026\u5408\u3002</p> <p></p> <p>\u516c\u5171\u8026\u5408\u4f1a\u5f15\u8d77\u4e0b\u5217\u95ee\u9898\uff1a  \u6240\u6709\u516c\u5171\u8026\u5408\u6a21\u5757\u90fd\u4e0e\u67d0\u4e00\u4e2a\u516c\u5171\u6570\u636e\u73af\u5883\u5185\u90e8\u5404\u9879\u7684\u7269\u7406\u5b89 \u6392\u6709\u5173\uff0c\u82e5\u4fee\u6539\u67d0\u4e2a\u6570\u636e\u7684\u5927\u5c0f\uff0c\u5c06\u4f1a\u5f71\u54cd\u5230\u6240\u6709\u7684\u6a21\u5757\uff1b \u65e0\u6cd5\u63a7\u5236\u5404\u4e2a\u6a21\u5757\u5bf9\u516c\u5171\u6570\u636e\u7684\u5b58\u53d6\uff0c\u4e25\u91cd\u5f71\u54cd\u8f6f\u4ef6\u6a21\u5757\u7684\u53ef\u9760\u6027\u548c\u9002\u5e94\u6027\uff1b \u516c\u5171\u6570\u636e\u540d\u7684\u4f7f\u7528\uff0c\u660e\u663e\u964d\u4f4e\u4e86\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u3002</p> <p>\u6a21\u5757\u7684\u4f5c\u7528\u57df\u5e94\u8be5\u5728\u63a7\u5236\u57df\u4e4b\u5185\u8bbe\u8ba1\u539f\u5219 \u8bfe\u672c P100</p> <p>A.\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5185\u90e8\u5b58\u5728\u5224\u65ad\u8c03\u7528\u7684\u6a21\u5757\uff0c\u5b83\u7684\u5224\u65ad\u4f5c\u7528\u7684\u8303 \u56f4\u5e94\u8be5\u662f\u5176\u63a7\u5236\u8303\u56f4\u7684\u4e00\u4e2a\u5b50\u96c6\uff1b </p> <p>B.\u5b58\u5728\u5224\u65ad\u8c03\u7528\u7684\u6a21\u5757\uff0c\u6240\u5728\u5c42\u6b21\u4e0d\u8981\u4e0e\u90a3\u4e9b\u5c5e\u4e8e\u5224\u65ad\u4f5c\u7528\u8303 \u56f4\u7684\u6a21\u5757\u6240\u5728\u7684\u5c42\u6b21\u76f8\u9694\u592a\u8fdc\u3002</p> <p></p> <p>\u6570\u636e\u6d41\u56fe\u8f6c\u8f6f\u4ef6\u7ed3\u6784\u7b2c\u4e8c\u7ea7\u5206\u89e3\u7684\u65b9\u6cd5\u4e3e\u4f8b \u6570\u636e\u6d41\u7a0b\u56fe\u7684\u5212\u5206 \u8bfe\u672cP109</p> <p></p> <p>\u9762\u5411\u6570\u636e\u6d41\u8bbe\u8ba1\u5c0f\u7ed3</p> <ol> <li> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5927\u7cfb\u7edf\uff0c\u5e38\u5e38\u628a\u53d8\u6362\u5206\u6790\u548c\u4e8b\u52a1\u5206\u6790\u5e94\u7528\u5230\u540c\u4e00\u4e2a\u6570 \u636e\u6d41\u56fe\u7684\u4e0d\u540c\u90e8\u5206\uff0c\u7531\u6b64\u5f97\u5230\u7684\u5b50\u7ed3\u6784\u5f62\u6210\u201c\u6784\u4ef6\u201d \uff0c\u53ef\u4ee5\u5229\u7528 \u5b83\u4eec\u6784\u9020\u5b8c\u6574\u7684\u8f6f\u4ef6\u7ed3\u6784\uff1b</p> </li> <li> <p>\u5e94\u8be5\u7075\u6d3b\u8fd0\u7528\uff0c\u5408\u5e76\u4e0d\u5fc5\u8981\u7684\u63a7\u5236\u6a21\u5757\uff0c\u5206\u89e3\u529f\u80fd\u8fc7\u5206\u590d\u6742\u7684 \u63a7\u5236\u6a21\u5757\u3002</p> </li> <li> <p>\u7531\u4e8e\u4efb\u4f55\u8f6f\u4ef6\u7cfb\u7edf\u90fd\u53ef\u4ee5\u7528\u6570\u636e\u6d41\u56fe\u8868\u793a\uff0c\u56e0\u6b64\uff0c\u9762\u5411\u6570\u636e\u6d41 \u7684\u8bbe\u8ba1\u65b9\u6cd5\u7406\u8bba\u4e0a\u53ef\u4ee5\u8bbe\u8ba1\u4efb\u4f55\u8f6f\u4ef6\u7684\u7ed3\u6784\u3002\u901a\u5e38\u6240\u8bf4\u7684\u7ed3\u6784\u5316\u8bbe\u8ba1\u65b9\u6cd5\uff08\u7b80\u79f0SD\u65b9\u6cd5\uff09\u4e5f\u662f\u57fa\u4e8e\u6570\u636e\u6d41\u7684\u8bbe\u8ba1\u65b9\u6cd5\u3002</p> </li> </ol>"},{"location":"course/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_5","title":"\u7b2c\u4e94\u7ae0 \u8be6\u7ec6\u8bbe\u8ba1","text":"<p>\u8be6\u7ec6\u8bbe\u8ba1\u9636\u6bb5\u7684\u4e3b\u8981\u4efb\u52a1</p> <p>\u4e3a\u6bcf\u4e00\u6a21\u5757\u786e\u5b9a\u7b97\u6cd5\u3001\u786e\u5b9a\u6bcf\u4e00\u6a21\u5757\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u3001\u786e\u5b9a\u6a21\u5757\u7684\u5916\u90e8\u63a5\u53e3\u548c\u7528\u6237\u754c\u9762\u3001\u4e3a\u6bcf\u4e00\u6a21\u5757\u8bbe\u8ba1\u4e00\u7ec4\u6d4b\u8bd5\u7528\u4f8b</p> <p>\u4eba\u673a\u754c\u9762\u8bbe\u8ba1\u8fc7\u7a0b</p> <p></p> <p>\u7a0b\u5e8f\u6d41\u7a0b\u56fe\u4f7f\u7528\u4e94\u79cd\u57fa\u672c\u63a7\u5236\u7ed3\u6784</p> <p></p> <p>\u5411\u6570\u636e\u7ed3\u6784\u7684\u8bbe\u8ba1\u65b9\u6cd5</p> <p>\u8be5\u65b9\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\u4f7f\u7a0b\u5e8f\u7ed3\u6784\u4e0e\u95ee\u9898\u7ed3\u6784\u76f8\u5bf9\u5e94\uff0c\u5373\u4e0e\u6570\u636e\u7ed3\u6784\u76f8\u5bf9\u5e94\u3002\u56e0\u6b64\u5b83\u6309\u8f93\u5165\u8f93\u51fa\u4ee5\u53ca\u5185\u90e8\u5b58\u50a8\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u8bbe\u8ba1\uff0c\u628a\u6570\u636e\u7ed3\u6784\u7684\u63cf\u8ff0\u53d8\u6362\u4e3a\u5bf9\u7a0b\u5e8f\u7ed3\u6784\u7684\u63cf\u8ff0\u3002</p> <p>Jackson\u65b9\u6cd5\u8bbe\u8ba1\u5b9e\u4f8b</p> <p>\u95ee\u9898\u63cf\u8ff0</p> <p>\u67d0\u4ed3\u5e93\u5b58\u653e\u591a\u79cd\u96f6\u4ef6\uff08\u5982P1\uff0cP2\uff0c \u2026\u2026\uff09\uff0c\u6bcf\u4e2a\u96f6\u4ef6\u7684\u6bcf\u6b21 \u8fdb\u8d27\u3001\u53d1\u8d27\u90fd\u6709\u4e00\u5f20\u5361\u7247\u4f5c\u51fa\u8bb0\u5f55\uff0c\u6bcf\u6708\u6839\u636e\u8fd9\u6837\u4e00\u53e0\u5361\u7247\u6253\u5370 \u4e00\u5f20\u6708\u62a5\u8868\u3002\u62a5\u8868\u6bcf\u884c\u5217\u51fa\u67d0\u79cd\u96f6\u4ef6\u672c\u6708\u5e93\u5b58\u91cf\u7684\u51c0\u53d8\u5316\u3002\u7528JSD \u65b9\u6cd5\u5bf9\u8be5\u95ee\u9898\u8fdb\u884c\u8bbe\u8ba1\u3002</p> <p></p> <p></p> <p></p> <p></p> <p>\uff083\uff09\u5bfc\u51fa\u7a0b\u5e8f\u7ed3\u6784 </p> <p>\u627e\u51fa\u5bf9\u5e94\u5173\u7cfb\u540e\uff0c\u6839\u636e\u4ee5\u4e0b\u89c4\u5219\u5bfc\u51fa\u7a0b\u5e8f\u7ed3\u6784\uff1a\u5bf9\u4e8e\u8f93\u5165\u6570\u636e \u7ed3\u6784\u4e0e\u8f93\u51fa\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6570\u636e\u5355\u5143\uff0c\u6bcf\u5bf9\u6709\u5bf9\u5e94   \u5173\u7cfb\u7684\u6570\u636e\u5355\u5143 \u6309\u7167\u5b83\u4eec\u6240\u5728\u7684\u5c42\u6b21\uff0c\u5728\u7a0b\u5e8f\u7ed3\u6784\u56fe\u9002\u5f53\u4f4d\u7f6e\u753b\u4e00\u4e2a\u5904\u7406\u6846\uff0c\u65e0\u5bf9\u5e94\u5173\u7cfb\u7684\u6570\u636e\u5355\u5143\uff0c\u5404\u753b\u4e00   \u4e2a\u5904\u7406\u6846\u3002 \u6839\u636e\u4ee5\u4e0a\u89c4\u5219\uff0c\u753b\u51fa\u7684\u7a0b\u5e8f\u7ed3\u6784\u56fe\u5982\u56fe\u6240\u793a\u3002</p> <p></p> <p></p> <p></p> <p></p> <p>\u5728\u5206\u914d\u64cd\u4f5c\u65f6\u6ce8\u610f\uff1a\u4e3a\u4e86\u80fd\u83b7\u5f97\u91cd\u590d\u548c\u9009\u62e9\u7684\u6761\u4ef6\uff0cJackson \u5efa\u8bae\u81f3\u5c11\u8d85\u524d\u8bfb\u4e00\u4e2a\u8bb0\u5f55\uff0c\u4ee5\u4fbf\u4f7f\u5f97\u7a0b\u5e8f\u4e0d\u8bba\u5728\u4ec0\u4e48\u65f6\u5019\u5224\u5b9a\uff0c \u603b\u6709\u6570\u636e\u5df2\u7ecf\u8bfb\u5165\uff0c\u5e76\u505a\u597d\u4f7f\u7528\u51c6\u5907\u3002\u56e0\u6b64\u5728\u56fe\u4e2d\uff0c\u5c06\u64cd\u4f5cE\uff08\u8bfb \u4e00\u5f20\u5361\uff09\u653e\u5728\u6253\u5f00\u6587\u4ef6\u4e4b\u540e\uff0c\u540c\u65f6\u5728\u5904\u7406\u5b8c\u4e00\u5f20\u5361\u7247\u540e\u518d\u8bfb\u4e00\u6b21\u3002</p> <p>(5) \u7528\u4f2a\u7801\u5199\u51fa\u7a0b\u5e8f Jackson\u65b9\u6cd5\u4e2d\u7684\u4f2a\u7801\u4e0eJackson\u6240\u793a\u7684\u7a0b\u5e8f\u7ed3\u6784\u56fe\u5b8c\u5168\u5bf9\u5e94\uff0c\u7528 \u4f2a\u7801\u5199\u51fa\u7a0b\u5e8f\u7684\u8fc7\u7a0b\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u81ea\u9876\u5411\u4e0b\u7528\u8fd9\u4e9b\u4f2a\u7801\u66ff\u6362 Jackson\u56fe\u4e2d\u6bcf\u4e2a\u5904\u7406\u6846\u7684\u8fc7\u7a0b\uff0c\u6bcf\u4e2a\u5904\u7406\u6846\u90fd\u770b\u4f5c\u662f\u4e0b\u5c42\u5904\u7406\u6846 \u53ca\u5206\u914d\u5728\u4e0a\u9762\u7684\u64cd\u4f5c\u7ec4\u6210\u3002</p> <p></p> <p>Jackson\u65b9\u6cd5\u5c0f\u7ed3 </p> <p>\u4f18\u70b9\uff1a\u7b80\u5355\uff0c\u9002\u5408\u4e8e\u89c4\u6a21\u4e0d\u5927\u7684\u7cfb\u7edf\uff0c\u5efa\u7acb\u4e86\u95ee\u9898\u7684\u6570\u636e\u7ed3\u6784 \u4e4b\u540e\uff0c\u53ef\u76f4\u63a5\u63a8\u5bfc\u51fa\u76f8\u5e94\u7684\u7a0b\u5e8f\u7ed3\u6784\u3002 </p> <p>\u5c40\u9650\u6027\uff1a\u5f53\u8f93\u5165\u6570\u636e\u7ed3\u6784\u4e0e\u8f93\u51fa\u6570\u636e\u7ed3\u6784\u4e0d\u76f8\u540c\u4e14\u65e0\u5bf9\u5e94\u5173\u7cfb \u65f6\uff0c\u96be\u4e8e\u5e94\u7528\u3002\u5f53\u6570\u636e\u7ed3\u6784\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u7a0b\u5e8f\u7ed3\u6784\u4e5f\u53d1\u751f\u53d8\u5316\uff0c\u4e00 \u822c\u662f\u603b\u4f53\u4e0a\u7528SD\u65b9\u6cd5\uff0c\u5c40\u90e8\u8303\u56f4\u7528JSD\u65b9\u6cd5\u3002 </p> <p>SD\u65b9\u6cd5\u548cJSD\u65b9\u6cd5\u7684\u5f02\u540c\uff1a\u9762\u5411\u6570\u636e\u6d41\u7684\u8bbe\u8ba1\uff08SD\u65b9\u6cd5\uff09\u548c\u9762\u5411\u6570\u636e\u7ed3\u6784\u7684\u8bbe\u8ba1\uff08JSD\u65b9\u6cd5\uff09 \u7684\u5171\u540c\u70b9\u90fd\u662f\u6570\u636e\u4fe1\u606f\u9a71\u52a8\u7684\uff0c\u90fd\u8bd5\u56fe\u5c06\u6570\u636e\u8868\u793a\u8f6c\u6362\u6210\u8f6f\u4ef6\u8868\u793a\uff1b \u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u9762\u5411\u6570\u636e\u7ed3\u6784\u7684\u8bbe\u8ba1\u4e0d\u5229\u7528\u6570\u636e\u6d41\u56fe\uff0c\u800c\u6839\u636e\u6570\u636e\u7ed3 \u6784\u7684\u8868\u793a\u6765\u8bbe\u8ba1\u3002</p> <p>Halstead\u4f30\u8ba1\u590d\u6742\u5ea6\u65b9\u6cd5 \u8bfe\u672c P139</p> <p>\u5728\u5b9a\u4e49\u4e2d\uff0c\u8fd0\u7b97\u7b26\u5305\u62ec\uff1a \u7b97\u672f\u8fd0\u7b97\u7b26\u3001\u8d4b\u503c\u7b26(=\u6216:=)\u3001\u903b\u8f91\u8fd0\u7b97\u7b26\u3001\u5206\u754c\u7b26(\uff0c\u6216\uff1b\u6216:) \u3001\u5173\u7cfb\u8fd0\u7b97\u7b26\u3001 \u62ec\u53f7\u8fd0\u7b97\u7b26\u3001\u5b50\u7a0b\u5e8f\u8c03\u7528\u7b26\u3001\u6570\u7ec4\u64cd\u4f5c\u7b26\u3001\u5faa\u73af\u64cd\u4f5c\u7b26\u7b49\uff1b </p> <p>\u7279\u522b\u5730\uff0c\u6210\u5bf9\u7684\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982 begin\u2026end\u3001if\u2026then\u2026else\u3001for\u2026to\u3001repeat \u2026until\u3001while\u2026do\u3001\uff08\u2026\uff09\u7b49 \u90fd\u5f53\u505a\u5355\u4e00\u8fd0\u7b97\u7b26\u3002 </p> <p>\u8fd0\u7b97\u5bf9\u8c61\u5305\u62ec\u53d8\u91cf\u540d\u548c\u5e38\u6570\u3002</p>"},{"location":"course/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_6","title":"\u7b2c\u516d\u7ae0 \u7cfb\u7edf\u5b9e\u73b0","text":"<p>\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u57fa\u672c\u539f\u5219</p> <ol> <li> <p>\u5c3d\u91cf\u4e0d\u7531\u7a0b\u5e8f\u8bbe\u8ba1\u8005\u8fdb\u884c\u6d4b\u8bd5</p> </li> <li> <p>\u5173\u952e\u662f\u6ce8\u91cd\u6d4b\u8bd5\u7528\u4f8b\u7684\u9009\u62e9</p> </li> </ol> <p>\u8f93\u5165\u6570\u636e\u7684\u7ec4\u6210\uff08\u8f93\u5165\u6570\u636e\u3001\u9884\u671f\u7684\u8f93\u51fa\u7ed3\u679c\uff09\u3001\u65e2\u6709\u5408\u7406\u8f93\u5165\u6570\u636e\uff0c\u4e5f\u6709\u4e0d\u5408\u7406\u7684\u8f93\u5165\u6570\u636e\u3001\u7528\u4f8b\u65e2\u80fd\u68c0\u67e5\u5e94\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u4e5f\u80fd\u591f\u68c0\u67e5\u4e0d\u5e94\u8be5\u5b8c\u6210\u7684\u4efb \u52a1\u3001\u957f\u671f\u4fdd\u5b58\u6d4b\u8bd5\u7528\u4f8b\u3002</p> <ol> <li>\u6240\u6709\u7684\u6d4b\u8bd5\u90fd\u5e94\u5f53\u8ffd\u6eaf\u5230\u7528\u6237\u8981\u6c42\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u4e0d\u80fd\u6ee1\u8db3\u7528\u6237 \u8981\u6c42\u7684\u9519\u8bef\u662f\u4e25\u91cd\u9519\u8bef</li> <li>\u5145\u5206\u6ce8\u610f\u6d4b\u8bd5\u4e2d\u7684\u7fa4\u96c6\u73b0\u8c61 \u6d4b\u8bd5\u53d1\u73b0\u7684\u9519\u8bef\u4e2d\u768480%\u5f88\u53ef\u80fd\u51fa\u81ea20%\u7684\u6a21\u5757</li> <li>\u59a5\u5584\u4fdd\u5b58\u6d4b\u8bd5\u8ba1\u5212\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u51fa\u9519\u7edf\u8ba1\u548c\u6700\u7ec8\u5206\u6790\u62a5\u544a\uff0c \u4e3a\u7ef4\u62a4\u63d0\u4f9b\u65b9\u4fbf</li> </ol> <p>\u8f6f\u4ef6\u6d4b\u8bd5\u6b65\u9aa4\u53ca\u7b56\u7565</p> <p></p> <p>\u786e\u8ba4\u6d4b\u8bd5</p> <p></p> <p>\u786e\u8ba4\u6d4b\u8bd5\u6b65\u9aa4 </p> <ol> <li>\u6709\u6548\u6027\u6d4b\u8bd5 \u5236\u5b9a\u6d4b\u8bd5\u8ba1\u5212\u548c\u6d4b\u8bd5\u8fc7\u7a0b\uff0c\u8fd0\u7528\u9ed1\u76d2\u6cd5\uff0c\u9a8c\u8bc1\u8f6f\u4ef6\u7279\u6027\u662f\u5426\u4e0e \u9700\u6c42\u7b26\u5408\u3002 </li> <li>\u8f6f\u4ef6\u914d\u7f6e\u590d\u67e5 \u8f6f\u4ef6\u914d\u7f6e\u662f\u6307\u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b\u4e2d\u6240\u4ea7\u751f\u7684\u6240\u6709\u4fe1\u606f\u9879:\u6587\u6863\u3001\u62a5\u544a\u3001 \u7a0b\u5e8f\u3001\u8868\u683c\u3001\u6570\u636e\u3002\u968f\u7740\u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b\u7684\u8fdb\u5c55\u8f6f\u4ef6\u914d\u7f6e\u9879\u5feb\u901f\u589e \u52a0\u548c\u53d8\u5316\uff0c\u5e94\u590d\u67e5\u8f6f\u4ef6\u914d\u7f6e\u9879\u662f\u5426\u9f50\u5168\u3001\u4e00\u81f4\u3002</li> </ol> <p>\u8f6f\u4ef6\u6d4b\u8bd5\u5e73\u884c\u8fd0\u884c </p> <p>\u6240\u8c13\u5e73\u884c\u8fd0\u884c\u5c31\u662f\u540c\u65f6\u8fd0\u884c\u65b0\u5f00\u53d1\u51fa\u6765\u7684\u7cfb\u7edf\u548c\u5c06\u88ab\u5b83\u53d6\u4ee3\u7684 \u65e7\u7cfb\u7edf\uff0c\u4ee5\u4fbf\u6bd4\u8f83\u65b0\u65e7\u4e24\u4e2a\u7cfb\u7edf\u7684\u5904\u7406\u7ed3\u679c\u3002\u8fd9\u6837\u505a\u7684\u5177\u4f53\u76ee\u7684 \u6709\u5982\u4e0b\u51e0\u70b9\uff1a \u53ef\u4ee5\u5728\u51c6\u751f\u4ea7\u73af\u5883\u4e2d\u8fd0\u884c\u65b0\u7cfb\u7edf\u800c\u53c8\u4e0d\u5192\u98ce\u9669\uff1b \u7528\u6237\u80fd\u6709\u4e00\u6bb5\u719f\u6089\u65b0\u7cfb\u7edf\u7684\u65f6\u95f4\uff1b \u53ef\u4ee5\u9a8c\u8bc1\u7528\u6237\u6307\u5357\u548c\u4f7f\u7528\u624b\u518c\u4e4b\u7c7b\u7684\u6587\u6863\uff1b \u80fd\u591f\u4ee5\u51c6\u751f\u4ea7\u6a21\u5f0f\u5bf9\u65b0\u7cfb\u7edf\u8fdb\u884c\u5168\u8d1f\u8377\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u7528\u6d4b\u8bd5\u7ed3\u679c\u9a8c\u8bc1\u6027\u80fd\u6307\u6807\u3002</p> <p>\u5982\u4f55\u6d4b\u8bd5 </p> <p>\u5173\u952e ---- \u8bbe\u8ba1\u6d4b\u8bd5\u65b9\u6848\u3002 </p> <p>\u6d4b\u8bd5\u65b9\u6848 ---- \u5305\u62ec\uff1a\u5177\u4f53\u7684\u6d4b\u8bd5\u76ee\u7684\uff0c\u5e94\u8be5\u8f93\u5165\u7684\u6d4b\u8bd5\u6570\u636e\u548c\u9884\u671f\u7684\u7ed3\u679c\u3002 \u901a\u5e38\u53c8\u628a\u6d4b\u8bd5\u6570\u636e\u548c\u9884\u671f\u7684\u8f93\u51fa\u7ed3\u679c\u79f0\u4e3a\u6d4b\u8bd5\u7528\u4f8b\u3002\u5176\u4e2d\u6700\u56f0\u96be\u7684\u95ee\u9898\u662f\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u7684\u8f93\u5165\u6570\u636e\u3002 \u4e0d\u540c\u7684\u6d4b\u8bd5\u6570\u636e\u53d1\u73b0\u7a0b\u5e8f\u9519\u8bef\u7684\u80fd\u529b\u5dee\u522b\u5f88\u5927\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6d4b\u8bd5\u6548\u7387\u964d\u4f4e\u6d4b\u8bd5\u6210\u672c\uff0c\u5e94\u8be5\u9009\u7528\u9ad8\u6548\u7684\u6d4b\u8bd5\u6570\u636e\u3002</p> <p>\u767d\u76d2\u6d4b\u8bd5\u6b65\u9aa4</p> <p>\u9009\u62e9\u903b\u8f91\u8986\u76d6\u6807\u51c6\uff1b\u6309\u7167\u8986\u76d6\u6807\u51c6\u5217\u51fa\u6240\u6709\u60c5\u51b5\uff1b \u9009\u62e9\u786e\u5b9a\u6d4b\u8bd5\u7528\u4f8b\uff1b \u9a8c\u8bc1\u5206\u6790\u8fd0\u884c\u7ed3\u679c\u4e0e\u9884\u671f\u7ed3\u679c\u3002</p> <p>\u5b9e\u9645\u6d4b\u8bd5\u7b56\u7565</p> <p>\u9ed1\u76d2+\u767d\u76d2\u6d4b\u8bd5 \uf06c \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u90fd\u5e94\u4f7f\u7528\u8fb9\u754c\u503c\u5206\u6790\u65b9\u6cd5\uff1b \uf06c \u5fc5\u8981\u65f6\u7528\u7b49\u4ef7\u5212\u5206\u6cd5\u8865\u5145\u6d4b\u8bd5\u7528\u4f8b\uff1b \uf06c \u5fc5\u8981\u65f6\u518d\u7528\u9519\u8bef\u63a8\u6d4b\u6cd5\u8865\u5145\u6d4b\u8bd5\u7528\u4f8b\uff1b \uf06c \u5bf9\u7167\u7ec4\u4ef6\u7684\u903b\u8f91\uff0c\u68c0\u67e5\u5df2\u8bbe\u8ba1\u51fa\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002</p> <p>\u767d\u76d2\u6d4b\u8bd5\u4e0e\u9ed1\u76d2\u6d4b\u8bd5\u5bf9\u6bd4</p> <p></p> <p>\u8f6f\u4ef6\u8c03\u8bd5\u539f\u5219</p> <p>1.\u6ce8\u610f\u9519\u8bef\u7684\u201c\u7fa4\u96c6\u73b0\u8c61\u201d\uff1b 2.\u4e0d\u80fd\u53ea\u4fee\u6539\u9519\u8bef\u7684\u5f81\u5146\u3001\u8868\u73b0\u3002\u8fd8\u5e94\u8be5\u4fee\u6539\u9519\u8bef\u7684\u672c\u8d28\uff1b 3.\u6ce8\u610f\u5728\u4fee\u6539\u4e00\u4e2a\u9519\u8bef\u7684\u540c\u65f6\uff0c\u4e0d\u8981\u5f15\u5165\u65b0\u7684\u9519\u8bef\u3002</p> <p>\u8f6f\u4ef6\u53ef\u9760\u6027\u8ba1\u7b97\u4f8b\u9898 MTTF </p> <p></p> <p></p> <p></p>"},{"location":"course/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_7","title":"\u7b2c\u4e03\u7ae0 \u8f6f\u4ef6\u7ef4\u62a4","text":"<p>\u63d0\u9ad8\u53ef\u7ef4\u62a4\u6027\u7684\u65b9\u6cd5</p> <p>\u5efa\u7acb\u660e\u786e\u7684\u8f6f\u4ef6\u8d28\u91cf\u76ee\u6807\u548c\u4f18\u5148\u7ea7 \u4f7f\u7528\u63d0\u9ad8\u8f6f\u4ef6\u8d28\u91cf\u7684\u6280\u672f\u548c\u5de5\u5177 \u8fdb\u884c\u660e\u786e\u7684\u8d28\u91cf\u4fdd\u8bc1\u5ba1\u67e5 \u9009\u62e9\u53ef\u7ef4\u62a4\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00 \u6539\u8fdb\u7a0b\u5e8f\u7684\u6587\u6863</p> <p>\u8f6f\u4ef6\u518d\u5de5\u7a0b</p> <p>\u8f6f\u4ef6\u518d\u5de5\u7a0b\u662f\u4e00\u7c7b\u8f6f \u4ef6\u5de5\u7a0b\u6d3b\u52a8\uff0c\u662f\u4e00\u4e2a \u5de5\u7a0b\u8fc7\u7a0b, \u5b83\u5c06\u9006\u5411 \u5de5\u7a0b\u3001\u91cd\u6784\u548c\u6b63\u5411\u5de5 \u7a0b\u7ec4\u5408\u8d77\u6765,\u5c06\u73b0\u5b58\u7cfb \u7edf\u91cd\u65b0\u6784\u9020\u4e3a\u65b0\u7684\u5f62 \u5f0f\u3002</p>"},{"location":"course/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_8","title":"\u7b2c\u4e5d\u7ae0 \u9762\u5411\u5bf9\u8c61\u5206\u6790\u8bbe\u8ba1\u4e0e\u5b9e\u73b0","text":"<p>\u8f6f\u4ef6\u751f\u5b58\u671f\u5404\u9636\u6bb5\u6240\u4f7f\u7528\u7684\u65b9\u6cd5\u3001\u6280\u672f\u5177\u6709\u9ad8\u5ea6\u7684\u8fde\u7eed\u6027\uff0c\u7528 \u7b26\u5408\u4eba\u7c7b\u8ba4\u8bc6\u4e16\u754c\u7684\u601d\u7ef4\u65b9\u5f0f\u6765\u5206\u6790\u3001\u89e3\u51b3\u95ee\u9898\u3002\u5c06OOA\u3001OOD\u3001 OOP\u6709\u673a\u5730\u96c6\u6210\u5728\u4e00\u8d77\u3002 </p> <p>\u9762\u5411\u5bf9\u8c61\u7684\u5206\u6790\uff08Object-Oriented Analysis\uff0cOOA \uff09 \u5f3a\u8c03\u7684\u662f\u5bf9\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u7684\u5bf9\u8c61\u7279\u5f81\u548c\u884c\u4e3a\u7684\u5b9a\u4e49\u3002\u5efa\u7acb\u7cfb\u7edf\u7684 \u4e09\u7c7b\u6a21\u578b\u3002 </p> <p>\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\uff08Object-Oriented Design\uff0cOOD\uff09 \u4e0eOOA\u5bc6\u5207\u914d\u5408\uff0c\u987a\u5e8f\u5b9e\u73b0\u5bf9\u73b0\u5b9e\u4e16\u754c\u7684\u8fdb\u4e00\u6b65\u5efa\u6a21\u3002 </p> <p>\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\uff08Object-Oriented Program\uff0cOOP \uff09 \u662f\u9762\u5411\u5bf9\u8c61\u7684\u6280\u672f\u4e2d\u53d1\u5c55\u6700\u5feb\u7684\uff0c\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8bed \u8a00\uff0c\u8fdb\u884c\u7f16\u7801\u3002</p>"},{"location":"course/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_9","title":"\u7b2c\u5341\u7ae0 \u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406","text":"<p>\u9879\u76ee\u5177\u6709\u7684\u57fa\u672c\u7279\u6027 </p> <p>\u9879\u76ee\u7684\u4e00\u6b21\u6027 \u9879\u76ee\u7684\u7ec4\u7ec7\u6027 \u9879\u76ee\u7684\u751f\u547d\u671f \u9879\u76ee\u7684\u8d44\u6e90\u6d88\u8017\u6027 \u9879\u76ee\u540e\u679c\u7684\u4e0d\u786e\u5b9a\u6027 \u9879\u76ee\u7684\u76ee\u6807\u51b2\u7a81\u6027</p> <p>\u9879\u76ee\u7ba1\u7406 </p> <p>\u5728\u9879\u76ee\u6d3b\u52a8\u4e2d\u8fd0\u7528\u4e00\u7cfb\u5217\u7684\u77e5\u8bc6\u3001\u6280\u80fd\u3001\u5de5\u5177\u548c\u6280\u672f\uff0c\u4ee5\u6ee1\u8db3 \u6216\u8d85\u8fc7\u76f8\u5173\u5229\u76ca\u8005\u5bf9\u9879\u76ee\u7684\u8981\u6c42\u3002\uff08PMI\uff09</p> <p>\u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406 </p> <p>\u8f6f\u4ef6\u9879\u76ee\u662f\u6307\u5bf9\u8f6f\u4ef6\u7cfb\u7edf\u8fdb\u884c\u5f00\u53d1\u3001\u96c6\u6210\u548c\u670d\u52a1\u4e3a\u4e3b\u8981\u76ee\u7684\u7684 \u9879\u76ee\u3002\u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406\u548c\u5176\u4ed6\u9879\u76ee\u7ba1\u7406\u76f8\u6bd4\uff0c\u5177\u6709\u5f88\u5927\u7684\u72ec\u7279\u6027\uff1a \u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406\u5c1a\u4e0d\u89c4\u8303\uff0c\u7ecf\u9a8c\u6210\u5206\u660e\u663e\uff1b \u8fc7\u7a0b\u6ca1\u6709\u660e\u663e\u7684\u5212\u5206\uff1b \u5927\u90fd\u662f\u201c\u4e00\u6b21\u6027\u201d\u7684\u4eba\u529b\u6d88\u8017\u578b\u9879\u76ee</p> <p>\u7518\u7279\u56fe</p> <p>\u7518\u7279\u56fe\u4e5f\u79f0\u4e3a\u6761\u578b\u56fe\uff0c\u6216\u6a2a\u9053\u56fe\u3002\u5b83\u4ee5\u6a2a\u5750\u6807\u8868\u793a\u65f6\u95f4\uff0c\u5de5\u7a0b \u6d3b\u52a8\u5728\u56fe\u7684\u5de6\u4fa7\u7eb5\u5411\u6392\u5217\uff0c\u4ee5\u6d3b\u52a8\u6240\u5bf9\u5e94\u7684\u6a2a\u9053\u4f4d\u7f6e\u8868\u793a\u6d3b\u52a8\u7684 \u8d77\u59cb\u65f6\u95f4\uff0c\u6a2a\u9053\u7684\u957f\u77ed\u8868\u793a\u6301\u7eed\u65f6\u95f4\u7684\u957f\u77ed\u3002\u5b83\u662f\u4e00\u79cd\u6bd4\u8f83\u7b80\u4fbf \u7684\u5de5\u671f\u8ba1\u5212\u548c\u8fdb\u5ea6\u5b89\u6392\u5de5\u5177\u3002</p> <p></p> <p>\u5173\u952e\u8def\u5f84\u6cd5</p> <p></p> <p></p> <p>\u5bf9\u5173\u952e\u8def\u5f84\u7684\u8ba1\u7b97\u4e0e\u8c03\u6574\u4f18\u5316</p> <ol> <li> <p>\u6e05\u9192\u7684\u8ba4\u8bc6\uff1a\u5173\u952e\u8def\u5f84\u662f\u7f51\u7edc\u56fe\u4e2d\u6700\u957f\u7684\u7ebf\u8def\uff0c\u5b83\u51b3\u5b9a\u4e86\u9879 \u76ee\u7684\u603b\u8017\u65f6\u3002 </p> </li> <li> <p>\u5fc5\u987b\u628a\u6ce8\u610f\u529b\u96c6\u4e2d\u4e8e\u90a3\u4e9b\u4f18\u5148\u7b49\u5f85\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u786e\u4fdd\u5b83\u4eec\u51c6 \u65f6\u5b8c\u6210\u3002\u5173\u952e\u8def\u5f84\u4e0a\u7684\u63a8\u8fdf\u5373\u662f\u6574\u4e2a\u9879\u76ee\u63a8\u8fdf\u3002 </p> </li> <li> <p>\u5411\u5173\u952e\u8def\u5f84\u8981\u65f6\u95f4\uff0c\u5411\u975e\u5173\u952e\u8def\u5f84\u8981\u8d44\u6e90\u3002 </p> </li> <li> <p>\u8c03\u6574\u8fdb\u5ea6\uff0c\u5e73\u8861\u8d44\u6e90\u3002</p> </li> </ol> <p>\u80fd\u529b\u6210\u719f\u5ea6\u6a21\u578b</p> <p></p> <p>\u26ab \u521d\u59cb\u7ea7 \u2713 \u7ec4\u7ec7\uff1a\u7ec4\u7ec7\u901a\u5e38\u6ca1\u6709\u63d0\u4f9b\u5f00\u53d1\u548c\u7ef4\u62a4\u8f6f\u4ef6\u7684\u7a33\u5b9a\u7684\u73af\u5883\u3002 \u2713 \u9879\u76ee\uff1a\u5f53\u53d1\u751f\u5371\u673a\u65f6\uff0c\u9879\u76ee\u901a\u5e38\u653e\u5f03\u8ba1\u5212\u7684\u8fc7\u7a0b\uff0c\u56de\u590d\u5230\u7f16\u7801\u548c\u6d4b\u8bd5\u3002 \u2713 \u8fc7\u7a0b\u80fd\u529b\uff1a\u4e0d\u53ef\u9884\u6d4b\u3002(unpredictable) </p> <p>\u26ab \u53ef\u91cd\u590d\u7ea7 \u2713 \u7ec4\u7ec7\uff1a\u5c06\u8f6f\u4ef6\u9879\u76ee\u7684\u6709\u6548\u7ba1\u7406\u8fc7\u7a0b\u5236\u5ea6\u5316\uff0c\u8fd9\u4f7f\u5f97\u7ec4\u7ec7\u80fd\u591f\u91cd\u590d\u4ee5\u524d\u9879 \u76ee\u4e2d\u7684\u6210\u529f\u5b9e\u8df5\u3002 \u2713 \u9879\u76ee\uff1a\u914d\u5907\u4e86\u57fa\u672c\u7684\u8f6f\u4ef6\u7ba1\u7406\u63a7\u5236\u3002 \u2713 \u8fc7\u7a0b\u80fd\u529b\uff1a\u4e25\u683c\u7684\u3002(disciplined) </p> <p>\u26ab \u5df2\u5b9a\u4e49\u7ea7 \u2713 \u7ec4\u7ec7\uff1a\u5728\u7ec4\u7ec7\u8303\u56f4\u5185\u5f00\u53d1\u548c\u7ef4\u62a4\u8f6f\u4ef6\u7684\u6807\u51c6\u8fc7\u7a0b\u88ab\u6587\u6863\u5316\uff0c\u5176\u4e2d\u5305\u62ec\u8f6f \u4ef6\u5de5\u7a0b\u8fc7\u7a0b\u548c\u7ba1\u7406\u8fc7\u7a0b\uff0c\u5b83\u4eec\u96c6\u6210\u4e3a\u4e00\u4e2a\u4e00\u81f4\u7684\u6574\u4f53\u3002 \u2713 \u9879\u76ee\uff1a\u5bf9\u7ec4\u7ec7\u7684\u6807\u51c6\u8f6f\u4ef6\u8fc7\u7a0b\u8fdb\u884c\u88c1\u526a\uff0c\u6765\u5f00\u53d1\u5b83\u4eec\u81ea\u5df1\u7684\u5b9a\u4e49\u8f6f\u4ef6\u8fc7 \u7a0b\u3002 \u2713 \u8fc7\u7a0b\u80fd\u529b\uff1a\u6807\u51c6\u7684\u548c\u4e00\u81f4\u7684\u3002(standard and consistent)</p> <p>\u26ab \u5df2\u7ba1\u7406\u7ea7 \u2713 \u7ec4\u7ec7\uff1a\u4e3a\u8f6f\u4ef6\u4ea7\u54c1\u548c\u8fc7\u7a0b\u90fd\u8bbe\u5b9a\u4e86\u91cf\u5316\u7684\u8d28\u91cf\u76ee\u6807\u3002 \u2713 \u9879\u76ee\uff1a\u9879\u76ee\u51cf\u5c0f\u8fc7\u7a0b\u6027\u80fd\u7684\u53d8\u5316\u6027\uff0c\u4f7f\u5176\u8fdb\u5165\u53ef\u63a5\u6536\u7684\u91cf\u5316\u8fb9\u754c\uff0c\u4ece\u800c \u8fbe\u5230\u5bf9\u4ea7\u54c1\u548c\u8fc7\u7a0b\u7684\u63a7\u5236\u3002 \u2713 \u8fc7\u7a0b\u80fd\u529b\uff1a\u53ef\u9884\u8a00\u7684\u3002(predictable) </p> <p>\u26ab \u6301\u7eed\u4f18\u5316\u7ea7 \u2713 \u7ec4\u7ec7\uff1a\u5173\u6ce8\u4e8e\u6301\u7eed\u7684\u8fc7\u7a0b\u6539\u8fdb\u3002 \u2713 \u9879\u76ee\uff1a\u8f6f\u4ef6\u8fc7\u7a0b\u88ab\u8bc4\u4ef7\uff0c\u4ee5\u9632\u6b62\u8fc7\u5931\u91cd\u590d\u53d1\u751f\uff0c\u4ece\u4e2d\u83b7\u5f97\u7684\u6559\u8bad\u6563\u5e03\u7ed9 \u5176\u5b83\u9879\u76ee\u3002 \u2713 \u8fc7\u7a0b\u80fd\u529b\uff1a\u6301\u7eed\u7684\u6539\u5584\u3002(continuously improving)</p>"},{"location":"csdn/","title":"Index","text":"<p>CSDN\u5bfc\u51fa\u535a\u5ba2</p>"},{"location":"csdn/2020-08-01/","title":"2020-08-01","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=1459&amp;pid=4</p>"},{"location":"csdn/2020-08-01/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Three friends like to play the following game. The first friend chooses a string S. Then the second friend constructs a new string T that consists of two copies of the string S. finally, the third friend inserts one letter at the beginning, the end or somewhere inside the string T, thereby creating a string U. You are given the string U and your task is to reconstruct the original string S.</p>"},{"location":"csdn/2020-08-01/#_2","title":"\u8f93\u5165","text":"<p>The first line of the input contains N\uff082 \u2264 N \u2264 2000001\uff09, the length of the final string U. The string U itself is given on the second line. It consists of N uppercase English letters (A, B, C, . . . , Z).</p>"},{"location":"csdn/2020-08-01/#_3","title":"\u8f93\u51fa","text":"<p>Your program should print the original string S. However, there are two exceptions: 1.If the final string U could not have been created using the above procedure, you should print NOT POSSIBLE. 2.If the original string S is not unique, you should print NOT UNIQUE.</p>"},{"location":"csdn/2020-08-01/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>7\nABXCABC\n</code></pre>"},{"location":"csdn/2020-08-01/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>ABC\n</code></pre>"},{"location":"csdn/2020-08-01/#_6","title":"\u89e3\u6790","text":"<p>\u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u5e94\u7528\uff0c\u6bd4\u8f83\u53bb\u9664\u4e00\u4e2a\u5b57\u6bcd\u540e\u524d\u534a\u90e8\u5206\u7684\u54c8\u5e0c\u503c\u548c\u540e\u534a\u90e8\u5206\u54c8\u5e0c\u503c\u662f\u5426\u76f8\u540c</p> <p><pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int N=2e6+500;\nchar a[N]=\"\";\nint base=131;\null p[N]={0};\null h[N]={0};\null get(ull l,ull r)\n{\nreturn h[r]-h[l-1]*p[r-l+1];\n}\nint main()\n{\nint n;\nscanf(\"%d\",&amp;n);\nif(n%2==0)\n{\nprintf(\"NOT POSSIBLE\\n\");\nreturn 0;\n}\nscanf(\"%s\",a+1);\np[0]=1;\nfor(int i=1;i&lt;=n;i++)\np[i]=p[i-1]*base;\nfor(int i=1;i&lt;=n;i++)\nh[i]=h[i-1]*base+a[i]-'A';\null flag=0,ans,pos;    ///\u6ce8\u610f\u7528ull\uff0cans\u6570\u636e\u6bd4\u8f83\u5927\nfor(int i=1;i&lt;=n;i++)\n{\null s1,s2;\nif(i&lt;=n/2)\n{\ns1=h[i-1]*p[n/2-i+1]+get(i+1,n/2+1);\n}\nelse\n{\ns1=h[n/2];\n}\nif(i&lt;=n/2+1)\n{\ns2=get(n-n/2+1,n);\n}\nelse\n{\ns2=get(n/2+1,i-1)*p[n-i]+get(i+1,n);\n}\nif(s1==s2)\n{\nif(flag&amp;&amp;ans!=s1)\n{\nprintf(\"NOT UNIQUE\\n\");\nreturn 0;\n}\nans=s1;\npos=i;\nflag=1;\n}\n}\nif(flag)\n{\nfor(int i=1,j=0;j&lt;n/2;i++)\n{\nif(i==pos)\ncontinue;\nelse\nprintf(\"%c\",a[i]),j++;\n}\nprintf(\"\\n\");\n}\nelse\n{\nprintf(\"NOT POSSIBLE\\n\");\n}\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=1459&amp;pid=10</p>"},{"location":"csdn/2020-08-01/#_7","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u4e00\u5757\u82b1\u5e03\u6761\uff0c\u91cc\u9762\u6709\u4e9b\u56fe\u6848\uff0c\u53e6\u6709\u4e00\u5757\u76f4\u63a5\u53ef\u7528\u7684\u5c0f\u9970\u6761\uff0c\u91cc\u9762\u4e5f\u6709\u4e00\u4e9b\u56fe\u6848\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u82b1\u5e03\u6761\u548c\u5c0f\u9970\u6761\uff0c\u8ba1\u7b97\u4e00\u4e0b\u80fd\u4ece\u82b1\u5e03\u6761\u4e2d\u5c3d\u53ef\u80fd\u526a\u51fa\u51e0\u5757\u5c0f\u9970\u6761\u6765\u5462\uff1f</p>"},{"location":"csdn/2020-08-01/#_8","title":"\u8f93\u5165","text":"<p>\u8f93\u5165\u4e2d\u542b\u6709\u4e00\u4e9b\u6570\u636e\uff0c\u5206\u522b\u662f\u6210\u5bf9\u51fa\u73b0\u7684\u82b1\u5e03\u6761\u548c\u5c0f\u9970\u6761\uff0c\u5176\u5e03\u6761\u90fd\u662f\u7528\u53ef\u89c1ASCII\u5b57\u7b26\u8868\u793a\u7684\uff0c\u53ef\u89c1\u7684ASCII\u5b57\u7b26\u6709\u591a\u5c11\u4e2a\uff0c\u5e03\u6761\u7684\u82b1\u7eb9\u4e5f\u6709\u591a\u5c11\u79cd\u82b1\u6837\u3002\u82b1\u7eb9\u6761\u548c\u5c0f\u9970\u6761\u4e0d\u4f1a\u8d85\u8fc71000\u4e2a\u5b57\u7b26\u957f\u3002\u5982\u679c\u9047\u89c1#\u5b57\u7b26\uff0c\u5219\u4e0d\u518d\u8fdb\u884c\u5de5\u4f5c\u3002</p>"},{"location":"csdn/2020-08-01/#_9","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fa\u80fd\u4ece\u82b1\u7eb9\u5e03\u4e2d\u526a\u51fa\u7684\u6700\u591a\u5c0f\u9970\u6761\u4e2a\u6570\uff0c\u5982\u679c\u4e00\u5757\u90fd\u6ca1\u6709\uff0c\u90a3\u5c31\u8001\u8001\u5b9e\u5b9e\u8f93\u51fa0\uff0c\u6bcf\u4e2a\u7ed3\u679c\u4e4b\u95f4\u5e94\u6362\u884c\u3002</p>"},{"location":"csdn/2020-08-01/#_10","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>abcde a3\naaaaaa  aa\n#\n</code></pre>"},{"location":"csdn/2020-08-01/#_11","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>0\n3\n</code></pre>"},{"location":"csdn/2020-08-01/#_12","title":"\u89e3\u6790","text":"<p>kmp\u6a21\u677f\u9898\u76ee\uff0c\u5339\u914d\u76f8\u540c\u7684\u5b57\u7b26\u4e32</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nchar a[2005]={0};\nchar str[2005]={0};\nint Next[2005]={0};\nint getNext()\n{\nint i=0,j=-1;\nNext[0]=-1;\nwhile(a[i])\n{\nif(j==-1||a[i]==a[j])\n{\ni++;\nj++;\nNext[i]=j;\n}\nelse\n{\nj=Next[j];\n}\n}\n}\nint main()\n{\nwhile(1)\n{\nscanf(\"%s\",str);\nif(str[0]=='#')\nbreak;\nmemset(Next,0,sizeof(Next));\nscanf(\"%s\",a);\ngetNext();\nint lena=strlen(a),lens=strlen(str);\nint j=0,sum=0,i=0;\nwhile(i&lt;=lens)\n{\nif(j==-1||str[i]==a[j])\n{\ni++;\nj++;\n}\nelse\n{\nj=Next[j];\n}\nif(j==lena)\n{\nsum++;\nj=0;\n}\n}\nprintf(\"%d\\n\",sum);\n}\n}\n</code></pre>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/","title":"2020-08-02\u7ebf\u6bb5\u6811","text":"<p>http://icpc.upc.edu.cn/problem.php?id=3756</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u4ece\u524d\u6709\u4e00\u4e2a\u8d38\u6613\u5e02\u573a\uff0c\u5728\u4e00\u4f4d\u6267\u653f\u5b98\u5230\u6765\u4e4b\u524d\u90fd\u662f\u975e\u5e38\u7e41\u8363\u7684\uff0c\u81ea\u4ece\u4ed6\u6765\u4e86\u4e4b\u540e\uff0c\u53d1\u5e03\u4e86\u4e00\u7cfb\u5217\u5947\u602a\u7684\u653f\u4ee4\uff0c\u5bfc\u81f4\u8d38\u6613\u5e02\u573a\u7684\u8870\u843d\u3002 \u6709n\u4e2a\u5546\u8d29\uff0c\u4ece 0\u223cn\u22121\u7f16\u53f7\uff0c\u6bcf\u4e2a\u5546\u8d29\u7684\u5546\u54c1\u6709\u4e00\u4e2a\u4ef7\u683c ai\uff0c\u6709\u4e24\u79cd\u653f\u4ee4\uff1a       1.l,r,c\uff0c\u5bf9\u4e8e i\u2208[l,r],ai\u2190ai+c       2.l,r,d\uff0c\u5bf9\u4e8e i\u2208[l,r],ai\u2190\u230aai/d\u230b,ai \u2190\u230aai/d\u230b \u73b0\u5728\u6709\u4e00\u4e2a\u5916\u4e61\u7684\u65c5\u5ba2\u60f3\u8981\u4e86\u89e3\u8d38\u6613\u5e02\u573a\u7684\u4fe1\u606f\uff0c\u6709\u4e24\u79cd\u8be2\u95ee\u65b9\u5f0f\uff1a       1.\u7ed9\u5b9a l,r\uff0c\u6c42 mini\u2208[l,r]ai       2.\u7ed9\u5b9a l,r\uff0c\u6c42 \u2211i\u2208[l,r]ai</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e3a\u4e24\u4e2a\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570 n,q\u5206\u522b\u8868\u793a\u5546\u8d29\u4e2a\u6570\u548c\u653f\u4ee4 + \u8be2\u95ee\u4e2a\u6570\u3002 \u7b2c\u4e8c\u884c\u5305\u542bn\u4e2a\u7531\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570 a0\u223can\u22121 \u63a5\u4e0b\u6765q\u884c\uff0c\u6bcf\u884c\u8868\u793a\u4e00\u4e2a\u64cd\u4f5c\uff0c\u7b2c\u4e00\u4e2a\u6570\u8868\u793a\u64cd\u4f5c\u7f16\u53f7 1\u223c4\u63a5\u4e0b\u6765\u7684\u8f93\u5165\u548c\u95ee\u9898\u63cf\u8ff0\u4e00\u81f4\u3002</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_3","title":"\u8f93\u51fa","text":"<p>\u5bf9\u4e8e\u6bcf\u4e2a 3\u30014 \u64cd\u4f5c\uff0c\u8f93\u51fa\u8be2\u95ee\u7b54\u6848\u3002</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>10 10\n-5 -4 -3 -2 -1 0 1 2 3 4\n1 0 4 1\n1 5 9 1\n2 0 9 3\n3 0 9\n4 0 9\n3 0 1\n4 2 3\n3 4 5\n4 6 7\n3 8 9\n</code></pre>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>-2\n-2\n-2\n-2\n0\n1\n1\n</code></pre> \u8fd9\u9053\u9898\u76ee\u4e3b\u8981\u8003\u67e5\u4e86\u7ebf\u6bb5\u6811\u7684\u6807\u8bb0\u548c\u4e0b\u653e\u53ca\u5c06\u9664\u6cd5\u8f6c\u4e3a\u51cf\u6cd5\u7684\u601d\u60f3\uff0c\u7edf\u8ba1\u6bcf\u4e00\u6bb5\u7684max\u548cmin\uff0c\u5224\u65ad\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7ecf\u8fc7\u9664\u6cd5\u4ee5\u540e\u6240\u51cf\u6389\u7684\u6570\u5b57\u662f\u5426\u76f8\u540c\uff0c\u5982\u679c\u76f8\u540c\uff0c\u5219\u8fd9\u4e00\u6bb5\u90fd\u53ef\u4ee5\u51cf\u6389\u8fd9\u4e2a\u6570\u5b57\uff0c\u4e0b\u653e\u6807\u8bb0\u5373\u53ef\u3002</p> <p><pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include&lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f\nusing namespace std;\ntypedef long long ll;\nll num[400500]={0};\nll sum[400500]={0};\nll minn[400500]={0};\nll maxx[400500]={0};\nll lazy[400500]={0};\nll pushup(ll t)\n{\nsum[t]=sum[2*t]+sum[2*t+1];\nmaxx[t]=max(maxx[2*t],maxx[2*t+1]);\nminn[t]=min(minn[2*t],minn[2*t+1]);\n}\nll pushlazy(ll t,ll lz,ll len)\n{\nsum[t]+=lz*len;\nminn[t]+=lz;\nmaxx[t]+=lz;\nlazy[t]+=lz;\n}\nll pushdown(ll l,ll r,ll t)\n{\nif(lazy[t]!=0)\n{\nll mid=(l+r)/2;\npushlazy(2*t,lazy[t],mid-l+1);\npushlazy(2*t+1,lazy[t],r-mid);\nlazy[t]=0;\n}\n}\nll build(ll l,ll r,ll t)\n{\nlazy[t]=0;\nif(l==r)\n{\nsum[t]=minn[t]=maxx[t]=num[l];\nreturn 0;\n}\nll mid=(l+r)/2;\nbuild(l,mid,t*2);\nbuild(mid+1,r,2*t+1);\npushup(t);\n}\nll add(ll x,ll l,ll r,ll L,ll R,ll t)\n{\nif(l&gt;=L&amp;&amp;r&lt;=R)\n{\nlazy[t]+=x;\nsum[t]+=(r-l+1)*x;\nminn[t]+=x;\nmaxx[t]+=x;\nreturn 0;\n}\npushdown(l,r,t);\nll mid=(l+r)/2;\nif(L&lt;=mid)\nadd(x,l,mid,L,R,2*t);\nif(R&gt;mid)\nadd(x,mid+1,r,L,R,2*t+1);\npushup(t);\n}\nll div(ll x,ll l,ll r,ll L,ll R,ll t)\n{\nif(l&gt;=L&amp;&amp;r&lt;=R)\n{\nll A,B;\nif(minn[t]&lt;0)\nA=(minn[t]-x+1)/x;\nelse\nA=minn[t]/x;\nif(maxx[t]&lt;0)\nB=(maxx[t]-x+1)/x;\nelse\nB=maxx[t]/x;\nif(A-minn[t]==B-maxx[t])\n{\npushlazy(t,B-maxx[t],r-l+1);\nreturn 0;\n}\n}\npushdown(l,r,t);\nll mid=(l+r)/2;\nif(L&lt;=mid)\ndiv(x,l,mid,L,R,2*t);\nif(R&gt;mid)\ndiv(x,mid+1,r,L,R,2*t+1);\npushup(t);\n}\nll querysum(ll l,ll r,ll L,ll R,ll t)\n{\nif(l&gt;=L&amp;&amp;r&lt;=R)\nreturn sum[t];\npushdown(l,r,t);\nll mid=(l+r)/2;\nll ans=0;\nif(L&lt;=mid)\nans+=querysum(l,mid,L,R,2*t);\nif(R&gt;mid)\nans+=querysum(mid+1,r,L,R,2*t+1);\nreturn ans;\n}\nll querymin(ll l,ll r,ll L,ll R,ll t)\n{\nif(l&gt;=L&amp;&amp;r&lt;=R)\nreturn minn[t];\npushdown(l,r,t);\nll mid=(l+r)/2;\nll ans=inf;\nif(L&lt;=mid)\nans=min(querymin(l,mid,L,R,2*t),ans);\nif(R&gt;mid)\nans=min(querymin(mid+1,r,L,R,2*t+1),ans);\nreturn ans;\n}\nint main()\n{\nll n,m,a,b,c,d;\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(ll i=1;i&lt;=n;i++)\nscanf(\"%lld\",&amp;num[i]);\nbuild(1,n,1);\nfor(ll i=1;i&lt;=m;i++)\n{\nscanf(\"%lld\",&amp;a);\nif(a==1)\n{\nscanf(\"%lld%lld%lld\",&amp;b,&amp;c,&amp;d);\nadd(d,1,n,b+1,c+1,1);\n}\nelse if(a==2)\n{\nscanf(\"%lld%lld%lld\",&amp;b,&amp;c,&amp;d);\ndiv(d,1,n,b+1,c+1,1);\n}\nelse if(a==3)\n{\nscanf(\"%lld%lld\",&amp;b,&amp;c);\nprintf(\"%lld\\n\",querymin(1,n,b+1,c+1,1));\n}\nelse\n{\nscanf(\"%lld%lld\",&amp;b,&amp;c);\nprintf(\"%lld\\n\",querysum(1,n,b+1,c+1,1));\n}\n}\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2512&amp;pid=4</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_6","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>licunchun \u5728\u5212\u6c34\u3002</p> <p>licunchun \u6700\u8fd1\u8ff7\u4e0a\u4e86\u4e00\u6b3e\u6253\u602a\u517d\u7684\u6e38\u620f\u3002</p> <p>n\u4e2a\u602a\u517d\u7ad9\u6210\u4e86\u4e00\u6392\uff0c\u6bcf\u4e2a\u602a\u517d\u90fd\u6709\u4e00\u4e2a\u9632\u5fa1\u503cai\u3002</p> <p>licunchun \u4f1a\u6309\u7167\u4e00\u79cd\u5947\u602a\u7684\u987a\u5e8f\u6253\u602a\u517d\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u6253\u602a\u517d\uff0clicunchun \u9700\u8981\u627e\u5230\u602a\u517d\u5e8f\u5217\u4e2d\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e2\u7684\u9632\u5fa1\u6700\u5c0f\u503cx\uff0c\u627e\u5230x\u76842\u4e2a\u6700\u5c0f\u4e0b\u6807i,j\uff0c\u5c06\u7b2ci\u4e2a\u602a\u517d\u6253\u6b7b\u5e76\u4ece\u5e8f\u5217\u4e2d\u9664\u53bb\uff0c\u5c06\u7b2cj\u4e2a\u602a\u517d\u7684\u9632\u5fa1\u503caj\u6539\u4e3a2x\u3002</p> <p>licunchun \u60f3\u77e5\u9053\uff0c\u5728\u53cd\u590d\u8fdb\u884c\u6253\u602a\u517d\u540e\uff0c\u602a\u517d\u5e8f\u5217\u7684\u6700\u7ec8\u72b6\u6001\u662f\u600e\u6837\u7684\u3002</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_7","title":"\u8f93\u5165","text":"<p>\u51712\u884c\u3002</p> <p>\u7b2c1\u884c\uff0c\u8f93\u5165\u6b63\u6574\u6570n\uff0c\u8868\u793a\u602a\u517d\u4e2a\u6570\u3002</p> <p>\u7b2c1\u884c\uff0c\u8f93\u5165\u7b2ci\u4e2a\u602a\u517d\u7684\u9632\u5fa1\u503cai\u3002</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_8","title":"\u8f93\u51fa","text":"<p>\u51712\u884c\u3002</p> <p>\u7b2c1\u884c\uff0c\u8f93\u51fa\u5269\u4f59\u602a\u517d\u4e2a\u6570ans\u3002</p> <p>\u7b2c2\u884c\uff0c\u5171ans\u6570\uff0c\u6309\u987a\u5e8f\u8f93\u51fa\u4ecd\u7136\u5728\u602a\u517d\u5e8f\u5217\u4e2d\u7684\u602a\u517d\u7684\u9632\u5fa1\u503cai\u3002</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_9","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>7\n3 4 1 2 2 1 1\n</code></pre>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_10","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>4\n3 8 2 1 \n</code></pre> \u63d0\u793a  \u7b80\u5355\u7684\u6a21\u62df\uff0cpriority_queue\u548cpair\u7ed3\u5408\u8d77\u6765\u4f7f\u7528 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[155000]={0};\ntypedef pair&lt;ll,ll&gt; node_pair;\npriority_queue&lt;node_pair,vector&lt;node_pair&gt;,greater&lt;node_pair&gt; &gt; q;\nint main()\n{\nll n;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;a[i]);\nq.push(make_pair(a[i],i));\n}\nwhile(q.size()!=1)\n{\nnode_pair b1=q.top();\nq.pop();\nnode_pair b2=q.top();\nif(b1.first==b2.first)\n{\na[b2.second]*=2;\na[b1.second]=-1;\nq.pop();\nq.push(make_pair(a[b2.second],b2.second));\n}\n}\nqueue&lt;ll&gt;w;\nfor(ll i=1;i&lt;=n;i++)\n{\nif(a[i]!=-1)\nw.push(a[i]);\n}\nprintf(\"%d\\n\",w.size());\nwhile(!w.empty())\n{\nprintf(\"%lld \",w.front());\nw.pop();\n}\nreturn 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2512&amp;pid=6</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_11","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>licunchun \u627e\u5230\u4e86\u4e00\u5f20\u753b\u3002</p> <p>licunchun \u5b66\u4e60\u4e86\u819c\u6cd5\uff0c\u60f3\u8981\u4e00\u5757\u4e00\u5757\u5730\uff0c\u8ba9\u91cc\u9762\u7684\u989c\u8272\u6d88\u5931\u3002</p> <p>\u7167\u7247\u7684\u989c\u8272\u53ea\u6709\u4e00\u884c\u3002licunchun \u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u4e2d\u95f4\u4e00\u6bb5\u76f8\u540c\u989c\u8272\u7684\u4e00\u6bb5\u76f4\u63a5\u8ba9\u5b83\u6d88\u5931\u3002</p> <p>licunchun \u60f3\u77e5\u9053\u6240\u9700\u8981\u7684\u6700\u5c11\u6b21\u6570\u3002</p> <p>licunchun \u51a5\u601d\u82e6\u60f3\u4e861145141919810\u90fd\u6ca1\u6709\u60f3\u51fa\u6765\uff0c\u4e8e\u662f\u628a\u95ee\u9898\u4ea4\u7ed9\u4e86\u4f60\u3002</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_12","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u8f93\u5165T\uff0c\u8868\u793a\u6570\u636e\u7ec4\u6570</p> <p>\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff1a</p> <p>\u7b2c\u4e00\u884c\u7ed9\u5b9a\u4e00\u4e2an\uff0c\u8868\u793a\u7167\u7247\u7684\u957f\u5ea6\u3002</p> <p>\u7b2c\u4e8c\u884c\uff0c\u7ed9\u5b9a\u4e00\u4e32s\uff0c\u7528\u6765\u63cf\u8ff0\u8fd9\u4e2a\u7167\u7247\u7684\u989c\u8272\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u989c\u8272\u7684\u63cf\u8ff0\u7edf\u4e00\u7528\u5c0f\u5199\u5b57\u6bcd\uff0c\u4e00\u79cd\u5b57\u6bcd\u8868\u793a\u4e00\u79cd\u989c\u8272\u3002</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_13","title":"\u8f93\u51fa","text":"<p>\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636eT\uff0c\u4e00\u884c\u8f93\u51fa\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u6240\u9700\u8981\u7684\u6700\u5c11\u6b21\u6570\u3002</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_14","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3\n5\nabaca\n8\nabcddcba\n7\nlggmmro\n</code></pre>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_15","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>3\n4\n5\n</code></pre>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_16","title":"\u63d0\u793a","text":"<p> \u52a8\u6001\u89c4\u5212\uff0cdp[i][j]\u4ee3\u8868\u4ee5i\u4e3a\u5f00\u5934\u957f\u5ea6\u4e3aj\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\uff0c\u6700\u540edp[1][n]\u5373\u4e3a\u7b54\u6848\u3002</p> <p><pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint dp[600][600]= {0};\nchar a[600]=\"\";\nconst int inf=0x3f3f3f;\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nmemset(dp,inf,sizeof(dp));\nint n;\nscanf(\"%d\",&amp;n);\nscanf(\"%s\",a+1);\nfor(int i=1; i&lt;=n; i++)\ndp[i][1]=1;\nfor(int i=2; i&lt;=n; i++)\n{\nfor(int j=1; j&lt;=n-i+1; j++)\n{\nif(a[j]==a[i+j-1])\n{\ndp[j][i]=min(dp[j][i-1],dp[j+1][i-1]);\n}\nelse\n{\ndp[j][i]=min(dp[j][i-1],dp[j+1][i-1])+1;\n}\nfor(int k=1;k&lt;=i;k++)\n{\ndp[j][i]=min(dp[j][i],dp[j][k]+dp[j+k][i-k]);\n}\n}\n}\ncout&lt;&lt;dp[1][n]&lt;&lt;endl;\n}\nreturn 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2512&amp;pid=2</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_17","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u795e\u4ed9\u59d0\u59d0\u9047\u5230\u4e00\u4e2a\u96be\u9898\uff1a \u6709\u5b9d\u85cf\u51fa\u73b0\u5728\u59d0\u59d0\u9762\u524d\u540e\uff0c\u53c8\u51fa\u73b0\u4e00\u884c\u5b57\u8bf4\u201c\u8fd9\u91cc\u7684\u5404\u79cd\u7c7b\u578b\u7684\u5b9d\u7269\u662f\u653e\u5728\u957f\u65b9\u5f62\u7684\u77f3\u684c\u4e0a\uff0c\u4f60\u53ea\u80fd\u4e00\u6b21\u6027\u62ff\u8d70\u540c\u4e00\u79cd\u7c7b\u578b\u7684\u5b9d\u7269\uff0c\u5e76\u4e14\u8981\u6c42\u4f60\u62ff\u8d70\u7684\u5b9d\u7269\u5fc5\u987b\u4e3a\u67d0\u4e2a\u6b63\u65b9\u5f62\u5b50\u77e9\u9635\u4e2d\u67d0\u6761\u5bf9\u89d2\u7ebf\uff0c\u800c\u4e14\u6b64\u65f6\uff0c\u4f60\u6240\u9009\u62e9\u7684\u8fd9\u4e2a\u6b63\u65b9\u5f62\u5b50\u77e9\u9635\u4e2d\uff0c\u9664\u4e86\u5bf9\u89d2\u7ebf\u4f4d\u7f6e\uff0c\u5176\u5b83\u4f4d\u7f6e\u4e0d\u80fd\u51fa\u73b0\u4f60\u6240\u9700\u8981\u7684\u5b9d\u7269\u7c7b\u578b\uff08\u56e0\u4e3a\u8fd9\u6837\u4f1a\u5206\u5fc3\uff09\uff01\u4f60\u53ef\u4ee5\u628a\u77f3\u684c\u89c6\u4e3a01\u77e9\u9635\uff080\u8868\u793a\u5bf9\u5e94\u4f4d\u7f6e\u4e0d\u662f\u4f60\u6240\u8981\u7684\u7c7b\u578b\uff0c1\u8868\u793a\u5bf9\u5e94\u4f4d\u7f6e\u6709\u4f60\u6240\u8981\u7684\u7c7b\u578b\uff0c\u8fd9\u6837\u6709\u52a9\u4e8e\u4f60\u591a\u62ff\u4e9b\u5b9d\u7269\uff09\u201d\u3002 \u5f53\u7136\u7231\u7f8e\u7684\u59d0\u59d0\u9009\u62e9\u7684\u662f\u53ef\u4ee5\u7f8e\u5bb9\u517b\u989c\u7c7b\u578b\u7684\uff0c\u6240\u4ee5\u5979\u628a\u6240\u60f3\u8981\u7684\u5b9d\u7269(\u5373\u7f8e\u5bb9\u6c34)\u7528\uff11\u8868\u793a\uff0c\u4e0d\u60f3\u8981\u7684\u5c31\u75280\u8868\u793a\u3002\u540c\u65f6\u59d0\u59d0\u662f\u4e2a\u5f88\u8d2a\u5a6a(\u8d2a\u7f8e)\u7684\u795e\u4ed9\uff0c\u6240\u4ee5\u5979\u60f3\u4e00\u4e0b\u62ff\u8d70\u5c3d\u91cf\u591a\u7684\u5979\u6240\u8981\u7684\u7f8e\u5bb9\u54c1\u3002\u8bf7\u4f60\u5e2e\u795e\u4ed9\u59d0\u59d0\u7b97\u4e00\u4e0b\uff0c\u5979\u4e00\u4e0b\u6700\u591a\u53ef\u4ee5\u62ff\u591a\u5c11\u4e2a\uff1f</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_18","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6574\u6570n\u548cm\uff08n\uff0cm\u22651\uff09\uff0c\u63cf\u8ff0\u77f3\u684c\u7684\u89c4\u6a21\u3002\u63a5\u4e0b\u6765\u7684n\u884c\uff0c\u6bcf\u884c\u6709m\u4e2a\u6570\u5b57\uff08\u975e\u201c0\u201d\u5373\u201c1\u201d\uff09\u3002\u6bcf\u4e24\u4e2a\u6570\u5b57\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_19","title":"\u8f93\u51fa","text":"<p>\u53ea\u6709\u4e00\u4e2a\u6574\u6570\u2014\u2014\u795e\u4ed9\u4e00\u4e0b\u6700\u591a\u53ef\u4ee5\u62ff\u5230\u591a\u5c11\u4e2a\u5b9d\u7269\uff0c\u5360\u4e00\u884c\uff0c\u884c\u672b\u6709\u56de\u8f66\u3002</p>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_20","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4 6\n0 1 0 1 0 0\n0 0 1 0 1 0\n1 1 0 0 0 1\n0 1 1 0 1 0\n</code></pre>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_21","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>3\n</code></pre>"},{"location":"csdn/2020-08-02%E7%BA%BF%E6%AE%B5%E6%A0%91/#_22","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c\u6709n\uff0cm\u22642500 \u4e8c\u7ef4\u524d\u7f00\u548c</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint a[2550][2550]={0};\nint d[2550][2550]={0};\nint main()\n{\nint n,m;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1; i&lt;=n; i++)\n{\nfor(int j=1; j&lt;=m; j++)\n{\nscanf(\"%d\",&amp;a[i][j]);\nd[i][j]=d[i-1][j]+d[i][j-1]-d[i-1][j-1]+a[i][j];\n}\n}\nint max1=0;\nfor(int i=1; i&lt;=n; i++)\n{\nfor(int j=1; j&lt;=m; j++)\n{\nint cnt=0;\nwhile(i+cnt&lt;=n&amp;&amp;j+cnt&lt;=m&amp;&amp;a[i][j]&amp;&amp;a[i+cnt][j+cnt])\n{\nint k1=d[i+cnt][j+cnt]-d[i-1][j+cnt]-d[i+cnt][j-1]+d[i-1][j-1];\nint k2=d[i+cnt-1][j+cnt-1]-d[i-1][j+cnt-1]-d[i+cnt-1][j-1]+d[i-1][j-1];\nif(k1==cnt+1&amp;&amp;k1-k2==1)\n{\nmax1=max(max1,cnt+1);\ncnt++;\n}\nelse\nbreak;\n}\ncnt=0;\nwhile(i+cnt&lt;=n&amp;&amp;j-cnt&gt;=1&amp;&amp;a[i][j]&amp;&amp;a[i+cnt][j-cnt])\n{\nint k1=d[i+cnt][j]-d[i-1][j]-d[i+cnt][j-cnt-1]+d[i-1][j-1-cnt];\nint k2=d[i+cnt-1][j]-d[i-1][j]-d[i+cnt-1][j-cnt]+d[i-1][j-cnt];\nif(k1==cnt+1&amp;&amp;k1-k2==1)\n{\nmax1=max(max1,cnt+1);\ncnt++;\n}\nelse\nbreak;\n}\n}\n}\ncout&lt;&lt;max1&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-08-03/","title":"2020-08-03","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=1461&amp;pid=2</p>"},{"location":"csdn/2020-08-03/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u6821\u95e8\u5916\u6709\u5f88\u591a\u6811\uff0c\u6709\u82f9\u679c\u6811\uff0c\u9999\u8549\u6811\uff0c\u6709\u4f1a\u6254\u77f3\u5934\u7684\uff0c\u6709\u53ef\u4ee5\u5403\u6389\u8865\u5145\u4f53\u529b\u7684\u2026\u2026 \u5982\u4eca\u5b66\u6821\u51b3\u5b9a\u5728\u67d0\u4e2a\u65f6\u523b\u5728\u67d0\u4e00\u6bb5\u79cd\u4e0a\u4e00\u79cd\u6811\uff0c\u4fdd\u8bc1\u4efb\u4e00\u65f6\u523b\u4e0d\u4f1a\u51fa\u73b0\u4e24\u6bb5\u76f8\u540c\u79cd\u7c7b\u7684\u6811\uff0c\u73b0\u6709\u4e24\u4e2a\u64cd\u4f5c\uff1a K=1\uff0cK=1\uff0c\u8bfb\u5165l\u3001r\u8868\u793a\u5728\u533a\u95f4[l,r]\u4e2d\u79cd\u4e0a\u4e00\u79cd\u6811\uff0c\u6bcf\u6b21\u64cd\u4f5c\u79cd\u7684\u6811\u7684\u79cd\u7c7b\u90fd\u4e0d\u540c K=2\uff0c\u8bfb\u5165l,r\u8868\u793a\u8be2\u95eel~r\u4e4b\u95f4\u80fd\u89c1\u5230\u591a\u5c11\u79cd\u6811 \uff08l,r&gt;0\uff09</p>"},{"location":"csdn/2020-08-03/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884cn,m\u8868\u793a\u9053\u8def\u603b\u957f\u4e3an\uff0c\u5171\u6709m\u4e2a\u64cd\u4f5c \u63a5\u4e0b\u6765m\u884c\u4e3am\u4e2a\u64cd\u4f5c</p>"},{"location":"csdn/2020-08-03/#_3","title":"\u8f93\u51fa","text":"<p>\u5bf9\u4e8e\u6bcf\u4e2ak=2\u8f93\u51fa\u4e00\u4e2a\u7b54\u6848</p>"},{"location":"csdn/2020-08-03/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5 4\n1 1 3\n2 2 5\n1 2 4\n2 3 5\n</code></pre>"},{"location":"csdn/2020-08-03/#_5","title":"\u6837\u4f8b\u8f93\u51fa'","text":"<pre><code>1\n2\n</code></pre>"},{"location":"csdn/2020-08-03/#_6","title":"\u63d0\u793a","text":"<p>20%\u7684\u6570\u636e\u4fdd\u8bc1\uff0cn,m&lt;=100 60%\u7684\u6570\u636e\u4fdd\u8bc1\uff0cn &lt;=1000,m&lt;=50000 100%\u7684\u6570\u636e\u4fdd\u8bc1\uff0cn,m&lt;=50000 \u91c7\u7528\u62ec\u53f7\u5e8f\u5217+\u6811\u72b6\u6570\u7ec4\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\uff0c\u79cd\u6811\u4e3a\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u79cd\u6811\u7684\u8d77\u70b9\u6807\u8bb0\u4e00\u4e2a\u5de6\u62ec\u53f7\uff0c\u79cd\u6811\u7684\u7ec8\u70b9\u6807\u8bb0\u4e00\u4e2a\u53f3\u62ec\u53f7\uff0c\u7edf\u8ba1\u7684\u65f6\u5019\u8ba1\u7b97\u7ec8\u70b9\u524d\u5de6\u62ec\u53f7\u7684\u6570\u76ee\u548c\u8d77\u70b9\u524d\u53f3\u62ec\u53f7\u7684\u6570\u76ee\uff0c\u4e24\u4e2a\u505a\u5dee\u5373\u4e3a\u7b54\u6848\u3002</p> <p><pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll c1[500500]={0};\nll c2[500500]={0};\nll n,m;\nll lowbit(ll x)\n{\nreturn x&amp;(-x);\n}\nll update1(ll k,ll x)\n{\nfor(ll i=k;i&lt;=n;i+=lowbit(i))\nc1[i]+=x;\n}\nll update2(ll k,ll x)\n{\nfor(ll i=k;i&lt;=n;i+=lowbit(i))\nc2[i]+=x;\n}\nll sum1(ll k)\n{\nll ans=0;\nfor(ll i=k;i&gt;=1;i-=lowbit(i))\nans+=c1[i];\nreturn ans;\n}\nll sum2(ll k)\n{\nll ans=0;\nfor(ll i=k;i&gt;=1;i-=lowbit(i))\nans+=c2[i];\nreturn ans;\n}\nint main()\n{\nll a,b,c;\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(ll i=1;i&lt;=m;i++)\n{\nscanf(\"%lld%lld%lld\",&amp;a,&amp;b,&amp;c);\nif(a==1)\n{\nupdate1(b,1);  /// \u5de6\u62ec\u53f7\nupdate2(c,1);  /// \u53f3\u62ec\u53f7\n}\nelse\n{\nprintf(\"%lld\\n\",sum1(c)-sum2(b-1));\n}\n}\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=1461&amp;pid=4</p>"},{"location":"csdn/2020-08-03/#_7","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u6709\u4e00\u4e2an\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u521d\u59cb\u5747\u4e3a0\u3002\u6709m\u6761\u6307\u4ee4\uff0c\u8981\u4e48\u8ba9\u5176\u4e2d\u4e00\u6bb5\u8fde\u7eed\u5e8f\u5217\u6570\u5b57\u53cd\u8f6c\u2014\u20140\u53d81\uff0c1\u53d80\uff08\u64cd\u4f5c1\uff09\uff0c\u8981\u4e48\u8be2\u95ee\u67d0\u4e2a\u5143\u7d20\u7684\u503c\uff08\u64cd\u4f5c2\uff09\u3002 \u4f8b\u5982\u5f53n=20\u65f6\uff0c10\u6761\u6307\u4ee4\u5982\u4e0b\uff1a </p>"},{"location":"csdn/2020-08-03/#_8","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570n,m\uff0c\u8868\u793a\u6570\u7ec4\u7684\u957f\u5ea6\u548c\u6307\u4ee4\u7684\u6761\u6570\uff1b \u4ee5\u4e0bm\u884c\uff0c\u6bcf\u884c\u7684\u7b2c\u4e00\u4e2a\u6570t\u8868\u793a\u64cd\u4f5c\u7684\u79cd\u7c7b\uff1a \u82e5t=1\uff0c\u5219\u63a5\u4e0b\u6765\u6709\u4e24\u4e2a\u6570L,R\uff0c\u8868\u793a\u533a\u95f4[L,R]\u7684\u6bcf\u4e2a\u6570\u5747\u53cd\u8f6c\uff1b \u82e5t=2\uff0c\u5219\u63a5\u4e0b\u6765\u53ea\u6709\u4e00\u4e2a\u6570i\uff0c\u8868\u793a\u8be2\u95ee\u7684\u4e0b\u6807\u3002</p>"},{"location":"csdn/2020-08-03/#_9","title":"\u8f93\u51fa","text":"<p>\u6bcf\u4e2a\u64cd\u4f5c2\u8f93\u51fa\u4e00\u884c\uff08\u975e0\u53731\uff09\uff0c\u8868\u793a\u6bcf\u6b21\u64cd\u4f5c2\u7684\u56de\u7b54\u3002</p>"},{"location":"csdn/2020-08-03/#_10","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>20 10\n1 1 10\n2 6\n2 12\n1 5 12\n2 6\n2 15\n1 6 16\n1 11 17\n2 12\n2 6\n</code></pre>"},{"location":"csdn/2020-08-03/#_11","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>1\n0\n0\n0\n1\n1\n</code></pre>"},{"location":"csdn/2020-08-03/#_12","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e50%\u7684\u6570\u636e\uff0c1\u2264n\u2264103,1\u2264m\u2264104\uff1b \u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c1\u2264n\u2264105,1\u2264m\u22645\u00d7105\uff0c\u4fdd\u8bc1L\u2264R\u3002 \u4e0e\u4e0a\u4e00\u9053\u9898\u76ee\u540c\uff0c\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u53cd\u8f6c\u6b21\u6570\u5373\u53ef\u3002</p> <p><pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll c1[500500]={0};\nll c2[500500]={0};\nll p[500500]={0};\nll n,m;\nll lowbit(ll x)\n{\nreturn x&amp;(-x);\n}\nll update1(ll k,ll x)\n{\nfor(ll i=k;i&lt;=n;i+=lowbit(i))\nc1[i]+=x;\n}\nll update2(ll k,ll x)\n{\nfor(ll i=k;i&lt;=n;i+=lowbit(i))\nc2[i]+=x;\n}\nll sum1(ll k)\n{\nll ans=0;\nfor(ll i=k;i&gt;=1;i-=lowbit(i))\nans+=c1[i];\nreturn ans;\n}\nll sum2(ll k)\n{\nll ans=0;\nfor(ll i=k;i&gt;=1;i-=lowbit(i))\nans+=c2[i];\nreturn ans;\n}\nint main()\n{\nll a,b,c;\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(ll i=1;i&lt;=m;i++)\n{\nscanf(\"%lld\",&amp;a);\nif(a==1)\n{\nscanf(\"%lld%lld\",&amp;b,&amp;c);\nupdate1(b,1);  /// \u5de6\u62ec\u53f7\nupdate2(c,1);  /// \u53f3\u62ec\u53f7\n}\nelse\n{\nscanf(\"%lld\",&amp;b);\nprintf(\"%lld\\n\",(sum1(b)-sum2(b-1))%2);\n}\n}\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=1431&amp;pid=12</p>"},{"location":"csdn/2020-08-03/#_13","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u5728\u7ed9\u5b9a\u7684N\u4e2a\u6574\u6570A1\uff0cA2\u2026\u2026AN\u4e2d\u9009\u51fa\u4e24\u4e2a\u8fdb\u884cxor\u8fd0\u7b97\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u6700\u5927\u662f\u591a\u5c11\uff1f</p>"},{"location":"csdn/2020-08-03/#_14","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570N\uff0c\u7b2c\u4e8c\u884cN\u4e2a\u6574\u6570A1\uff5eAN\u3002</p>"},{"location":"csdn/2020-08-03/#_15","title":"\u8f93\u51fa","text":"<p>\u4e00\u4e2a\u6574\u6570\u8868\u793a\u7b54\u6848\u3002</p>"},{"location":"csdn/2020-08-03/#_16","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3\n1 2 3\n</code></pre>"},{"location":"csdn/2020-08-03/#_17","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>3\n</code></pre>"},{"location":"csdn/2020-08-03/#_18","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e100%\u7684\u6570\u636e: N&lt;=10^5, 0&lt;=Ai&lt;2^31\u3002 \u7528\u5b57\u5178\u6811\u5b58\u4e8c\u8fdb\u5236\uff0c\u627e\u6700\u5927\u7684\u5f02\u6216\u503c\u3002 <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint a[1005000]={0};\nint tree[5000500][3]={0};\nint tot=1;///\u5fc5\u987b\u4ece1\u5f00\u59cb\nint in(int x)\n{\nint p=1;\nfor(int i=30;i&gt;=0;i--)\n{\nint k=x&gt;&gt;i&amp;1;\nif(tree[p][k]==0)\ntree[p][k]=++tot;\np=tree[p][k];\n}\n}\nint out(int x)\n{\nint p=1,ans=0;\nfor(int i=30;i&gt;=0;i--)\n{\nint k=x&gt;&gt;i&amp;1;\nif(tree[p][!k])\n{\nans=ans*2+!k;\np=tree[p][!k];\n}\nelse\n{\nans=ans*2+k;\np=tree[p][k];\n}\n}\nreturn ans;\n}\nint main()\n{\nint n;\nscanf(\"%d\",&amp;n);\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%d\",&amp;a[i]);\nint max1=0;\nfor(int i=1;i&lt;=n;i++)\n{\nin(a[i]);\nint num=out(a[i]);\nmax1=max(max1,num^a[i]);\n}\ncout&lt;&lt;max1&lt;&lt;endl;\nreturn 0;\n}\n</code></pre></p>"},{"location":"csdn/2020-08-04/","title":"2020-08-04","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=1404&amp;pid=5</p>"},{"location":"csdn/2020-08-04/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u8bbeX\u662f\u6709N\u4e2a\u4e0d\u76f8\u540c\u6574\u6570\u7684\u96c6\u5408\u3002\u628aX\u4e2d\u6bcf\u4e2a\u6570\u7528\u4e24\u6b21\uff0c\u6392\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a2N\u7684\u6570\u5217S\uff0c\u8981\u6c42S\u4e2d\u4efb\u610f\u4e00\u4e2a\u6570i\u4e0e\u53e6\u4e00\u4e2a\u4e0e\u5b83\u76f8\u540c\u7684i\u4e4b\u95f4\u6b63\u597d\u95f4\u9694i\u4e2a\u6570\u5b57\u3002</p>"},{"location":"csdn/2020-08-04/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c1\u884c\u4e00\u4e2a\u6574\u6570N(I\u2264N\u22648)\uff1b \u7b2c2\u884c\u6709N\u4e2a\u6574\u6570\uff08\u6bcf\u4e2a\u6570\u4e0d\u76f8\u540c\uff0c\u5e76\u4e14\u57280\u523016\u4e4b\u95f4\uff09\uff0c\u8868\u793a\u96c6\u5408\u4e2d\u7684\u6570\u3002</p>"},{"location":"csdn/2020-08-04/#_3","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fa\u4e00\u4e2a\u6ee1\u8db3\u4e0a\u9762\u8981\u6c42\u7684\u957f\u5ea6\u4e3a2N\u7684\u6570\u5217\uff1b\u82e5\u6709\u591a\u4e2a\u89e3\uff0c\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\uff1b\u82e5\u6ca1\u6709\u89e3\uff0c\u8f93\u51fa-1\u3002</p>"},{"location":"csdn/2020-08-04/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5\n0 1 2 3 4 \n</code></pre>"},{"location":"csdn/2020-08-04/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>0 0 2 3 4 2 1 3 1 4 \n</code></pre> DFS\u641c\u7d22\u6bcf\u4e00\u79cd\u60c5\u51b5\u5373\u53ef\u3002</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint vis[100]={0};\nint data[100]={0};\nint n;\nint a[100]={0};\nint dfs(int k)\n{\nif(k==2*n+1)\n{\nfor(int i=1;i&lt;=2*n;i++)\n{\ncout&lt;&lt;data[i]&lt;&lt;' ';\n}\ncout&lt;&lt;endl;\nexit(0);\n}\nif(data[k]==-1)\n{\nfor(int l=0;l&lt;n;l++)\n{\nint i=a[l];\nif(k+i+1&lt;=2*n&amp;&amp;!vis[i]&amp;&amp;data[k]==-1&amp;&amp;data[k+i+1]==-1)\n{\ndata[k]=data[k+i+1]=i;\nvis[i]=1;\ndfs(k+1);\nvis[i]=0;\ndata[k]=data[k+i+1]=-1;\n}\n}\n}\nelse\ndfs(k+1);\n}\nint main()\n{\nstd::ios::sync_with_stdio(false);\nstd::cin.tie(0);\nmemset(data,-1,sizeof(data));\ncin&gt;&gt;n;\nfor(int i=0;i&lt;n;i++)\ncin&gt;&gt;a[i];\nsort(a,a+n);\ndfs(1);\ncout&lt;&lt;-1&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-08-05/","title":"2020-08-05","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=1442&amp;pid=0</p>"},{"location":"csdn/2020-08-05/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u5b9a\u6574\u6570N(1\u2264N\u226410^6)\uff0c\u8bd5\u628a\u9636\u4e58N!\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u6309\u7167\u7b97\u672f\u57fa\u672c\u5b9a\u7406\u7684\u5f62\u5f0f\u8f93\u51fa\u5206\u89e3\u7ed3\u679c\u4e2d\u7684pi\u548cci\u5373\u53ef\u3002</p>"},{"location":"csdn/2020-08-05/#_2","title":"\u8f93\u5165","text":"<p>\u4e00\u4e2a\u6574\u6570N\u3002</p>"},{"location":"csdn/2020-08-05/#_3","title":"\u8f93\u51fa","text":"<p>N! \u5206\u89e3\u8d28\u56e0\u6570\u540e\u7684\u7ed3\u679c\uff0c\u5171\u82e5\u5e72\u884c\uff0c\u6bcf\u884c\u4e00\u5bf9pi, ci\uff0c\u8868\u793a\u542b\u6709pi^ci\u9879\u3002\u6309\u7167pi\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8f93\u51fa\u3002</p>"},{"location":"csdn/2020-08-05/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5\n</code></pre>"},{"location":"csdn/2020-08-05/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>2 3\n3 1\n5 1\n</code></pre>"},{"location":"csdn/2020-08-05/#_6","title":"\u63d0\u793a","text":"<p>5! = 120 = 2^3 * 3 * 5</p>"},{"location":"csdn/2020-08-05/#_7","title":"\u89e3\u6790\uff1a","text":"<p>\u6b27\u62c9\u7b5b\u6cd5 https://blog.csdn.net/WHZ2018/article/details/81233937 <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint pd[1005000]={0};\nll c[1005000]={0};\nll n,k;\nint main()\n{\nll cnt=0;\nscanf(\"%lld\",&amp;n);\npd[0]=pd[1]=1;\nfor(ll i=2;i&lt;=n;i++)\n{\nif(!pd[i])\nc[cnt++]=i;\nfor(ll j=0;j&lt;cnt&amp;&amp;c[j]*i&lt;=n;j++)\n{\npd[c[j]*i]=1;\nif(i%c[j]==0)\nbreak;\n}\n}\nfor(ll i=0;i&lt;cnt;i++)\n{\nll sum=0;\nfor(ll j=c[i];j&lt;=n;j=j*c[i])\nsum+=n/j;\nprintf(\"%lld %lld\\n\",c[i],sum);\n}\nreturn 0;\n}\n</code></pre>  \u4efb\u4e00\u5927\u4e8e2\u7684\u5076\u6570\u90fd\u53ef\u5199\u6210\u4e24\u4e2a\u8d28\u6570\u4e4b\u548c\uff0c\u5206\u5947\u5076\u8ba8\u8bba\u5373\u53ef\u3002 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll gcd(ll a,ll b)\n{\nif(b==0)\nreturn a;\nelse\nreturn gcd(b,a%b);\n}\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nll n,k;\nscanf(\"%lld%lld\",&amp;n,&amp;k);\nif(n%k!=0)\n{\nputs(\"-1 -1 -1\");continue;\n}\nll w=n/k,a,b,c;\nint flag=1;\nif(w%2==1)\n{\na=3,b=2,c=w-a-b;\nwhile(c&gt;2)\n{\nif(gcd(a,b)==1&amp;&amp;gcd(b,c)==1&amp;&amp;gcd(a,c)==1)\n{\nflag=0;\nbreak;\n}\nb++;c--;\n}\n}\nelse\n{\na=2,b=2,c=w-a-b;\nwhile(c&gt;2)\n{\nif(gcd(a,b)==1&amp;&amp;gcd(b,c)==1&amp;&amp;gcd(a,c)==1)\n{\nflag=0;\nbreak;\n}\nb++;c--;\n}\n}\nif(flag)\nputs(\"-1 -1 -1\");\nelse\nprintf(\"%lld %lld %lld\\n\",a*k,b*k,c*k);\n}\nreturn 0;\n}\n</code></pre></p>"},{"location":"csdn/2020-08-05/#_8","title":"\u9898\u76ee","text":"<p>https://ac.nowcoder.com/acm/contest/6871/E</p>"},{"location":"csdn/2020-08-05/#_9","title":"\u4ee3\u7801","text":"<p>\u65b9\u6cd51\uff1a</p> <p><pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nmap&lt;ll,ll&gt;w;\nchar a[2000]= {0};\nll b[3000]= {0};\nll two()\n{\nfor(ll i=1; i&lt;=8; i++)\n{\nll w1;\nif(a[i]&gt;='0'&amp;&amp;a[i]&lt;='9')\n{\nw1=a[i]-'0';\n}\nelse if(a[i]=='A')\n{\nw1=10;\n}\nelse if(a[i]=='B')\n{\nw1=11;\n}\nelse if(a[i]=='C')\n{\nw1=12;\n}\nelse if(a[i]=='D')\n{\nw1=13;\n}\nelse if(a[i]=='E')\n{\nw1=14;\n}\nelse if(a[i]=='F')\n{\nw1=15;\n}\nfor(ll j=i*4; j&gt;(i-1)*4; j--)\n{\nb[j]=w1%2;\nw1=w1/2;\n}\n}\n}\nll six()\n{\nll sum=0;\nfor(ll i=1; i&lt;=8; i++)\n{\nsum=0;\nfor(ll j=4*(i-1)+1;j&lt;=4*i;j++)\nsum=sum*2+b[j];\nif(sum&lt;=9&amp;&amp;sum&gt;=0)\nprintf(\"%d\",sum);\nelse if(sum==10)\nprintf(\"A\");\nelse if(sum==11)\nprintf(\"B\");\nelse if(sum==12)\nprintf(\"C\");\nelse if(sum==13)\nprintf(\"D\");\nelse if(sum==14)\nprintf(\"E\");\nelse if(sum==15)\nprintf(\"F\");\n}\nprintf(\"\\n\");\n}\nll n,m,p,k,summ=1,q,sum1,o;\nint main()\n{\nscanf(\"%lld%lld%lld\",&amp;n,&amp;m,&amp;p);\nfor(ll i=0; i&lt;(1&lt;&lt;(m-p)); i++)\n{\nscanf(\"%lld\",&amp;k);\nw[k]=i;\n}\nscanf(\"%lld\",&amp;q);\nfor(ll i=1; i&lt;=q; i++)\n{\nscanf(\"%s\",a+1);\ntwo();\nsum1=0;\nfor(ll i=1; i&lt;=32-p; i++)\nsum1=sum1*2+b[i];\nif(w.find(sum1)==w.end())\n{\nputs(\"interrupt!\");\n}\nelse\n{\no=w[sum1];\nfor(ll i=32-p; i&gt;=1; i--)\n{\nb[i]=o%2;\no=o/2;\n}\nsix();\n}\n}\nreturn 0;\n}\n</code></pre> \u65b9\u6cd52\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nmap&lt;ll,ll&gt;w;\nint main()\n{\nll n,m,p;\nscanf(\"%lld%lld%lld\",&amp;n,&amp;m,&amp;p);\nfor (ll i=0;i&lt;1&lt;&lt;(m-p);i++)\n{\nll pos;\nscanf(\"%lld\",&amp;pos);\nw[pos]=i;\n}\nll q;\nscanf(\"%lld\",&amp;q);\nwhile(q--)\n{\nll tmp;\nscanf(\"%llX\",&amp;tmp);\nprintf(\"%lld\\n\",tmp);\nll t1=tmp/(1&lt;&lt;p),t2=tmp%(1&lt;&lt;p);\nif (w.find(t1)==w.end())\n{\nprintf(\"interrupt!\\n\");\n}\nelse\n{\nprintf(\"%08llX\\n\",w[t1]*(1&lt;&lt;p)+t2);\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-08-06%E7%BA%BF%E6%AE%B5%E6%A0%91/","title":"2020-08-06\u7ebf\u6bb5\u6811","text":"<p>https://www.luogu.com.cn/problem/P3372 \u7ebf\u6bb5\u6811\u533a\u95f4\u6c42\u548c\u548c\u533a\u95f4\u4fee\u6539\u6a21\u677f <pre><code>#include&lt;bits/stdc++.h&gt;\n#define MAXN 1000001\n#define ll long long\nusing namespace std;\nunsigned ll num[MAXN],sum[MAXN&lt;&lt;2],lazy[MAXN&lt;&lt;2];\nll pushup(ll t)\n{\nsum[t]=sum[2*t]+sum[2*t+1];\n}\nll pushlazy(ll t,ll lz,ll len)\n{\nsum[t]+=lz*len;\nlazy[t]+=lz;\n}\nll pushdown(ll l,ll r,ll t)\n{\nif(lazy[t]!=0)\n{\nll mid=(l+r)/2;\npushlazy(2*t,lazy[t],mid-l+1);\npushlazy(2*t+1,lazy[t],r-mid);\nlazy[t]=0;\n}\n}\nll build(ll l,ll r,ll t)\n{\nlazy[t]=0;\nif(l==r)\n{\nsum[t]=num[l];\nreturn 0;\n}\nll mid=(l+r)/2;\nbuild(l,mid,t*2);\nbuild(mid+1,r,2*t+1);\npushup(t);\n}\nll add(ll x,ll l,ll r,ll L,ll R,ll t)\n{\nif(l&gt;=L&amp;&amp;r&lt;=R)\n{\nlazy[t]+=x;\nsum[t]+=(r-l+1)*x;\nreturn 0;\n}\npushdown(l,r,t);\nll mid=(l+r)/2;\nif(L&lt;=mid)\nadd(x,l,mid,L,R,2*t);\nif(R&gt;mid)\nadd(x,mid+1,r,L,R,2*t+1);\npushup(t);\n}\nll querysum(ll l,ll r,ll L,ll R,ll t)\n{\nif(l&gt;=L&amp;&amp;r&lt;=R)\nreturn sum[t];\npushdown(l,r,t);\nll mid=(l+r)/2;\nll ans=0;\nif(L&lt;=mid)\nans+=querysum(l,mid,L,R,2*t);\nif(R&gt;mid)\nans+=querysum(mid+1,r,L,R,2*t+1);\nreturn ans;\n}\nint main()\n{\nll n,m,a,b,c,d;\nscanf(\"%lld\",&amp;n);\nscanf(\"%lld\",&amp;m);\nfor(ll i=1;i&lt;=n;i++)\nscanf(\"%lld\",&amp;num[i]);\nbuild(1,n,1);\nfor(ll i=1;i&lt;=m;i++)\n{\nscanf(\"%lld\",&amp;a);\nif(a==1)\n{\nscanf(\"%lld%lld%lld\",&amp;b,&amp;c,&amp;d);\nadd(d,1,n,b,c,1);\n}\nelse if(a==2)\n{\nscanf(\"%lld%lld\",&amp;b,&amp;c);\nprintf(\"%lld\\n\",querysum(1,n,b,c,1));\n}\n}\n}\n</code></pre></p>"},{"location":"csdn/2020-08-07/","title":"2020-08-07","text":"<p>http://acm.hdu.edu.cn/showproblem.php?pid=1285</p>"},{"location":"csdn/2020-08-07/#problem-description","title":"Problem Description","text":"<p>\u6709N\u4e2a\u6bd4\u8d5b\u961f\uff081&lt;=N&lt;=500\uff09\uff0c\u7f16\u53f7\u4f9d\u6b21\u4e3a1\uff0c2\uff0c3\uff0c\u3002\u3002\u3002\u3002\uff0cN\u8fdb\u884c\u6bd4\u8d5b\uff0c\u6bd4\u8d5b\u7ed3\u675f\u540e\uff0c\u88c1\u5224\u59d4\u5458\u4f1a\u8981\u5c06\u6240\u6709\u53c2\u8d5b\u961f\u4f0d\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u6392\u540d\uff0c\u4f46\u73b0\u5728\u88c1\u5224\u59d4\u5458\u4f1a\u4e0d\u80fd\u76f4\u63a5\u83b7\u5f97\u6bcf\u4e2a\u961f\u7684\u6bd4\u8d5b\u6210\u7ee9\uff0c\u53ea\u77e5\u9053\u6bcf\u573a\u6bd4\u8d5b\u7684\u7ed3\u679c\uff0c\u5373P1\u8d62P2\uff0c\u7528P1\uff0cP2\u8868\u793a\uff0c\u6392\u540d\u65f6P1\u5728P2\u4e4b\u524d\u3002\u73b0\u5728\u8bf7\u4f60\u7f16\u7a0b\u5e8f\u786e\u5b9a\u6392\u540d\u3002</p>"},{"location":"csdn/2020-08-07/#input","title":"Input","text":"<p>\u8f93\u5165\u6709\u82e5\u5e72\u7ec4\uff0c\u6bcf\u7ec4\u4e2d\u7684\u7b2c\u4e00\u884c\u4e3a\u4e8c\u4e2a\u6570N\uff081&lt;=N&lt;=500\uff09\uff0cM\uff1b\u5176\u4e2dN\u8868\u793a\u961f\u4f0d\u7684\u4e2a\u6570\uff0cM\u8868\u793a\u63a5\u7740\u6709M\u884c\u7684\u8f93\u5165\u6570\u636e\u3002\u63a5\u4e0b\u6765\u7684M\u884c\u6570\u636e\u4e2d\uff0c\u6bcf\u884c\u4e5f\u6709\u4e24\u4e2a\u6574\u6570P1\uff0cP2\u8868\u793a\u5373P1\u961f\u8d62\u4e86P2\u961f\u3002</p>"},{"location":"csdn/2020-08-07/#output","title":"Output","text":"<p>\u7ed9\u51fa\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u6392\u540d\u3002\u8f93\u51fa\u65f6\u961f\u4f0d\u53f7\u4e4b\u95f4\u6709\u7a7a\u683c\uff0c\u6700\u540e\u4e00\u540d\u540e\u9762\u6ca1\u6709\u7a7a\u683c\u3002</p> <p>\u5176\u4ed6\u8bf4\u660e\uff1a\u7b26\u5408\u6761\u4ef6\u7684\u6392\u540d\u53ef\u80fd\u4e0d\u662f\u552f\u4e00\u7684\uff0c\u6b64\u65f6\u8981\u6c42\u8f93\u51fa\u65f6\u7f16\u53f7\u5c0f\u7684\u961f\u4f0d\u5728\u524d\uff1b\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u662f\u6b63\u786e\u7684\uff0c\u5373\u8f93\u5165\u6570\u636e\u786e\u4fdd\u4e00\u5b9a\u80fd\u6709\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u6392\u540d\u3002</p>"},{"location":"csdn/2020-08-07/#sample-input","title":"Sample Input","text":"<pre><code>4 3\n1 2\n2 3\n4 3\n</code></pre>"},{"location":"csdn/2020-08-07/#sample-output","title":"Sample Output","text":"<p><pre><code>1 2 4 3\n</code></pre> \u62d3\u6251\u6392\u5e8f</p> <p><pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nvector&lt;int&gt;g[600];\nint in[600]= {0};\npriority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt;que;\nqueue&lt;int&gt;k;\nint n,m,x,y;\nint toposort()\n{\nfor(int i=1; i&lt;=n; i++)\n{\nif(!in[i])\nque.push(i);\n}\nwhile(!que.empty())\n{\nint now=que.top();\nque.pop();\nk.push(now);\nfor(int i=0; i&lt;g[now].size(); i++)\n{\nint t=g[now][i];\nin[t]--;\nif(!in[t])\nque.push(t);\n}\n}\n}\nint main()\n{\nwhile(scanf(\"%d%d\",&amp;n,&amp;m)!=EOF)\n{\nfor(int i=1;i&lt;=n;i++)\ng[i].clear(),in[i]=0;\nfor(int i=1; i&lt;=m; i++)\n{\nscanf(\"%d%d\",&amp;x,&amp;y);\ng[x].push_back(y);\nin[y]++;\n}\ntoposort();\nint flag=0;\nwhile(!k.empty())\n{\nif(!flag)\n{\nprintf(\"%d\",k.front());\nflag=1;\n}\nelse\n{\nprintf(\" %d\",k.front());\n}\nk.pop();\n}\nprintf(\"\\n\");\n}\nreturn 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2537&amp;pid=5</p>"},{"location":"csdn/2020-08-07/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u6709\u4e00\u4e2an\u00d7n\u5927\u5c0f\u7684\u65b9\u5f62\u5e73\u9762\uff0c\u4e0a\u9762\u6709n\u00d7n\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9(i,j)\u7684\u503cwij\u662f\u7ed9\u5b9a\u7684\u3002</p> <p>\u5bf9\u4e8e\u70b9(i,j)\uff0c\u6211\u4eec\u79f0\u4e0e\u5176\u6a2a\u7eb5\u4e0b\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u90fd\u4e0d\u8d85\u8fc71\u7684\u70b9\u4e3a\u4e0e\u5176\u76f8\u90bb\u7684\u70b9\u3002</p> <p>\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u70b9\u7684\u96c6\u5408S\u4e3a\u6781\u5927\u70b9\u7fa4\uff08\u6781\u5c0f\u70b9\u7fa4\uff09\u5f53\u4e14\u4ec5\u5f53\uff1a 1.S\u4e2d\u6240\u6709\u70b9\u7684\u503c\u76f8\u540c\u3002 2.S\u4e2d\u6240\u6709\u70b9\u90fd\u76f4\u63a5\u6216\u95f4\u63a5\u76f8\u90bb\u3002 3.\u5bf9\u4e8e\u4efb\u610f\u76f8\u90bb\u4e24\u70b9s1,s2\uff0c\u6ee1\u8db3s1\u5c5e\u4e8eS\u4e14s2\u4e0d\u5c5e\u4e8eS\uff0c\u90fd\u6709s1\u7684\u503c&gt;s2\u7684\u503c\uff08\u6781\u5927\u70b9\u7fa4\uff09\uff0c\u6216\u8005s1\u7684\u503c&lt;s2\u7684\u503c\uff08\u6781\u5c0f\u70b9\u7fa4\uff09\u3002 \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5e73\u9762\uff0c\u4f60\u8981\u6c42\u51fa\u6781\u5927\u70b9\u7fa4\u548c\u6781\u5c0f\u70b9\u7fa4\u7684\u6570\u91cf\u3002\u7279\u522b\u7684\uff0c\u5982\u679c\u6240\u6709\u70b9\u7684\u503c\u90fd\u76f8\u540c\uff0c\u90a3\u4e48\u6574\u4e2a\u5e73\u9762\u5c31\u65e2\u662f\u6781\u5927\u70b9\u7fa4\uff0c\u53c8\u662f\u6781\u5c0f\u70b9\u7fa4\u3002</p> <p>\u7531\u4e8e\u5de8\u795e ctt \u6b63\u5728\u548c\u5de8\u795e lzh \u4e92\u76f8\u540a\u6253\u6765\u540a\u6253\u53bb\uff0c\u4e8e\u662f\u53ea\u597d\u628a\u8fd9\u4e2a\u4efb\u52a1\u4ea4\u7ed9\u4e86\u4f60\u3002</p>"},{"location":"csdn/2020-08-07/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570n\uff0c\u8868\u793a\u5730\u56fe\u7684\u5927\u5c0f\u3002</p> <p>\u63a5\u4e0b\u6765\u4e00\u4e2an\u00d7n\u7684\u77e9\u9635\uff0c\u8868\u793a\u5e73\u9762\u4e0a\u6bcf\u4e2a\u70b9\u7684\u503c\u3002</p>"},{"location":"csdn/2020-08-07/#_3","title":"\u8f93\u51fa","text":"<p>\u5305\u542b\u4e24\u4e2a\u6570\uff0c\u5206\u522b\u8868\u793a\u6781\u5927\u70b9\u7fa4\u548c\u6781\u5c0f\u70b9\u7fa4\u7684\u6570\u91cf\u3002</p>"},{"location":"csdn/2020-08-07/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 5 2 2 2 1 1 1 1 2 2 1 1 1 1 1 1 1 2 2 1 2 1 2 2 2 2 \u3010\u6837\u4f8b2\u3011 5 4 6 7 3 1 4 4 6 5 5 5 5 5 2 7 4 6 2 4 7 6 1 0 1 6</p>"},{"location":"csdn/2020-08-07/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 2 1 \u3010\u6837\u4f8b2\u3011 3 3</p>"},{"location":"csdn/2020-08-07/#_6","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca\uff1a \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6807\u84dd\u7684\u4e3a\u6781\u5927\u70b9\u7fa4\uff0c\u6807\u6a59\u7684\u4e3a\u6781\u5c0f\u70b9\u7fa4\u3002  \u6837\u4f8b2\u89e3\u91ca\uff1a \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6807\u84dd\u7684\u4e3a\u6781\u5927\u70b9\u7fa4\uff0c\u6807\u6a59\u7684\u4e3a\u6781\u5c0f\u70b9\u7fa4\u3002   DFS+\u6807\u8bb0\u3002</p> <p><pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef unsigned long long ull;\ntypedef long long ll;\nll a[2000][2000]={0};\nll dx[]={0,1,1,1,0,0,-1,-1,-1};\nll dy[]={0,1,0,-1,1,-1,1,0,-1};\nll vis[2000][2000]={0};\nll vis1[2000][2000]={0};\nll n;\nll sum=1;\nll dfs(ll x,ll y)\n{\nvis1[x][y]=vis[x][y];\nfor(ll i=1;i&lt;=8;i++)\n{\nll x1=x+dx[i];\nll y1=y+dy[i];\nif(x1&lt;=0||x1&gt;n||y1&lt;=0||y1&gt;n)\ncontinue;\nif(a[x1][y1]==a[x][y]&amp;&amp;vis[x][y]!=vis[x1][y1])\nreturn -1;\nif(a[x1][y1]==a[x][y]&amp;&amp;vis[x][y]==vis[x1][y1]&amp;&amp;!vis1[x1][y1])\n{\nif(dfs(x1,y1)==-1)\nreturn -1;\n}\n}\n}\nint main()\n{\nll l;\nint flagh=0;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\n{\nfor(ll j=1;j&lt;=n;j++)\n{\nscanf(\"%lld\",&amp;a[i][j]);\nif(i==1&amp;&amp;j==1)\n{\nl=a[i][j];\n}\nelse\n{\nif(l!=a[i][j])\nflagh=1;\n}\n}\n}\nif(!flagh)\n{\ncout&lt;&lt;1&lt;&lt;' '&lt;&lt;1&lt;&lt;endl;\nreturn 0;\n}\nfor(ll i=1;i&lt;=n;i++)\n{\nfor(ll j=1;j&lt;=n;j++)\n{\nll flag1=1;\nll flag2=1;\nfor(ll k=1;k&lt;=8;k++)\n{\nll x=i+dx[k];\nll y=j+dy[k];\nif(x&gt;n||x&lt;=0||y&gt;n||y&lt;=0)\ncontinue;\nif(a[x][y]&gt;a[i][j])\n{\nflag1=0;\n}\nif(a[x][y]&lt;a[i][j])\n{\nflag2=0;\n}\n}\nif(flag1)\n{\nvis[i][j]=1;\n}\nif(flag2)\n{\nvis[i][j]=2;\n}\n}\n}\nll sum1=0,sum2=0;\nfor(ll i=1;i&lt;=n;i++)\n{\nfor(ll j=1;j&lt;=n;j++)\n{\nif(vis[i][j]!=0&amp;&amp;!vis1[i][j])\n{\nif(dfs(i,j)==-1)\ncontinue;\nif(vis[i][j]==1)\nsum1++;\nelse\nsum2++;\n}\n}\n}\ncout&lt;&lt;sum1&lt;&lt;' '&lt;&lt;sum2&lt;&lt;endl;\nreturn 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2537&amp;pid=1</p>"},{"location":"csdn/2020-08-07/#_7","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u897f\u2f50\u62c9\u5148\u77e5\u7cfb\u7edf\u662f\u2f00\u4e2a\u5f3a\u2f24\u7684\u2f3c\u7075\u6307\u6570\u76d1\u6d4b\u2f79\u7d61\uff0c\u80fd\u4ee5\u58f0\u50cf\u626b\u63cf\u4e3b\u52a8\u76d1\u63a7\u5e02\u2ea0\u7684\u2f3c\u667a\u4e0e\u7cbe\u795e\u72b6\u6001\u3002\u4e3a\u4e86\u5224\u5b9a\u51fa\u66f4\u590d\u6742\u7684\u2f08\u7c7b\u2f3c\u7406\u53c2\u6570\uff0c\u897f\u2f50\u62c9\u7cfb\u7edf\u7eb3\u2f0a\u4e86\u4e0d\u540c\u4e8e\u65e2\u5b58\u2f08\u7c7b\u89c4\u8303\u7684\u8d85\u7fa4\u2f08\u683c\u2500\u2500\u4e0d\u4f1a\u968f\u610f\u548c\u4ed6\u2f08\u4ea7\u2f63\u5171\u9e23\uff0c\u4e5f\u4e0d\u4f1a\u611f\u60c5\u2f64\u4e8b\uff0c\u80fd\u4ee5\u2fae\u2f08\u7c7b\u7684\u773c\u5149\u6765\u4fef\u77b0\u5e76\u88c1\u5b9a\u2f08\u7c7b\u3002 \u88ab\u7eb3\u2f0a\u7684\u8d85\u7fa4\u2f08\u683c\u4f1a\u76f8\u4e92\u5f71\u54cd\uff0c\u5171\u540c\u5904\u7406\u6570\u636e\u3002\u4ed6\u4eec\u4e4b\u95f4\u5177\u4f53\u7684\u5f71\u54cd\u2f45\u5f0f\u5f62\u5982\u2f00\u5f20\u2f46\u5411\u56fe\uff0c\u5982\u679c\u4f60\u5bf9\u2f00\u4e2a\u8282\u70b9\u8fdb\u2f8f\u64cd\u4f5c\uff0c\u548c\u8fd9\u4e2a\u8282\u70b9\u76f8\u90bb\u7684\u8282\u70b9\u4e5f\u4f1a\u53d7\u5230\u76f8\u540c\u7684\u5f71\u54cd\u3002 \u64cd\u4f5c\u6709\u2f00\u79cd\uff1a\u4f7f\u2f00\u4e2a\u8282\u70b9\u7684\u6743\u503c\u52a0\u4e0a\u3002 \u540c\u65f6\u4f60\u8fd8\u5e0c\u671b\u8be2\u95ee\u2f00\u4e2a\u8282\u70b9\u7684\u6743\u503c(\u6bcf\u2f00\u4e2a\u8282\u70b9\u7684\u521d\u59cb\u6743\u503c\u4e3a0)\u3002</p>"},{"location":"csdn/2020-08-07/#_8","title":"\u8f93\u5165","text":"<p>\u7b2c\u2f00\u2f8f\u8bfb\u2f0an,m,Q,\u8868\u2f70\u8282\u70b9\u4e2a\u6570\u548c\u8fb9\u6570,\u4ee5\u53ca\u64cd\u4f5c\u548c\u8be2\u95ee\u7684\u603b\u6570\u3002 \u63a5\u4e0b\u6765m\u2f8f\uff0c\u6bcf\u2f8f\u4e24\u4e2a\u6570ui,vi\u8868\u2f70ui,vi\u4e4b\u95f4\u6709\u8fde\u8fb9\u3002 \u63a5\u4e0b\u6765Q\uff0c\u6bcf\u2f8f\u5148\u8bfb\u2f0a\u2f00\u4e2atype type=0\u8868\u2f70\u2f00\u4e2a\u8be2\u95ee\uff0c\u8bfb\u2f0a\u2f00\u4e2ax,\u8868\u2f70\u8be2\u95eex\u8282\u70b9\u7684\u6743\u503c\u3002 type=1\u8868\u2f70\u2f00\u4e2a\u64cd\u4f5c\uff0c\u8bfb\u2f0ax,y,\u8868\u2f70\u5c06x\u8282\u70b9\u7684\u6743\u503c\u52a0\u4e0ay\u3002\uff08\u4e0ex\u76f8\u90bb\u7684\u8282\u70b9\u6743\u503c\u4e5f\u8981\u52a0\u4e0ay\uff09</p>"},{"location":"csdn/2020-08-07/#_9","title":"\u8f93\u51fa","text":"<p>\u5bf9\u4e8e\u6bcf\u2f00\u4e2a\u8be2\u95ee\u8f93\u51fa\u2f00\u2f8f\uff0c\u8868\u2f70\u8be5\u8282\u70b9\u7684\u6743\u503c\u3002</p>"},{"location":"csdn/2020-08-07/#_10","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4 4 4\n1 2\n1 3\n1 4\n2 3\n1 1 1\n0 2\n1 3 3\n0 2\n</code></pre>"},{"location":"csdn/2020-08-07/#_11","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>1\n4\n</code></pre>"},{"location":"csdn/2020-08-07/#_12","title":"\u63d0\u793a","text":"<p>n,m,Q\u22643\u00d7105\uff0cy\u22641000</p> <p>\u5206\u5757\u6cd5</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nvector&lt;ll&gt;v[1000500];\nvector&lt;ll&gt;g[1000500];\nvector&lt;ll&gt;b[1000500];\nll c[1000500]={0};\nint main()\n{\nregister ll n,m,q,x,y;\nscanf(\"%lld%lld%lld\",&amp;n,&amp;m,&amp;q);\nregister ll k=sqrt(m);\nfor(register ll i=1;i&lt;=m;i++)\n{\nscanf(\"%lld%lld\",&amp;x,&amp;y);\nv[x].push_back(y);\nv[y].push_back(x);\n}\nregister ll s=n+1;\nfor(register ll i=1;i&lt;=n;i++)\n{\nif(v[i].size()&gt;=k)\n{\nregister ll t=0;\nfor(ll j=0;j&lt;v[i].size();j++)\n{\nt++;\nb[v[i][j]].push_back(s);\nif(t%k==0)\n{\ng[i].push_back(s);\ns++;\nt=0;\n}\n}\nif(t%k)\n{\ng[i].push_back(s);\ns++;\n}\n}\n}\nregister ll status;\nfor(register ll i=1;i&lt;=q;i++)\n{\nscanf(\"%lld\",&amp;status);\nif(status==0)\n{\nscanf(\"%lld\",&amp;x);\nll t=c[x];\nfor(register ll j=0;j&lt;b[x].size();j++)\n{\nt+=c[b[x][j]];\n}\nprintf(\"%lld\\n\",t);\n}\nelse\n{\nscanf(\"%lld%lld\",&amp;x,&amp;y);\nc[x]+=y;\nif(v[x].size()&gt;=k)\n{\nfor(register ll j=0;j&lt;g[x].size();j++)\n{\nc[g[x][j]]+=y;\n}\n}\nelse\n{\nfor(register ll j=0;j&lt;v[x].size();j++)\n{\nc[v[x][j]]+=y;\n}\n}\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-08-08/","title":"2020-08-08","text":"<p>http://icpc.upc.edu.cn/problem.php?id=14431</p>"},{"location":"csdn/2020-08-08/#_1","title":"\u9898\u76ee","text":"<p>14431: \u7ebf\u6bb5</p>"},{"location":"csdn/2020-08-08/#_2","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u5e73\u9762\u4e0a\u6709N\u4e2a\u4e0d\u76f8\u4ea4\u7684\u7ebf\u6bb5\uff0c\u7f16\u53f71\u5230N\uff0c\u9700\u8981\u6a21\u62df\u4e0b\u843d\uff0c\u5373\u7ebf\u6bb5\u4e0d\u65cb\u8f6c\u5730\u5782\u76f4\u5411\u4e0b\u79fb\u52a8\u5230X\u8f74\u4e0b\u9762\u3002\u5982\u4e0b\u56fe\uff1a </p> <p>\u73b0\u5728\u8981\u4f60\u6765\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u5411\u4e0b\u79fb\u52a8\u4e00\u4e2a\u7ebf\u6bb5\uff0cN\u6b21\u540e\u79fb\u8d70\u5168\u90e8\u7ebf\u6bb5\u3002\u4f46\u6709\u4e00\u4e2a\u8981\u6c42\uff1a\u79fb\u52a8\u4e00\u4e2a\u7ebf\u6bb5\u65f6\u4e0d\u80fd\u548c\u5176\u4ed6\u7ebf\u6bb5\u76f8\u78b0\u3002\u56e0\u6b64\u9009\u62e9\u7ebf\u6bb5\u7684\u6b21\u5e8f\u5f88\u91cd\u8981\u3002\u8bf7\u8f93\u51fa\u4f60\u5236\u5b9a\u7684\u6b21\u5e8f\u65b9\u6848\uff0c\u65b9\u6848\u53ef\u80fd\u6709\u591a\u4e2a\uff0c\u4f60\u53ea\u8981\u8f93\u51fa\u5176\u4e2d\u7684\u4e00\u4e2a\u3002</p>"},{"location":"csdn/2020-08-08/#_3","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u5305\u542b 1 \u4e2a\u6574\u6570 N\uff0c1\u2264N\u22645000\u3002 \u4e0b\u9762 N \u884c\uff0c\u6bcf\u884c 4 \u4e2a\u6574\u6570 X1,Y1,X2,Y2\uff0c0 \u2264 X1,Y1,X2,Y2 \u2264 10000\u3002\u8868\u793a\u7b2c 1 \u53f7\u5230\u7b2c N \u53f7\u7ebf\u6bb5\u7684 2 \u4e2a \u7aef\u70b9\u3002</p>"},{"location":"csdn/2020-08-08/#_4","title":"\u8f93\u51fa","text":"<p>\u4e00\u884c N \u4e2a\u6574\u6570\uff0c\u662f 1 \u5230 N \u7684\u4e00\u4e2a\u6392\u5217\uff0c\u8868\u793a\u6309\u6b21\u5e8f\u5148\u540e\u4e0b\u843d\u7684\u7ebf\u6bb5\u7f16\u53f7\u3002</p>"},{"location":"csdn/2020-08-08/#_5","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 4 1 3 2 2 1 1 3 2 2 4 7 3 3 3 5 3</p> <p>\u3010\u6837\u4f8b2\u3011 4 0 0 1 1 1 2 0 3 2 2 3 3 4 0 3 1</p> <p>\u3010\u6837\u4f8b3\u3011 3 4 6 5 5 2 1 15 1 3 2 8 7</p>"},{"location":"csdn/2020-08-08/#_6","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 2 4 1 3 \u3010\u6837\u4f8b2\u3011 4 3 1 2 \u3010\u6837\u4f8b3\u3011 2 3 1</p> <p>\u62d3\u6251\u6392\u5e8f\uff0c\u679a\u4e3e\u5e76\u5224\u65ad\u4e24\u4e24\u4e4b\u95f4\u7684\u6b21\u5e8f\uff0c\u7136\u540e\u518d\u8dd1\u4e00\u904d\u62d3\u6251\u6392\u5e8f\u5373\u53ef\u3002</p> <p><pre><code>/**\n *\n * \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u795e\u517d\u51fa\u6ca1\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n *\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u250f\u2513\u3000\u3000\u3000\u250f\u2513+ +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u250f\u251b\u253b\u2501\u2501\u2501\u251b\u253b\u2513 + +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503 \u3000\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2501\u3000\u3000\u3000\u2503 ++ + + +\n *\u3000\u3000\u3000\u3000\u3000\u3000 \u2588\u2588\u2588\u2588\u2501\u2588\u2588\u2588\u2588 \u2503+\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503 +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u253b\u3000\u3000\u3000\u2503\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503 + +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2517\u2501\u2513\u3000\u3000\u3000\u250f\u2501\u251b\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503 + + + +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u3000Code is far away from bug with the animal protecting\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503 + \u3000\u3000\u3000\u3000\u795e\u517d\u4fdd\u4f51,\u4ee3\u7801\u65e0bug\u3000\u3000\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503\u3000\u3000+\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000 \u3000\u3000\u2517\u2501\u2501\u2501\u2513 + +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2523\u2513\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u250f\u251b\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2517\u2513\u2513\u250f\u2501\u2533\u2513\u250f\u251b + + + +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u252b\u252b\u3000\u2503\u252b\u252b\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2517\u253b\u251b\u3000\u2517\u253b\u251b+ + + +\n *\n * \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u611f\u89c9\u840c\u840c\u54d2\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n */\n#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct node\n{\n    int x1,x2,y1,y2;\n};\nnode a[5050]= {0};\nvector&lt;int&gt;w[5050];\nint in[5050]= {0};\nint pd(int x,int y)\n{\n    int min1=max(a[x].x1,a[y].x1),max1=min(a[x].x2,a[y].x2);\n    if(min1&gt;max1)\n        return 0;\n    double kx=(a[x].y1-a[x].y2)*1.0/(a[x].x1-a[x].x2);\n    if(a[x].x1==a[x].x2)\n        kx=0;\n    double ky=(a[y].y1-a[y].y2)*1.0/(a[y].x1-a[y].x2);\n    if(a[y].x1==a[y].x2)\n        ky=0;\n    double x1=a[x].y1+kx*1.0*(min1-a[x].x1);\n    double x2=a[x].y1+kx*1.0*(max1-a[x].x1);\n    double y1=a[y].y1+ky*1.0*(min1-a[y].x1);\n    double y2=a[y].y1+ky*1.0*(max1-a[y].x1);\n    if(min(x1,x2)&gt;min(y1,y2)||max(x1,x2)&gt;max(y1,y2))\n        return 1;\n    else\n        return 0;\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&amp;n);\n    for(int i=1; i&lt;=n; i++)\n    {\n        scanf(\"%d%d%d%d\",&amp;a[i].x1,&amp;a[i].y1,&amp;a[i].x2,&amp;a[i].y2);\n        if(a[i].x1&gt;a[i].x2)\n        {\n            swap(a[i].x1,a[i].x2);\n            swap(a[i].y1,a[i].y2);\n        }\n    }\n    for(int i=1; i&lt;=n; i++)\n    {\n        for(int j=1; j&lt;=n; j++)\n        {\n            if(i==j)\n                continue;\n            if(pd(i,j))\n            {\n                w[j].push_back(i);\n                in[i]++;\n            }\n        }\n    }\n    priority_queue&lt;int,vector&lt;int&gt;,less&lt;int&gt; &gt;w1;\n    queue&lt;int&gt;ans;\n    for(int i=1; i&lt;=n; i++)\n    {\n        if(in[i]==0)\n            w1.push(i);\n    }\n    while(!w1.empty())\n    {\n        int x=w1.top();\n        w1.pop();\n        ans.push(x);\n        for(int i=0; i&lt;w[x].size(); i++)\n        {\n            in[w[x][i]]--;\n            if(in[w[x][i]]==0)\n            {\n                w1.push(w[x][i]);\n            }\n        }\n    }\n    while(!ans.empty())\n    {\n        printf(\"%d \",ans.front());\n        ans.pop();\n    }\n    return 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?id=14850</p>"},{"location":"csdn/2020-08-08/#_7","title":"\u9898\u76ee","text":"<p>14850: \u5956\u91d1</p>"},{"location":"csdn/2020-08-08/#_8","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7531\u4e8e\u65e0\u654c\u7684\u51e1\u51e1\u57282005\u5e74\u4e16\u754c\u82f1\u4fca\u5e05\u6c14\u7537\u603b\u51b3\u9009\u4e2d\u80dc\u51fa\uff0cYali Company\u603b\u7ecf\u7406Mr.Z\u5fc3\u60c5\u597d\uff0c\u51b3\u5b9a\u7ed9\u6bcf\u4f4d\u5458\u5de5\u53d1\u5956\u91d1\u3002\u516c\u53f8\u51b3\u5b9a\u4ee5\u6bcf\u4e2a\u4eba\u672c\u5e74\u5728\u516c\u53f8\u7684\u8d21\u732e\u4e3a\u6807\u51c6\u6765\u8ba1\u7b97\u4ed6\u4eec\u5f97\u5230\u5956\u91d1\u7684\u591a\u5c11\u3002 \u4e8e\u662fMr.Z\u4e0b\u4ee4\u53ec\u5f00m\u65b9\u4f1a\u8c08\u3002\u6bcf\u4f4d\u53c2\u52a0\u4f1a\u8c08\u7684\u4ee3\u8868\u63d0\u51fa\u4e86\u81ea\u5df1\u7684\u610f\u89c1\uff1a\u201c\u6211\u8ba4\u4e3a\u5458\u5de5a\u7684\u5956\u91d1\u5e94\u8be5\u6bd4b\u9ad8\uff01\u201dMr.Z\u51b3\u5b9a\u8981\u627e\u51fa\u4e00\u79cd\u5956\u91d1\u65b9\u6848\uff0c\u6ee1\u8db3\u5404\u4f4d\u4ee3\u8868\u7684\u610f\u89c1\uff0c\u4e14\u540c\u65f6\u4f7f\u5f97\u603b\u5956\u91d1\u6570\u6700\u5c11\u3002\u6bcf\u4f4d\u5458\u5de5\u5956\u91d1\u6700\u5c11\u4e3a100\u5143\u3002</p>"},{"location":"csdn/2020-08-08/#_9","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570n,m\uff0c\u8868\u793a\u5458\u5de5\u603b\u6570\u548c\u4ee3\u8868\u6570\uff1b \u4ee5\u4e0bm\u884c\uff0c\u6bcf\u884c2\u4e2a\u6574\u6570a,b\uff0c\u8868\u793a\u67d0\u4e2a\u4ee3\u8868\u8ba4\u4e3a\u7b2ca\u53f7\u5458\u5de5\u5956\u91d1\u5e94\u8be5\u6bd4\u7b2cb\u53f7\u5458\u5de5\u9ad8\u3002</p>"},{"location":"csdn/2020-08-08/#_10","title":"\u8f93\u51fa","text":"<p>\u82e5\u65e0\u6cd5\u627e\u5230\u5408\u6cd5\u65b9\u6848\uff0c\u5219\u8f93\u51fa\u201cPoor Xed\u201d\uff1b\u5426\u5219\u8f93\u51fa\u4e00\u4e2a\u6570\u8868\u793a\u6700\u5c11\u603b\u5956\u91d1\u3002</p>"},{"location":"csdn/2020-08-08/#_11","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2 1\n1 2\n</code></pre>"},{"location":"csdn/2020-08-08/#_12","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>201\n</code></pre>"},{"location":"csdn/2020-08-08/#_13","title":"\u63d0\u793a","text":"<p>80\uff05\u7684\u6570\u636e\u6ee1\u8db3n&lt;=1000\uff0cm&lt;=2000\uff1b 100\uff05\u7684\u6570\u636e\u6ee1\u8db3n&lt;=10000\uff0cm&lt;=20000\u3002</p> <p>\u62d3\u6251\u6392\u5e8f <pre><code>/**\n *\n * \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u795e\u517d\u51fa\u6ca1\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n *\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u250f\u2513\u3000\u3000\u3000\u250f\u2513+ +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u250f\u251b\u253b\u2501\u2501\u2501\u251b\u253b\u2513 + +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503 \u3000\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2501\u3000\u3000\u3000\u2503 ++ + + +\n *\u3000\u3000\u3000\u3000\u3000\u3000 \u2588\u2588\u2588\u2588\u2501\u2588\u2588\u2588\u2588 \u2503+\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503 +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u253b\u3000\u3000\u3000\u2503\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503 + +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2517\u2501\u2513\u3000\u3000\u3000\u250f\u2501\u251b\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503 + + + +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u3000Code is far away from bug with the animal protecting\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503 + \u3000\u3000\u3000\u3000\u795e\u517d\u4fdd\u4f51,\u4ee3\u7801\u65e0bug\u3000\u3000\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000\u3000\u3000\u2503\u3000\u3000+\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u3000 \u3000\u3000\u2517\u2501\u2501\u2501\u2513 + +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2523\u2513\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u250f\u251b\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2517\u2513\u2513\u250f\u2501\u2533\u2513\u250f\u251b + + + +\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2503\u252b\u252b\u3000\u2503\u252b\u252b\n *\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2517\u253b\u251b\u3000\u2517\u253b\u251b+ + + +\n *\n * \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u611f\u89c9\u840c\u840c\u54d2\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n */\n#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nvector&lt;int&gt;w[105050];\nint in[105050]= {0};\nint ans[100500]={0};\nstruct node\n{\n    int x,y;\n};\nint main()\n{\n    int n,m,a,b;\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1; i&lt;=m; i++)\n    {\n        scanf(\"%d%d\",&amp;a,&amp;b);\n        w[b].push_back(a);\n        in[a]++;\n    }\n    queue&lt;node&gt;w1;\n    for(int i=1; i&lt;=n; i++)\n    {\n        if(in[i]==0)\n            w1.push(node{i,100}),ans[i]=100;\n    }\n    ll sum=0;\n    while(!w1.empty())\n    {\n        node p=w1.front();\n        w1.pop();\n        for(int i=0; i&lt;w[p.x].size(); i++)\n        {\n            in[w[p.x][i]]--;\n            ans[w[p.x][i]]=max(ans[w[p.x][i]],p.y+1);\n            if(in[w[p.x][i]]==0)\n            {\n                w1.push(node{w[p.x][i],ans[w[p.x][i]]});\n            }\n        }\n    }\n    for(int i=1;i&lt;=n;i++)\n    {\n        if(in[i]!=0)  ///\u5224\u73af\n        {\n            printf(\"Poor Xed\\n\");\n            return 0;\n        }\n        sum+=ans[i];\n    }\n    printf(\"%lld\\n\",sum);\n    return 0;\n}\n</code></pre></p>"},{"location":"csdn/2020-08-09/","title":"2020-08-09","text":"<p>http://icpc.upc.edu.cn/problem.php?id=14866</p>"},{"location":"csdn/2020-08-09/#_1","title":"\u9898\u76ee","text":"<p>14866: \u9ad8\u5174\u5929\u6570</p>"},{"location":"csdn/2020-08-09/#_2","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u5c0fX\u6027\u683c\u5f88\u72ec\u7279\uff0c\u5982\u679c\u5979\u4eca\u5929\u9ad8\u5174\u5ea6\u6bd4\u4e0a\u6b21\u4e00\u6837\u6216\u66f4\u9ad8\uff0c\u5979\u5c31\u4f1a\u5f88\u5584\u826f\uff0c\u76f8\u53cd\uff0c\u5982\u679c\u5979\u4eca\u5929\u9ad8\u5174\u5ea6\u6bd4\u4e0a\u6b21\u4f4e\uff0c\u5979\u5c31\u4f1a\u5f88\u51f6\uff01\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u5c0fX\u5728N\u5929\u91cc\u6bcf\u5929\u7684\u9ad8\u5174\u5ea6M\u3002\u6839\u636e\u8fd9N\u5929\u4e2d\u5979\u6bcf\u5929\u9ad8\u5174\u5ea6M\uff0c\u5408\u7406\u5b89\u6392\u4e0e\u5979\u76f8\u5904\u65f6\u95f4\uff0c\u4f7f\u5927\u5bb6\u4e0e\u5c0fX\u53cb\u597d\u76f8\u5904\u5c3d\u91cf\u591a\u5929\u6570\u3002\u73b0\u5728\u8981\u6c42\u8ba1\u7b97\u51fa\u6700\u591a\u80fd\u548c\u5c0fX\u53cb\u597d\u76f8\u5904\u591a\u5c11\u5929\u3002</p>"},{"location":"csdn/2020-08-09/#_3","title":"\u8f93\u5165","text":"<p>\u51712\u884c\uff0c\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2aN\uff0c\u7b2c\u4e8c\u884c\u4e3aN\u4e2a\u6570\uff0c\u4e3a\u5c0fX\u6bcf\u5929\u7684\u9ad8\u5174\u7a0b\u5ea6M\u3002</p>"},{"location":"csdn/2020-08-09/#_4","title":"\u8f93\u51fa","text":"<p>\u51711\u4e2a\u6570\uff0c\u6700\u591a\u80fd\u548c\u5c0fX\u53cb\u597d\u76f8\u5904\u591a\u5c11\u5929\u3002</p>"},{"location":"csdn/2020-08-09/#_5","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5\n2 3 5 6 4 \n</code></pre>"},{"location":"csdn/2020-08-09/#_6","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>4\n</code></pre>"},{"location":"csdn/2020-08-09/#_7","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e30%\u7684\u6570\u636e\uff0cN&lt;=8000 \u5bf9\u4e8e100%\u7684\u6570\u636e\uff0cN\uff0cM&lt;31000</p>"},{"location":"csdn/2020-08-09/#_8","title":"\u89e3\u6790","text":"<p>\u4e8c\u5206\u6cd5\u6c42\u6700\u5927\u4e0a\u5347\u5b50\u5e8f\u5217 \u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\uff1a\u9898\u76ee\u6240\u8bf4\u7684\u201c\u6bd4\u4e0a\u6b21\u201d\u662f\u6307\u6211\u4eec\u548c\u5979\u76f8\u5904\u7684\u4e0a\u4e00\u6b21\uff0c\u800c\u4e0d\u662f\u6307\u524d\u4e00\u5929\u3002\u4f8b\u5982\uff0c\u7b2c\u4e09\u5929\u548c\u5979\u76f8\u5904\u540e\u9694\u4e86\u4e24\u5929\u540e\u5373\u7b2c\u516d\u5929\u53c8\u4e0e\u5979\u76f8\u5904\uff0c\u5e94\u8be5\u62ff\u7b2c\u516d\u5929\u5fc3\u60c5\u548c\u7b2c\u4e09\u5929\u5fc3\u60c5\u6bd4\u8f83\u3002 <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[300500]={0};\nll c[300500]={0};\nint main()\n{\n    ll n,cnt=0;\n    scanf(\"%lld\",&amp;n);\n    for(ll i=1;i&lt;=n;i++)\n        scanf(\"%lld\",a+i);\n    for(ll i=1;i&lt;=n;i++)\n    {\n        if(a[i]&gt;=c[cnt])\n        {\n            c[++cnt]=a[i];\n        }\n        else\n        {\n            ll l=1,r=cnt+1;\n            while(l&lt;r)\n            {\n                ll mid=(l+r)/2;\n                if(a[i]&gt;c[mid])\n                {\n                    l=mid+1;\n                }\n                else if(a[i]&lt;c[mid])\n                {\n                    r=mid;\n                }\n                else if(a[i]==c[mid])\n                {\n                    l=mid+1;\n                }\n            }\n            c[l]=min(c[l],a[i]);\n        }\n    }\n    printf(\"%lld\\n\",cnt);\n    return 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?id=15036</p>"},{"location":"csdn/2020-08-09/#_9","title":"\u9898\u76ee","text":"<p>15036: \u9009\u62e9</p>"},{"location":"csdn/2020-08-09/#_10","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u54c8\u54c8\u54c8\uff0c\u5feb\u5fd8\u6389\u4f60\u7684\u70e6\u5fc3\u4e8b\uff0c\u627e\u5f20\u4f4d\u5b50\u5750\u4e0b\u6765\u3002 beny\u548cfife\u4e24\u4eba\u4f5c\u4e3a\u5f7c\u6b64\u7089\u8fb9\u597d\u53cb\uff0c\u51b3\u5b9a\u6765\u4e00\u573a\u60ca\u5fc3\u52a8\u9b44\u7684\u53cb\u8c0a\uff08py\uff09\u8d5b\u3002 fife\u6709n\u4e2a\u968f\u4ece\uff0c\u7b2ci\u4e2a\u968f\u4ece\u6709\u4e00\u4e2a\u80fd\u529b\u503c\uff0c\u4e3aA[i]\u3002 beny\u4e5f\u6709\u5bf9\u5e94\u7684n\u4e2a\u968f\u4ece\uff0c\u7b2ci\u4e2a\u968f\u4ece\u540c\u6837\u4e5f\u6709\u4e00\u4e2a\u80fd\u529b\u503c\uff0c\u4e3aB[i]\u3002 \u7136\u540e\uff0c\u4e00\u7fa4\u968f\u4ece\u7684\u6218\u6597\u529b\u4e3a\u8fd9\u7fa4\u968f\u4ece\u80fd\u529b\u503c\u7684\u603b\u548c\u3002 \u73b0\u5728\uff0cbeny\u548cfife\u6bcf\u4e2a\u4eba\u90fd\u6d3e\u51fa\u81ea\u5df1\u7b2cL\u4e2a\u5230\u7b2cR\u4e2a\uff08\u5171R-L+1\u4e2a\u968f\u4ece\uff09\uff0c\u6765\u4e00\u51b3\u9ad8\u4e0b\u3002 \u4f46\u662f\u7531\u4e8e\u4ed6\u4eec\u5728\u4e00\u7edd\u9ad8\u4e0b\u7684\u540c\u65f6\u8981py\u4efb\u52a1\uff0c\u4ed6\u4eec\u8981\u4f60\u9009\u62e9\u4e00\u5bf9(L,R)\uff0c\u4f7f\u53cc\u65b9\u6218\u6597\u529b\u5dee\u8ddd\u6700\u5c0f\u3002 \u4ed6\u4eec\u8981\u4f60\u8f93\u51fa\u6700\u5c0f\u7684\u6218\u6597\u529b\u5dee\u8ddd\uff08\u6218\u6597\u529b\u8f83\u5927\u7684\u51cf\u6218\u6597\u529b\u8f83\u5c0f\u7684\uff09\u3002</p>"},{"location":"csdn/2020-08-09/#_11","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570n\u3002 \u7b2c\u4e8c\u884cn\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6570\u7ec4A\u3002 \u7b2c\u4e09\u884cn\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6570\u7ec4B\u3002</p>"},{"location":"csdn/2020-08-09/#_12","title":"\u8f93\u51fa","text":"<p>\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570\uff0c \u8868\u793a\u6700\u5c0f\u7684\u6218\u6597\u529b\u5dee\u8ddd\u3002</p>"},{"location":"csdn/2020-08-09/#_13","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 3 4 2 3 3 4 2 \u3010\u6837\u4f8b2\u3011 5 38 19 5 17 3 15 22 0 6 17</p>"},{"location":"csdn/2020-08-09/#_14","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 0 \u3010\u6837\u4f8b2\u3011 1</p>"},{"location":"csdn/2020-08-09/#_15","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca\uff1aL = 1\uff0c R = 3  \u6837\u4f8b2\u89e3\u91ca\uff1aL = 2\uff0c R = 5   set\u7684\u5e94\u7528</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[300500]={0};\nll b[300500]={0};\nll c[300500]={0};\nset&lt;ll&gt;::iterator it1,it2;\nll x,y,n,ans=99999999999;\nset&lt;ll&gt;w;\nint main()\n{\n    scanf(\"%lld\",&amp;n);\n    for(ll i=1;i&lt;=n;i++)\n        scanf(\"%lld\",&amp;a[i]);\n    for(ll i=1;i&lt;=n;i++)\n    {\n        scanf(\"%lld\",&amp;b[i]);\n        c[i]=c[i-1]+b[i]-a[i];\n    }\n    w.insert(0);\n    w.insert(99999999999);\n    for(ll i=1;i&lt;=n;i++)\n    {\n        it1=w.upper_bound(c[i]);\n        it2=it1;\n        it2--;\n        x=*it1;\n        y=*it2;\n        ans=min(ans,abs(c[i]-x));\n        ans=min(ans,abs(c[i]-y));\n        w.insert(c[i]);\n    }\n    printf(\"%lld\\n\",ans);\n}\n</code></pre>"},{"location":"csdn/2020-08-10/","title":"2020-08-10","text":"<p>http://icpc.upc.edu.cn/problem.php?id=14581</p>"},{"location":"csdn/2020-08-10/#_1","title":"\u9898\u76ee","text":"<p>14581: Knight</p>"},{"location":"csdn/2020-08-10/#_2","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>There is a knight - the chess piece - at the origin (0,0) of a two-dimensional grid. When the knight is at the square (i,j), it can be moved to either (i+1,j+2) or (i+2,j+1). In how many ways can the knight reach the square (X,Y)? Find the number of ways modulo 109+7.</p> <p>Constraints \u00b71\u2264X\u2264106 \u00b71\u2264Y\u2264106 \u00b7All values in input are integers.</p>"},{"location":"csdn/2020-08-10/#_3","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format:</p> <p>X Y</p>"},{"location":"csdn/2020-08-10/#_4","title":"\u8f93\u51fa","text":"<p>Print the number of ways for the knight to reach (X,Y) from (0,0), modulo 109+7.</p>"},{"location":"csdn/2020-08-10/#_5","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 3 3 \u3010\u6837\u4f8b2\u3011 2 2 \u3010\u6837\u4f8b3\u3011 999999 999999</p>"},{"location":"csdn/2020-08-10/#_6","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 2 \u3010\u6837\u4f8b2\u3011 0 \u3010\u6837\u4f8b3\u3011 151840682</p>"},{"location":"csdn/2020-08-10/#_7","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca There are two ways: (0,0)\u2192(1,2)\u2192(3,3) and (0,0)\u2192(2,1)\u2192(3,3). \u6837\u4f8b2\u89e3\u91ca The knight cannot reach (2,2). \u6837\u4f8b3\u89e3\u91ca Print the number of ways modulo 109+7.</p> <p>\u9006\u5143\u6c42\u7ec4\u5408\u6570</p> <p><pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst int N=1e9+7;\nlong long int w[2005500]={0};\nlong long int p(long long x,long long y)\n{\n    long long int sum1=1;\n    while(y)\n    {\n        if (y&amp;1)\n            sum1=(sum1*x)%N;\n        y&gt;&gt;=1;\n        x=(x*x)%N;\n    }\n    return sum1%N;\n}\nlong long int c1(long long int x,long long int y)\n{\n    if(x&lt;y)\n        swap(x,y);\n    return w[x]*p(w[x-y]*w[y]%N,N-2)%N;\n}\nint main()\n{\n    register ll a,b;\n    cin&gt;&gt;a&gt;&gt;b;\n    ll y=2*a-b;\n    ll x=2*b-a;\n    if(x%3!=0||y%3!=0||x&lt;0||y&lt;0)\n    {\n        printf(\"0\\n\");\n        return 0;\n    }\n    x=x/3;\n    y=y/3;\n    ll w2=x+y;\n    w[0]=1;\n    for(ll i=1;i&lt;=2000500;i++)\n        w[i]=(w[i-1]*i)%N;\n    ll w3=(c1(x,w2)+N)%N;//\u9632\u6b62\u8d1f\u6570\u51fa\u73b0\uff0c\u53d6\u4f59\u65f6\u6ce8\u610f\n    cout&lt;&lt;w3&lt;&lt;endl;\n    return 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?id=14625</p>"},{"location":"csdn/2020-08-10/#_8","title":"\u9898\u76ee","text":"<p>14625: Max-Min Sums</p>"},{"location":"csdn/2020-08-10/#_9","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>For a finite set of integers X, let f(X)=maxX\u2212minX. Given are N integers A1,...,AN. We will choose K of them and let S be the set of the integers chosen. If we distinguish elements with different indices even when their values are the same, there are NCK ways to make this choice. Find the sum of f(S) over all those ways. Since the answer can be enormous, print it mod(109+7).</p> <p>Constraints \u00b71\u2264N\u2264105 \u00b71\u2264K\u2264N \u00b7|Ai|\u2264109</p>"},{"location":"csdn/2020-08-10/#_10","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format:</p> <p>N K A1 ... AN</p>"},{"location":"csdn/2020-08-10/#_11","title":"\u8f93\u51fa","text":"<p>Print the answer mod(109+7).</p>"},{"location":"csdn/2020-08-10/#_12","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 4 2 1 1 3 4 \u3010\u6837\u4f8b2\u3011 6 3 10 10 10 -10 -10 -10 \u3010\u6837\u4f8b3\u3011 3 1 1 1 1 \u3010\u6837\u4f8b4\u3011 10 6 1000000000 1000000000 1000000000 1000000000 1000000000 0 0 0 0 0</p>"},{"location":"csdn/2020-08-10/#_13","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 11 \u3010\u6837\u4f8b2\u3011 360 \u3010\u6837\u4f8b3\u3011 0 \u3010\u6837\u4f8b4\u3011 999998537</p>"},{"location":"csdn/2020-08-10/#_14","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca There are six ways to choose S: {1,1},{1,3},{1,4},{1,3},{1,4},{3,4} (we distinguish the two  1s). The value of f(S) for these choices are 0,2,3,2,3,1, respectively, for the total of 11. \u6837\u4f8b2\u89e3\u91ca There are 20 ways to choose S. In 18 of them, f(S)=20, and in 2 of them, f(S)=0. \u6837\u4f8b4\u89e3\u91ca Print the sum mod(109+7).</p> <p>\u7edf\u8ba1\u6700\u5927\u503c\u51fa\u73b0\u7684\u6b21\u6570\u548c\u6700\u5c0f\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6700\u540e\u6c42\u548c\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst int N=1e9+7;\nlong long int w[2005500]={0};\nll num[100500]={0};\nlong long int p(long long x,long long y)\n{\n    long long int sum1=1;\n    while(y)\n    {\n        if (y&amp;1)\n            sum1=(sum1*x)%N;\n        y&gt;&gt;=1;\n        x=(x*x)%N;\n    }\n    return sum1%N;\n}\nlong long int c1(long long int x,long long int y)\n{\n    if(x&lt;y)\n        swap(x,y);\n    return w[x]*p(w[x-y]*w[y]%N,N-2)%N;\n}\nint main()\n{\n    register ll n,k;\n    scanf(\"%lld%lld\",&amp;n,&amp;k);\n    for(int i=0;i&lt;n;i++)\n        scanf(\"%lld\",&amp;num[i]);\n    sort(num,num+n);\n    w[0]=1;\n    for(ll i=1;i&lt;=2000500;i++)\n        w[i]=(w[i-1]*i)%N;\n    ll sum=0;\n    for(ll i=0;i&lt;n-k+1;i++)\n    {\n        sum=(sum+(num[n-i-1]-num[i])%N*c1(n-i-1,k-1)%N)%N;\n    }\n    printf(\"%lld\\n\",(sum%N+N)%N);\n    return 0;\n}\n</code></pre>"},{"location":"csdn/2020-08-11/","title":"2020-08-11","text":"<p>http://icpc.upc.edu.cn/problem.php?id=14881</p>"},{"location":"csdn/2020-08-11/#_1","title":"\u9898\u76ee","text":"<p>14881: \u4f1a\u8bae</p>"},{"location":"csdn/2020-08-11/#_2","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u6709\u4e00\u4e2a\u6751\u5e84\u5c45\u4f4f\u7740n\u4e2a\u6751\u6c11\uff0c\u6709n-1\u6761\u8def\u5f84\u4f7f\u5f97\u8fd9n\u4e2a\u6751\u6c11\u7684\u5bb6\u8054\u901a\uff0c\u6bcf\u6761\u8def\u5f84\u7684\u957f\u5ea6\u90fd\u4e3a1\u3002\u73b0\u5728\u6751\u957f\u5e0c\u671b\u5728\u67d0\u4e2a\u6751\u6c11\u5bb6\u4e2d\u53ec\u5f00\u4e00\u573a\u4f1a\u8bae\uff0c\u6751\u957f\u5e0c\u671b\u6240\u6709\u6751\u6c11\u5230\u4f1a\u8bae\u5730\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\u6700\u5c0f\uff0c\u90a3\u4e48\u6751\u957f\u5e94\u8be5\u8981\u628a\u4f1a\u8bae\u5730\u70b9\u8bbe\u7f6e\u5728\u54ea\u4e2a\u6751\u6c11\u7684\u5bb6\u4e2d\uff0c\u5e76\u4e14\u8fd9\u4e2a\u8ddd\u79bb\u603b\u548c\u6700\u5c0f\u662f\u591a\u5c11\uff1f\u82e5\u6709\u591a\u4e2a\u8282\u70b9\u90fd\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u9009\u62e9\u8282\u70b9\u7f16\u53f7\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9\u3002</p>"},{"location":"csdn/2020-08-11/#_3","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u3002\u4e00\u4e2a\u6570n\uff0c\u8868\u793a\u6709n\u4e2a\u6751\u6c11\u3002 \u63a5\u4e0b\u6765n-1\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6570\u5b57a\u548cb\uff0c\u8868\u793a\u6751\u6c11a\u7684\u5bb6\u548c\u6751\u6c11b\u7684\u5bb6\u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8def\u5f84\u3002</p>"},{"location":"csdn/2020-08-11/#_4","title":"\u8f93\u51fa","text":"<p>\u4e00\u884c\u8f93\u51fa\u4e24\u4e2a\u6570\u5b57x\u548cy x\u8868\u793a\u6751\u957f\u5c06\u4f1a\u5728\u54ea\u4e2a\u6751\u6c11\u5bb6\u4e2d\u4e3e\u529e\u4f1a\u8bae y\u8868\u793a\u8ddd\u79bb\u4e4b\u548c\u7684\u6700\u5c0f\u503c</p>"},{"location":"csdn/2020-08-11/#_5","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4\n1 2\n2 3\n3 4\n</code></pre>"},{"location":"csdn/2020-08-11/#_6","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>2 4\n</code></pre>"},{"location":"csdn/2020-08-11/#_7","title":"\u63d0\u793a","text":"<p>70%\u6570\u636en&lt;=1000 100%\u6570\u636en&lt;=50000</p> <p></p> <p><pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct node\n{\n    int to;\n    int next;\n};\nnode e[100500]={0};\nint cnt=0;\nint head[100500]={0};\nint size1[100500]={0};\nint dis[100500]={0};\nint f[100500]={0};\nint n;\nint add(int x,int y)\n{\n    e[++cnt].to=y;\n    e[cnt].next=head[x];\n    head[x]=cnt;\n}\nint dfs1(int now)\n{\n    size1[now]=1;\n    for(int i=head[now];i;i=e[i].next)\n    {\n        int to=e[i].to;\n        if(dis[to])\n            continue;\n        dis[to]=dis[now]+1;\n        dfs1(to);\n        size1[now]+=size1[to];\n    }\n}\nint dfs(int now,int fa)\n{\n    f[now]=f[fa]+n-2*size1[now];\n    for(int i=head[now];i;i=e[i].next)\n    {\n        int to=e[i].to;\n        if(to==fa)\n            continue;\n        dfs(to,now);\n    }\n}\nint main()\n{\n    scanf(\"%d\",&amp;n);\n    for(int i=0;i&lt;n-1;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&amp;a,&amp;b);\n        add(a,b);\n        add(b,a);\n    }\n    dis[1]=1;\n    dfs1(1);\n    int maxn=0;\n    for(int i=1;i&lt;=n;i++)\n    {\n        maxn+=dis[i];\n    }\n    maxn-=*n;  ///\u6bcf\u4e00\u4e2a\u70b9\u52301\u7684\u8ddd\u79bb\u90fd\u662f\u4ece1\u5f00\u59cb\u8ba1\u7b97\uff0c\u987b\u51cf\u53bb\n    f[1]=maxn;\n    for(int i=head[1];i;i=e[i].next)\n    {\n        int to=e[i].to;\n        dfs(to,1);\n    }\n    int ans=0;\n    for(int i=1;i&lt;=n;i++)\n    {\n        if(f[i]&lt;maxn)\n            maxn=f[i],ans=i;\n    }\n    printf(\"%d %d\\n\",ans,maxn);\n    return 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?id=14539</p>"},{"location":"csdn/2020-08-11/#_8","title":"\u9898\u76ee","text":"<p>14539: Ki</p>"},{"location":"csdn/2020-08-11/#_9","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Given is a rooted tree with N vertices numbered 1 to N. The root is Vertex 1, and the i-th edge ( 1\u2264i\u2264N\u22121) connects Vertex ai and bi. Each of the vertices has a counter installed. Initially, the counters on all the vertices have the value 0. Now, the following Q operations will be performed: Operation j (1\u2264j\u2264Q): Increment by xj the counter on every vertex contained in the subtree rooted at Vertex pj. Find the value of the counter on each vertex after all operations.</p> <p>Constraints \u00b72\u2264N\u22642\u00d7105 \u00b71\u2264Q\u22642\u00d7105 \u00b71\u2264ai&lt;bi\u2264N \u00b71\u2264pj\u2264N \u00b71\u2264xj\u2264104 \u00b7The given graph is a tree. \u00b7All values in input are integers.</p>"},{"location":"csdn/2020-08-11/#_10","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format:</p> <p>N Q a1 b1 : aN\u22121 bN\u22121 p1 x1 : pQ xQ</p>"},{"location":"csdn/2020-08-11/#_11","title":"\u8f93\u51fa","text":"<p>Print the values of the counters on Vertex 1,2,\u2026,N after all operations, in this order, with spaces in between.</p>"},{"location":"csdn/2020-08-11/#_12","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 4 3 1 2 2 3 2 4 2 10 1 100 3 1 \u3010\u6837\u4f8b2\u3011 6 2 1 2 1 3 2 4 3 6 2 5 1 10 1 10</p>"},{"location":"csdn/2020-08-11/#_13","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 100 110 111 110 \u3010\u6837\u4f8b2\u3011 20 20 20 20 20 20</p>"},{"location":"csdn/2020-08-11/#_14","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca The tree in this input is as follows: </p> <p>Each operation changes the values of the counters on the vertices as follows: \u00b7Operation 1: Increment by 10 the counter on every vertex contained in the subtree rooted at Vertex 2, that is, Vertex 2,3,4. The values of the counters on Vertex 1,2,3,4 are now 0,10,10,10, respectively. \u00b7Operation 2: Increment by 100 the counter on every vertex contained in the subtree rooted at Vertex 1, that is, Vertex 1,2,3,4. The values of the counters on Vertex 1,2,3,4 are now 100,110,110,110, respectively. \u00b7Operation 3: Increment by 1 the counter on every vertex contained in the subtree rooted at Vertex  3, that is, Vertex 3. The values of the counters on Vertex 1,2,3,4 are now 100,110,111,110, respectively.</p> <p>DFS+\u524d\u7f00\u548c</p> <p><pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct node\n{\n    int to;\n    int next;\n};\nnode e[500500]={0};\nint cnt=0;\nint head[500500]={0};\nint dis[500500]={0};\nint n;\nint add(int x,int y)\n{\n    e[++cnt].to=y;\n    e[cnt].next=head[x];\n    head[x]=cnt;\n}\nint dfs(int now,int fa)\n{\n    dis[now]+=dis[fa];\n    for(int i=head[now];i;i=e[i].next)\n    {\n        int to=e[i].to;\n        if(to==fa)\n            continue;\n        dfs(to,now);\n    }\n}\nint main()\n{\n    int q;\n    scanf(\"%d%d\",&amp;n,&amp;q);\n    for(int i=0;i&lt;n-1;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&amp;a,&amp;b);\n        add(a,b);\n        add(b,a);\n    }\n    for(int i=1;i&lt;=q;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&amp;x,&amp;y);\n        dis[x]+=y;\n    }\n    for(int i=head[1];i;i=e[i].next)\n    {\n        int to=e[i].to;\n        dfs(to,1);\n    }\n    for(int i=1;i&lt;=n;i++)\n    {\n        printf(\"%d \",dis[i]);\n    }\n    return 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?id=15047</p>"},{"location":"csdn/2020-08-11/#_15","title":"\u9898\u76ee","text":"<p>15047: \u80d6\u864e\u7684\u83dc\u54c1</p>"},{"location":"csdn/2020-08-11/#_16","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u80d6\u864e\u60ca\u559c\u5730\u53d1\u73b0\u4e86\u6709N\u4e2a\u7a97\u53e3\u6709\u4ed6\u6700\u559c\u6b22\u5403\u7684\u83dc\uff08\u5176\u5b9e\u90fd\u559c\u6b22\uff1f\uff09\uff0c\u4f46\u662f\u4ed6\u60f3\u5728\u79fb\u52a8\u6700\u77ed\u8ddd\u79bb\uff08\u6bd5\u7adf\u8d70\u591a\u4e86\u4e5f\u662f\u4f1a\u7d2f\u7684\uff09\u7684\u60c5\u51b5\u4e0b\u5403\u5230\u6240\u6709\u4ed6\u559c\u6b22\u5403\u7684\u83dc\u54c1\uff0c\u9965\u997f\u7684\u4ed6\u5df2\u7ecf\u6ca1\u6709\u529b\u6c14\u5199\u51fa\u4ee3\u7801\u6765\u8ba1\u7b97\u81ea\u5df1\u7684\u6700\u4f73\u65b9\u6cd5\u4e86\uff0c\u6240\u4ee5\u4ed6\u627e\u5230\u4e86\u4f60\uff0c\u6765\u5e2e\u4ed6\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u73b0\u5728\u7ed9\u4f60N\u4e2a\u7a97\u53e3\u53ca\u7a97\u53e3\u7684\u5750\u6807\uff0c\u8bf7\u8f93\u51fa\u80d6\u864e\u6240\u8981\u79fb\u52a8\u7684\u6700\u5c0f\u8ddd\u79bb\u603b\u548c\u3002 \u80d6\u864e\u4e00\u5f00\u59cb\u5728(0,0)\u70b9\u5904\u3002</p>"},{"location":"csdn/2020-08-11/#_17","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570n\uff081\u2264n\u226413\uff09 \u3002 \u63a5\u4e0b\u6765\u6bcf\u884c2\u4e2a\u5b9e\u6570\uff0c\u8868\u793a\u7b2ci\u5757\u7a97\u53e3\u7684\u5750\u6807\u3002 \u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u516c\u5f0f\u4e3a</p>"},{"location":"csdn/2020-08-11/#_18","title":"\u8f93\u51fa","text":"<p>\u4e00\u4e2a\u6570\uff0c\u8868\u793a\u8981\u8dd1\u7684\u6700\u5c11\u8ddd\u79bb\uff0c\u4fdd\u75592\u4f4d\u5c0f\u6570\u3002</p>"},{"location":"csdn/2020-08-11/#_19","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4\n1 1\n1 -1\n-1 1\n-1 -1\n</code></pre>"},{"location":"csdn/2020-08-11/#_20","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>7.41\n</code></pre> \u72b6\u538bDP <pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\ndouble dp[1&lt;&lt;14][20]={0};\nstruct node\n{\n    double x;\n    double y;\n};\nnode a[20]={0};\ndouble q(int i,int j)\n{\n    double sum=sqrt((double)((a[i].x-a[j].x)*(a[i].x-a[j].x)*1.0+(a[i].y-a[j].y)*(a[i].y-a[j].y)*1.0));\n    return sum;\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;i++)\n    {\n        scanf(\"%lf%lf\",&amp;a[i].x,&amp;a[i].y);\n    }\n    for(int i=0;i&lt;(1&lt;&lt;(n+1));i++)\n    {\n        for(int j=0;j&lt;=n;j++)\n        {\n            dp[i][j]=999999999;\n        }\n    }\n    dp[1][0]=0;\n    for(int i=0;i&lt;(1&lt;&lt;(n+1));i+=1)\n    {\n        for(int j=0;j&lt;=n;j++)\n        {\n            if(!(i&gt;&gt;j)&amp;1)\n                continue;\n            for(int k=0;k&lt;=n;k++)\n            {\n                if(j==k)\n                    continue;\n                if(!(i&gt;&gt;k)&amp;1)\n                    continue;\n                dp[i][j]=min(dp[i][j],dp[i^(1&lt;&lt;j)][k]+q(k,j));\n            }\n        }\n    }\n    double min1=99999999;\n    int k=(1&lt;&lt;(n+1))-1;\n    for(int i=1;i&lt;=n;i++)\n    {\n        min1=min(min1,dp[k][i]);\n    }\n    printf(\"%.2f\\n\",min1);\n    return 0;\n}\n</code></pre></p>"},{"location":"csdn/2020-08-12%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/","title":"2020-08-12\u6b27\u62c9\u51fd\u6570","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2539&amp;pid=3</p>"},{"location":"csdn/2020-08-12%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Q:KZB \u4f60\u6821\u672c SA \u505a\u5b8c\u505a\u4ec0\u4e48\u554a\uff1f KZB: \u4f5c\u5f0a\uff08\u505a B\uff09\u554a</p> <p>\u6709\u4e00\u6b21\uff0c\u67d0\u7ea7\u67d0\u67d0\u73ed\u7684\u73ed\u4e3b\u4efb\u53bb\u67e5\u4e86\u76d1\u63a7\uff0c\u53d1\u73b0 KZB \u6709\u4eba\u6284\u4f5c\u4e1a\uff0c\u5c31\u628a\u5168\u73ed\u9a82\u4e86\u4e00\u901a\u3002</p> <p>\u4e3a\u4e86\u9632\u6b62\u8fd9\u7c7b\u4e8b\u60c5\u518d\u6b21\u53d1\u751f Jay \u5c31\u60f3\u51fa\u4e86\u4e00\u9053\u9898\u3002</p> <p>\u5047\u5982\u6574\u4e2a\u73ed\u4e3a\u4e00\u4e2an\u00d7n\u7684\u77e9\u9635\uff0c\u800c\u5728\u76d1\u63a7\u8f83\u524d\u9762\u7684\u4eba\u4f1a\u906e\u4f4f\u540e\u9762\u7684\u4eba\uff08\u8be6\u89c1\u540e\u9762\u7684\u6837\u4f8b\u89e3\u91ca\uff09\u3002\u6c42\u76d1\u63a7\u4e0d\u4f1a\u53d1\u73b0\u7684\u4eba\u6570\uff08\u5047\u8bbe\u76d1\u63a7\u9ad8\u5ea6\u4e3a1\uff09\u3002</p> <p>Tip: \u56e0\u4e3a\u76d1\u63a7\u5728(1,1)\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u4f1a\u5360\u4e00\u4e2a\u4f4d\u7f6e\u3002</p>"},{"location":"csdn/2020-08-12%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_2","title":"\u8f93\u5165","text":"<p>\u4e00\u4e2a\u6570n\u3002</p>"},{"location":"csdn/2020-08-12%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_3","title":"\u8f93\u51fa","text":"<p>\u4e00\u4e2a\u6570\uff0c\u5373\u76d1\u63a7\u4e0d\u4f1a\u770b\u5230\u7684\u5b66\u751f\u4eba\u6570\u3002</p>"},{"location":"csdn/2020-08-12%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>6\n</code></pre>"},{"location":"csdn/2020-08-12%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>14\n</code></pre>"},{"location":"csdn/2020-08-12%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_6","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b\u89e3\u91ca:\u5f53n=6\u65f6\uff0c\u5750\u5728(3,5)\u4e0a\u7684\u540c\u5b66\u4f1a\u88ab\u5750\u5728(2,3)\u4e0a\u7684\u540c\u5b66\u6321\u4f4f\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 </p> <p>\u53ef\u4ee5\u53d1\u73b0\u5f53gcd(x,y)\u4e0d\u4e3a1\u65f6\u5373\u7167\u4e0d\u5230\uff0c\u6b27\u62c9\u51fd\u6570\u6c42n\u6570\u5b57\u4ee5\u5185\u7684\u8d28\u56e0\u6570\u5bf9\u6709\u591a\u5c11\u5373\u53ef\u3002</p> <p> \u56fe\u4e3an\u4e3a5\u65f6\u7684\u89e3\u91ca\uff0c\u6807\u6ce8\u4e3a1\u7684\u662f\u76d1\u63a7\u80fd\u591f\u53d1\u73b0\u7684 \u6b27\u62c9\u51fd\u6570\u7b80\u4ecb\uff1a https://zhuanlan.zhihu.com/p/42748145 <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;cmath&gt;\nusing namespace std;\ntypedef long long ll;\nll n, ans, pr[200507], ph[200507], cnt ;\nbool vis[200507] ;\n\nint main()  //\u7ed3\u5408\u4e86\u6b27\u62c9\u7b5b\u6cd5\n{\n    ph[1] = 1 ;\n    scanf(\"%lld\", &amp;n );\n    if(n==1||n==2)\n    {\n        cout&lt;&lt;0&lt;&lt;endl;\n        return 0;\n    }\n    for(ll  i = 2 ; i&lt;=n-1; ++ i )  //\u5206\u89e3\u8d28\u56e0\u6570\u548c\u521d\u59cb\u5316\n    {\n        if(!vis[i])\n        {\n            cnt ++ ;\n            pr[cnt] = i ;\n            ph[i] = i - 1 ;\n        }\n        for(ll j = 1 ; j &lt;=cnt&amp;&amp;i*pr[j]&lt;=n-1;++ j )  //\u6b27\u62c9\u7b5b\u6cd5\n        {\n            vis[ i * pr[j] ] = 1 ;\n            if( i % pr[j] == 0 )\n            {\n                ph[ pr[j] * i ] = ph[i] * pr[j] ;\n                break;\n            }\n            else\n                ph [ pr[j] * i] = ph[i] * (pr[j] - 1 );\n        }\n    }\n    for(ll i = 2 ; i &lt;= n-1 ; ++ i )\n        ans += ph[i];//\u7d2f\u52a0\u7ed3\u679c\n    ans=ans*2+4;\n    ans=n*n-ans;\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre></p>"},{"location":"csdn/2020-08-13/","title":"2020-08-13","text":"<p>http://icpc.upc.edu.cn/problem.php?id=16535</p>"},{"location":"csdn/2020-08-13/#_1","title":"\u9898\u76ee","text":"<p>16535: Lead of Wisdom</p>"},{"location":"csdn/2020-08-13/#_2","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>In an online game, \"Lead of Wisdom\" is a place where the lucky player can randomly get powerful items. </p> <p>There are k types of items, a player can wear at most one item for each type. For the i-th item, it has four attributes ai,bi,ci and di. Assume the set of items that the player wearing is S, the damage rate of the player DMG can be calculated by the formula: </p> <p>Little Q has got n items from \"Lead of Wisdom\", please write a program to help him select which items to wear such that the value of DMG is maximized.</p>"},{"location":"csdn/2020-08-13/#_3","title":"\u8f93\u5165","text":"<p>The first line of the input contains a single integer T (1\u2264T\u226410), the number of test cases.</p> <p>For each case, the first line of the input contains two integers n and k (1\u2264n,k\u226450), denoting the number of items and the number of item types.</p> <p>Each of the following n lines contains five integers ti,ai,bi,ci and di (1\u2264ti\u2264k, 0\u2264ai,bi,ci,di\u2264100), denoting an item of type ti whose attributes are ai,bi,ci and di.</p>"},{"location":"csdn/2020-08-13/#_4","title":"\u8f93\u51fa","text":"<p>For each test case, output a single line containing an integer, the maximum value of DMG.</p>"},{"location":"csdn/2020-08-13/#_5","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1\n6 4\n1 17 25 10 0\n2 0 0 25 14\n4 17 0 21 0\n1 5 22 0 10\n2 0 16 20 0\n4 37 0 0 0\n</code></pre>"},{"location":"csdn/2020-08-13/#_6","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>297882000\n</code></pre> <p>\u66b4\u529b\u641c\u7d22\u5373\u53ef</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nint a,b,c,d;\n};\nvector&lt;node&gt;w[60];\nint t,n,k,a,b,c,d,e;\nint cnt=0;\nll max1=0;\nmap&lt;int,int&gt;mp;\ninline int q(register int p,register int sum1,register int sum2,register int sum3,register int sum4)\n{\nif(p==cnt+1)\n{\nmax1=max(max1,(ll)sum1*sum2*sum3*sum4);\nreturn 0;\n}\nif(w[p].empty())\nq(p+1,sum1,sum2,sum3,sum4);\nelse\nfor(register int i=0; i&lt;w[p].size(); i++)\n{\nq(p+1,sum1+w[p][i].a,sum2+w[p][i].b,sum3+w[p][i].c,sum4+w[p][i].d);\n}\n}\nint main()\n{\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nmax1=0;\nscanf(\"%d%d\",&amp;n,&amp;k);\nfor(register int i=1; i&lt;=k; i++)\nw[i].clear();\nmp.clear();\ncnt=0;\nfor(register int i=1; i&lt;=n; i++)\n{\nscanf(\"%d%d%d%d%d\",&amp;e,&amp;a,&amp;b,&amp;c,&amp;d);\nif(mp[e]==0)\n{\nmp[e]=++cnt;\n}\nw[mp[e]].push_back({a,b,c,d});\n}\nq(1,100,100,100,100);\nprintf(\"%lld\\n\",max1);\n}\n}\n</code></pre>"},{"location":"csdn/2020-08-14/","title":"2020-08-14","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2526&amp;pid=5</p>"},{"location":"csdn/2020-08-14/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u5728\u66fe\u7ecf\u7684\u8bb2\u89e3\u4e2d\uff0c\u82b1\u548c\u4ed6\u7684\u5144\u5f1f\u59d0\u59b9\u4eec\u88ab\u8fd9\u4e2a\u53eb\u505a Yyx \u7684\u4eba\u6446\u6765\u6446\u53bb\uff0c\u5413\u5f97\u8033\u6735\u90fd\u778e\u4e86\uff0c\u5634\u5df4\u4e5f\u542c\u4e0d\u89c1\u4e86\u3002\u4e8e\u662f\u4ed6\u4eec\u51b3\u5b9a\u300c\u4ee5\u5176\u4eba\u4e4b\u9053\u8fd8\u6cbb\u5176\u4eba\u4e4b\u8eab\u300d\uff0c\u4ed6\u4eec\u628a Yyx, Kangkang, Michael \u7b49\u4eba\u6446\u6210\u4e00\u6392\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u82b1\u8bf4\u9053\uff1a\u300c\u4f60\u4eec\u7684\u8eab\u9ad8\u592a\u4e0d\u548c\u8c10\u4e86\uff0c\u53ea\u6709\u6ee1\u8db3\u6211\u7684\u8981\u6c42\u7684\u4eba\u624d\u80fd\u7559\u4e0b\uff0c\u5176\u4ed6\u4eba\u90fd\u53bb\u5f53\u82b1\u3002\u300d\u800c Yyx \u60f3\u7559\u4e0b\u5c3d\u91cf\u591a\u7684\u540c\u80de\u4eec\uff0c\u4e8e\u662f\u4ed6\u6765\u627e\u4f60\u4e86\u3002 \u5177\u4f53\u800c\u8a00\uff0c\u4eba\u7684\u9ad8\u5ea6\u53ef\u4ee5\u770b\u6210\u4e00\u5217\u6574\u6570h1,h2,...,hn\u3002 \u8bbe\u5f53\u4e00\u90e8\u5206\u4eba\u51fa\u53bb\u540e\uff0c\u5269\u4e0b\u7684\u4eba\u7684\u9ad8\u5ea6\u4f9d\u6b21\u4e3ag1,g2,...,gm \uff0c\u5219\u82b1\u4eec\u5e0c\u671b\u4e0b\u9762\u4e24\u4e2a\u6761\u4ef6\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u6ee1\u8db3\uff1a \u00b7\u6761\u4ef6A \uff1a\u5bf9\u4e8e\u6240\u6709 g2i&gt;g2i-1,g2i&gt;g2i+1\u3002 \u00b7\u6761\u4ef6B \uff1a\u5bf9\u4e8e\u6240\u6709 g2i&lt;g2i-1,g2i 1 \u65f6\u6700\u591a\u6709\u4e00\u4e2a\u80fd\u6ee1\u8db3\u3002"},{"location":"csdn/2020-08-14/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 n \uff0c\u8868\u793a\u5f00\u59cb\u65f6\u7684\u4eba\u6570\u3002 \u7b2c\u4e8c\u884c\u5305\u542b n \u4e2a\u6b63\u6574\u6570\uff0c\u4f9d\u6b21\u4e3a h1,h2,...hn , \u8868\u793a\u6bcf\u4e2a\u4eba\u7684\u9ad8\u5ea6\u3002</p>"},{"location":"csdn/2020-08-14/#_3","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fa\u7559\u4e0b\u7684\u4eba\u6570\u7684\u6700\u5927\u503c\u3002</p>"},{"location":"csdn/2020-08-14/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5\n5 3 2 1 2\n</code></pre>"},{"location":"csdn/2020-08-14/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>3\n</code></pre>"},{"location":"csdn/2020-08-14/#_6","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e\u6240\u6709\u6570\u636e\uff0c1\u2264n\u2264106,0\u2264hi\u2264106</p> <p>\u52a8\u6001\u89c4\u5212</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[1005000]={0};\nll s1[1005000]={0};\nll s2[1005000]={0};\nint main()\n{\n    ll n;\n    scanf(\"%lld\",&amp;n);\n    for(ll i=1;i&lt;=n;i++)\n        scanf(\"%lld\",&amp;a[i]);\n    s1[1]=s2[1]=1;\n    for(ll i=2;i&lt;=n;i++)\n    {\n        if(a[i]&gt;a[i-1])\n        {\n            s1[i]=max(s1[i-1],s2[i-1]+1);\n            s2[i]=s2[i-1];\n        }\n        if(a[i]==a[i-1])\n        {\n            s1[i]=s1[i-1];\n            s2[i]=s2[i-1];\n        }\n        if(a[i]&lt;a[i-1])\n        {\n            s2[i]=max(s2[i],s1[i-1]+1);\n            s1[i]=s1[i-1];\n        }\n    }\n    printf(\"%lld\\n\",max(s1[n],s2[n]));\n}\n</code></pre>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/","title":"2020-08-16\u6811\u5f62DP\u7b49\u5dee\u6570\u5217\u524d\u7f00\u548c","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2535&amp;pid=1</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>eobiyye\u7ed9\u4e86\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217ai\uff0c\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u521d\u59cb\u503c\u4e3a0\u3002 \u63a5\u4e0b\u6765\u5979\u4f1a\u5bf9\u8fd9\u4e2a\u5e8f\u5217\u8fdb\u884cm\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u67094\u4e2a\u53c2\u6570l,r,s,e\uff0c\u8868\u793a\u5c06\u533a\u95f4[l,r]\u52a0\u4e0a\u4e00\u4e2a\u9996\u9879\u4e3as\uff0c\u672b\u9879\u4e3ae\u7684\u7b49\u5dee\u6570\u5217\u3002 \u82e5\u4e00\u6b21\u64cd\u4f5c\u4e2dl=1,r=5,s=2,e=10\uff0c\u5219\u5bf9\u5e8f\u5217\u4e2d\u7b2c1~5\u4e2a\u6570\u5206\u522b\u52a0\u4e0a2,4,6,8,10\u3002 \u73b0\u5728Geobiyye\u8981\u6c42\u4f60\u6c42\u51fam\u6b21\u64cd\u4f5c\u540e\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\u7684\u503c\u3002</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c2\u4e2a\u6574\u6570n,m\uff0c\u8868\u793a\u5e8f\u5217\u957f\u5ea6\u548c\u64cd\u4f5c\u6570\u3002 \u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c4\u4e2a\u6574\u6570l,r,s,e\uff0c\u542b\u4e49\u89c1\u9898\u76ee\u63cf\u8ff0\u3002 \u6570\u636e\u4fdd\u8bc1\u7b49\u5dee\u6570\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u90fd\u662f\u6574\u6570\u3002</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_3","title":"\u8f93\u51fa","text":"<p>\u7531\u4e8e\u8f93\u51fa\u6570\u636e\u8fc7\u5927\uff0cGeobiyye\u53ea\u60f3\u8981\u77e5\u9053\u6700\u7ec8\u5e8f\u5217\u6bcf\u4e00\u9879\u7684\u5f02\u6216\u548c\uff0c\u5373\u3002\uff08\u5176\u4e2d\u8868\u793a\u4e8c\u8fdb\u5236\u4e0b\u7684\u5f02\u6216\u64cd\u4f5c\uff0c\u5728c++\u4e2d\u4e3a^\uff09</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5 2\n1 5 2 10\n2 4 1 1\n</code></pre>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>3\n</code></pre>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_6","title":"\u6837\u4f8b\u89e3\u91ca\uff1a","text":"<p>\u7b2c\u4e00\u6b21\u64cd\u4f5c\u52a0\u7684\u6570\u5217\uff1a2 4 6 8 10 \u7b2c\u4e8c\u6b21\u64cd\u4f5c\u52a0\u7684\u6570\u5217\uff1a0 1 1 1 0 \u6240\u6709\u64cd\u4f5c\u7ed3\u675f\u540e\u5e8f\u5217\u6bcf\u4e2a\u5143\u7d20\u503c\u4e3a\uff1a2 5 7 9 10\u3002 \u8f93\u51fa\u5f02\u6216\u548c\uff0c\u5c31\u662f3\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e30%\u7684\u6570\u636e\uff1an,m\u22641000 \u3002 \u5bf9\u4e8e50%\u7684\u6570\u636e\uff1an,m\u2264100000\u3002 \u5bf9\u4e8e\u53e6\u591620%\u7684\u6570\u636e\uff1as=e\u3002 \u5bf9\u4e8e100%\u7684\u6570\u636e\uff1an,m\u2264500000,1\u2264l\uff1cr\u2264n\u3002 \u6570\u636e\u4fdd\u8bc1\u8f93\u5165\u6570\u636e\u4ee5\u53ca\u5728\u4efb\u4f55\u65f6\u5019\u5e8f\u5217\u4e2d\u7684\u6570\u5728[0,9\u00d71018]\u8303\u56f4\u5185\u3002</p> <p>\u7b49\u5dee\u6570\u5217\u7684\u524d\u7f00\u548c</p> <p><pre><code>#include&lt;bits/stdc++.h&gt;\n\nusing namespace std;\nconst long long int N=1e7+500;\nlong long int out[N]={0};\nint main()\n{\nstd::ios::sync_with_stdio(false);\nstd::cin.tie(0);\nregister long long int n,m,l,r,ks,e1,dc,tmp=0;\nregister long long int max1=0,ans=0;\ncin&gt;&gt;n&gt;&gt;m;\nregister long long int i;\nfor(i=1; i&lt;=m; i++)\n{\ncin&gt;&gt;l&gt;&gt;r&gt;&gt;ks&gt;&gt;e1;\ndc=(e1-ks)/(r-l);\nout[l]=out[l]+ks;\nout[l+1]=out[l+1]+dc-ks;\nout[r+1]=out[r+1]-dc-e1;\nout[r+2]=out[r+2]+e1;\n}\nfor(i=1; i&lt;=n; i++)\n{\nout[i]=out[i-1]+out[i];\ntmp+=out[i];\nans=ans^tmp;\n}\ncout&lt;&lt;ans&lt;&lt;endl;\nreturn 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2535&amp;pid=5</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_7","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u8bf7\u5f00 long long\u3002</p> <p>\u8001\u7239\u8bf4\u8981\u7528\u9b54\u6cd5\u6253\u8d25\u9b54\u6cd5 \u2014\u2014\u2014\u2014 3edc2wsx1qaz</p> <p>\u4e00\u5929\uff0c\u5de8\u795e 3edc2wsx1qaz \u6b63\u5728\u68ee\u6797\u91cc\u6f2b\u6b65\uff0c\u7a81\u7136\uff0c\u4e00\u53ea\u51f6\u6076\u7684\u53cc\u5934\u5de8\u4eba\u62e6\u4f4f\u4e86\u4ed6\u3002</p> <p>\u53cc\u5934\u5de8\u4eba\u7684\u4e24\u4e2a\u5934\u7684\u653b\u51fb\u529b\u5206\u522b\u4e3aa,b\u3002\u5b83\u6bcf\u6b21\u53ef\u4ee5\u5bf9 3edc2wsx1qaz \u9020\u6210 |a-b| \u7684\u9b54\u6cd5\u4f24\u5bb3\u3002</p> <p>3edc2wsx1qaz \u89c9\u5f97\u8fd9\u53ea\u602a\u7269\u5341\u5206\u96be\u7f20\u3002</p> <p>\u201c\u8981\u7528\u9b54\u6cd5\u6253\u8d25\u9b54\u6cd5\uff01\u201d \u5c31\u5728\u8fd9\u65f6\uff0c\u8001\u7239\u7684\u8bdd\u56de\u54cd\u5728 3edc2wsx1qaz \u7684\u8033\u8fb9\uff0c3edc2wsx1qaz \u987f\u65f6\u611f\u5230\u4e00\u80a1\u529b\u91cf\u6d8c\u4e0a\u5fc3\u5934\uff0c\u4e8e\u662f\uff0c\u4ed6\u51b3\u5b9a\u4ece\u5b83\u7684\u7279\u6b8a\u80fd\u529b\u4e0b\u624b\uff0c\u4ece\u800c\u6253\u8d25\u5b83\u3002</p> <p>998244353\u5e74\u524d\uff0c\u5de8\u795e Rainy7 \u66fe\u7ecf\u6559\u8fc7\u4ed6\u540d\u4e3a \u722a\u5df4 \u7684 % \u6cd5\uff0c\u4ed6\u51b3\u5b9a\u7528\u8fd9\u79cd % \u6cd5\u51fb\u8d25\u5de8\u4eba\u3002</p> <p>3edc2wsx1qaz \u53ef\u4ee5\u4f7f\u7528\u65e0\u9650\u6b21\u6cd5\u672f\uff0c\u7b2ci\u6b21\u4f7f\u7528\u53ef\u4ee5\u4efb\u9009\u4e00\u4e2a\u5934\uff0c\u4f7f\u5f97\u5b83\u7684\u653b\u51fb\u529b\u589e\u52a0\u6216\u51cf\u5c11i\u3002\uff08\u5728\u6b64\u8fc7\u7a0b\u4e2d\u653b\u51fb\u529b\u53ef\u4ee5\u662f\u8d1f\u6570\uff09</p> <p>3edc2wsx1qaz \u4e0d\u60f3\u53d7\u5230\u4efb\u4f55\u4f24\u5bb3\uff0c\u6240\u4ee5\uff0c\u4ed6\u60f3\u77e5\u9053\uff0c\u4ed6\u81f3\u5c11\u8981\u65bd\u51e0\u6b21\u6cd5\uff0c\u624d\u80fd\u4f7f\u5f97a-b=0\u3002</p> <p>3edc2wsx1qaz \u53ea\u7528\u4e86114514-1919810 s\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e8e\u662f\u8ba9\u60a8\u89e3\u51b3\u3002</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_8","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6570T\uff0c\u8868\u793a\u6570\u636e\u7ec4\u6570\u3002 \u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u4e00\u884c\u4e24\u4e2a\u6570a,b\uff0c\u4ee3\u8868\u53cc\u5934\u5de8\u4eba\u4e24\u4e2a\u5934\u7684\u653b\u51fb\u529b\u3002</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_9","title":"\u8f93\u51fa","text":"<p>\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c0f\u6b21\u6570\u3002</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_10","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 3 1 3 11 11 30 20 \u3010\u6837\u4f8b2\u3011 1 114514 1919810</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_11","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 3 0 4 \u3010\u6837\u4f8b2\u3011 1900</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_12","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca\uff1a \u5bf9\u4e8e\u6570\u636e1\uff0c\u4e00\u79cd\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a1+1=2,3+2=5,2+3=5 \u5bf9\u4e8e\u6570\u636e2\uff0c\u7531\u4e8e\u76f8\u7b49\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a0\u3002 \u5bf9\u4e8e\u6570\u636e3\uff0c\u4e00\u79cd\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a20+1+2+3+4=30\u3002 </p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_13","title":"\u89e3\u6790","text":"<p>\u5047\u8bbe\u53cc\u65b9\u7684\u8840\u91cf\u5206\u522b\u4e3aa\u548cb\uff08a&lt;b\uff09\uff0c\u7531\u4e8e\u51cf\u6cd5\u76f8\u5f53\u4e8e\u5bf9\u53e6\u4e00\u4e2a\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u52a0\u6cd5\u3002\u9996\u5148\uff0c\u6211\u4eec\u5bf9a\u8fdb\u884c\u52a0\u6cd5\u76f4\u5230\u5927\u4e8e\u7b49\u4e8eb\uff0c\u5982\u679c\u7b49\u4e8eb\uff0c\u7ed3\u679c\u5c31\u662f\u8fdb\u884c\u52a0\u6cd5\u7684\u6b21\u6570\uff0c\u5982\u679c\u5927\u4e8eb\uff0c\u5219\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u8d85\u51fa\u7684\u6570\u76ee\u4e3a\u5076\u6570\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u628a\u591a\u51fa\u6765\u7684\u90e8\u5206\u9664\u4ee52\u4ecea\u51cf\u53bb\u52a0\u5230b\u4e0a\uff0c\u8fd9\u6837\u4e24\u8fb9\u5c31\u76f8\u540c\u4e86\uff0c\u5982\u679c\u4e3a\u5947\u6570\uff0c\u7ee7\u7eed\u52a0\uff0c\u76f4\u81f3\u5dee\u503c\u4e3a\u5076\u6570\u4e3a\u6b62\u3002</p> <p><pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;cmath&gt;\nusing namespace std;\ntypedef long long ll;\n\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nint a,b;\nscanf(\"%d%d\",&amp;a,&amp;b);\nif(a&gt;b)\nswap(a,b);\nint i;\nfor(i=1; a&lt;b||(a&gt;b&amp;&amp;(a-b)%2==1); i++)\na+=i;\ncout&lt;&lt;i-1&lt;&lt;endl;\n}\nreturn 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2535&amp;pid=6</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_14","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u8bf7\u5f00 long long\u3002</p> <p>\u82e5\u4f17\u4eba\u7686\u4e27\u6c14\uff0c\u5219\u6211\u8c12\u89c1\u8c0f\u8a00\u3002\u2014\u2014\u2014\u2014 Rainy7</p> <p>\u5728\u6d69\u701a\u65e0\u57a0\u7684\u5b87\u5b99\u4e2d\uff0c\u5206\u5e03\u7740\u8bb8\u8bb8\u591a\u591a\u7684\u6587\u660e\uff0c\u5b83\u4eec\u4e4b\u95f4\u7ecf\u5e38\u8d77\u51b2\u7a81\u3002</p> <p>\u4e00\u6b21\uff0c\u4e00\u4e2a\u6587\u660e\u6d3e\u51fa\u5927\u6279\u661f\u8230\u8fdb\u653b\u5730\u7403\uff0c\u5730\u7403\u4eba\u88ab\u6253\u5f97\u843d\u8352\u800c\u9003\u3002</p> <p>\u6b64\u65f6\u5728\u5730\u7403\u4e0a\uff0c\u5de8\u795e Rainy7 \u5929\u5929\u540a\u6253\u96c6\u8bad\u961f\uff0c\u5df2\u7ecf\u611f\u5230\u538c\u70e6\u4e86\uff0c\u4e8e\u662f\uff0cRainy7 \u4fbf\u53bb\u540a\u6253\u5916\u661f\u4eba\u4e86\u3002</p> <p>Rainy7 \u4f7f\u7528\u9b54\u6cd5\uff0c\u5c06\u8fd9n\u8258\u661f\u8230\u5c01\u9501\u4f4f\u4e86\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u661f\u8230\u90fd\u6709\u62a4\u76fe\u4fdd\u62a4\uff0cRainy7 \u8981\u60f3\u65b9\u8bbe\u6cd5\u7834\u9664\u5b83\u4eec\u3002</p> <p>\u661f\u8230\u7684\u5c01\u9501\u5173\u7cfb\u53ef\u4ee5\u770b\u6210\u4e00\u68f5\u6811\u3002\u4e00\u5f00\u59cb\uff0c Rainy7 \u53ef\u4ee5\u4efb\u9009\u4e00\u8258\u661f\u8230\uff0c\u7136\u540e\u76f4\u63a5\u89e3\u9664\u5b83\u7684\u62a4\u76fe\u3002\u7d27\u63a5\u7740\uff0cRainy7 \u53ef\u4ee5\u8fdb\u884cn\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u9009\u62e9\u4e00\u8258\u672a\u88ab\u62a4\u76fe\u4fdd\u62a4\u7684\u661f\u8230\uff0c\u7136\u540e\u76f4\u63a5\u6467\u6bc1\u5b83\uff0c\u5e76\u4e14\u83b7\u5f97\u5b83\u88ab\u6467\u6bc1\u524d\u6240\u5728\u7684\u5168\u90fd\u662f\u672a\u88ab\u6467\u6bc1\u7684\u661f\u8230\u7684\u8fde\u901a\u5757\u7684\u5927\u5c0f\u7684\u9b54\u6cd5\u503c\u3002\u4e00\u8258\u661f\u8230\u88ab\u6467\u6bc1\u540e\uff0c\u4e0e\u5b83\u76f4\u63a5\u76f8\u8fde\u4e14\u672a\u88ab\u6467\u6bc1\u7684\u661f\u8230\u7684\u62a4\u76fe\u4f1a\u5168\u90e8\u88ab\u89e3\u9664\u3002</p> <p>Rainy7 \u60f3\u77e5\u9053\uff0c\u81ea\u5df1\u6700\u591a\u80fd\u83b7\u5f97\u591a\u5c11\u9b54\u6cd5\u503c\u3002\u5979\u53ea\u7528\u4e86114514-1919810s\u5c31\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u4e8e\u662f\u628a\u95ee\u9898\u629b\u7ed9\u4e86\u60a8\u3002 </p> <p>\u5982\u56fe\u6240\u793a\uff0c\u52a0\u7c97\u7684\u661f\u8230\u8868\u793a\u5df2\u7ecf\u88ab\u6467\u6bc1\u3002\u82e5\u9009\u62e92\u53f7\u661f\u8230\uff0c\u5c06\u4f1a\u83b7\u5f974\u70b9\u9b54\u6cd5\u503c\uff0c\u5e76\u4e14\u89e3\u96643,5,6\u7684\u62a4\u76fe\u3002\u82e5\u9009\u62e99\u53f7\u661f\u8230\uff0c\u5c06\u4f1a\u83b7\u5f973\u70b9\u9b54\u6cd5\u503c\uff0c\u5e76\u4e14\u89e3\u96647,8\u7684\u62a4\u76fe\u3002</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_15","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6570n\uff0c\u8868\u793a\u661f\u8230\u6570\u91cf\u3002 \u63a5\u4e0b\u6765n-1\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6570u,v\uff0c\u8868\u793a\u661f\u8230\u7684\u76f8\u8fde\u5173\u7cfb\u3002</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_16","title":"\u8f93\u51fa","text":"<p>\u4e00\u884c\u4e00\u4e2a\u6570\uff0c\u8868\u793a\u6700\u591a\u80fd\u83b7\u5f97\u7684\u9b54\u6cd5\u503c\u3002</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_17","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 9 1 2 2 3 2 5 2 6 1 4 4 9 9 7 9 8 \u3010\u6837\u4f8b2\u3011 5 1 2 1 3 2 4 2 5</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_18","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 36 \u3010\u6837\u4f8b2\u3011 14</p>"},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_19","title":"\u63d0\u793a","text":""},{"location":"csdn/2020-08-16%E6%A0%91%E5%BD%A2DP%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%89%8D%E7%BC%80%E5%92%8C/#_20","title":"\u89e3\u6790","text":"<p>\u6811\u5f62DP\uff0c\u5148\u6c42\u51fa1\u70b9\u7684\u9b54\u6cd5\u503c\uff0c\u540e\u7ecf\u8fc7\u72b6\u6001\u8f6c\u79fb\u6c42\u51fa\u5176\u4ed6\u70b9\u7684\u9b54\u6cd5\u503c\uff0c\u6c42\u6700\u5927\u503c\u5373\u53ef\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nvector&lt;ll&gt;w[300500];\nint vis[300500]={0};\nint vis1[300500]={0};\nll size1[300500]={0};\nll ans[300500]={0};\nll n;\nll dfs(ll k)\n{\nif(size1[k]!=0)\nreturn size1[k];\nsize1[k]=1;\nvis[k]=1;\nfor(ll i=0;i&lt;w[k].size();i++)\n{\nif(!vis[w[k][i]])\n{\nsize1[k]+=dfs(w[k][i]);\n}\n}\nreturn size1[k];\n}\nll dfs1(ll k)\n{\nvis1[k]=1;\nfor(ll i=0;i&lt;w[k].size();i++)\n{\nif(!vis1[w[k][i]])\n{\nll x=w[k][i];\nans[x]=ans[k]+(n-size1[x]-1)-(size1[x]-1);\ndfs1(x);\n}\n}\n}\nint main()\n{\nscanf(\"%lld\",&amp;n);\nll x,y;\nfor(ll i=1;i&lt;=n-1;i++)\n{\nscanf(\"%lld%lld\",&amp;x,&amp;y);\nw[x].push_back(y);\nw[y].push_back(x);\n}\ndfs(1);\nfor(ll i=1;i&lt;=n;i++)\n{\nans[1]+=size1[i];\n}\ndfs1(1);\nll max1=0;\nfor(ll i=1;i&lt;=n;i++)\n{\nmax1=max(max1,ans[i]);\n}\ncout&lt;&lt;max1&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-08-17/","title":"2020-08-17","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2548&amp;pid=2</p>"},{"location":"csdn/2020-08-17/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Rainy7 \u6210\u4e3a\u56fd\u738b\u540e\uff0c\u751f\u6d3b\u60a0\u95f2\u81ea\u5728\uff0c\u5979\u7ecf\u5e38\u51fa\u95e8\u6563\u6b65\uff0c\u89c2\u8d4f\u9b54\u6cd5\u738b\u56fd\u7684\u7f8e\u4e3d\u98ce\u666f\u3002</p> <p>\u5979\u6563\u6b65\u7684\u5730\u65b9\u662f\u4e2a\u5145\u6ee1\u80fd\u91cf\u7684\u77e9\u5f62\uff0c\u6bcf\u4e2a\u65b9\u683c\u91cc\u90fd\u957f\u6ee1\u4e86\u80fd\u91cf\u82b1\u548c\u80fd\u91cf\u8349\u3002</p> <p>\u82b3\u8349\u9c9c\u7f8e\uff0c\u843d\u82f1\u7f24\u7eb7\u3002Rainy7\u751a\u5f02\u4e4b\uff0c\u590d\u524d\u884c\uff0c\u6b32\u7a77\u5176\u77e9\u5f62\u3002   Rainy7 \u6563\u6b65\u65f6\uff0c\u4f1a\u6cbf\u77e9\u5f62\u5bf9\u89d2\u7ebf\u4ece\u5de6\u4e0a\u89d2\u8d70\u5230\u53f3\u4e0b\u89d2\uff0c\u5979\u80fd\u89c2\u8d4f\u5230\u6240\u6709\u5979\u7ecf\u8fc7\u7684\u683c\u5b50\uff08\u4e0d\u5305\u62ec\u683c\u70b9\uff09\u4e2d\u7684\u80fd\u91cf\u82b1\u548c\u80fd\u91cf\u8349\u3002\u5979\u5e0c\u671b\u81ea\u5df1\u80fd\u89c2\u8d4f\u5230Q\u4e2a\u683c\u5b50\u91cc\u7684\u80fd\u91cf\u82b1\u548c\u80fd\u91cf\u8349\u3002</p> <p>Rainy7 \u547d\u4ee4 CaBeF_Yyx \u627e\u51fa\u6240\u6709\u80fd\u6ee1\u8db3\u5979\u7684\u8981\u6c42\u7684\u77e9\u5f62\uff0c\u5426\u5219\u5979\u8981\u7528\u780d\u5934\u672f\u5c06 CaBeF_Yyx \u7684\u5934\u780d\u4e0b\u6765\u3002</p> <p>\u4e3a\u4e86\u4e0d\u88ab\u780d\u5934\uff0cCaBef_Yyx \u5f88\u5feb\u5730\u60f3\u51fa\u4e86\u505a\u6cd5\uff0c\u5e76\u628a\u8fd9\u9898\u6254\u7ed9\u4e86\u4f60\u3002</p> <p>Rainy7 \u53c8\u7a81\u53d1\u5947\u60f3\uff0c\u7528\u4e86\u4e00\u4e2a\u795e\u5947\u7684\u6cd5\u672f\uff0c\u5c06\u77e9\u5f62\u53d8\u4e3a\u4e86\u534a\u5f84\u4e3aR\u7684\u5706\u3002</p> <p>\u5c06\u8be5\u5706\u7684\u5706\u5fc3\u770b\u4f5c\u4e00\u4e2a\u957f\u6ee1\u4e86\u80fd\u91cf\u82b1\u548c\u80fd\u91cf\u8349\u7684\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\u7684\u539f\u70b9\uff0cRainy7 \u60f3\u77e5\u9053\uff0c\u6709\u591a\u5c11\u4e2a\u683c\u70b9\u843d\u5728\u5706\u4e0a \uff1f</p> <p>\u5979\u53c8\u5c06\u8fd9\u4e2a\u95ee\u9898\u4ea4\u7ed9 CaBeF_Yyx\u3002</p> <p>\u8fd9\u6b21 CaBeF_Yyx \u88ab\u96be\u5012\u4e86\uff0c\u5979\u4e0d\u77e5\u9053\u8be5\u5982\u4f55\u89e3\u51b3\uff0c\u4e8e\u662f\u5c06\u8fd9\u4e2a\u95ee\u9898\u6254\u7ed9\u4e86\u4f60\u3002</p> <p>\u6240\u4ee5\u4f60\u4e00\u5171\u8981\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\uff0c\u624d\u80fd\u4fdd\u8bc1 CaBeF_Yyx \u4e0d\u88ab Rainy7 \u780d\u5934\u3002</p> <p>\u4e3a\u4e86\u62ef\u6551 CaBeF_Yyx \uff0c\u8bf7\u4f60\u65e0\u8bba\u5982\u4f55\u4e5f\u8981\u505a\u51fa\u6765\u3002</p> <p>\u6709\u591a\u7ec4\u6570\u636e\u3002</p>"},{"location":"csdn/2020-08-17/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\uff0c\u4e00\u4e2a\u6574\u6570T \uff0c\u8868\u793a\u8be2\u95ee\u6b21\u6570\u3002</p> <p>\u63a5\u4e0b\u6765T\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570Q,R \uff0c\u610f\u4e49\u5982\u9898\u3002</p>"},{"location":"csdn/2020-08-17/#_3","title":"\u8f93\u51fa","text":"<p>T \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6bcf\u6b21\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u7b2c\u4e00\u4e2a\u8868\u793a\u6ee1\u8db3\u6761\u4ef6\u77e9\u9635\u7684\u6570\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u8868\u793a\u5706\u4e0a\u683c\u70b9\u6570\u3002</p>"},{"location":"csdn/2020-08-17/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1\n4 4\n</code></pre>"},{"location":"csdn/2020-08-17/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>4 4\n</code></pre>"},{"location":"csdn/2020-08-17/#_6","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e\u5168\u90e8\u6570\u636e\uff0c1\u2264T\u226410,1\u2264Q\u2264107,1\u2264R\u22642\u00d7109</p> <p>\u957f\u548c\u5bbd\u5206\u522b\u4e3aX\uff0cY\u7684\u77e9\u5f62\u4e0e\u957f\u548c\u5bbd\u5206\u522b\u4e3aY,X\u7684\u77e9\u5f62\u662f\u540c\u4e00\u4e2a\u77e9\u5f62\u3002</p>"},{"location":"csdn/2020-08-17/#_7","title":"\u89e3\u6790","text":"<p>\u53c2\u7167\u535a\u5ba2\uff1a https://blog.csdn.net/qq_30205523/article/details/100528069 https://blog.csdn.net/clover_hxy/article/details/72955869 \u6c42\u7b2c\u4e00\u4e2a\u6570\uff0cm*n\u7684\u77e9\u5f62\u5bf9\u89d2\u7ebf\u8fc7\u65b9\u683c\u7684\u6570\u76ee\u4e3am+n-gcd(m,n) \u5219\u53ef\u5217\u5f97\u65b9\u7a0b\uff0cm+n-gcd(m,n)=k\uff0c\u63d0\u53d6\u56e0\u5f0fgcd(m,n)\u8bb0\u4e3ag\uff0c\u5219\u539f\u5f0f\u53d8\u4e3am/g+n/g-1=k/g\uff0c\u5219m/g\u548cn/g\u4e00\u5b9a\u4e92\u8d28\u4e14\u548c\u4e3a1+k/g\uff0c\u6b64\u65f6g\u4e00\u5b9a\u4e3ak\u7684\u7ea6\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3ek\u7684\u7ea6\u6570\uff0c\u7136\u540e\u6839\u636em/g\u548cn/g\u4e92\u8d28\uff0c\u5219gcd(m/g,n/g)=1\uff0c\u7531gcd\u7684\u6027\u8d28\uff0c\u5219gcd(m/g,m/g+n/g)=1\uff0c\u5373\u4e3agcd(m/g,k/g+1)=1\uff0c\u4e92\u8d28\uff0c\u6b27\u62c9\u51fd\u6570\u6c42\u51fa\u6570\u76ee\u6c42\u548c\u5373\u53ef\u3002 \u7b2c\u4e8c\u4e2a\u6570\u7684\u6c42\u89e3\u89c1\u7b2c\u4e8c\u7bc7\u535a\u5ba2\u3002 <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll n=1e7+50;\nll pr[10005007]={0}, ph[10005007]={0};\nbool vis[10005007]={0};\nll R,ans=0,S,sum=1,x,cnt=0;\nll gcd(ll a,ll b)\n{\nreturn b==0?a:gcd(b,a%b);\n}\nvoid fun(ll d)\n{\nll v;\nfor(ll u=1; u&lt;=(ll)sqrt(1.0*2*R/d); u++)\n{\nv=(ll)sqrt(1.0*2*R/d-u*u*1.0);\nif(gcd(v,u)==1&amp;&amp;u&lt;=v&amp;&amp;d*(u*u+v*v)==2*R)\nans++;\n}\n}\nint main()\n{\nph[1] = 1 ;\nfor(register ll  i = 2 ; i&lt;=n-1; ++ i )\n{\nif(!vis[i])\n{\ncnt ++ ;\npr[cnt] = i ;\nph[i] = i - 1 ;\n}\nfor(register ll j=1; j &lt;=cnt&amp;&amp;i*pr[j]&lt;=n-1; ++ j ) //\u6b27\u62c9\u7b5b\u6cd5\n{\nvis[ i * pr[j] ] = 1 ;\nif( i % pr[j] == 0 )\n{\nph[ pr[j] * i ] = ph[i] * pr[j] ;\nbreak;\n}\nelse\nph [ pr[j] * i] = ph[i] * (pr[j] - 1 );\n}\n}\nregister ll t;\nscanf(\"%lld\",&amp;t);\nwhile(t--)\n{\nans=0,sum=1;\nscanf(\"%lld\",&amp;S);\nfor(register ll i=1; i&lt;=sqrt(S); i++)\n{\nif(S%i==0)\n{\nsum+=ph[S/i+1];\nif(i*i!=S)\nsum+=ph[i+1];\n}\n}\nsum/=2;\nscanf(\"%lld\",&amp;R);\nfor(register ll i=1; i&lt;=(ll)sqrt(1.0*R*2); i++)\n{\nif(2*R%i==0)\n{\nif((ll)i*i!=2*R)\n{\nfun(2*R/i);\nfun(i);\n}\nelse\nfun(i);\n}\n}\nans*=4;\nprintf(\"%lld %lld\\n\",sum,ans);\n}\nreturn 0;\n}\n</code></pre></p>"},{"location":"csdn/2020-08-18/","title":"2020-08-18","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2548&amp;pid=4</p>"},{"location":"csdn/2020-08-18/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u5728\u4e00\u7247\u6816\u606f\u5730\u4e0a\u6709N\u68f5\u6811\uff0c\u6bcf\u68f5\u6811\u4e0b\u4f4f\u7740\u4e00\u53ea\u5154\u5b50\uff0c\u6709M\u6761\u8def\u5f84\u8fde\u63a5\u8fd9\u4e9b\u6811\u3002\u66f4\u7279\u6b8a\u5730\u662f\uff0c\u53ea\u6709\u4e00\u68f5\u6811\u67093\u6761\u6216\u66f4\u591a\u7684\u8def\u5f84\u4e0e\u5b83\u76f8\u8fde\uff0c\u5176\u5b83\u7684\u6811\u53ea\u67091\u6761\u62162\u6761\u8def\u5f84\u4e0e\u5176\u76f8\u8fde\u3002\u6362\u53e5\u8bdd\u8bb2\uff0c\u8fd9\u4e9b\u6811\u548c\u6811\u4e4b\u95f4\u7684\u8def\u5f84\u6784\u6210\u4e00\u5f20N\u4e2a\u70b9\u3001M\u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u800c\u5ea6\u6570\u5927\u4e8e2\u7684\u70b9\u81f3\u591a\u67091\u4e2a\u3002 \u8fd1\u5e74\u4ee5\u6765\uff0c\u6816\u606f\u5730\u9891\u7e41\u6536\u5230\u4eba\u7c7b\u7684\u4fb5\u6270\u3002\u5154\u5b50\u4eec\u8054\u5408\u8d77\u6765\u53ec\u5f00\u4e86\u4e00\u573a\u4f1a\u8bae\uff0c\u51b3\u5b9a\u5728\u5176\u4e2dK\u68f5\u6811\u4e0a\u5efa\u9020\u6811\u6d1e\u3002\u5f53\u5371\u9669\u6765\u4e34\u65f6\uff0c\u6bcf\u53ea\u5154\u5b50\u5747\u4f1a\u540c\u65f6\u524d\u5f80\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684\u6811\u6d1e\u8eb2\u907f\uff0c\u8def\u7a0b\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u5728\u6570\u503c\u4e0a\u7b49\u4e8e\u8ddd\u79bb\u3002\u4e3a\u4e86\u5728\u6700\u77ed\u7684\u65f6\u95f4\u5185\u8ba9\u6240\u6709\u5154\u5b50\u8131\u79bb\u5371\u9669\uff0c\u8bf7\u4f60\u5b89\u6392\u4e00\u79cd\u5efa\u9020\u6811\u6d1e\u7684\u65b9\u5f0f\uff0c\u4f7f\u6700\u540e\u4e00\u53ea\u5230\u8fbe\u6811\u6d1e\u7684\u5154\u5b50\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u5c3d\u91cf\u5c11\u3002</p>"},{"location":"csdn/2020-08-18/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u67093\u4e2a\u6574\u6570N\uff0cM\uff0cK\uff0c\u5206\u522b\u8868\u793a\u6811\uff08\u5154\u5b50\uff09\u7684\u4e2a\u6570\u3001\u8def\u5f84\u6570\u3001\u8ba1\u5212\u5efa\u9020\u7684\u6811\u6d1e\u6570\u3002 \u63a5\u4e0b\u6765M\u884c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570x,y\uff0c\u8868\u793a\u7b2cx\u68f5\u6811\u548c\u7b2cy\u68f5\u6811\u4e4b\u95f4\u6709\u4e00\u6761\u8def\u5f84\u76f8\u8fde\u30021&lt;=x,y&lt;=N\uff0cx\u2260y\uff0c\u4efb\u610f\u4e24\u68f5\u6811\u4e4b\u95f4\u81f3\u591a\u53ea\u67091\u6761\u8def\u5f84\u3002</p>"},{"location":"csdn/2020-08-18/#_3","title":"\u8f93\u51fa","text":"<p>\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5728\u6700\u4f18\u65b9\u6848\u4e0b\uff0c\u6700\u540e\u4e00\u53ea\u5230\u8fbe\u6811\u6d1e\u7684\u5154\u5b50\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002</p>"},{"location":"csdn/2020-08-18/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5 5 2\n1 2\n2 3\n3 1\n1 4\n4 5\n</code></pre>"},{"location":"csdn/2020-08-18/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>1\n</code></pre>"},{"location":"csdn/2020-08-18/#_6","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e20%\u7684\u6570\u636e\uff0c1\u2009\u2264\u2009 n\u2009\u2264\u200910\u3002 \u5bf9\u4e8e\u53e6\u591630%\u7684\u6570\u636e\uff0c\u6bcf\u68f5\u6811\u81f3\u591a\u4e0e2\u6761\u8def\u5f84\u76f8\u8fde\u3002 \u5bf9\u4e8e\u53e6\u591630%\u7684\u6570\u636e\uff0c\u4fdd\u8bc1\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u89e3\uff0c\u4f7f\u4e0e3\u6761\u6216\u66f4\u591a\u8def\u5f84\u76f8\u8fde\u7684\u6811\u4e0a\u4e00\u5b9a\u5efa\u9020\u4e86\u6811\u6d1e\u3002 \u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c1\u2009\u2264\u2009n\u2009\u2264\u20092000\uff0cn-1&lt;=m&lt;=n*(n-1)/2\u3002</p>"},{"location":"csdn/2020-08-18/#_7","title":"\u89e3\u6790","text":"<p>\u56fe\u8bba+\u4e8c\u5206\u67e5\u627e \u6ce8\uff1a\u672c\u9898\u7f3a\u4e4f\u6d4b\u8bd5\u7528\u4f8b\uff0c\u53ef\u80fd\u4f1a\u6709bug\uff0c\u5efa\u8bae\u53c2\u7167\u535a\u5ba2\uff1a https://www.cnblogs.com/Shawn7xc/p/7771441.html https://www.cnblogs.com/candy99/p/6003565.html</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nint to;\nint next;\n};\nint n,m,x,y,k;\nint head[100500]={0};\nint vis[100500]={0};\nint first[100500]={0};\nint e[100500]={0};\nnode a[100500]={0};\nint root=0;\nint cnt=0;\nint deep=0;\nint dfs(int n,int len)\n{\ndeep+=1;\nvis[n]=1;\nif(len==0)\nreturn 0;\nfor(int i=head[n];i;i=a[i].next)\n{\nint w=a[i].to;\nif(!vis[w])\n{\ndfs(w,len-1);\n}\n}\n}\nint add(int x,int y)\n{\na[++cnt].to=y;\na[cnt].next=head[x];\nhead[x]=cnt;\n}\nint check(int x)\n{\nmemset(vis,0,sizeof(vis));\ndfs(root,x);\nmemcpy(first,vis,sizeof(vis));\nfor(int i=1;i&lt;=n;i++)\n{\nif(first[i])\n{\nint out=1;\nmemset(vis,0,sizeof(vis));\ndfs(i,x);\nfor(int j=1;j&lt;=n;j++)\n{\nif(!vis[j])\n{\ndeep=0;\ndfs(j,n);\nout+=(deep+2*x)/(2*x+1);\n}\n}\nif(out&lt;=k)\nreturn 1;\n}\n}\nreturn 0;\n}\nint main()\n{\nscanf(\"%d%d%%d\",&amp;n,&amp;m,&amp;k);\nfor(int i=1;i&lt;=m;i++)\n{\nscanf(\"%d%d\",&amp;x,&amp;y);\nadd(x,y);\nadd(y,x);\ne[x]++;\ne[y]++;\n}\nfor(int i=1;i&lt;=n;i++)\n{\nif(e[i]&gt;2)\n{\nroot=i;\nbreak;\n}\n}\nif(!root)\n{\ncout&lt;&lt;(n+k-1)/k/2&lt;&lt;endl;\nexit(0);\n}\nint l=1,r=n+1;\nwhile(l&lt;r)\n{\nint mid=(l+r)/2;\nif(check(mid))\n{\nl=mid+1;\n}\nelse\n{\nr=mid;\n}\n}\ncout&lt;&lt;l&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-08-19/","title":"2020-08-19","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2550&amp;pid=6</p>"},{"location":"csdn/2020-08-19/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Rainy7 \u4e00\u5929\u9192\u6765\uff0c\u53d1\u73b0\u81ea\u5df1\u8fdb\u5165\u4e86\u9b54\u6cd5\u4e16\u754c\u3002</p> <p>\u4e00\u9053\u5927\u95e8\u77d7\u7acb\u5728 Rainy7 \u9762\u524d\uff0c\u4f3c\u4e4e\u9700\u8981\u5bc6\u7801\u89e3\u9501\u3002</p> <p>Rainy7 \u7ecf\u8fc7\u4e00\u756a\u67e5\u627e\u540e\uff0c\u627e\u5230\u4e86\u5bc6\u7801\u5bf9\u5e94\u7684\u95ee\u9898\uff1a\u5728n\u00d7m\u7684\u68cb\u76d8\u4e0a\u6446\u653e\u4e24\u4e2a\u4e0d\u540c\u989c\u8272\u7684\u7687\u540e\uff0c\u4f7f\u5f97\u5b83\u4eec\u80fd\u591f\u76f8\u4e92\u653b\u51fb\uff0c\u603b\u5171\u6709\u591a\u5c11\u79cd\u6446\u6cd5\uff1f</p> <p>\u6211\u4eec\u79f0\u4e24\u4e2a\u7687\u540e\u80fd\u591f\u76f8\u4e92\u653b\u51fb\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u4eec\u5728\u540c\u4e00\u884c\u6216\u540c\u4e00\u5217\u6216\u540c\u4e00\u659c\u7ebf\u4e0a\u3002</p> <p>\u5979\u53ea\u7528\u4e86114514-1919810 s\u5c31\u89e3\u51b3\u4e86\u95ee\u9898\u5e76\u6253\u5f00\u4e86\u5927\u95e8\uff0c\u4e8e\u662f\u628a\u95ee\u9898\u4ea4\u7ed9\u4e86\u60a8\u3002</p>"},{"location":"csdn/2020-08-19/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570t\uff0c\u8868\u793a\u6570\u636e\u7ec4\u6570\u3002 \u63a5\u4e0b\u6765t\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6b63\u6574\u6570n,m\uff0c\u8868\u793a\u68cb\u76d8\u7684\u957f\u548c\u5bbd\u3002</p>"},{"location":"csdn/2020-08-19/#_3","title":"\u8f93\u51fa","text":"<p>t\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6570\uff0c\u8868\u793a\u65b9\u6848\u6570\u3002 \u7531\u4e8e\u8fd9\u4e2a\u6570\u53ef\u80fd\u5f88\u5927\uff0c\u60a8\u53ea\u8981\u8f93\u51fa\u5b83\u5bf9109+7\u53d6\u6a21\u7684\u7ed3\u679c\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"csdn/2020-08-19/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 1 2 2 \u3010\u6837\u4f8b2\u3011 1 114514 114514 \u3010\u6837\u4f8b3\u3011 2 165528 123456 132435 423153</p>"},{"location":"csdn/2020-08-19/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 12 \u3010\u6837\u4f8b2\u3011 587308676 \u3010\u6837\u4f8b3\u3011 718509545 475373430</p>"},{"location":"csdn/2020-08-19/#_6","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca \u5982\u56fe\u6240\u793a\uff1a</p> <p>\u5bf9\u4e8e20%\u7684\u6570\u636e\uff0c1\u2264n,m\u226450,1\u2264t\u226410 \u5bf9\u4e8e50%\u7684\u6570\u636e\uff0c1\u2264n,m\u2264300 \u5bf9\u4e8e70%\u7684\u6570\u636e\uff0c1\u2264n,m\u22645000 \u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c1\u2264n,m\u22645\u00d7105,1\u2264t\u22645000 \u672c\u9898\u90e8\u5206\u6570\u636e\u5361\u5e38\uff0c\u8bf7\u6ce8\u610f\u5e38\u6570\u4f18\u5316</p>"},{"location":"csdn/2020-08-19/#_7","title":"\u89e3\u6790","text":"<p>\u8fd9\u9053\u9898\u76ee\u53ef\u4ee5\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\u6765\u8ba8\u8bba\uff0c\u6a2a\u7ad6\u548c\u5bf9\u89d2\u7ebf\uff0c\u6a2a\u548c\u7ad6\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c\u7ed3\u679c\u4e3an*m*(n+m-2)\uff0c\u5bf9\u89d2\u7ebf\u4e0a\u63a8\u5230\u89c1\u4e0b\u56fe\uff1a </p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst int mod=1e9+7;\nll n,m;\nll mul(ll a,ll b)\n{\nll sum1=0;\nll sum2=a;\nwhile(b!=0)\n{\nif(b%2==1)\nsum1=(sum1+sum2)%mod;\nsum2=(sum2+sum2)%mod;\nb=b/2;\n}\nreturn sum1;\n}\nint main()\n{\nll t;\nscanf(\"%lld\",&amp;t);\nwhile(t--)\n{\nll ans=0;\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nif(n&gt;m)\nswap(n,m);\nans+=mul(n*m,n+m-2);\nll k1=n*(n-1)*2;\nll k2=3*m-n-1;\nif(k1%3==0)\nk1=k1/3;\nelse if(k2%3==0)\nk2=k2/3;\nans+=mul(k1,k2);\nprintf(\"%lld\\n\",ans%mod);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-08-20/","title":"2020-08-20","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2550&amp;pid=5</p>"},{"location":"csdn/2020-08-20/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>L\u56fd\u4e00\u5171\u6709N\u5ea7\u57ce\u9547\uff0c\u5f00\u59cb\u65f6\u5b83\u4eec\u4e24\u4e24\u4e0d\u8fde\u901a\u3002L\u56fd\u8ba1\u5212\u4f9d\u6b21\u5efa\u9020N-1\u6761\u9053\u8def\uff0c\u628a\u6240\u6709\u57ce\u9547\u8fde\u901a\u8d77\u6765\u3002\u6bcf\u5efa\u5b8c\u4e00\u6761\u9053\u8def\uff0c\u4f60\u9700\u8981\u56de\u7b54\u8fd9\u6761\u9053\u8def\u6240\u5728\u8fde\u901a\u5757\u5185\u8ddd\u79bb\u6700\u8fdc\u7684\u4e24\u5ea7\u57ce\u9547\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u4e24\u5ea7\u57ce\u9547\u4e4b\u95f4\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a\u4ece\u4e00\u5ea7\u8d70\u5230\u53e6\u4e00\u5ea7\u6240\u9700\u8981\u7ecf\u8fc7\u7684\u6700\u5c11\u9053\u8def\u6570\u3002</p>"},{"location":"csdn/2020-08-20/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570N\uff0c\u8868\u793a\u57ce\u9547\u7684\u6570\u91cf\u3002 \u63a5\u4e0b\u6765N-1\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570ai,bi\u8868\u793a\u63a5\u4e0b\u6765\u5efa\u7684\u9053\u8def\u8fde\u901a\u7684\u4e24\u5ea7\u57ce\u9547\u3002 \u4fdd\u8bc1N-1\u6761\u9053\u8def\u80fd\u591f\u4f7f\u6240\u6709\u57ce\u9547\u8fde\u901a\u3002</p>"},{"location":"csdn/2020-08-20/#_3","title":"\u8f93\u51fa","text":"<p>\u8f93\u51faN-1\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u5efa\u5b8c\u7b2ci\u6761\u9053\u8def\u540e\u7684\u7b54\u6848\u3002</p>"},{"location":"csdn/2020-08-20/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5\n3 5\n3 4\n1 2\n1 3\n</code></pre>"},{"location":"csdn/2020-08-20/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>1\n2\n1\n3\n</code></pre>"},{"location":"csdn/2020-08-20/#_6","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e20%\u7684\u6570\u636e\uff0cn\u2264300; \u5bf9\u4e8e50%\u7684\u6570\u636e\uff0cn\u22642000; \u5bf9\u4e8e\u53e6\u591620%\u7684\u6570\u636e\uff0c\u4fdd\u8bc1bi=i+1,ai&lt;=i; \u5bf9\u4e8e100%\u7684\u6570\u636e\uff0cn\u2264300000\u3002</p>"},{"location":"csdn/2020-08-20/#_7","title":"\u89e3\u6790","text":"<p>\u53c2\u8003\u4e8e\uff1ahttps://blog.csdn.net/qq_43857314/article/details/108108130 lca+st\u7b97\u6cd5\u8be6\u7ec6\u8bb2\u89e3\uff1a https://www.csdn.net/gather_27/MtjaQg0sNjAxOTEtYmxvZwO0O0OO0O0O.html RMQ\u7b97\u6cd5\u5206\u6790 https://blog.csdn.net/y990041769/article/details/38405063</p> <p>ST\u7b97\u6cd5\u662f\u5c06\u8df3\u7684\u6b65\u6570\u52a0\u4ee5\u4e8c\u8fdb\u5236\u4f18\u5316\u3002 LCA+ST\u500d\u589e+\u6811\u7684\u76f4\u5f84+\u5e76\u67e5\u96c6</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst int maxn=3e5+5;\nstruct node\n{\nint to,nex,w;\n} road[maxn*2];\nstruct nd\n{\nint x;\nint y;\n};\nnd qq[maxn]={0};\nint n,q,cnt;\nint pre[maxn][32],head[maxn],depth[maxn];\nint dis[maxn];\nll fa[maxn]={0},s[maxn]={0},t[maxn]={0};\nvoid add(int u,int v,int w)\n{\nroad[cnt].to=v;\nroad[cnt].w=w;\nroad[cnt].nex=head[u];\nhead[u]=cnt++;\n}\nvoid dfs(int u,int fa)\n{\npre[u][0]=fa;\ndepth[u]=depth[fa]+1;\nfor(int i=1; (1&lt;&lt;i)&lt;=depth[u]; i++) //\u500d\u589e\npre[u][i]=pre[pre[u][i-1]][i-1];\nfor(int i=head[u]; ~i; i=road[i].nex)\n{\nint v=road[i].to;\nif(v!=fa)\n{\ndis[v]=dis[u]+road[i].w;\ndfs(v,u);\n}\n}\n}\nint lca(int u,int v)\n{\nif(depth[u]&lt;depth[v])\n{\nswap(u,v);\n}\nint i=-1,j;\nwhile((1&lt;&lt;(i+1))&lt;=depth[u])\ni++;\nfor(j=i; j&gt;=0; j--)\n{\nif(depth[u]-(1&lt;&lt;j)&gt;=depth[v])\n{\nu=pre[u][j];\n}\n}\nif(u==v)\nreturn u;\nfor(int j=i; j&gt;=0; j--)\n{\nif(pre[u][j]!=pre[v][j])\n{\nu=pre[u][j];\nv=pre[v][j];\n}\n}\nreturn pre[u][0];\n}\nint findfa(int x)\n{\nif(fa[x]!=x)\nreturn fa[x]=findfa(fa[x]);\nelse\nreturn x;\n}\nint cmp(ll &amp;x,ll &amp;y,int &amp;z,int a,int b)\n{\nint dis1=dis[a]+dis[b]-2*dis[lca(a,b)];\nif(dis1&gt;z)\n{\nz=dis1;\nx=a;\ny=b;\n}\n}\nint solve(int x,int y)\n{\nint fx=findfa(x),fy=findfa(y);\nint a=s[fx],b=t[fx],c=s[fy],d=t[fy];\nfa[fx]=fy;\nint ans=0;\ncmp(s[fy],t[fy],ans,a,b);\ncmp(s[fy],t[fy],ans,a,c);\ncmp(s[fy],t[fy],ans,a,d);\ncmp(s[fy],t[fy],ans,b,c);\ncmp(s[fy],t[fy],ans,b,d);\ncmp(s[fy],t[fy],ans,c,d);\nreturn ans;\n}\nint main()\n{\nscanf(\"%d\",&amp;n);\nmemset(head,-1,sizeof(head));\nmemset(depth,0,sizeof(depth));\nfor(int i=1;i&lt;=n;i++)\nfa[i]=s[i]=t[i]=i;\ncnt=0;\nfor(int i=1; i&lt;n; i++)\n{\nint u,v,w;\nscanf(\"%d %d\",&amp;u,&amp;v);\nw=1;\nqq[i].x=u;\nqq[i].y=v;\nadd(u,v,w);\nadd(v,u,w);\n}\ndis[1]=0;\ndfs(1,0);\nfor(int i=1;i&lt;n;i++)\n{\nprintf(\"%d\\n\",solve(qq[i].x,qq[i].y));\n}\n}\n</code></pre>"},{"location":"csdn/2020-08-21/","title":"2020-08-21","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2552&amp;pid=0</p>"},{"location":"csdn/2020-08-21/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ecf\u8fc7\u6570\u5929\u7684\u8270\u82e6\u8dcb\u6d89\uff0cRainy7 \u7ec8\u4e8e\u8fdb\u5165\u4e86\u9b54\u6cd5\u738b\u56fd\u3002\u7531\u4e8e Rainy7 \u662f\u5927\u9b54\u6cd5\u5e08\uff0c\u6240\u4ee5\u5979\u53d7\u5230\u4e86\u56fd\u738b 3edc2wsx1qaz \u7684\u70ed\u60c5\u6b3e\u5f85\u3002</p> <p>Rainy7 \u4eab\u7528\u5b8c\u56fd\u5bb4\u540e\uff0c\u56fd\u738b\u5411\u5979\u9053\u51fa\u4e86\u9b54\u6cd5\u738b\u56fd\u7684\u56f0\u96be\uff1a\u738b\u56fd\u6b63\u906d\u53d7\u7740\u9b54\u517d\u7684\u88ad\u51fb\u3002\u738b\u56fd\u4e2d\u7684\u6240\u6709\u4eba\u90fd\u65e0\u6cd5\u51fb\u8d25\u9b54\u517d\uff0c\u6240\u4ee5\u56fd\u738b\u6073\u8bf7\u5927\u9b54\u6cd5\u5e08 Rainy7 \u5e2e\u52a9\u738b\u56fd\u4e0e\u9b54\u517d\u6218\u6597\u3002</p> <p>Rainy7 \u723d\u5feb\u5730\u7b54\u5e94\u4e86\u3002\u56fd\u738b\u6b23\u559c\u82e5\u72c2\uff0c\u5e76\u7acb\u5373\u9080\u8bf7 Rainy7 \u5230\u9b54\u6cd5\u4e16\u754c\u6700\u5927\u7684\u9b54\u6cd5\u9635\u4e2d\u6c72\u53d6\u9b54\u6cd5\uff0c\u4ee5\u505a\u597d\u6218\u6597\u51c6\u5907\u3002</p> <p>\u8fd9\u4e2a\u9b54\u6cd5\u9635\u662f\u4e00\u4e2an\u884cm\u5217\u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e2d\u6bcf\u4e2a\u683c\u5b50\u90fd\u6709\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u7684\u9b54\u6cd5\u503c\uff0c\u7b2ci\u884c\u7b2cj\u5217\u7684\u683c\u5b50\u7684\u9b54\u6cd5\u503c\u4e3aaij\u3002</p> <p>Rainy7 \u8981\u4ece\u7b2c1\u884c\u7b2c1\u5217\u7684\u683c\u5b50\u8d70\u5230\u7b2cn\u884c\u7b2cm\u5217\u7684\u683c\u5b50\u3002\u5982\u679c Rainy7 \u5f53\u524d\u5728\u7b2ci\u884c\u7b2cj\u5217\u7684\u683c\u5b50\u4e0a\uff0c\u5219\u5979\u4e0b\u4e00\u6b65\u53ef\u4ee5\u8d70\u5230\u7b2ci+1\u884c\u7b2cj\u5217\u7684\u683c\u5b50\u6216\u7b2c i\u884c\u7b2cj+1\u5217\u7684\u683c\u5b50\u4e0a\uff08\u5982\u679c\u90a3\u4e2a\u683c\u5b50\u5b58\u5728\u7684\u8bdd\uff09\uff0c\u76f4\u5230\u5979\u8d70\u5230\u7b2cn\u884c\u7b2cm\u5217\u7684\u683c\u5b50\u4e3a\u6b62\u3002</p> <p>Rainy7 \u53ea\u80fd\u6309\u8fd9\u6837\u7684\u65b9\u5f0f\u8d70\u4e00\u6b21\u3002\u8d70\u5b8c\u540e\uff0cRainy7 \u6c72\u53d6\u5230\u7684\u9b54\u6cd5\u503c\u662f\u5979\u8d70\u8fc7\u7684\u6240\u6709\u683c\u5b50\u7684\u9b54\u6cd5\u503c\u7684\u4e0e\u548c\uff0c\u5373\u628a\u5979\u8d70\u8fc7\u7684\u6240\u6709\u683c\u5b50\u7684\u9b54\u6cd5\u503c\u5168\u90e8\u6309\u4f4d\u4e0e\u8d77\u6765\u7684\u7ed3\u679c\u3002</p> <p>Rainy7 \u60f3\u77e5\u9053\u5979\u6700\u591a\u80fd\u6c72\u53d6\u5230\u591a\u5c11\u9b54\u6cd5\u503c\u3002Rainy7 \u53ea\u7528\u4e86114514-1919810s\u5c31\u7b97\u51fa\u4e86\u7b54\u6848\uff0c\u5728\u5979\u5f00\u59cb\u6c72\u53d6\u9b54\u6cd5\u4e4b\u524d\uff0c\u5979\u4e5f\u60f3\u8ba9\u4f60\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u9877\u523b\u95f4\uff0c\u9b54\u6cd5\u6c72\u53d6\u5b8c\u6bd5\u4e86\uff0cRainy7 \u4fbf\u575a\u5b9a\u5730\u5411\u6218\u573a\u8d70\u53bb\u2026\u2026</p>"},{"location":"csdn/2020-08-21/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570n,m\uff0c\u5206\u522b\u8868\u793a\u9b54\u6cd5\u9635\u7684\u884c\u6570\u548c\u5217\u6570\u3002 \u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c\u5305\u542bm\u4e2a\u6574\u6570\uff0c\u5176\u4e2d\u7b2ci\u7684\u7b2cj\u4e2a\u6570\u8868\u793aaij\u3002</p>"},{"location":"csdn/2020-08-21/#_3","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a Rainy7 \u80fd\u6c72\u53d6\u5230\u7684\u9b54\u6cd5\u503c\u7684\u6700\u5927\u503c\u3002</p>"},{"location":"csdn/2020-08-21/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 3 4 3 7 7 7 6 3 8 4 1 3 3 7 \u3010\u6837\u4f8b2\u3011 10 10 2047 2047 1535 2043 863 1983 2046 2015 2047 2047 1903 1535 1982 2015 2047 1531 1791 2015 2025 2045 767 927 2023 2039 2015 1918 2042 2039 935 2047 2022 2045 1499 991 2046 2047 2047 959 1023 2047 2038 1999 2046 1919 1519 2015 1007 2047 2047 1023 2047 991 1983 2047 1919 1655 1791 2013 1535 2047 2047 2047 1974 1535 2047 2031 1847 1535 2047 2045 1023 1023 2047 2047 1919 2011 1983 1791 1979 2023 2047 2047 2047 2045 1503 511 1023 2004 2039 2047 895 1525 2031 1911 2039 1967 1852 1023 1983 2047</p>"},{"location":"csdn/2020-08-21/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 3 \u3010\u6837\u4f8b2\u3011 1284</p>"},{"location":"csdn/2020-08-21/#_6","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca\uff1a \u6211\u4eec\u7528(i,j)\u8868\u793a\u9b54\u6cd5\u9635\u7b2ci\u884c\u7b2cj\u5217\u7684\u683c\u5b50\u3002</p> <p>Rainy7 \u8d70\u8fc7\u7684\u8def\u5f84\u4e3a\uff1a(1,1)-&gt;(1,2)-&gt;(2,2)-&gt;(3,2)-&gt;(3,3)-&gt;(3,4)\uff0c\u6c72\u53d6\u5230\u7684\u9b54\u6cd5\u503c\u4e3a 3 and 7 and 3 and 4 and 3 and 7 = 3\u3002</p> <p>\u6837\u4f8b2\u89e3\u91ca: Rainy7 \u8d70\u8fc7\u7684\u4e00\u79cd\u6700\u4f73\u8def\u5f84\u4e3a\uff1a (1,1)-&gt;(1,2)-&gt;(1,3)-&gt;(2,3)-&gt;(2,4)-&gt;(2.5)-&gt;(3,5)-&gt;(4,5)-&gt;(5,5)-&gt;(6,5)-&gt;(7,5)-&gt;(7,6)-&gt;(7,7)-&gt;(7,8)-&gt;(7,9)-&gt;(7,10)-&gt;(8,10)-&gt;(9,10)-&gt;(10.10)\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u6570\u636e\uff0c1\u2264n,m\u22642\u00d7103,0\u2264aij\u2264231-1\u3002</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint a[2500][2500]= {0};\nint n,m;\nint dp[2500][2500]= {0};\nint max1=0;\nint cnt=0;\nint p[2005][2005]={0};\nint vis[2005][2005]={0};\ninline int dfs()\n{\nif(vis[1][1])\nreturn 0;\ncnt++;\np[1][1]=cnt;\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nif(vis[i][j])\ncontinue;\nif(i&gt;1&amp;&amp;!vis[i-1][j]&amp;&amp;p[i-1][j]==cnt)\np[i][j]=cnt;\nif(j&gt;1&amp;&amp;!vis[i][j-1]&amp;&amp;p[i][j-1]==cnt)\np[i][j]=cnt;\n}\n}\nif(p[n][m]==cnt)\nreturn 1;\nelse\nreturn 0;\n}\nint last[2005][2005]={0};\nint l[100]={0};\nint main()\n{\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(register int i=1; i&lt;=n; i++)\n{\nfor(register int j=1; j&lt;=m; j++)\n{\nscanf(\"%d\",&amp;a[i][j]);\n}\n}\nfor(int k=31;k&gt;=0;k--)\n{\nif(!((a[1][1]&gt;&gt;k)&amp;1))\ncontinue;\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nvis[i][j]=last[i][j];\n}\n}\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nif(!((a[i][j]&gt;&gt;k)&amp;1))\nvis[i][j]=1;\n}\n}\nif(dfs())\n{\nl[k]=1;\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nlast[i][j]=vis[i][j];\n}\n}\n}\n}\nint sum=0;\nfor(int i=30;i&gt;=0;i--)\n{\nsum+=l[i]*(1&lt;&lt;i);\n}\ncout&lt;&lt;sum&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/","title":"2020-09-05\u5212\u5206\u6811\u6c42\u67d0\u4e00\u533a\u95f4\u7684\u4e2d\u4f4d\u6570","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2570&amp;pid=6</p>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>When Mr. B, Mr. G and Mr. M were preparing for the 2012 ACM-ICPC World Final Contest, Mr. B had collected a large set of contest problems for their daily training. When they decided to take training, Mr. B would choose one of them from the problem set. All the problems in the problem set had been sorted by their time of publish. Each time Prof. S, their coach, would tell them to choose one problem published within a particular time interval. That is to say, if problems had been sorted in a line, each time they would choose one of them from a specified segment of the line. </p> <p>Moreover,  when collecting  the  problems, Mr.  B  had  also  known  an  estimation  of  each  problem\u2019s  difficultness.  When he was asked to choose a problem, if he chose the easiest one, Mr. G would complain that \u201cHey, what a trivial problem!\u201d; if he chose the hardest one, Mr. M would grumble that it took too much time to finish it. To address this dilemma, Mr. B decided to take the one with the medium difficulty. Therefore, he needed a way to know the median number in the given interval of the sequence. </p>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_2","title":"\u8f93\u5165","text":"<p>For each test case, the first line contains a single integer n (1 &lt;= n &lt;= 100,000) indicating the total number of problems. The second line contains n integers xi (0 &lt;= xi &lt;= 1,000,000,000), separated by single space, denoting the difficultness of each problem, already sorted by publish time. The next line contains a single integer m (1 &lt;= m &lt;= 100,000), specifying number of queries. Then m lines follow, each line contains a pair of integers, A and B (1 &lt;= A &lt;= B &lt;= n), denoting that Mr. B needed to choose a problem between positions A and B (inclusively, positions are counted from 1). It is guaranteed that the number of items between A and B is odd. </p>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_3","title":"\u8f93\u51fa","text":"<p>For each query, output a single line containing an integer that denotes the difficultness of the problem that Mr. B should choose. </p>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5\n5 3 2 4 1\n3\n1 3\n2 4\n3 5\n5\n10 6 4 8 2\n3\n1 3\n2 4\n3 5\n</code></pre>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>Case 1:\n3\n3\n2\nCase 2:\n6\n6\n4\n</code></pre> \u5212\u5206\u6811\u6a21\u677f \u5212\u5206\u6811\u8bb2\u89e3\uff1ahttps://blog.csdn.net/qq_38984851/article/details/81559956</p> <p><pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nint tree[20][100500]={0};\nint to[20][100500]={0};\nint num[100500]={0};\nint sorted[100500]={0};\nint build(int l,int r,int deep)\n{\nif(l==r)\nreturn 0;\nint mid=(l+r)/2;\nint midd=sorted[mid];\nint suppose=mid-l+1;\nfor(int i=l;i&lt;=r;i++)\n{\nif(tree[deep][i]&lt;midd)\nsuppose--;\n}\nint sleft=l,sright=mid+1;\nfor(int i=l;i&lt;=r;i++)\n{\nif(i==l)\nto[deep][l]=0;\nelse\nto[deep][i]=to[deep][i-1];\nif(tree[deep][i]&lt;midd)\n{\nto[deep][i]++;\ntree[deep+1][sleft++]=tree[deep][i];\n}\nelse if(tree[deep][i]==midd&amp;&amp;suppose&gt;0)\n{\nsuppose--;\nto[deep][i]++;\ntree[deep+1][sleft++]=tree[deep][i];\n}\nelse\n{\ntree[deep+1][sright++]=tree[deep][i];\n}\n}\nbuild(l,mid,deep+1);\nbuild(mid+1,r,deep+1);\n}\nint query(int l,int r,int L,int R,int k,int deep)\n{\nif(L==R)\nreturn tree[deep][L];\nint mid=(l+r)/2;\nint lef;\nint toleft;\nif(l==L)\nlef=0,toleft=to[deep][R];\nelse\nlef=to[deep][L-1],toleft=to[deep][R]-lef;\nif(k&lt;=toleft)\n{\nreturn query(l,mid,l+lef,l+toleft+lef-1,k,deep+1);\n}\nelse\n{\nreturn query(mid+1,r,mid+L-l-lef+1,mid+R-l-toleft-lef+1,k-toleft,deep+1);\n}\n}\nint main()\n{\nint n,m,summ=0;\nwhile(scanf(\"%d\",&amp;n)!=EOF)\n{\nsumm++;\nfor(int i=1;i&lt;=n;i++)\n{\nscanf(\"%d\",&amp;num[i]);\nsorted[i]=num[i];\ntree[0][i]=num[i];\n}\nsort(sorted+1,sorted+n+1);\nbuild(1,n,0);\nprintf(\"Case %d:\\n\",summ);\nscanf(\"%d\",&amp;m);\nfor(int i=1;i&lt;=m;i++)\n{\nint a,b,c; /// a,b,c\u4ee3\u8868\u67e5\u8be2a\u5230b\u533a\u95f4\u5185\u7b2cc\u5927\u7684\u6570\nscanf(\"%d%d\",&amp;a,&amp;b);\nc=(b-a)/2+1;\nprintf(\"%d\\n\",query(1,n,a,b,c,0));\n}\n}\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2570&amp;pid=3</p>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_6","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Mr. B loves to play with colorful stones. There are n colors of stones in his collection. Two stones with the same color are indistinguishable. Mr. B would like to select some stones and arrange them in line to form a beautiful pattern. After several arrangements he finds it very hard for him to enumerate all the patterns. So he asks you to write a program to count the number of different possible patterns. </p> <p>Two patterns are considered different, if and only if they have different number of stones or have different colors on at least one position. </p>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_7","title":"\u8f93\u5165","text":"<p>Each test case starts with a line containing an integer n indicating the kinds of stones Mr. B have. Following this is a line containing n integers - the number of available stones of each color respectively. All the input numbers will be nonnegative and no more than 100.  </p>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_8","title":"\u8f93\u51fa","text":"<p>For each test case, display a single line containing the case number and the number of different patterns Mr. B can make with these stones, modulo 1,000,000,007, which is a prime number.  </p>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_9","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3\n1 1 1\n2\n1 2\n</code></pre>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_10","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>Case 1: 15\nCase 2: 8\n</code></pre>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_11","title":"\u63d0\u793a","text":"<p>In the first case, suppose the colors of the stones Mr. B has are B, G and M, the different patterns Mr. B can form are: B; G; M; BG; BM; GM; GB; MB; MG; BGM; BMG; GBM; GMB; MBG; MGB.  \u52a8\u6001\u89c4\u5212DP+\u7ec4\u5408\u6570\u5b66 \u53c2\u7167\u535a\u5ba2 https://blog.csdn.net/nobody_like_you/article/details/100016385</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[105]={0};\nll sum[105]={0};\nll dp[105][10500]={0};\nconst ll N=1e9+7;\nll c1[10550][115]={0};\nint main()\n{\nfor(ll i=0;i&lt;=10500;i++)\n{\nfor(ll j=0;j&lt;=i&amp;&amp;j&lt;=105;j++)\n{\nif(j==0||i==j)\nc1[i][j]=1;\nelse\nc1[i][j]=c1[i-1][j]+c1[i-1][j-1];\nc1[i][j]%=N;\n}\n}\nregister ll n,sum1=0;\nwhile(~scanf(\"%lld\",&amp;n))\n{\nmemset(dp,0,sizeof(dp));\nsum1++;\nfor(register ll i=1;i&lt;=n;i++)\nscanf(\"%lld\",&amp;a[i]),sum[i]=sum[i-1]+a[i];\ndp[0][0]=1;\nfor(register ll i=1;i&lt;=n;i++)\n{\nfor(register ll j=0;j&lt;=sum[i];j++)\n{\nfor(register ll k=0;k&lt;=a[i]&amp;&amp;k&lt;=j;k++)\n{\ndp[i][j]=dp[i][j]+c1[j][k]*dp[i-1][j-k];\ndp[i][j]%=N;\n}\n}\n}\nregister ll summ=0;\nfor(register ll i=1;i&lt;=sum[n];i++)\n{\nsumm+=dp[n][i];\nsumm%=N;\n}\nprintf(\"Case %lld: %lld\\n\",sum1,summ);\n//cout&lt;&lt;\"Case \"&lt;&lt;sum1&lt;&lt;\": \"&lt;&lt;summ&lt;&lt;endl;\n}\n}\n</code></pre>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_12","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u73b0\u6709r\u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u76d2\u5b50\u548cn\u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u7403\uff0c\u8981\u5c06\u8fd9n\u4e2a\u7403\u653e\u5165r\u4e2a\u76d2\u5b50\u4e2d\uff0c\u4e14\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50\u3002\u95ee\u6709\u591a\u5c11\u79cd\u65b9\u6cd5\uff1f </p> <p>\u4f8b\u5982\uff1a\u67092\u4e2a\u4e0d\u540c\u7684\u76d2\u5b50\uff08\u5206\u522b\u7f16\u4e3a1\u53f7\u548c2\u53f7\uff09\u548c3\u4e2a\u4e0d\u540c\u7684\u7403\uff08\u5206\u522b\u7f16\u4e3a1\u30012\u30013\u53f7\uff09\uff0c\u5219\u67096\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\uff1a</p>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_13","title":"\u8f93\u5165","text":"<p>\u4e24\u4e2a\u6574\u6570\uff0cn\u548cr\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u5206\u9694\u3002\uff080\u2264n, r\u226410\uff09</p>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_14","title":"\u8f93\u51fa","text":"<p>\u4ec5\u4e00\u884c\uff0c\u4e00\u4e2a\u6574\u6570\uff08\u4fdd\u8bc1\u5728\u957f\u6574\u578b\u8303\u56f4\u5185\uff09\u3002\u8868\u793an\u4e2a\u7403\u653e\u5165r\u4e2a\u76d2\u5b50\u7684\u65b9\u6cd5\u3002</p>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_15","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3 2\n</code></pre>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_16","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>6\n</code></pre>"},{"location":"csdn/2020-09-05%E5%88%92%E5%88%86%E6%A0%91%E6%B1%82%E6%9F%90%E4%B8%80%E5%8C%BA%E9%97%B4%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/#_17","title":"\u89e3\u6790","text":"<p>\u9996\u5148\u5c4f\u853d\u4e00\u4e2a\u6761\u4ef6-&gt;r\u4e2a\u76d2\u5b50\u4e92\u4e0d\u76f8\u540c,\u8bbe\u5b9a\u6211\u4eec\u5c06\u7b2ci\u4e2a\u7403\u5c06\u8981\u653e\u5230\u7b2ck\u4e2a\u76d2\u5b50\u91cc\uff08\u524di-1\u4e2a\u7403\u5df2\u7ecf\u5728\u524dk\u4e2a\u76d2\u5b50\u91cc\u653e\u597d\uff09\u4e8e\u662f\u6709\u5982\u4e0b\u9012\u63a8\u516c\u5f0f\uff1a</p> <p>s[i,k] = s[i-i,k-1]+s[i-1,k]*k</p> <p>\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u7b2ci\u4e2a\u7403\uff0c\u5f53\u7b2ck\u4e2a\u76d2\u5b50\u4e3a\u7a7a\u65f6\uff0c\u5c31\u5fc5\u987b\u8981\u653e\u5230\u7b2ck\u4e2a\u76d2\u5b50\u91cc\uff0c\u5f53\u7b2ck\u4e2a\u76d2\u5b50\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u53ef\u4ee5\u4efb\u610f\u653e\u5230k\u4e2a\u76d2\u5b50\u5176\u4e2d\u7684\u4e00\u4e2a\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\nconst long long int N=1e9+7;\nint a[100][100]={0};\ntypedef long long ll;\nint main()\n{\nint n,k;\ncin&gt;&gt;n&gt;&gt;k;\nfor(int i=1;i&lt;=15;i++)\n{\na[i][1]=1;\n}\nfor(int i=2;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=k;j++)\n{\na[i][j]=a[i-1][j]*j+a[i-1][j-1];\n}\n}\nfor(int i=1;i&lt;=k;i++)\na[n][k]=a[n][k]*i;\ncout&lt;&lt;a[n][k]&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-09-07/","title":"2020-09-07","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2564&amp;pid=7</p>"},{"location":"csdn/2020-09-07/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>You are working with a strange text editor for texts consisting only of open and close parentheses. The editor accepts the following three keys as editing commands to modify the text kept in it.</p> <p>\u00b7\u2018(\u2019 appends an open parenthesis (\u2018(\u2019) to the end of the text. \u00b7\u2018)\u2019 appends a close parenthesis (\u2018)\u2019) to the end of the text. \u00b7\u2018-\u2019 removes the last character of the text. A balanced string is one of the following.</p> <p>\u00b7\u201c()\u201d \u00b7\u201c(X)\u201d where X is a balanced string \u00b7\u201cXY\u201d where both X and Y are balanced strings Initially, the editor keeps an empty text. You are interested in the number of balanced substrings in the text kept in the editor after each of your key command inputs. Note that, for the same balanced substring occurring twice or more, their occurrences should be counted separately. Also note that, when some balanced substrings are inside a balanced substring, both the inner and outer balanced substrings should be counted.</p>"},{"location":"csdn/2020-09-07/#_2","title":"\u8f93\u5165","text":"<p>The input consists of a single test case given in a line containing a number of characters, each of which is a command key to the editor, that is, either \u2018(\u2019, \u2018)\u2019, or \u2018-\u2019. The number of characters does not exceed 200 000. They represent a key input sequence to the editor.</p> <p>It is guaranteed that no \u2018-\u2019 command comes when the text is empty.</p>"},{"location":"csdn/2020-09-07/#_3","title":"\u8f93\u51fa","text":"<p>Print the numbers of balanced substrings in the text kept in the editor after each of the key command inputs are applied, each in one line. Thus, the number of output lines should be the same as the number of characters in the input line.</p>"},{"location":"csdn/2020-09-07/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 (()())---) \u3010\u6837\u4f8b2\u3011 ()--()()----)(()()))</p>"},{"location":"csdn/2020-09-07/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 0 0 1 1 3 4 3 1 1 2 \u3010\u6837\u4f8b2\u3011 0 1 0 0 0 1 1 3 1 1 0 0 0 0 0 1 1 3 4 4</p>"},{"location":"csdn/2020-09-07/#_6","title":"\u89e3\u6790","text":"<p>DP\u52a8\u6001\u89c4\u5212+\u5806\u6808+\u79bb\u6563\u5316\u5904\u7406</p> <p><pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nchar a[300500]={0};\nstack&lt;int&gt;w;\nint dp[300500]={0};\nint flag[300500]={0};\nint main()\n{\nscanf(\"%s\",a+1);\nlong long sum=0;\nlong long s=1;\nfor(int i=1;a[i];i++)\n{\nif(a[i]=='(')\n{\ns++;\nw.push(s);\ndp[s]=flag[s]=0;\n}\nif(a[i]==')')\n{\ns++;\nif(!w.empty())\n{\nint u=w.top();\nw.pop();\ndp[s]=dp[u-1]+1;\nflag[s]=u;\nsum+=dp[s];\n}\nelse\n{\ndp[s]=flag[s]=0;\n}\n}\nif(a[i]=='-')\n{\nsum-=dp[s];\nwhile(!w.empty()&amp;&amp;w.top()&gt;=s)\nw.pop();\nif(flag[s]!=0)\nw.push(flag[s]);\ns--;\n}\nprintf(\"%lld\\n\",sum);\n}\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2573&amp;pid=2</p>"},{"location":"csdn/2020-09-07/#_7","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>It's easy for ACMer to calculate A^X mod P. Now given seven integers n, A, K, a, b, m, P, and a function f(x) which defined as following. f(x) = K, x = 1 f(x) = (a*f(x-1) + b)%m , x &gt; 1</p> <p>Now, Your task is to calculate ( A^(f(1)) + A^(f(2)) + A^(f(3)) + ...... + A^(f(n)) ) modular P. </p>"},{"location":"csdn/2020-09-07/#_8","title":"\u8f93\u5165","text":"<p>In the first line there is an integer T (1 &lt; T &lt;= 40), which indicates the number of test cases, and then T test cases follow. A test case contains seven integers n, A, K, a, b, m, P in one line. 1 &lt;= n &lt;= 10^6 0 &lt;= A, K, a, b &lt;= 10^9 1 &lt;= m, P &lt;= 10^9</p>"},{"location":"csdn/2020-09-07/#_9","title":"\u8f93\u51fa","text":"<p>For each case, the output format is \u201cCase #c: ans\u201d.  c is the case number start from 1. ans is the answer of this problem.</p>"},{"location":"csdn/2020-09-07/#_10","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2\n3 2 1 1 1 100 100\n3 15 123 2 3 1000 107\n</code></pre>"},{"location":"csdn/2020-09-07/#_11","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>Case #1: 14\nCase #2: 63\n</code></pre> \u53c2\u7167\u4e8e https://blog.csdn.net/Little_boy_z/article/details/80042689 <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef unsigned long long ll;\nint n,A,K,a,b,m,p;\nll dp1[100500]={0};\nll dp2[100500]={0};\nint db()\n{\ndp1[0]=dp2[0]=1;\ndp1[1]=A%p;\nfor(int i=2;i&lt;=100000;i++)\n{\ndp1[i]=(dp1[i-1]*dp1[1])%p;\n}\ndp2[1]=dp1[100000];\nfor(int i=2;i&lt;=100000;i++)\n{\ndp2[i]=(dp2[i-1]*dp2[1])%p;\n}\n}\nint main()\n{\nint t;\ncin&gt;&gt;t;\nfor(int j=1;j&lt;=t;j++)\n{\ncin&gt;&gt;n&gt;&gt;A&gt;&gt;K&gt;&gt;a&gt;&gt;b&gt;&gt;m&gt;&gt;p;\ncout&lt;&lt;\"Case #\"&lt;&lt;j&lt;&lt;\": \";\nll ans=0;\nll ans2=K;\ndb();\nfor(int i=1;i&lt;=n;i++)\n{\nans+=dp1[ans2%100000]*dp2[ans2/100000];\nans%=p;\nans2=(ans2*a+b)%m;\n}\ncout&lt;&lt;ans%p&lt;&lt;endl;\n}\nreturn 0;\n}\n</code></pre></p>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","title":"2020-09-08\u4e8c\u5206\u6700\u5c0f\u751f\u6210\u6811","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2573&amp;pid=4</p>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Coco is a beautiful ACMer girl living in a very beautiful mountain. There are many trees and flowers on the mountain, and there are many animals and birds also. Coco like the mountain so much that she now name some letter sequences as Mountain Subsequences.</p> <p>A Mountain Subsequence is defined as following:</p> <ol> <li> <p>If the length of the subsequence is n, there should be a max value letter, and the subsequence should like this, a1 &lt; ...&lt; ai &lt; ai+1 &lt; Amax &gt; aj &gt; aj+1 &gt; ... &gt; an</p> </li> <li> <p>It should have at least 3 elements, and in the left of the max value letter there should have at least one element, the same as in the right.</p> </li> <li> <p>The value of the letter is the ASCII value.</p> </li> </ol> <p>Given a letter sequence, Coco wants to know how many Mountain Subsequences exist.</p>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_2","title":"\u8f93\u5165","text":"<p>Input contains multiple test cases.</p> <p>For each case there is a number n (1&lt;= n &lt;= 100000) which means the length of the letter sequence in the first line, and the next line contains the letter sequence.</p> <p>Please note that the letter sequence only contain lowercase letters. </p>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_3","title":"\u8f93\u51fa","text":"<p>For each case please output the number of the mountain subsequences module 2012.</p>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4\nabca\n</code></pre>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>4\n</code></pre>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_6","title":"\u63d0\u793a","text":"<p>The 4 mountain subsequences are:</p> <p>aba, aca, bca, abca</p> <p>\u7528\u6807\u8bb0\u6570\u7ec4\u7684\u65b9\u6cd5\u6765\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6</p> <p>AC\u4ee3\u7801 <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nchar a[100500]= {0};\null dp2[100500]= {0};\null dp1[100500]= {0};\nll w[200]={0};\nint main()\n{\nll n;\nwhile(scanf(\"%lld%s\",&amp;n,a+1)!=EOF)\n{\nfor(int i=0;i&lt;30;i++)\nw[i]=0;\nfor(register ll i=n; i&gt;=1; i--)\n{\ndp2[i]=0;\nfor(char j='a'; j&lt;a[i]; j++)\n{\ndp2[i]+=w[j-'a'];\ndp2[i]%=2012;\n}\nw[a[i]-'a']+=dp2[i]+1;\nw[a[i]-'a']%=2012;\n}\nfor(int i=0;i&lt;30;i++)\nw[i]=0;\nregister long long ans=0;\nfor(register ll i=1; i&lt;=n; i++)\n{\ndp1[i]=0;\nfor(ll j='a'; j&lt;a[i]; j++)\n{\ndp1[i]+=w[j-'a'];\ndp1[i]%=2012;\n}\nw[a[i]-'a']+=dp1[i]+1;\nw[a[i]-'a']%=2012;\n}\nfor(register ll i=1; i&lt;=n; i++)\nans+=(dp1[i]*dp2[i])%2012,ans%=2012;\nprintf(\"%lld\\n\",ans);\n}\nreturn 0;\n}\n</code></pre> \u65f6\u95f4\u8d85\u9650 <pre><code>#pragma GCC optimize(2)\n#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nchar a[100500]= {0};\null dp1[100500]= {0};\null dp2[100500]= {0};\nint main()\n{\nll n;\nwhile(scanf(\"%lld%s\",&amp;n,a+1)!=EOF)\n{\nfor(int i=0;i&lt;=n+50;i++)\ndp1[i]=dp2[i]=0;\nfor(ll i=1; i&lt;=n; i++)\n{\nfor(ll j=1; j&lt;i; j++)\nif(a[j]&lt;a[i])\ndp1[i]=dp1[i]+dp1[j]+1;\n}\nfor(ll i=n; i&gt;=1; i--)\n{\nfor(ll j=n; j&gt;i; j--)\nif(a[i]&gt;a[j])\ndp2[i]=dp2[i]+dp2[j]+1;\n}\nlong long ans=0;\nfor(ll i=1; i&lt;=n; i++)\n{\nif(dp1[i]&gt;=1&amp;&amp;dp2[i]&gt;=1)\nans+=dp1[i]%2012*dp2[i]%2012;\nans%=2012;\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\nreturn 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2570&amp;pid=8</p>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_7","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>In China, there are two companies offering the Internet service for the people from all cities: China Telecom and China Unicom. They both are planning to build cables between cities. Obviously, the government wants to connect all the cities in minimum costs. So the minister of finance Mr. B wants to choose some of the cable plans from the two  companies  and  calculate  the  minimum  cost  needed  to  connect  all the cities. Mr.  B  knows  that  N-1 cables should be built in order to connect all N cities of China. For some honorable reason, Mr. B should choose K cables from the China Telecom and the rest N-1-K cables from the China Unicom. Your job is to help Mr. B determine which cables should be built and the minimum cost to build them. You may assume that the solution always exists. </p>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_8","title":"\u8f93\u5165","text":"<p>Each test case starts with a line containing the number of cities N (1 &lt;= N &lt;= 50,000), number of cable plans M (N-1 &lt;= M &lt;= 100,000) and the number of required cables from China Telecom K (0 &lt;= K &lt;= N-1).  This is followed by M lines, each containing four integers a, b, c, x (0 &lt;= a, b &lt;= N-1, a != b, 1 &lt;= c &lt;= 100, x in {0,1} indicating the pair of cities this cable will connect, the cost to build this cable and the company this cable plan belongs to. x=0 denotes that the cable plan belongs to China Telecom and x=1 denotes that the cable plan is from China Unicom. </p>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_9","title":"\u8f93\u51fa","text":"<p>For each test case, display the case number and the minimum cost of the cable building.</p>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_10","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2 2 1\n0 1 1 1\n0 1 2 0\n2 2 0\n0 1 1 1\n0 1 2 0\n</code></pre>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_11","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>Case 1: 2\nCase 2: 1\n</code></pre>"},{"location":"csdn/2020-09-08%E4%BA%8C%E5%88%86%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#_12","title":"\u63d0\u793a","text":"<p>In the first case, there are two cable plans between the only two cities, one from China Telecom and one from China Unicom. Mr. B needs to choose the one from China Telecom to satisfy the problem requirement even the cost is higher.  In the second case, Mr. B must choose the cable from China Unicom, which leads the answer to 1.  \u4e8c\u5206+\u6700\u5c0f\u751f\u6210\u6811 <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint n,m,k,sum1;\nint fa[500500]={0};\nstruct node\n{\nint x,y,z,t;\n};\nnode a[500500]={0};\nbool cmp(node a,node b)\n{\nif(a.z!=b.z)\nreturn a.z&lt;b.z;\nelse\nreturn a.t&lt;b.t;\n}\nint findfa(int x)\n{\nif(x==fa[x])\nreturn x;\nelse\nreturn fa[x]=findfa(fa[x]);\n}\nint add(int x,int y)\n{\nint fx=findfa(x);\nint fy=findfa(y);\nif(fx!=fy)\n{\nfa[fx]=fy;\nreturn 1;\n}\nreturn 0;\n}\nint pd(int x)\n{\nfor(int i=1;i&lt;=m;i++)\nif(a[i].t==0)\na[i].z=a[i].z+x;\nfor(int i=0;i&lt;=n;i++)\nfa[i]=i;\nsort(a+1,a+m+1,cmp);\nint sum=0,cnt=n-1;\nsum1=0;\nfor(int i=1;i&lt;=m;i++)\n{\nif(add(a[i].x,a[i].y))\n{\nsum++;\ncnt-=a[i].t;\nsum1+=a[i].z;\n}\nif(sum==n-1)\nbreak;\n}\nfor(int i=1;i&lt;=m;i++)\n{\nif(a[i].t==0)\n{\na[i].z=a[i].z-x;\n}\n}\nreturn cnt&gt;=k;\n}\nint main()\n{\nint summ=0;\nwhile(scanf(\"%d%d%d\",&amp;n,&amp;m,&amp;k)!=EOF)\n{\nint ans=0;\nfor(int i=1;i&lt;=m;i++)\n{\nscanf(\"%d%d%d%d\",&amp;a[i].x,&amp;a[i].y,&amp;a[i].z,&amp;a[i].t);\n}\nint l=-100,r=100;\nwhile(l&lt;r)\n{\nint mid=(l+r-1)/2;\nif(pd(mid))\n{\nl=mid+1;\nans=sum1-k*mid;\n}\nelse\n{\nr=mid;\n}\n}\nprintf(\"Case %d: %d\\n\",++summ,ans);\n}\nreturn 0;\n}\n</code></pre></p>"},{"location":"csdn/2020-09-08%E6%95%B0%E4%BD%8DDP%E4%BA%8C%E5%88%86/","title":"2020-09-08\u6570\u4f4dDP\u4e8c\u5206","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2573&amp;pid=6</p>"},{"location":"csdn/2020-09-08%E6%95%B0%E4%BD%8DDP%E4%BA%8C%E5%88%86/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Tom is very interested in number problem. Nowadays he is thinking of a problem about A-number and B-number.</p> <p>A-number is a positive integer whose decimal form contains 7 or it can be divided by 7. We can write down the first 10 A-number ( a[i] is the ith A-number)</p> <p>{a[1]=7,a[2]=14,a[3]=17,a[4]=21,a[5]=27,a[6]=28,a[7]=35,a[8]=37,a[9]=42,a[10]=47};</p> <p>B-number is Sub-sequence of A-number which contains all A-number but a[k] ( that k is a  A-number.)  Like 35, is the 7th A-number and 7 is also an A-number so the 35 ( a[7] ) is not a B-number. We also can write down the first 10 B-number.</p> <p>{b[1]=7,b[2]=14,b[3]=17,b[4]=21,b[5]=27,b[6]=28,b[7]=37,b[8]=42,b[9]=47,b[10]=49};</p> <p>Now Given an integer N, please output the Nth B-number.</p>"},{"location":"csdn/2020-09-08%E6%95%B0%E4%BD%8DDP%E4%BA%8C%E5%88%86/#_2","title":"\u8f93\u5165","text":"<p>The input consists of multiple test cases.</p> <p>For each test case, there will be a positive integer N as the description.</p>"},{"location":"csdn/2020-09-08%E6%95%B0%E4%BD%8DDP%E4%BA%8C%E5%88%86/#_3","title":"\u8f93\u51fa","text":"<p>For each test case, output an integer indicating the Nth B-number.</p> <p>You can assume the result will be no more then 2^63-1.</p>"},{"location":"csdn/2020-09-08%E6%95%B0%E4%BD%8DDP%E4%BA%8C%E5%88%86/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1\n7\n100\n</code></pre>"},{"location":"csdn/2020-09-08%E6%95%B0%E4%BD%8DDP%E4%BA%8C%E5%88%86/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>7\n37\n470\n</code></pre> \u6570\u4f4dDP+\u4e8c\u5206\u67e5\u627e https://www.cnblogs.com/shinecheng/p/3601235.html https://blog.csdn.net/weixin_33827965/article/details/93230896 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef unsigned long long ll; ///2^63-1 \u5efa\u8bae\u7528unsigned long long \nll newx;\nll number[1005]={0};\nll dp[1005][1005]={0};\nll power[300]={0};\ninline ll dfs(ll i,ll mod,int lim) ///lim\u4e3a\u6807\u8bb0\u662f\u5426\u6709\u4e0a\u9650\n{\nif(i==0)\nreturn mod==0;\nif(!lim&amp;&amp;~dp[i][mod])  /// ~(-1)=0\nreturn dp[i][mod];\nint end1=lim?number[i]:9;\nll ans=0;\nfor(int j=0;j&lt;=end1;j++)\n{\nif(j!=7)\nans+=dfs(i-1,(mod-(j*power[i-1])%7+7)%7,lim&amp;&amp;j==end1);  ///\u53d6\u4f59\u4e3a7\u7684\u60c5\u51b5\nelse if(j==7)\nans+=(lim&amp;&amp;j==end1)?(newx%power[i-1]+1):power[i-1]; ///\u9996\u4f4d\u4e3a7\u7684\u60c5\u51b5\n}\nif(!lim) ///\u6ca1\u6709\u9650\u5236\ndp[i][mod]=ans;\nreturn ans;\n}\nll js(ll p)\n{\nnewx=p;\nif(p==0)\nreturn 0;\nint k=0;\nwhile(p!=0)\n{\nnumber[++k]=p%10;\np=p/10;\n}\nreturn dfs(k,0,1)-1;\n}\nll out(ll n)\n{\nll l=1,r=(1ll&lt;&lt;63)-1;\nwhile(l&lt;r)\n{\nll mid=(l+r)/2;;\nll a=js(mid);\nll b=a-js(a);\nif(b&gt;=n)\nr=mid;\nelse\nl=mid+1;\n}\nreturn l;\n}\nint main()\n{\npower[0]=1;\nfor(int i=1;i&lt;=100;i++)\npower[i]=power[i-1]*10;\nll n;\nfor(int i=0;i&lt;200;i++)\nfor(int j=0;j&lt;200;j++)\ndp[i][j]=-1;\nwhile(scanf(\"%lld\",&amp;n)!=EOF)\nprintf(\"%lld\\n\",out(n));\n}\n</code></pre></p>"},{"location":"csdn/2020-09-09%E6%95%B0%E4%BD%8DDP/","title":"2020-09-09\u6570\u4f4dDP","text":"<p>http://icpc.upc.edu.cn/problem.php?id=14643</p>"},{"location":"csdn/2020-09-09%E6%95%B0%E4%BD%8DDP/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Find the number of integers between 1 and N (inclusive) that contains exactly K non-zero digits when written in base ten. Constraints \u00b71\u2264N&lt;10100 \u00b71\u2264K\u22643</p>"},{"location":"csdn/2020-09-09%E6%95%B0%E4%BD%8DDP/#_2","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format: N K</p>"},{"location":"csdn/2020-09-09%E6%95%B0%E4%BD%8DDP/#_3","title":"\u8f93\u51fa","text":"<p>Print the count.                        </p>"},{"location":"csdn/2020-09-09%E6%95%B0%E4%BD%8DDP/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 100 1 \u3010\u6837\u4f8b2\u3011 25 2 \u3010\u6837\u4f8b3\u3011 314159 2 \u3010\u6837\u4f8b4\u3011 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 3</p>"},{"location":"csdn/2020-09-09%E6%95%B0%E4%BD%8DDP/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 19 \u3010\u6837\u4f8b2\u3011 14 \u3010\u6837\u4f8b3\u3011 937 \u3010\u6837\u4f8b4\u3011 117879300</p>"},{"location":"csdn/2020-09-09%E6%95%B0%E4%BD%8DDP/#_6","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca The following 19 integers satisfy the condition:1,2,3,4,5,6,7,8,9,10,20,30,40,50,60,70,80,90,100 \u6837\u4f8b2\u89e3\u91ca The following 14 integers satisfy the condition:11,12,13,14,15,16,17,18,19,21,22,23,24,25</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll dp[300][30]={0};\nchar a[1005]={0};\nint main()\n{\nll k;\nscanf(\"%s%lld\",a+1,&amp;k);\nll n=strlen(a+1);\ndp[0][0]=1;\nfor(int i=1;i&lt;=200;i++)\n{\ndp[i][0]=dp[i-1][0];\nfor(int j=1;j&lt;=20;j++)\ndp[i][j]=dp[i-1][j]+9*dp[i-1][j-1];\n}\nll sum=0,cnt=0;\nfor(int i=1;i&lt;=n;i++)\n{\nif(a[i]&gt;'0'&amp;&amp;k-cnt&gt;=0)\nsum+=dp[n-i][k-cnt];\nif(a[i]&gt;'1'&amp;&amp;k-1-cnt&gt;=0)\nsum+=(a[i]-'0'-1)*dp[n-i][k-1-cnt];\nif(a[i]&gt;'0')\ncnt++;\n}\nif(cnt==k)\nsum++;\ncout&lt;&lt;sum&lt;&lt;endl;\n}\n</code></pre>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/","title":"2020-09-11\u6811\u72b6\u6570\u7ec4\u6c42\u6700\u5927\u503c","text":"<p>http://icpc.upc.edu.cn/status.php?user_id=2019UPC135&amp;cid=1461</p>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u73b0\u5728\u8bf7\u6c42\u4f60\u7ef4\u62a4\u4e00\u4e2a\u6570\u5217\uff0c\u8981\u6c42\u63d0\u4f9b\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a1\u3001\u67e5\u8be2\u64cd\u4f5c\u3002\u8bed\u6cd5\uff1aQL\u529f\u80fd\uff1a\u67e5\u8be2\u5f53\u524d\u6570\u5217\u4e2d\u672b\u5c3eL\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u7684\u6570\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6570\u7684\u503c\u3002\u9650\u5236\uff1aL\u4e0d\u8d85\u8fc7\u5f53\u524d\u6570\u5217\u7684\u957f\u5ea6\u30022\u3001\u63d2\u5165\u64cd\u4f5c\u3002\u8bed\u6cd5\uff1aAn\u529f\u80fd\uff1a\u5c06n\u52a0\u4e0at\uff0c\u5176\u4e2dt\u662f\u6700\u8fd1\u4e00\u6b21\u67e5\u8be2\u64cd\u4f5c\u7684\u7b54\u6848\uff08\u5982\u679c\u8fd8\u672a\u6267\u884c\u8fc7\u67e5\u8be2\u64cd\u4f5c\uff0c\u5219t=0)\uff0c\u5e76\u5c06\u6240\u5f97\u7ed3\u679c\u5bf9\u4e00\u4e2a\u56fa\u5b9a\u7684\u5e38\u6570D\u53d6\u6a21\uff0c\u5c06\u6240\u5f97\u7b54\u6848\u63d2\u5165\u5230\u6570\u5217\u7684\u672b\u5c3e\u3002\u9650\u5236\uff1an\u662f\u975e\u8d1f\u6574\u6570\u5e76\u4e14\u5728\u957f\u6574\u8303\u56f4\u5185\u3002\u6ce8\u610f\uff1a\u521d\u59cb\u65f6\u6570\u5217\u662f\u7a7a\u7684\uff0c\u6ca1\u6709\u4e00\u4e2a\u6570\u3002</p>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_2","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0cM\u548cD\uff0c\u5176\u4e2dM\u8868\u793a\u64cd\u4f5c\u7684\u4e2a\u6570(M &lt;= 200,000)\uff0cD\u5982\u4e0a\u6587\u4e2d\u6240\u8ff0\uff0c\u6ee1\u8db3D\u5728longint\u5185\u3002\u63a5\u4e0b\u6765M\u884c\uff0c\u67e5\u8be2\u64cd\u4f5c\u6216\u8005\u63d2\u5165\u64cd\u4f5c\u3002</p>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_3","title":"\u8f93\u51fa","text":"<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u64cd\u4f5c\uff0c\u8f93\u51fa\u4e00\u884c\u3002\u8be5\u884c\u53ea\u6709\u4e00\u4e2a\u6570\uff0c\u5373\u5e8f\u5217\u4e2d\u6700\u540eL\u4e2a\u6570\u7684\u6700\u5927\u6570\u3002</p>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5 100\nA 96\nQ 1\nA 97\nQ 1\nQ 2\n</code></pre>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>96\n93\n96\n</code></pre> \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6570\u7ec4\u6c42\u6700\u503c \u9644\u4e00\u5f20\u56fe\u5e2e\u52a9\u7406\u89e3\u4ee3\u7801 </p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include&lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f\nusing namespace std;\ntypedef long long ll;\nll c[400500]={0};\nll h[400500]={0};\nll lowbit(ll x)\n{\nreturn x&amp;(-x);\n}\nll getmax(ll l,ll r)\n{\nll max1=h[r];\nwhile(l&lt;=r)\n{\nmax1=max(max1,h[r]);\nfor(--r;r-l&gt;=lowbit(r);r-=lowbit(r))\nmax1=max(max1,c[r]);\n}\nreturn max1;\n}\nchar s[100];\nint main()\n{\nll n,d,a,t=0,cnt=0;\nscanf(\"%lld%lld\",&amp;n,&amp;d);\nwhile(n--)\n{\nscanf(\"%s%lld\",s,&amp;a);\nif(s[0]=='A')\n{\nh[++cnt]=(a+t)%d;\nc[cnt]=max(getmax(cnt-lowbit(cnt)+1,cnt-1),h[cnt]);\n}\nelse\n{\nt=getmax(cnt-a+1,cnt);\nprintf(\"%d\\n\",t);\n}\n}\n}\n</code></pre>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_6","title":"\u5355\u70b9\u4fee\u6539+\u533a\u95f4\u67e5\u8be2\u6c42\u548c","text":""},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_7","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57n\uff0c\u8868\u793a\u6570\u7ec4\u5927\u5c0f\uff0c\u540e\u6709n\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u6570\u5b57\u7684\u521d\u59cb\u503c\uff0c\u7136\u540e\u8fdb\u884cm\u6b21\u64cd\u4f5c\uff0c\u2018Q\u2019\u4ee3\u8868\u67e5\u8be2\uff0c\u67e5\u8be2\u67d0\u4e00\u533a\u95f4\u6240\u6709\u5143\u7d20\u7684\u548c\uff0c\u2018C\u2019\u4ee3\u8868\u4fee\u6539\uff0c\u5728\u67d0\u4e00\u5143\u7d20\u4e0a\u52a0\u4e0a\u503c\u3002</p>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_8","title":"\u8f93\u5165","text":"<pre><code>10 7\n1 2 3 4 5 6 7 8 9 10\nQ 4 4\nQ 1 10\nQ 2 4\nC 3 6\nQ 2 4\nC 2 4\nQ 2 4\n</code></pre>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_9","title":"\u8f93\u51fa","text":"<p><pre><code>4\n55\n9\n15\n18\n</code></pre> \u6811\u72b6\u6570\u7ec4\u5355\u70b9\u4fee\u6539+\u533a\u95f4\u6c42\u548c</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll n,m;\nll h[100500]={0};\nll c[100500]={0};\nll lowbit(ll x)\n{\nreturn x&amp;(-x);\n}\nll add(ll x,ll a)\n{\nwhile(x&lt;=n)\n{\nc[x]+=a;\nx+=lowbit(x);\n}\n}\nll getsum(ll l)\n{\nll sum=0;\nwhile(l&gt;0)\n{\nsum+=c[l];\nl-=lowbit(l);\n}\nreturn sum;\n}\nint main()\n{\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;h[i]);\nadd(h[i],i);\n}\nchar a[100];\nll b,c;\nwhile(m--)\n{\nscanf(\"%s%lld%lld\",a,&amp;b,&amp;c);\nif(a[0]=='Q')\n{\nprintf(\"%lld\\n\",getsum(c)-getsum(b-1));\n}\nelse\n{\nadd(b,c);\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_10","title":"\u533a\u95f4\u4fee\u6539+\u533a\u95f4\u67e5\u8be2","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=1461&amp;pid=13</p>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_11","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>You have N integers, A1, A2, ... , AN. You need to deal with two kinds of operations. One type of operation is to add some given number to each number in a given interval. The other is to ask for the sum of numbers in a given interval.</p>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_12","title":"\u8f93\u5165","text":"<p>The first line contains two numbers N and Q. 1 \u2264 N,Q \u2264 100000. The second line contains N numbers, the initial values of A1, A2, ... , AN. -1000000000 \u2264 Ai \u2264 1000000000. Each of the next Q lines represents an operation. \"C a b c\" means adding c to each of Aa, Aa+1, ... , Ab. -10000 \u2264 c \u2264 10000. \"Q a b\" means querying the sum of Aa, Aa+1, ... , Ab.</p>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_13","title":"\u8f93\u51fa","text":"<p>You need to answer all Q commands in order. One answer in a line.</p>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_14","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>10 5\n1 2 3 4 5 6 7 8 9 10\nQ 4 4\nQ 1 10\nQ 2 4\nC 3 6 3\nQ 2 4\n</code></pre>"},{"location":"csdn/2020-09-11%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%B1%82%E6%9C%80%E5%A4%A7%E5%80%BC/#_15","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>4\n55\n9\n15\n</code></pre> \u63d0\u793a The sums may exceed the range of 32-bit integers.</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f\nusing namespace std;\ntypedef long long ll;\nll num[400500]={0};\nll sum[400500]={0};\nll lazy[400500]={0};\nll n,m,b,c,d;\nll pushup(ll t)\n{\nsum[t]=sum[2*t]+sum[2*t+1];\n}\nll pushlazy(ll t,ll lz,ll len)\n{\nsum[t]+=lz*len;\nlazy[t]+=lz;\n}\nll pushdown(ll l,ll r,ll t)\n{\nif(lazy[t]!=0)\n{\nll mid=(l+r)/2;\npushlazy(2*t,lazy[t],mid-l+1);\npushlazy(2*t+1,lazy[t],r-mid);\nlazy[t]=0;\n}\n}\nll build(ll l,ll r,ll t)\n{\nlazy[t]=0;\nif(l==r)\n{\nsum[t]=num[l];\nreturn 0;\n}\nll mid=(l+r)/2;\nbuild(l,mid,t*2);\nbuild(mid+1,r,2*t+1);\npushup(t);\n}\nll add(ll x,ll l,ll r,ll L,ll R,ll t)\n{\nif(l&gt;=L&amp;&amp;r&lt;=R)\n{\nlazy[t]+=x;\nsum[t]+=(r-l+1)*x;\nreturn 0;\n}\npushdown(l,r,t);\nll mid=(l+r)/2;\nif(L&lt;=mid)\nadd(x,l,mid,L,R,2*t);\nif(R&gt;mid)\nadd(x,mid+1,r,L,R,2*t+1);\npushup(t);\n}\nll querysum(ll l,ll r,ll L,ll R,ll t)\n{\nif(l&gt;=L&amp;&amp;r&lt;=R)\nreturn sum[t];\npushdown(l,r,t);\nll mid=(l+r)/2;\nll ans=0;\nif(L&lt;=mid)\nans+=querysum(l,mid,L,R,2*t);\nif(R&gt;mid)\nans+=querysum(mid+1,r,L,R,2*t+1);\nreturn ans;\n}\nint main()\n{\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(ll i=1;i&lt;=n;i++)\nscanf(\"%lld\",&amp;num[i]);\nbuild(1,n,1);\nchar a[100]={0};\nfor(ll i=1;i&lt;=m;i++)\n{\nscanf(\"%s\",a);\nif(a[0]=='C')\n{\nscanf(\"%lld%lld%lld\",&amp;b,&amp;c,&amp;d);\nadd(d,1,n,b,c,1);\n}\nelse\n{\nscanf(\"%lld%lld\",&amp;b,&amp;c);\nprintf(\"%lld\\n\",querysum(1,n,b,c,1));\n}\n}\n}\n</code></pre>"},{"location":"csdn/2020-09-12/","title":"2020-09-12","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\n\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nll k,l;\nscanf(\"%lld%lld\",&amp;k,&amp;l);\nll max1;\nint flag=-1,f=-1;\nfor(int i=l;i&lt;2000&amp;&amp;flag==-1;i++)\n{\nif(i%2)\n{\nll p=(i-1)/2;\ndouble d=(k+p*i)*1.0/(i-1);\nll w=d;\nif(d==w)\n{\nif(w&lt;=1e6&amp;&amp;w&gt;=1)\nflag=w,f=i;\n}\n}\nelse\n{\nll p=i/2;\ndouble d=(k+p*i)*1.0/(i-1);\nll w=d;\nif(d==w)\n{\nif(w&lt;=1e6&amp;&amp;w&gt;=1)\nflag=w,f=i;\n}\n}\n}\nif(flag==-1)\n{\ncout&lt;&lt;-1&lt;&lt;endl;\ncontinue;\n}\ncout&lt;&lt;f&lt;&lt;endl;\nint x;\nif(f%2==0)\n{\nx=-1;\n}\nelse\n{\nx=0;\n}\nfor(int i=1;i&lt;f;i++)\n{\ncout&lt;&lt;x&lt;&lt;' ';\nif(x==-1)\nx=0;\nelse\nx=-1;\n}\ncout&lt;&lt;flag&lt;&lt;endl;\n}\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint main()\n{\nll n,m,k,sum=0;\nscanf(\"%lld%lld%lld\",&amp;n,&amp;m,&amp;k);\nif(n&gt;m)\n{\nsum=sum+m*(m-1)/2;\nll last=n-m+1;\nll time=last/k;\nif(last%k)\ntime++;\nsum+=(m-1)*time;\nsum+=(time-1)*last+(time-1)*(time-2)*(-k)/2;\nsum+=last%k;\n}\nelse\n{\nsum=n*(n+1)/2;\n}\ncout&lt;&lt;sum&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-09-12%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/","title":"2020-09-12\u5b57\u7b26\u4e32\u54c8\u5e0c","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2569&amp;pid=6</p>"},{"location":"csdn/2020-09-12%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>It is now far into the future and human civilization is ancient history. Archaeologists from a distant planet have recently discovered Earth. Among many other things, they want to decipher the English language.  They have collected many printed documents to form a dictionary, but are aware that sometimes words are not spelled correctly (typos are a universal problem). They want to classify each word in the dictionary as either correct or a typo. Na\u00efvely, they do this using a simple rule: a typo is any word in the dictionary such that deleting a single character from that word produces another word in the dictionary. Help these alien archaeologists out! Given a dictionary of words, determine which words are typos. That is,which words result in another word in the dictionary after deleting a single character. For example if our dictionary is {hoose, hose, nose, noises}. Then hoose is a typo because we can obtain hose by deleting a single \u2019o\u2019 from hoose. But noises is not a typo because deleting any single character does not result in another word in the dictionary. However, if our dictionary is {hoose, hose, nose, noises, noise} then the typos are hoose, noises,and noise.</p>"},{"location":"csdn/2020-09-12%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/#_2","title":"\u8f93\u5165","text":"<p>The \ufb01rst line of input contains a single integer n, indicating the number of words in the dictionary. The next n lines describe the dictionary. The ith of which contains the ith word in the dictionary. Each word consists only of lowercase English letters. All words are unique. The total length of all strings is at most 1 000 000.</p>"},{"location":"csdn/2020-09-12%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/#_3","title":"\u8f93\u51fa","text":"<p>Display the words that are typos in the dictionary. These should be output in the same order they appear in the input. If there are no typos, simply display the phrase NO TYPOS.</p>"},{"location":"csdn/2020-09-12%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 5 hoose hose nose noises noise \u3010\u6837\u4f8b2\u3011 4 hose hoose oose moose \u3010\u6837\u4f8b3\u3011 5 banana bananana bannanaa orange orangers</p>"},{"location":"csdn/2020-09-12%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 hoose noises noise \u3010\u6837\u4f8b2\u3011 hoose moose \u3010\u6837\u4f8b3\u3011 NO TYPOS</p>"},{"location":"csdn/2020-09-12%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/#_6","title":"\u89e3\u6790","text":"<p>\u5b57\u7b26\u4e32\u54c8\u5e0c</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nchar a[2000500]={0};\ntypedef unsigned long long ll;\nchar b[2000500]={0};\nll h[2000500]={0};\nll p[2000500]={0};\nint base=31;\nmap&lt;ll,int&gt;w;\nvector&lt;int&gt;q;\nll get(ll l,ll r)\n{\n//cout&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;' '&lt;&lt;h[r]-h[l-1]*p[r-l+1]&lt;&lt;endl;\nreturn h[r]-h[l-1]*p[r-l+1];\n}\nint main()\n{\nios::sync_with_stdio(false);\ncout.tie(NULL);\nint n;\nscanf(\"%d\",&amp;n);\na[0]=' ';\nfor(int i=1; i&lt;=n; i++)\n{\nscanf(\"%s\",b);\nb[strlen(b)+1]='\\0';\nb[strlen(b)]=' ';\nstrcat(a,b);\n}\np[0]=1;\nfor(int i=0;a[i];i++)\n{\nif(a[i]==' ')\n{\nq.push_back(i);\nif(i!=0)\nw[h[i-1]]=1;\n}\nelse\n{\nh[i]=h[i-1]*base+a[i]-'a'+1;\n}\nif(i!=0)\np[i]=p[i-1]*base;\n}\nint flag=1;\nfor(int i=0;i&lt;q.size()-1;i++)\n{\nfor(int j=q[i]+1;j&lt;q[i+1];j++)\n{\nll sum2=h[j-1]*p[q[i+1]-j-1]+get(j+1,q[i+1]-1);\nif(w[sum2])\n{\nfor(int k=q[i]+1;k&lt;q[i+1];k++)\n{\nprintf(\"%c\",a[k]);\n}\nprintf(\"\\n\");\nflag=0;\nbreak;\n}\n}\n}\nif(flag)\n{\nprintf(\"NO TYPOS\\n\");\n}\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-09-21%E5%87%B8%E5%8C%85%E7%AE%97%E6%B3%95/","title":"2020-09-21\u51f8\u5305\u7b97\u6cd5","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2585&amp;pid=7</p>"},{"location":"csdn/2020-09-21%E5%87%B8%E5%8C%85%E7%AE%97%E6%B3%95/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Recently, the nation was shocked by news of Sungai Kim Kim incident in Pasir Gudang, Johor, which has been polluted by chemical waste. Thousands of people who are affected had experienced nausea, dizziness and vomiting, and more than 100 schools were ordered to shut. In order to ensure that such incident will not happen again, an early warning system need o be developed so that residents can make early preparation, and authorities are able to move and act much faster.</p> <p>A group of scientists has formed a committee to handle the incident, and a smart system with Internet of Things (IoT) sensors was suggested. Numerous sensors which can sense and monitor damages to the environment, either air or water, have been strategically installed around the state, and their coordinates are also recorded. However, the proposed system encountered a failure during its first testing phase. They want you to fix the problem in determining whether the given coordinates of sensors are safe or in the affected areas.</p> <p>An affected area is defined as the polygon with the minimum length perimeter that can enclose all sensors that trigger warning signal within that area. For example, the sensors (represented by dots) of an affected area and its associated polygon, as well as safe (represented by triangles) and unsafe (represented by diamonds) points of the first dataset are illustrated below. </p>"},{"location":"csdn/2020-09-21%E5%87%B8%E5%8C%85%E7%AE%97%E6%B3%95/#_2","title":"\u8f93\u5165","text":"<p>The input will contain records of data for several test cases of affected areas. The first line of each data set contains a non-negative integer T, the number of test cases (1\u2264T\u226450). Each test case starts with two non-negative integer C and P which is the number of coordinates (3\u2264C\u226450), and points (1\u2264P\u226450), respectively. The next C lines contain coordinates (x-coordinate, y-coordinate) of each installed sensor, separated with blank spaces. The following P lines contain coordinates (x-coordinate, y-coordinate) of certain locations in the state, separated with blank spaces. All coordinates are integers between \u2212500 and 500 inclusive.</p>"},{"location":"csdn/2020-09-21%E5%87%B8%E5%8C%85%E7%AE%97%E6%B3%95/#_3","title":"\u8f93\u51fa","text":"<p>For each test case, output the following item:</p> <p>First line: The number of the test cases. The first record corresponds to Case1, the second to Case2 , etc.</p> <p>Next line: A listing of all the points that appear on the perimeter of the affected area. The points must be identified in the standard form \"x-coordinate y- coordinate\". The listing must be oriented counter-clockwise and begin and end with the same point.</p> <p>Last line: For each point of location in the data set, output the line:</p> <p>x\u2212coordinatey\u2212coordinateisstatus where x\u2212coordinatey\u2212coordinate is the coordinate of the location from the input and status is \u2032safe\u2032 or \u2032unsafe\u2032. A location is considered unsafe it is within the sensor perimeter. A point in exactly at the edge of the perimeter is considered safe.</p>"},{"location":"csdn/2020-09-21%E5%87%B8%E5%8C%85%E7%AE%97%E6%B3%95/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2\n6 5\n-477 -180\n31 -266\n-474 28\n147 49\n323 -53\n277 -79\n346 488\n-139 -183\n-427 129\n386 -222\n-408 -315\n5 2\n-52 -325\n104 420\n315 356\n-192 8\n493 146\n404 228\n-239 484\n</code></pre>"},{"location":"csdn/2020-09-21%E5%87%B8%E5%8C%85%E7%AE%97%E6%B3%95/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>Case 1\n-477 -180\n31 -266\n323 -53\n147 49\n-474 28\n-477 -180\n346 488 is safe!\n-139 -183 is unsafe!\n-427 129 is safe!\n386 -222 is safe!\n-408 -315 is safe!\n\nCase 2\n-192 8\n-52 -325\n493 146\n315 356\n104 420\n-192 8\n404 228 is unsafe!\n-239 484 is safe!\n</code></pre> \u51f8\u5305\u7b97\u6cd5</p> <p><pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int maxn=1e3+9;\n\nconst int mod=1e9+7;\n\nstruct node\n{\ndouble x,y;\n};\n\nstruct point\n{\ndouble x,y;\npoint friend operator - (point a,point b)\n{\nreturn {a.x-b.x,a.y-b.y};\n}\n} p[maxn],s[maxn],query[maxn];\n\ndouble dis(point a,point b)\n{\npoint c=a-b;\nreturn sqrt(c.x*c.x+c.y*c.y);\n}\n\ndouble chax(point a,point b)//\u53c9\u4e58\n{\nreturn a.x*b.y-a.y*b.x;\n}\n\ndouble mulx(point p1,point p2,point p3)\n{\nreturn chax(p2-p1,p3-p1);\n}\n\nbool cmp2(point a,point b)\n{\nif (a.x!=b.x)\nreturn a.x&lt;b.x;\nreturn a.y&lt;b.y;\n}\n\ndouble xxx,yyy;\n\nvector&lt;node&gt;v;\n\nint judge(int i,int j,int k)\n{\ndouble xpa=xxx-v[i].x;\n\ndouble ypa=yyy-v[i].y;\n\ndouble xpb=xxx-v[j].x;\n\ndouble ypb=yyy-v[j].y;\n\ndouble xpc=xxx-v[k].x;\n\ndouble ypc=yyy-v[k].y;\n\ndouble ans1=xpa*ypb-xpb*ypa;\n\ndouble ans2=xpb*ypc-xpc*ypb;\n\ndouble ans3=xpc*ypa-xpa*ypc;\n\nif(ans1==0||ans2==0||ans3==0)\nreturn 1;\n\nif(ans1&gt;0&amp;&amp;ans2&gt;0&amp;&amp;ans3&gt;0)\nreturn 1;\n\nif(ans1&lt;0&amp;&amp;ans2&lt;0&amp;&amp;ans3&lt;0)\nreturn 1;\n\nreturn 0;\n}\n\n\nint hack(int i,int j)\n{\ndouble xpa=xxx-v[i].x;\n\ndouble ypa=yyy-v[i].y;\n\ndouble xpb=xxx-v[j].x;\n\ndouble ypb=yyy-v[j].y;\n\ndouble ans1=xpa*ypb-xpb*ypa;\n\nif(ans1==0)\nreturn 1;\n\nreturn 0;\n}\n\n\nint main()\n{\nint T;\ncin&gt;&gt;T;\nint cas=0;\nfor(int j=1;j&lt;=T;j++)\n{\nv.clear();\nint n,q;\ncin&gt;&gt;n&gt;&gt;q;\nfor(int i=0; i&lt;n; i++)\n{\ncin&gt;&gt;p[i].x&gt;&gt;p[i].y;\n}\n\nsort(p,p+n,cmp2);\n\nint m=0;\nfor(int i=0; i&lt;n; i++)\n{\nwhile(m&gt;1&amp;&amp;mulx(s[m-2],s[m-1],p[i])&lt;=0) m--;\ns[m++]=p[i];\n}\n\nint kk=m;\nfor(int i=n-2; i&gt;=0; i--)\n{\nwhile(m&gt;kk&amp;&amp;mulx(s[m-2],s[m-1],p[i])&lt;=0) m--;\ns[m++]=p[i];\n}\n\nif(n&gt;1)\nm--;\n\nprintf(\"Case %d\\n\",j);\nfor(int i=0; i&lt;m; i++)\n{\ncout&lt;&lt;s[i].x&lt;&lt;\" \"&lt;&lt;s[i].y&lt;&lt;endl;\nv.push_back({s[i].x,s[i].y});\n}\n\ncout&lt;&lt;s[0].x&lt;&lt;\" \"&lt;&lt;s[0].y&lt;&lt;endl;\nfor(int ii=1; ii&lt;=q; ii++)\n{\nscanf(\"%lf%lf\",&amp;xxx,&amp;yyy);\nint flag=1;\nfor(int i=0; i&lt;v.size()&amp;&amp;flag; i++)\n{\nfor(int j=i+1; j&lt;v.size()&amp;&amp;flag; j++)\n{\nfor(int k=j+1; k&lt;v.size()&amp;&amp;flag; k++)\n{\nif(judge(i,j,k))\n{\nflag=0;\n}\n}\n}\n}\n\nfor(int i=0; i&lt;v.size()-1&amp;&amp;!flag; i++)\nif(hack(i,i+1))\nflag=1;\nif(hack(v.size()-1,0))\nflag=1;\n\nif(!flag)\n{\nprintf(\"%.0f %.0f is unsafe!\\n\",xxx,yyy);\n}\nelse\n{\nprintf(\"%.0f %.0f is safe!\\n\",xxx,yyy);\n}\n}\nprintf(\"\\n\");\n}\n}\n</code></pre> \u51f8\u5305\u7b97\u6cd5\u6a21\u677f</p> <pre><code>//AndrewScan\n/* \n * @Author: lzyws739307453 \n * @Language: C++ \n */\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 105;\nconst double eps = 1e-8;\ntypedef struct Point {\ndouble x, y;\nPoint(double x_ = 0, double y_ = 0) : x(x_), y(y_) {}\nbool operator &lt; (const Point&amp; s) const {\nreturn x != s.x ? x &lt; s.x : y &lt; s.y;\n}\n}vect;\nstruct Point p[MAXN], S[MAXN], s;\nint sgn(double x) {\nreturn x &lt; -eps ? -1 : x &gt; eps ? 1 : 0;\n}\nvect operator - (const Point a, const Point b) {\nreturn vect(a.x - b.x, a.y - b.y);\n}\ndouble Cross(const vect a, const vect b) {\nreturn a.x * b.y - a.y * b.x;\n}\ndouble dist(const Point a, const Point b) {\nreturn sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));\n}\nbool Onleft(const Point a, const Point b, const Point c) {\nreturn sgn(Cross(b - a, c - a)) &gt; 0;\n}\nbool InTB(const Point p[], const Point s, int n) {\nfor (int i = 0; i &lt; n; i++) {\nint j = (i + 1) % n;\nif (Cross(p[j] - p[i], s - p[i]) &lt;= 0)\nreturn false;\n}\nreturn true;\n}\nint AndrewScan(Point p[], int n) {\nsort(p, p + n);\nint top = 0;\nfor (int i = 0; i &lt; n; i++) {\nwhile (top &gt; 1 &amp;&amp; !Onleft(S[top - 2], S[top - 1], p[i]))\ntop--;\nS[top++] = p[i];\n}\nint tmp = top;\nfor (int i = n - 2; i &gt;= 0; i--) {\nwhile (top &gt; tmp &amp;&amp; !Onleft(S[top - 2], S[top - 1], p[i]))\ntop--;\nS[top++] = p[i];\n}\nreturn top;\n}\nint main() {\nint n, q, t, cnt, kase = 0;\nscanf(\"%d\", &amp;t);\nwhile (t--) {\nscanf(\"%d%d\", &amp;n, &amp;q);\nfor (int i = 0; i &lt; n; i++)\nscanf(\"%lf%lf\", &amp;p[i].x, &amp;p[i].y);\ncnt = AndrewScan(p, n);\nif (n &gt; 1)\ncnt--;\nif (kase)\nprintf(\"\\n\");\nprintf(\"Case %d\\n\", ++kase);\nfor (int i = 0; i &lt; cnt; i++)\nprintf(\"%.0lf %.0lf\\n\", S[i].x, S[i].y);\nprintf(\"%.0lf %.0lf\\n\", S[0].x, S[0].y);\nwhile (q--) {\nscanf(\"%lf%lf\", &amp;s.x, &amp;s.y);\nprintf(\"%.0lf %.0lf \", s.x, s.y);\nif (InTB(S, s, cnt))\nprintf(\"is unsafe!\\n\");\nelse printf(\"is safe!\\n\");\n}\n}\nreturn 0;\n}\n</code></pre> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;cmath&gt;\n#define PI 3.1415926535\nusing namespace std;\nstruct node\n{\nint x,y;\n};\nnode vex[1000];//\u5b58\u5165\u7684\u6240\u6709\u7684\u70b9\nnode stackk[1000];//\u51f8\u5305\u4e2d\u6240\u6709\u7684\u70b9\nint xx,yy;\nbool cmp1(node a,node b)//\u6392\u5e8f\u627e\u7b2c\u4e00\u4e2a\u70b9\n{\nif(a.y==b.y)\nreturn a.x&lt;b.x;\nelse\nreturn a.y&lt;b.y;\n}\nint cross(node a,node b,node c)//\u8ba1\u7b97\u53c9\u79ef\n{\nreturn (b.x-a.x)*(c.y-a.y)-(c.x-a.x)*(b.y-a.y);\n}\ndouble dis(node a,node b)//\u8ba1\u7b97\u8ddd\u79bb\n{\nreturn sqrt((a.x-b.x)*(a.x-b.x)*1.0+(a.y-b.y)*(a.y-b.y));\n}\nbool cmp2(node a,node b)//\u6781\u89d2\u6392\u5e8f\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u901f\u5ea6\u5feb\n{\nif(atan2(a.y-yy,a.x-xx)!=atan2(b.y-yy,b.x-xx))\nreturn (atan2(a.y-yy,a.x-xx))&lt;(atan2(b.y-yy,b.x-xx));\nreturn a.x&lt;b.x;\n}\nbool cmp(node a,node b)//\u6781\u89d2\u6392\u5e8f\n{\nint m=cross(vex[0],a,b);\nif(m&gt;0)\nreturn 1;\nelse if(m==0&amp;&amp;dis(vex[0],a)-dis(vex[0],b)&lt;=0)\nreturn 1;\nelse return 0;\n/*if(m==0)\n        return dis(vex[0],a)-dis(vex[0],b)&lt;=0?true:false;\n    else\n        return m&gt;0?true:false;*/\n}\nint main()\n{\nint t,L;\nwhile(~scanf(\"%d\",&amp;t),t)\n{\nint i;\nfor(i=0; i&lt;t; i++)\n{\nscanf(\"%d%d\",&amp;vex[i].x,&amp;vex[i].y);\n}\nif(t==1)\nprintf(\"%.2f\\n\",0.00);\nelse if(t==2)\nprintf(\"%.2f\\n\",dis(vex[0],vex[1]));\nelse\n{\nmemset(stackk,0,sizeof(stackk));\nsort(vex,vex+t,cmp1);\nstackk[0]=vex[0];\nxx=stackk[0].x;\nyy=stackk[0].y;\nsort(vex+1,vex+t,cmp2);//cmp2\u662f\u66f4\u5feb\u7684\uff0ccmp\u66f4\u5bb9\u6613\u7406\u89e3\nstackk[1]=vex[1];//\u5c06\u51f8\u5305\u4e2d\u7684\u7b2c\u4e24\u4e2a\u70b9\u5b58\u5165\u51f8\u5305\u7684\u7ed3\u6784\u4f53\u4e2d\nint top=1;//\u6700\u540e\u51f8\u5305\u4e2d\u62e5\u6709\u70b9\u7684\u4e2a\u6570\nfor(i=2; i&lt;t; i++)\n{\nwhile(i&gt;=1&amp;&amp;cross(stackk[top-1],stackk[top],vex[i])&lt;0)   //\u5bf9\u4f7f\u7528\u6781\u89d2\u6392\u5e8f\u7684i&gt;=1\u6709\u65f6\u53ef\u4ee5\u4e0d\u7528\uff0c\u4f46\u52a0\u4e0a\u603b\u662f\u597d\u7684\ntop--;\nstackk[++top]=vex[i];                                    //\u63a7\u5236&lt;0\u6216&lt;=0\u53ef\u4ee5\u63a7\u5236\u91cd\u70b9\uff0c\u5171\u7ebf\u7684\uff0c\u5177\u4f53\u89c6\u9898\u76ee\u800c\u5b9a\u3002\n}\ndouble s=0;\n//for(i=1; i&lt;=top; i++)//\u8f93\u51fa\u51f8\u5305\u4e0a\u7684\u70b9\n//cout&lt;&lt;stackk[i].x&lt;&lt;\" \"&lt;&lt;stackk[i].y&lt;&lt;endl;\nfor(i=1; i&lt;=top; i++)   //\u8ba1\u7b97\u51f8\u5305\u7684\u5468\u957f\ns+=dis(stackk[i-1],stackk[i]);\ns+=dis(stackk[top],vex[0]);//\u6700\u540e\u4e00\u4e2a\u70b9\u548c\u7b2c\u4e00\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n/*s+=2*PI*L;\n            int ans=s+0.5;//\u56db\u820d\u4e94\u5165\n            printf(\"%d\\n\",ans);*/\nprintf(\"%.2lf\\n\",s);\n}\n}\n}\n</code></pre>"},{"location":"csdn/2020-09-23%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/","title":"2020-09-23\u6811\u72b6\u6570\u7ec4","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2586&amp;pid=3</p>"},{"location":"csdn/2020-09-23%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>We define B(x) as the number of digit 1 in the binary representation of x. For example, B(7) =B((111) 2 ) = 3, B(8) = B((1000) 2 ) = 1, B(9) = B((1001) 2 ) = 2. We define F(x) = min{y j (y &gt; x)\u2227(B(y)\u2264B(x))}. For example, F(4) = 8, F(5) = 6, F(6) = 8. Zayin has a forest (a set of trees), whose nodes are numbered from 1 to n. For each node (e.g. node x),if F(x) is not greater than n, then the father of node x is F(x), else, node x is the root of a tree. We use A [ i ] to denote the number of apples on the node i. Initially, all the A [ i ] (1\u2264i\u2264n) are equal to zero. In order to make his girlfriend happy, Zayin is going to perform magic on the tree. The magic consists of two types of operations: 1. Add x v : For every ancestor of node x (including itself), put v more apples on it. In other words, for every node (e.g. node y) on the path between node x and the root of its tree, let A[y] = A[y] + v. 2. Sum L R : Count the total number of apples on the nodes whose index is between L and R. In other words, you need to calculate .</p>"},{"location":"csdn/2020-09-23%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_2","title":"\u8f93\u5165","text":"<p>The first line contains two integers n and m (1\u2264n\u22641018 , 1\u2264m\u2264105 ), where n is the number of nodes and m is the number of operations. The next m lines describe the m operations in order. Each line contains three integers. The first of them is op. If op = 1, then the next two integers will be x and v, representing an Add operation. If op = 2, then the next two integers will be L and R, representing a Sum operation. (1\u2264x\u2264n, 1\u2264v\u2264109 , 1\u2264L\u2264R\u2264n)</p>"},{"location":"csdn/2020-09-23%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_3","title":"\u8f93\u51fa","text":"<p>For each Sum operation, output one line including one number, denoting the corresponding result.</p>"},{"location":"csdn/2020-09-23%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>8 6\n1 1 1\n1 3 2\n1 5 3\n1 7 4\n2 1 5\n2 4 8\n</code></pre>"},{"location":"csdn/2020-09-23%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>10\n23\n</code></pre> \u6811\u72b6\u6570\u7ec4 <pre><code>#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\",\"uroll-loops\",\"omit-frame-pointer\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll n;\nunordered_map&lt;ll,ll&gt;w;\nvoid add(ll k,ll m)\n{\nfor(ll d=m,i=k;i&lt;=n;i+=i&amp;(-i),d+=m)\nw[i]+=d;\n}\nll query(ll n)\n{\nll sum=0;\nfor(ll i=n;i;i-=i&amp;(-i))\nif(w.count(i))\nsum+=w[i];\nreturn sum;\n}\nint main()\n{\nstd::ios::sync_with_stdio(false);\nstd::cin.tie(0);\nint k;\ncin&gt;&gt;n&gt;&gt;k;\nll a,b,c;\nfor(int i=1;i&lt;=k;i++)\n{\ncin&gt;&gt;a&gt;&gt;b&gt;&gt;c;\nif(a==1)\n{\nadd(b,c);\n}\nelse\n{\nprintf(\"%lld\\n\",-query(b-1)+query(c));\n}\n}\n}\n</code></pre></p>"},{"location":"csdn/2020-09-26%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E6%9C%80%E5%A4%A7%E6%B5%81%E9%97%AE%E9%A2%98/","title":"2020-09-26\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u95ee\u9898","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2587&amp;pid=6</p>"},{"location":"csdn/2020-09-26%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E6%9C%80%E5%A4%A7%E6%B5%81%E9%97%AE%E9%A2%98/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Bonnie and Clyde have noticed that parallel processing improves throughput so, instead of robbing one bank together, they\u2019ve decided to rob two different banks simultaneously (each robbing one). They both succeeded and now they need to run to their get-away 1934 Ford Model (730 Deluxe Sedan).  There are complications, of course, or the movie won\u2019t be exciting! </p> <p>The city is in the shape of a matrix with cells.  Bonnie and Clyde are in two different cells, and the get-away car is in a different cell as well.  Bonnie and Clyde can move in four directions: north, south, east, and west (the border cells of course have fewer move options since they cannot move across the outer walls of the city).  Some cells are also blocked, i.e., neither one can move into it. To put more adventure in the movie, it is also the case that once Bonnie or Clyde moves into a cell, then neither one can move into that cell anymore, i.e., a cell is used at most once.  Bonnie and Clyde cannot move into each other\u2019s starting position either. </p> <p>Given the city map (in the form of a matrix), the location for Bonnie, Clyde, and car, you are to compute the minimum total number of moves needed for both Bonnie and Clyde to get to the car, i.e., the total number of moves made by Bonnie plus the total number of moves made by Clyde. </p>"},{"location":"csdn/2020-09-26%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E6%9C%80%E5%A4%A7%E6%B5%81%E9%97%AE%E9%A2%98/#_2","title":"\u8f93\u5165","text":"<p>The first input line contains two integers, r and c (2 \u2264 r, c \u2264 30), providing the number of rows and columns for the matrix.  Each of the next r lines contains c characters, starting in column 1; this is the input matrix.  There will be exactly one \u201cB\u201d (Bonnie\u2019s starting location), one \u201cC\u201d (Clyde\u2019s starting location), and one \u201cF\u201d (where the get-away Ford car is) in the input maze.  The remaining cells will be \u201c.\u201d (empty cell \u2013 one can move into) or \u201cx\u201d  (blocked \u2013 one cannot move into).  </p>"},{"location":"csdn/2020-09-26%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E6%9C%80%E5%A4%A7%E6%B5%81%E9%97%AE%E9%A2%98/#_3","title":"\u8f93\u51fa","text":"<p>Print the minimum total number of moves needed for both Bonnie and Clyde to get to the car.  If  they cannot get to the car, print -1.  Note that when one reaches the car, he/she stops moving. </p>"},{"location":"csdn/2020-09-26%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E6%9C%80%E5%A4%A7%E6%B5%81%E9%97%AE%E9%A2%98/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>6 5 \n..... \n...C. \n.B.x. \n..... \n...F. \n.....\n</code></pre>"},{"location":"csdn/2020-09-26%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E6%9C%80%E5%A4%A7%E6%B5%81%E9%97%AE%E9%A2%98/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>9\n</code></pre>"},{"location":"csdn/2020-09-26%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E6%9C%80%E5%A4%A7%E6%B5%81%E9%97%AE%E9%A2%98/#_6","title":"\u63d0\u793a","text":"<p>Bonnie can reach the car with 4 moves and Clyde can reach the car with 5 moves, for a total of 9 moves.  <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct node\n{\nint next;\nint flow;\nint dis;\nint to;\n};\nint head[100500]= {0};\nnode edge[100500]= {0};\nint dis[100500]= {0};\nint pre[100500]= {0};\nint vis[100500]= {0};\nint last[100500]= {0};\nint flow[100500]={0};\nchar g[1000][1000]= {0};\nint n,m,s,t,cnt=-1,maxflow=0,mincost=0;\nint num(int i,int j)\n{\nreturn i*m+j;\n}\nint add(int from,int to,int flow,int dis)\n{\nedge[++cnt].next=head[from];\nedge[cnt].to=to;\nedge[cnt].flow=flow;\nedge[cnt].dis=dis;\nhead[from]=cnt;\n}\nqueue&lt;int&gt;w;\nbool spfa(int start,int end1)\n{\nw.push(start);\nmemset(dis,0x3f3f3f,sizeof(dis));\nmemset(vis,0,sizeof(vis));\nmemset(flow,0x3f3f3f,sizeof(flow));\npre[end1]=-1;\nvis[start]=1;\ndis[start]=0;\nwhile(!w.empty())\n{\nint now=w.front();\nw.pop();\nvis[now]=0;\nfor(int i=head[now]; i!=-1; i=edge[i].next)\n{\n//cout&lt;&lt;i&lt;&lt;endl;\nif(edge[i].flow&gt;0&amp;&amp;dis[edge[i].to]&gt;dis[now]+edge[i].dis)\n{\ndis[edge[i].to]=dis[now]+edge[i].dis;\npre[edge[i].to]=now;\nlast[edge[i].to]=i;\nflow[edge[i].to]=min(flow[now],edge[i].flow);\nif(!vis[edge[i].to])\n{\nvis[edge[i].to]=1;\nw.push(edge[i].to);\n}\n}\n}\n}\nreturn pre[end1]!=-1;\n}\nint MCMF()\n{\nwhile(spfa(s,t))\n{\nmaxflow+=flow[t];\nmincost+=dis[t]*flow[t];\nint now=t;\nwhile(now!=s)\n{\nedge[last[now]].flow-=flow[t];\nedge[last[now]^1].flow+=flow[t];\nnow=pre[now];\n}\n}\n}\nint main()\n{\nmemset(head,-1,sizeof(head));\nscanf(\"%d%d\",&amp;n,&amp;m);\ns=n*m+200,t=n*m+100;\nfor(int i=1; i&lt;=n; i++)\n{\nscanf(\"%s\",g[i]+1);\n}\nfor(int i=1; i&lt;=n; i++)\n{\nfor(int j=1; j&lt;=m; j++)\n{\nif(g[i][j]=='x')\ncontinue;\nif(j&gt;1&amp;&amp;g[i][j-1]!='x')\n{\nadd(num(i,j),num(i,j-1),1,1);\nadd(num(i,j-1),num(i,j),0,-1);\n}\nif(i&gt;1&amp;&amp;g[i-1][j]!='x')\n{\nadd(num(i,j),num(i-1,j),1,1);\nadd(num(i-1,j),num(i,j),0,-1);\n}\nif(j&lt;m&amp;&amp;g[i][j+1]!='x')\n{\nadd(num(i,j),num(i,j+1),1,1);\nadd(num(i,j+1),num(i,j),0,-1);\n}\nif(i&lt;n&amp;&amp;g[i+1][j]!='x')\n{\nadd(num(i,j),num(i+1,j),1,1);\nadd(num(i+1,j),num(i,j),0,-1);\n}\nif(g[i][j]=='F')\n{\nadd(s,num(i,j),2,0);\nadd(num(i,j),s,0,0);\n}\nif(g[i][j]=='C'||g[i][j]=='B')\n{\nadd(num(i,j),t,1,0);\nadd(t,num(i,j),0,0);\n}\n}\n}\nMCMF();\n// cout&lt;&lt;maxflow&lt;&lt;\" \"&lt;&lt;mincost&lt;&lt;endl;\nif(maxflow!=2)\nprintf(\"-1\\n\");\nelse\nprintf(\"%d\\n\",mincost);\n}\n</code></pre></p>"},{"location":"csdn/2020-10-04%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%89%AB%E6%8F%8F%E7%BA%BF/","title":"2020-10-04\u7ebf\u6bb5\u6811\u626b\u63cf\u7ebf","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2590&amp;pid=1</p>"},{"location":"csdn/2020-10-04%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%89%AB%E6%8F%8F%E7%BA%BF/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Consider a square map with N \u00d7 N cells. We indicate the coordinate of a cell by (i, j), where 1 \u2264 i, j \u2264 N . Each cell has a color either white or black. The color of each cell is initialized to white. The map supports the operation flip([xlow , xhigh], [ylow , yhigh]), which flips the color of each cell in the rectangle [xlow , xhigh] \u00d7 [ylow , yhigh]. Given a sequence of flip operations, our problem is to count the number of black cells in the final map. We illustrate this in the following example. Figure (a) shows the initial map. Next, we call flip([2, 4], [1, 3]) and obtain Figure (b). Then, we call flip([1, 5], [3, 5]) and obtain Figure \u00a9. This map contains 18 black cells. </p>"},{"location":"csdn/2020-10-04%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%89%AB%E6%8F%8F%E7%BA%BF/#_2","title":"\u8f93\u5165","text":"<p>The first line contains the number of test cases T (T &lt; 10). Each test case begins with a line containing two integers N and K (1 &lt; N, K &lt; 10000), where N is the parameter of the map size and K is the number of flip operations. Each subsequent line corresponds to a flip operation, with four integers: xlow , xhigh, ylow , yhigh.</p>"},{"location":"csdn/2020-10-04%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%89%AB%E6%8F%8F%E7%BA%BF/#_3","title":"\u8f93\u51fa","text":"<p>For each test case, output the answer in a line.</p>"},{"location":"csdn/2020-10-04%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%89%AB%E6%8F%8F%E7%BA%BF/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1   \n5 2  \n2 4 1 3\n1 5 3 5\n</code></pre>"},{"location":"csdn/2020-10-04%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%89%AB%E6%8F%8F%E7%BA%BF/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>18\n</code></pre> \u7ebf\u6bb5\u6811+\u626b\u63cf\u7ebf <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nint h,a,b,num;\n};\nint mark[100500]={0};\nint sum[100500]={0};\nnode edge[100500]={0};\nbool cmp(node a,node b)\n{\nif(a.h==b.h)\nreturn a.num&gt;b.num;\nelse\nreturn a.h&lt;b.h;\n}\nint nodeupdate(int root,int l,int r,ll num)\n{\nmark[root]^=1;\nsum[root]=r-l+1-sum[root];\n}\nint pushdown(int root,int l,int r)\n{\nif(mark[root]==0)\nreturn 0;\nint mid=(l+r)/2;\nnodeupdate(2*root,l,mid,mark[root]);\nnodeupdate(2*root+1,mid+1,r,mark[root]);\nmark[root]=0;\n}\nint update(int root,int l,int r,int L,int R,ll num)\n{\nif(l&gt;=L&amp;&amp;r&lt;=R)\n{\nnodeupdate(root,l,r,num);\nreturn 0;\n}\npushdown(root,l,r);\nint mid=(l+r)/2;\nif(mid&gt;=L)\nupdate(root*2,l,mid,L,R,num);\nif(mid&lt;R)\nupdate(root*2+1,mid+1,r,L,R,num);\nsum[root]=sum[2*root]+sum[2*root+1];\n}\nint main()\n{\nint t,cnt;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nmemset(sum,0,sizeof(sum));\nmemset(mark,0,sizeof(mark));\nint n,m,ans=0;\ncnt=0;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=m;i++)\n{\nint x1,y1,x2,y2;\nscanf(\"%d%d%d%d\",&amp;x1,&amp;x2,&amp;y1,&amp;y2);\nedge[cnt++]=node{y1,x1,x2,1};\nedge[cnt++]=node{y2,x1,x2,-1};\n}\nsort(edge,edge+cnt,cmp);\nfor(int i=1,j=0;i&lt;=n;i++)\n{\nwhile(j&lt;cnt&amp;&amp;edge[j].h&lt;=i&amp;&amp;edge[j].num==1)\n{\nupdate(1,1,n,edge[j].a,edge[j].b,1);\nj++;\n}\nans+=sum[1];\nwhile(j&lt;cnt&amp;&amp;edge[j].h&lt;=i)\n{\nupdate(1,1,n,edge[j].a,edge[j].b,1);\nj++;\n}\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\nreturn 0;\n}\n</code></pre> \u6c42\u7531\u591a\u4e2a\u77e9\u5f62\u6240\u56f4\u6210\u7684\u9762\u79ef\uff0c\u4ee3\u7801\u5f85\u9a8c\u8bc1</p> <p><pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nint h,a,b,num;\n};\nint mark[100500]={0};\nint sum[100500]={0};\nnode edge[100500]={0};\nbool cmp(node a,node b)\n{\nif(a.h==b.h)\nreturn a.num&gt;b.num;\nelse\nreturn a.h&lt;b.h;\n}\nint pushup(int root,int l,int r,ll num)\n{\nmark[root]^=num;\nif(mark[root])\nsum[root]=r-l+1;\nelse if(l==r)\nsum[root]=0;\nelse\nsum[root]=sum[2*root]+sum[2*root+1];\n}\nint pushdown(int root,int l,int r)\n{\nif(mark[root]==0)\nreturn 0;\nint mid=(l+r)/2;\npushup(2*root,l,mid,mark[root]);\npushup(2*root+1,mid+1,r,mark[root]);\nmark[root]=0;\n}\nint update(int root,int l,int r,int L,int R,ll num)\n{\nif(l&gt;=L&amp;&amp;r&lt;=R)\n{\npushup(root,l,r,num);\nreturn 0;\n}\npushdown(root,l,r);\nint mid=(l+r)/2;\nif(mid&gt;=L)\nupdate(root*2,l,mid,L,R,num);\nif(mid&lt;R)\nupdate(root*2+1,mid+1,r,L,R,num);\nsum[root]=sum[2*root]+sum[2*root+1];\n}\nint main()\n{\nint t,cnt;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nmemset(sum,0,sizeof(sum));\nmemset(mark,0,sizeof(mark));\nint n,m,ans=0;\ncnt=0;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=m;i++)\n{\nint x1,y1,x2,y2;\nscanf(\"%d%d%d%d\",&amp;x1,&amp;x2,&amp;y1,&amp;y2);\nedge[cnt++]=node{y1,x1,x2,1};\nedge[cnt++]=node{y2,x1,x2,-1};\n}\nsort(edge,edge+cnt,cmp);\nfor(int i=1,j=0;i&lt;=n;i++)\n{\nwhile(j&lt;cnt&amp;&amp;edge[j].h&lt;=i&amp;&amp;edge[j].num==1)\n{\nupdate(1,1,n,edge[j].a,edge[j].b,1);\nj++;\n}\nans+=sum[1];\nwhile(j&lt;cnt&amp;&amp;edge[j].h&lt;=i)\n{\nupdate(1,1,n,edge[j].a,edge[j].b,1);\nj++;\n}\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\nreturn 0;\n}\n</code></pre> \u53e6\uff1a\u5982\u679c\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u6216\u8005\u51fa\u73b0\u5c0f\u6570\u53ef\u4ee5\u52a0\u79bb\u6563\u5316\u5904\u7406\u3002 https://www.cnblogs.com/heya/p/11315849.html</p>"},{"location":"csdn/2020-10-05/","title":"2020-10-05","text":""},{"location":"csdn/2020-10-05/#_1","title":"\u5df2\u77e5\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u548c\u540e\u5e8f\u6c42\u524d\u5e8f","text":""},{"location":"csdn/2020-10-05/#_2","title":"\u9898\u76ee","text":"<p>https://www.luogu.com.cn/problem/P1030</p>"},{"location":"csdn/2020-10-05/#_3","title":"\u53c2\u8003\u4e8e","text":"<p>https://www.luogu.com.cn/problem/solution/P1030</p>"},{"location":"csdn/2020-10-05/#_4","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint dfs(string a,string b)\n{\nif(a.size()==0)\nreturn 0;\ncout&lt;&lt;b[b.size()-1];\nint k=a.find(b[b.size()-1]);\ndfs(a.substr(0,k),b.substr(0,k));\ndfs(a.substr(k+1),b.substr(k,a.size()-k-1));\n}\nint main()\n{\nstring a,b;\ncin&gt;&gt;a&gt;&gt;b;\ndfs(a,b);\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/","title":"2020-10-07\u5e76\u67e5\u96c6\u542f\u53d1\u5f0f\u5408\u5e76","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2592&amp;pid=5</p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>DIDIDI and WNJXYK are good friends. One day, they go to the zoo. The monkeys are playing happily. There are n monkeys named 1-n. At first, the first one hangs its tail on the tree. The other n-1 monkeys, either are caught by other monkeys, or catch other monkeys, or both. In the next m seconds, every second, there will be a monkey releasing its left hand or right hand. And then some monkeys will drop on the floor. Given the relationship between monkeys, calculate the landing time of every monkey.</p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_2","title":"\u8f93\u5165","text":"<p>The first line of input contains a positive integer T, telling you there are T test cases followed. Each test case, first line includes two integers n, m. n means number of monkeys, and m as mentioned in the description. Then following n lines, the k-th line has two integers, describe the k-th monkey\u2019s information. The first integer is the index of monkey in its left hand, the second integer is the index of monkey in its right hand. -1 indicates there is nothing in its hand.  Then following m lines, the i-th line gives the information at time i-1, every line has two numbers, the first is the index of the monkey, the second is the hand that it releases, 1 is left hand, 2 is right hand.  It\u2019s guaranteed that all the monkeys aren\u2019t on the floor at the beginning.</p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_3","title":"\u8f93\u51fa","text":"<p>For each test case, print a line \u201cCase #x: \u201d, where x is the case number (starting from 1) and print n integers. The i-th integer is the time monkey i drop in the floor. If monkey i don\u2019t land on the floor, print -1;</p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1\n3 2\n-1 3\n3 -1\n1 2\n1 2\n3 1\n</code></pre>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>Case #1: -1 1 1\n</code></pre>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_6","title":"\u63d0\u793a","text":"<p>Tips:1\u2264T\u226410,1\u2264n\u2264200,000,0\u2264m\u2264400,000 Initially, the first monkey\u2019s tail hangs on the tree. The first monkey\u2019s right hand catches the third monkey, the second monkey\u2019s left hand catches the third monkey, and the third\u2019s left hand catches the first monkey while the right hand catches the second. On time 0, the first monkey releases its right hand, no monkey lands on the floor. On time 1, the third monkey releases its left hand, then the second monkey and the third land on the floor.</p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_7","title":"\u53c2\u8003\u535a\u5ba2","text":"<p>https://blog.csdn.net/Cosmic_Tree/article/details/108921892</p> <p><pre><code>#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\",\"unroll-loops\",\"omit-frame-pointer\",\"inline\")\n#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nint x,y;\n};\nint ans[200500]={0};\nnode a[400500]={0};\nint vis[200500][3]={0};\nint g[200500][2]={0};\nint father[200500]={0};\nvector&lt;int&gt;deep[200500];\nint findfa(int n)\n{\nif(n==father[n])\nreturn n;\nelse\nreturn father[n]=findfa(father[n]);\n}\nint union1(int a,int b)\n{\nint fa=findfa(a);\nint fb=findfa(b);\nif(fa==fb)\nreturn 0;\nif(deep[fa].size()&gt;deep[fb].size())\nswap(fa,fb);\nfather[fa]=fb;\ndeep[fb].insert(deep[fb].end(),deep[fa].begin(),deep[fa].end());\n}\nint union2(int a,int b,int ans1)\n{\nif(b==-1)\nreturn 0;\nint fa=findfa(a);\nint fb=findfa(b);\nif(fa==fb)\nreturn 0;\nint f1=findfa(1);\nif(fa==f1)\n{\nfor(int i=0;i&lt;deep[fb].size();i++)\n{\nans[deep[fb][i]]=ans1;\n}\n}\nif(fb==f1)\n{\nfor(int i=0;i&lt;deep[fa].size();i++)\n{\nans[deep[fa][i]]=ans1;\n}\n}\nif(deep[fa].size()&gt;deep[fb].size())\nswap(fa,fb);\nfather[fa]=fb;\ndeep[fb].insert(deep[fb].end(),deep[fa].begin(),deep[fa].end());\n}\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nfor(int t1=1;t1&lt;=t;t1++)\n{\nint n,m;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=n;i++)\n{\nfather[i]=i;\ndeep[i].clear();\ndeep[i].push_back(i);\nvis[i][1]=vis[i][2]=0;\nans[i]=-1;\n}\nfor(int i=1;i&lt;=n;i++)\n{\nscanf(\"%d%d\",&amp;g[i][1],&amp;g[i][2]);\n}\nfor(int i=1;i&lt;=m;i++)\n{\nscanf(\"%d%d\",&amp;a[i].x,&amp;a[i].y);\nvis[a[i].x][a[i].y]=1;\n}\nfor(int i=1;i&lt;=n;i++)\n{\nif(vis[i][1]==0&amp;&amp;g[i][1]!=-1)\n{\nunion1(i,g[i][1]);\n}\nif(vis[i][2]==0&amp;&amp;g[i][2]!=-1)\n{\nunion1(i,g[i][2]);\n}\n}\nfor(int i=m;i&gt;=1;i--)\n{\nunion2(a[i].x,g[a[i].x][a[i].y],i-1);\n}\nprintf(\"Case #%d: \",t1);\nfor(int i=1;i&lt;=n;i++)\n{\nprintf(\"%d \",ans[i]);\n}\nprintf(\"\\n\");\n}\nreturn 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2592&amp;pid=7</p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_8","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>WNJXYK and DIDIDI are friends. They are thinking about getting strong all the time. They are playing a very hard online game and they can\u2019t defeat any monster in this game now. If they can\u2019t defeat monsters, they will not get EXP and will not get strong forever. They finally found that the only way for them to get strong is to upgrade their equipment with their limited coins. Each equipment can be upgrade many times with paying some money. And of course, they will get power from each upgrade. They have N equipment in total and each equipment can be upgrade for Ki times. At first, equipment are all in Level 0. If you upgrade the ith equipment from Level j-1 to Level j, you will pay Cij coins and get Wij power. They have M coins in total and they want to know the most power they can get with these coins.</p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_9","title":"\u8f93\u5165","text":"<p>The first line of input contains a positive integer T telling you there are T test cases followed. In each Test Case, there is two positive integers N,M in the first line indicates that there are N equipment and M coins. The following N Lines, there is a positive integer Ki at first indicates that the ith equipment can be upgrade Ki times. And there are 2Ki positive integers followed Wij,Cij.</p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_10","title":"\u8f93\u51fa","text":"<p>You need to output one line for each Test Case. \u201cCase #X: Y\u201d means the max power they can get in Xth Test Case is Y.</p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_11","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>1 3 5 1 1 1 2 1 1 5 4 1 5 3</p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_12","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>Case #1: 7</p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_13","title":"\u63d0\u793a","text":"<p>Tips:1\u2264T\u226410,1\u2264N\u226420,0\u2264M\u22641e9,0\u2264Ki\u22644,1\u2264Cij,Wij\u22641e9 In this Sample, they can upgrade their equipment like this and this is the only for them to get 7 power with 5 coins. </p>"},{"location":"csdn/2020-10-07%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_14","title":"\u89e3\u6790","text":"<p>\u53cc\u5411DFS+\u4e8c\u5206\u4f18\u5316</p> <pre><code>#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\",\"unroll-loops\",\"omit-frame-pointer\",\"inline\")\n#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll INF= 1e18;\nstruct node\n{\nll x,y;\n};\nll sum1[100][100]= {0};\nll p1[100][100]= {0};\nll n,m;\nnode ans[5005000]= {0};\nll max1=-INF;\nll cnt=0;\nll size1[100]= {0};\nbool cmp(node a,node b)\n{\nreturn a.y&lt;b.y;\n}\nll dfs1(ll k,ll e,ll sum,ll p)\n{\nif(k&gt;e)\n{\nans[++cnt]=node{sum,p};\nmax1=max(max1,sum);\nreturn 0;\n}\nfor(ll i=0; i&lt;=size1[k]; i++)\n{\nif(p+p1[k][i]&gt;m)\ncontinue;\ndfs1(k+1,e,sum+sum1[k][i],p+p1[k][i]);\n}\ndfs1(k+1,e,sum,p);\n}\nll find1(ll num)\n{\nll l=1,r=cnt+1;\nwhile(l&lt;r)\n{\nll mid=(l+r)/2;\nif(ans[mid].y&lt;num)\nl=mid+1;\nelse if(ans[mid].y&gt;num)\nr=mid;\nelse if(ans[mid].y==num)\nl=mid+1;\n}\nif(ans[l-1].y&lt;=num)\nreturn l-1;\nelse\nreturn -1;\n}\nll dfs2(ll k,ll e,ll sum,ll p)\n{\nif(k&gt;e)\n{\nll pos=find1(m-p);\nif(~pos)\nmax1=max(max1,sum+ans[pos].x);\nmax1=max(max1,sum);\nreturn 0;\n}\nfor(int i=0; i&lt;=size1[k]; i++)\n{\nif(p+p1[k][i]&gt;m)\ncontinue;\ndfs2(k+1,e,sum+sum1[k][i],p+p1[k][i]);\n}\ndfs2(k+1,e,sum,p);\n}\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nfor(int t1=1; t1&lt;=t; t1++)\n{\nscanf(\"%lld%lld\",&amp;n,&amp;m);\ncnt=0;\nfor(ll i=1; i&lt;=n; i++)\n{\nscanf(\"%lld\",&amp;size1[i]);\nfor(ll j=1; j&lt;=size1[i]; j++)\n{\nll x,y;\nscanf(\"%lld%lld\",&amp;sum1[i][j],&amp;p1[i][j]);\nsum1[i][j]+=sum1[i][j-1];\np1[i][j]+=p1[i][j-1];\n}\n}\nmax1=-INF;\ndfs1(1,n/2,0,0);\nsort(ans+1,ans+1+cnt,cmp);\nans[0].x=-INF;\nfor(ll i=1; i&lt;=cnt; i++)\n{\nans[i].x=max(ans[i-1].x,ans[i].x);\n}\ndfs2(n/2+1,n,0,0);\nprintf(\"Case #%d: %lld\\n\",t1,max1);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/2020-10-15dsuontree/","title":"2020-10-15dsuontree","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2597&amp;pid=10</p>"},{"location":"csdn/2020-10-15dsuontree/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Christmas is still one month away, but Mr. Panda already starts the Christmas preparation. Mr. Panda is decorating a Christmas tree with a set of Russian dolls. There are n Russian dolls numbered 1, 2, . . . , n. The ith doll is designed to be perfected nested inside the i + 1th doll for all 1 \u2264 i \u2264 n \u2212 1. Nesting dolls are stable only if they have neighboring ordinal numbers, otherwise the smaller one will slide out from the larger one. Dolls can be nested recursively. For example, the n dolls can be nested all the way up from smallest to largest until there is only one doll left. The Christmas tree happens to have n nodes wit one Russian roll dangling on each node. Doll number 1 is put at the tree root. Mr. Panda will invite his friend Mr. Sheep to collect some dolls from the Christmas tree as gifts on Christmas Eve. Mr. Sheep will pick a tree node and collects all the dolls in the sub-tree with the selected node as the sub-tree root. As there could be a lot of dolls, Mr. Sheep want to nest the dolls he collects for easy carrying. The dolls should be stably nested. He wonders for each tree node, how many dolls will be ended up if he nests them as much as possible.</p>"},{"location":"csdn/2020-10-15dsuontree/#_2","title":"\u8f93\u5165","text":"<p>The first line of input gives the number of test cases T (1 \u2264 T \u2264 10). T test cases follow. Each test case starts with a line containing an integer n (1 \u2264 n \u2264 2 \u00d7 105), the number of dolls and also the number of tree nodes. The next n \u2212 1 lines each contains two integers x and y (1 \u2264 x, y \u2264 n), denoting doll number x and doll number y are neighbors in the Christmas tree. It is guaranteed that the sum of n in all cases is not greater than 106.</p>"},{"location":"csdn/2020-10-15dsuontree/#_3","title":"\u8f93\u51fa","text":"<p>For each test case, the output consists one line starts with \u201cCase #x:\u201d, where x is the test case number (starting from 1), followed by next n integers. The ith (1 \u2264 i \u2264 n) integer indicates the number of dolls will be ended up if Mr. Sheep selects tree node that contains doll i, collects all the dolls in the sub-tree,and nests the dolls stably as much as possible.</p>"},{"location":"csdn/2020-10-15dsuontree/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1\n7\n1 2\n2 4\n2 6\n1 3\n3 5\n3 7\n</code></pre>"},{"location":"csdn/2020-10-15dsuontree/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>Case #1: 1 3 3 1 1 1 1\n</code></pre>"},{"location":"csdn/2020-10-15dsuontree/#_6","title":"\u89e3\u6790","text":"<p>dsu on tree\u7b97\u6cd5\uff0c\u8be6\u60c5\u89c1\uff1a https://blog.csdn.net/qq_43472263/article/details/104150940</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nstruct node\n{\nint from;\nint to;\nint next;\n};\nvector&lt;node&gt;edge;\nint head[200050]= {0};\nint hson[200050]= {0};\n//int dep[200500]= {0};\n//int father[200500]= {0};\nint siz[200050]= {0};\nint ans[200050]= {0};\nint add_edge(int from,int to)\n{\nedge.push_back({from,to,head[from]});\nhead[from]=edge.size()-1;\n}\nint dfs1(int now,int depth,int fa)\n{\n//dep[now]=depth;\n//father[now]=fa;\nsiz[now]=1;\nfor(int i=head[now]; i; i=edge[i].next)\n{\nif(edge[i].to!=fa)\n{\ndfs1(edge[i].to,depth+1,now);\nsiz[now]+=siz[edge[i].to];\nif(hson[now]==-1||siz[edge[i].to]&gt;siz[hson[now]])\nhson[now]=edge[i].to;\n}\n}\n}\nbool flag[200050]= {0};\nbool vis[200050]= {0};\nint cnt=0;\nint update(int now,int fa,bool flg)\n{\nint sum=flag[now-1]+flag[now+1];\nif(flg) ///\u63d2\u5165\n{\nif(sum==2)\ncnt--;\nelse if(sum==0)\ncnt++;\n}\nelse ///\u79fb\u9664\n{\nif(sum==0)\ncnt--;\nelse if(sum==2)\ncnt++;\n}\nflag[now]=flg;\nfor(int i=head[now]; i; i=edge[i].next)\n{\nif(edge[i].to!=fa&amp;&amp;!vis[edge[i].to])\n{\nupdate(edge[i].to,now,flg);\n}\n}\n}\nint dfs2(int now,int fa,bool kep)\n{\nfor(int i=head[now]; i; i=edge[i].next)\n{\nif(edge[i].to!=fa&amp;&amp;edge[i].to!=hson[now])\n{\ndfs2(edge[i].to,now,false);\n}\n}\nif(hson[now]!=-1)\n{\ndfs2(hson[now],now,true);\nvis[hson[now]]=1;\n}\nupdate(now,fa,true);\nans[now]=cnt;\nif(hson[now]!=-1)\nvis[hson[now]]=0;\nif(!kep)\nupdate(now,fa,false);\n}\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nfor(int t1=1; t1&lt;=t; t1++)\n{\nmemset(hson,-1,sizeof(hson));\nmemset(head,0,sizeof(head));\nedge.clear();\nedge.push_back({-1,-1,-1});\nint n;\nscanf(\"%d\",&amp;n);\nfor(int i=1; i&lt;=n-1; i++)\n{\nint x,y;\nscanf(\"%d%d\",&amp;x,&amp;y);\nadd_edge(x,y);\nadd_edge(y,x);\n}\ndfs1(1,0,-1);\nmemset(flag,0,sizeof(flag));\nmemset(vis,0,sizeof(vis));\ndfs2(1,-1,false);\nprintf(\"Case #%d:\", t1);\nfor(int i=1; i&lt;=n; i++)\nprintf(\" %d\", ans[i]);\nprintf(\"\\n\");\n}\n}\n</code></pre>"},{"location":"csdn/2020-11-23/","title":"2020-11-23","text":"<p>kmp\u7b97\u6cd5\u5339\u914d\u6a21\u677f <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int maxn=1000;\nint Next[1000006];\nint Get_NEXT(string p)///\u627e\u5b57\u4e32\u7684\n{\nNext[0]=-1;\nint j=0;\nint  k=-1;\nwhile(j&lt;p.length())\n{\nif(k==-1||p[j]==p[k])\n{\nj++;\nk++;\nNext[j]=k;\n}\nelse\nk=Next[k];\n}\n}\nint KMP(string s,string p)///\u4e3b\u4e32s\uff0c\u5b57\u4e32p\n{\nint i=0;\nint j=0;\nwhile((i&lt;(int)(s.length()))&amp;&amp;(j&lt;(int)(p.length())))\n{\nif(j==-1||s[i]==p[j])\n{\ni++;\nj++;\n}\nelse\n{\nj=Next[j];\n}\nif(j&gt;=(int)(p.length()))\n{\nreturn i-(int)(p.length());\n}\n}\nreturn 0;\n}\nint main()\n{\nstring s,p;\ncin&gt;&gt;s;\ncin&gt;&gt;p;\nGet_NEXT(p);\ncout&lt;&lt;KMP(s,p);\n}\n</code></pre></p>"},{"location":"csdn/2020-12-02/","title":"2020-12-02","text":"<p>[\u5916\u94fe\u56fe\u7247\u8f6c\u5b58\u5931\u8d25,\u6e90\u7ad9\u53ef\u80fd\u6709\u9632\u76d7\u94fe\u673a\u5236,\u5efa\u8bae\u5c06\u56fe\u7247\u4fdd\u5b58\u4e0b\u6765\u76f4\u63a5\u4e0a\u4f20(img-jIVkSS2i-1606919449049)(https://github.com/WCX1024979076/image1/blob/master/img/gou.jpg?raw=true)]</p> <p>[\u5916\u94fe\u56fe\u7247\u8f6c\u5b58\u5931\u8d25,\u6e90\u7ad9\u53ef\u80fd\u6709\u9632\u76d7\u94fe\u673a\u5236,\u5efa\u8bae\u5c06\u56fe\u7247\u4fdd\u5b58\u4e0b\u6765\u76f4\u63a5\u4e0a\u4f20(img-MQc294y6-1606919449069)(https://raw.githubusercontent.com/WCX1024979076/image1/master/img/gou.jpg)]</p> <p>[\u5916\u94fe\u56fe\u7247\u8f6c\u5b58\u5931\u8d25,\u6e90\u7ad9\u53ef\u80fd\u6709\u9632\u76d7\u94fe\u673a\u5236,\u5efa\u8bae\u5c06\u56fe\u7247\u4fdd\u5b58\u4e0b\u6765\u76f4\u63a5\u4e0a\u4f20(img-bz0hB4HN-1606919449077)(https://github.com/WCX1024979076/image1/raw/master/img/gou.jpg?raw=true)]</p>"},{"location":"csdn/2020-7-31/","title":"2020-7-31","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=1459&amp;pid=0</p>"},{"location":"csdn/2020-7-31/#_1","title":"\u9898\u76ee","text":"<p>\u8fd9\u662f\u4e00\u9053\u6a21\u677f\u9898\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32A\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32B\uff0c\u6c42B\u5728A\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002A\u548cB\u4e2d\u7684\u5b57\u7b26\u5747\u4e3a\u82f1\u8bed\u5927\u5199\u5b57\u6bcd\u6216\u5c0f\u5199\u5b57\u6bcd\u3002 A\u4e2d\u4e0d\u540c\u4f4d\u7f6e\u51fa\u73b0\u7684B\u53ef\u91cd\u53e0\u3002</p>"},{"location":"csdn/2020-7-31/#_2","title":"\u8f93\u5165","text":"<p>\u8f93\u5165\u5171\u4e24\u884c\uff0c\u5206\u522b\u662f\u5b57\u7b26\u4e32A\u548c\u5b57\u7b26\u4e32B\u3002</p>"},{"location":"csdn/2020-7-31/#_3","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793aB\u5728A\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002</p>"},{"location":"csdn/2020-7-31/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>zyzyzyz\nzyz\n</code></pre>"},{"location":"csdn/2020-7-31/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>3\n</code></pre>"},{"location":"csdn/2020-7-31/#_6","title":"\u63d0\u793a","text":"<p>1\u2264A,B\u7684\u957f\u5ea6\u226410^6\uff0cA\u3001B\u4ec5\u5305\u542b\u5927\u5c0f\u5199\u5b57\u6bcd\u3002</p>"},{"location":"csdn/2020-7-31/#_7","title":"\u89e3\u6790","text":"<p>\u8fd9\u662f\u4e00\u9053\u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u9898\u76ee</p> <p><pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst int N=1e6+500;\nchar a[N]=\"\";\nchar b[N]=\"\";\nint base=31;\nlong long p[N]={0};\nlong long h[N]={0};\nlong long sum1=0,js1,sum=0;\nint la=1,lb=1;\nchar w;\nint main()\n{\nscanf(\"%s\",a+1);\nscanf(\"%s\",b+1);\nfor(;a[la];la++);\nfor(;b[lb];lb++);\nla--;\nlb--;\np[0]=1;\nfor(int i=1;i&lt;=max(la,lb);i++)\np[i]=p[i-1]*base;      //\u8fdb\u5236\nif(a[1]&gt;='A'&amp;&amp;a[1]&lt;='Z')   //\u5224\u65ad\u5927\u5c0f\u5199\nw='A';\nelse\nw='a';\nfor(int i=la;i&gt;=1;i--)\nh[i]=h[i+1]*base+a[i]-w+1; //\u6c42a\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u6570\u7ec4\nfor(int i=lb;i&gt;=1;i--)\nsum1=sum1*base+b[i]-w+1;   //\u6c42b\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\nfor(int i=1;i&lt;=la-lb+3;i++)    //\u6ce8\u610fi\u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8ela-lb \u5426\u5219\u6570\u7ec4\u4f1a\u8d8a\u754c\n{\njs1=h[i]-h[i+lb]*p[lb];    //\u5224\u65ad\u662f\u5426\u76f8\u7b49\nif(js1==sum1)\nsum+=1;\n}\ncout&lt;&lt;sum&lt;&lt;endl;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=1459&amp;pid=2</p>"},{"location":"csdn/2020-7-31/#_8","title":"\u9898\u76ee","text":"<p>Given two strings a and b we define a * b to be their concatenation. For example, if a = \"abc\" and b = \"def\" then a * b = \"abcdef\". If we think of concatenation as multiplication, exponentiation by a non-negative integer is defined in the normal way: a^0 = \"\" (the empty string) and a^(n+1) = a*(a^n).</p>"},{"location":"csdn/2020-7-31/#_9","title":"\u8f93\u5165","text":"<p>Each test case is a line of input representing s, a string of printable characters.</p>"},{"location":"csdn/2020-7-31/#_10","title":"\u8f93\u51fa","text":"<p>For each s you should print the largest n such that s = a^n for some stringa. The length of s will be at least 1 and will not exceed 1 million characters. A line containing a period follows the last test case.</p>"},{"location":"csdn/2020-7-31/#_11","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>abcd\naaaa\nababab\n</code></pre>"},{"location":"csdn/2020-7-31/#_12","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>1\n4\n3\n</code></pre>"},{"location":"csdn/2020-7-31/#_13","title":"\u89e3\u6790","text":"<p>KMP\u7b97\u6cd5\u7684\u5e94\u7528</p> <p><pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod=1e9+7;\nconst ll N = 1005000;\nll Next[N];\nchar s[N];\nchar t[N];\nll  tlen,len;\nvoid getNext(char s[N])\n{\nll j=0,k=-1;\nNext[0]=-1;\nwhile(j&lt;tlen)\n{\nif(k==-1||s[j]==s[k])\n{\nNext[++j]=++k;\n}\nelse\nk=Next[k];\n}\n}\nint main()\n{\nwhile(1)\n{\nscanf(\"%s\",s);\nif(s[0]=='.')\nbreak;\ntlen=strlen(s);\nlen=tlen;\ngetNext(s);\nll kk=tlen-Next[tlen];\nif(strlen(s)%kk==0)\n{\nprintf(\"%d\\n\",strlen(s)/kk);\n}\nelse\n{ printf(\"1\\n\");   //\u5982\u679c\u4e0d\u80fd\u9664\u5c3d\uff0c\u8bf4\u660e\u6709\u540e\u7f00\uff0c\u4f8b\u5982abababa\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ea\u80fd\u4e3a1\n}\n}\nreturn 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2510&amp;pid=4</p>"},{"location":"csdn/2020-7-31/#_14","title":"\u9898\u76ee","text":"<p>\u5728CSP\u521d\u8d5b\u540e\uff0cchen03\u7684RP\u5feb\u7528\u5b8c\u4e86\u3002</p> <p>RP\u662f\u4e2a\u795e\u5947\u7684\u4e1c\u897f\u3002\u5177\u4f53\u6765\u8bf4\uff0cchen03\u7684RP\u503c\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u6b63\u6574\u6570a\u548c\u5341\u8fdb\u5236\u6b63\u6574\u6570n\u8868\u793a\u3002\u4ed6\u7684RP\u503c\u53ef\u4ee5\u8868\u793a\u4e3a RP=axor(a&lt;&lt;1)xor(a&lt;&lt;2)xor...xor(a&lt;&lt;(n-1))\u3002</p> <p>\u5176\u4e2da&lt;&lt;i\u8868\u793a\u5c06a\u5de6\u79fbi\u4f4d\uff0cxor\u8868\u793a\u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u3002</p> <p>chen03\u60f3\u77e5\u9053\u4ed6\u7684RP\u503c\u662f\u591a\u5c11\u3002</p> <p>\u6ce8\uff1a 1.\u5c06a\u5de6\u79fbi\u4f4d\uff0c\u5373\u5728a\u540e\u6dfb\u52a0i\u4e2a0\uff0c\u4e5f\u53ef\u4ee5\u770b\u6210a\u00d72i\uff0c\u5728C++\u4e2d\u7684\u8fd0\u7b97\u7b26\u4e3a&lt;&lt;\uff1b 2.\u6309\u4f4d\u5f02\u6216\uff1a\u5728\u4e8c\u8fdb\u5236\u4e0b\uff0c\u5bf9\u4e24\u4e2a\u6570\u7684\u6bcf\u4e00\u4f4d\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u5e76\u628a\u7ed3\u679c\u653e\u5230\u7b54\u6848\u7684\u5f53\u524d\u4f4d\u4e0a\uff0c\u5728C++\u4e2d\u7684\u8fd0\u7b97\u7b26\u4e3a^\u3002\u5f02\u6216\uff0c\u5373\u4e24\u4e2a\u503c\u540c\u4e3a1\u6216\u540c\u4e3a0\u65f6\u7ed3\u679c\u4e3a0\uff0c\u5426\u5219\u4e3a1\u3002</p>"},{"location":"csdn/2020-7-31/#_15","title":"\u8f93\u5165","text":"<p>\u5171\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6b63\u6574\u6570 a\uff08\u4fdd\u8bc1\u4e0d\u542b\u524d\u5bfc 0\uff09\uff0c\u7b2c\u4e8c\u884c\u4e00\u4e2a\u5341\u8fdb\u5236\u6b63\u6574\u6570 n\uff0c\u610f\u4e49\u5982\u9898\u76ee\u63cf\u8ff0\u3002</p>"},{"location":"csdn/2020-7-31/#_16","title":"\u8f93\u51fa","text":"<p>\u4e00\u884c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6b63\u6574\u6570\uff0c\u8868\u793a chen03 \u7684 RP \u503c\u3002\u7b54\u6848\u4e0d\u7528\u53d6\u6a21\u3002</p>"},{"location":"csdn/2020-7-31/#_17","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>100001001\n4\n</code></pre>"},{"location":"csdn/2020-7-31/#_18","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>111101110111\n</code></pre>"},{"location":"csdn/2020-7-31/#_19","title":"\u63d0\u793a","text":""},{"location":"csdn/2020-7-31/#_20","title":"\u89e3\u6790","text":"<p>\u9996\u5148\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u5f02\u6216(xor)\uff0c\u5f02\u6216\u5171\u5206\u4e3a4\u79cd\u60c5\u51b5 0\u5f02\u62161\u7b49\u4e8e1 1\u5f02\u62160\u7b49\u4e8e1 0\u5f02\u62160\u7b49\u4e8e0 1\u5f02\u62161\u7b49\u4e8e0 \u5f02\u6216\u6700\u540e\u7ed3\u679c\u53ea\u548c1\u7684\u4e2a\u6570\u6709\u5173\uff0c1\u4e3a\u5947\u6570\u4e2a\uff0c\u7ed3\u679c\u5c31\u4e3a1\uff0c1\u4e3a\u5076\u6570\u4e2a\uff0c\u7ed3\u679c\u5c31\u4e3a0\uff0c\u4f8b\u5982\uff1a 0 xor 0 xor 0 xor 1 = 1 0 xor 0 xor 1 xor 1 = 0 0 xor 0 xor 0 xor 1 xor 1 = 0</p> <p>\u9898\u76ee\u662f\u6307\u5c06\u4e00\u4e2a2\u8fdb\u5236\u6570\u8fdb\u884c\u5411\u5de6\u79fb\u4f4d\u6c42\u5f02\u6216\u7ed3\u679c\uff0c\u4e0b\u56fe\u5c31\u662f\u5bf9\u6837\u4f8b\u7684\u89e3\u91ca\uff0c\u7b2c\u4e00\u4e8c\u4e09\u56db\u884c\u5206\u522b\u8868\u793a\u79fb\u52a8\u4e00\u4f4d\uff0c\u4e24\u4f4d\uff0c\u4e09\u4f4d\u548c\u56db\u4f4d\uff0c\u7136\u540e\u7edf\u8ba1\u6bcf\u4e00\u5217\u4e2d1\u7684\u6570\u76ee\uff0c\u5982\u679c1\u4e3a\u5947\u6570\u4e2a\uff0c\u7ed3\u679c\u5c31\u4e3a1\uff0c\u5426\u5219\u5c31\u4e3a0.\u3002</p> <p>\u8fd9\u4e2a\u9898\u76ee\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff0c\u6837\u4f8b\u662f\u5176\u4e2d\u7684\u4e00\u79cd\u60c5\u51b5\uff0cn\u7684\u6570\u76ee\u5c0f\u4e8e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u53e6\u4e00\u79cd\u60c5\u51b5\u662f\u5927\u4e8e\uff0c\u5982 111 5 \u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u53d1\u73b0\u4e2d\u95f4\u90e8\u5206\u7684\u7ed3\u679c\u5168\u90e8\u76f8\u540c\uff0c\u5373\u5982\u4e0b\u56fe\u6240\u793a\uff1a  \u7136\u540e\u76f4\u63a5\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6c42\u6bcf\u4e00\u5217\u4e2d1\u7684\u4e2a\u6570\u5373\u53ef\u3002</p>"},{"location":"csdn/2020-7-31/#_21","title":"\u4ee3\u7801","text":"<p><pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nchar a[1005000]={0};\nint b[1005000]={0};\nint c[1005000]={0};\nint main()\n{\nint n;\nscanf(\"%s\",&amp;a);\nscanf(\"%d\",&amp;n);\nint m=strlen(a);\nint p=n-m;\nqueue&lt;char&gt;w;\nint sum1=0;\nfor(int i=0;a[i];i++)\n{\nif(w.size()&lt;n)\n{\nw.push(a[i]);\nif(a[i]=='1')\nsum1++;\nint k1=sum1%2;\nif(k1==1)\n{\nprintf(\"1\");\n}\nelse\n{\nprintf(\"0\");\n}\n}\nelse\n{\nint p=w.front();\nw.pop();\nif(p=='1')\nsum1--;\nw.push(a[i]);\nif(a[i]=='1')\nsum1++;\nint k1=sum1%2;\nif(k1==1)\n{\nprintf(\"1\");\n}\nelse\n{\nprintf(\"0\");\n}\n}\n}\nfor(int i=0;i&lt;p;i++)\n{\nint k1=sum1%2;\nif(k1==1)\n{\nprintf(\"1\");\n}\nelse\n{\nprintf(\"0\");\n}\n}\nwhile(w.size()!=1)\n{\nint p=w.front();\nw.pop();\nif(p=='1')\nsum1--;\nint k1=sum1%2;\nif(k1==1)\n{\nprintf(\"1\");\n}\nelse\n{\nprintf(\"0\");\n}\n}\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=1459&amp;pid=3</p>"},{"location":"csdn/2020-7-31/#_22","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>The little cat is so famous, that many couples tramp over hill and dale to Byteland, and asked the little cat to give names to their newly-born babies. They seek the name, and at the same time seek the fame. In order to escape from such boring job, the innovative little cat works out an easy but fantastic algorithm: </p> <p>Step1. Connect the father's name and the mother's name, to a new string S.  Step2. Find a proper prefix-suffix string of S (which is not only the prefix, but also the suffix of S). </p> <p>Example: Father='ala', Mother='la', we have S = 'ala'+'la' = 'alala'. Potential prefix-suffix strings of S are {'a', 'ala', 'alala'}. Given the string S, could you help the little cat to write a program to calculate the length of possible prefix-suffix strings of S? (He might thank you by giving your baby a name:) </p>"},{"location":"csdn/2020-7-31/#_23","title":"\u8f93\u5165","text":"<p>The input contains a number of test cases. Each test case occupies a single line that contains the string S described above.  Restrictions: Only lowercase letters may appear in the input. 1 &lt;= Length of S &lt;= 400000. </p>"},{"location":"csdn/2020-7-31/#_24","title":"\u8f93\u51fa","text":"<p>For each test case, output a single line with integer numbers in increasing order, denoting the possible length of the new baby's name.</p>"},{"location":"csdn/2020-7-31/#_25","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>ababcababababcabab\naaaaa\n</code></pre>"},{"location":"csdn/2020-7-31/#_26","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>2 4 9 18\n1 2 3 4 5\n</code></pre>"},{"location":"csdn/2020-7-31/#_27","title":"\u89e3\u6790","text":"<p>kmp\u7b97\u6cd5next\u6570\u7ec4\u7684\u5e94\u7528</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nchar a[500500]={0};\nint Next[500500]={0};\nint getNext()\n{\nint i=0,j=-1;\nNext[0]=-1;\nwhile(a[i])\n{\nif(j==-1||a[i]==a[j])\n{\ni++;\nj++;\nNext[i]=j;\n}\nelse\n{\nj=Next[j];\n}\n}\n}\nint main()\n{\nwhile(scanf(\"%s\",a)!=EOF)\n{\ngetNext();\nint k=strlen(a);\nstack&lt;int&gt;w;\nwhile(k&gt;=1)\n{\nw.push(k);\nk=Next[k];\n}\nwhile(!w.empty())\n{\nif(w.size()==1)\ncout&lt;&lt;w.top()&lt;&lt;endl;\nelse\ncout&lt;&lt;w.top()&lt;&lt;' ';\nw.pop();\n}\n}\n}\n</code></pre>"},{"location":"csdn/2021-02-02/","title":"2021-02-02","text":""},{"location":"csdn/2021-02-02/#a","title":"A\u9898","text":""},{"location":"csdn/2021-02-02/#_1","title":"\u9898\u89e3","text":"<p>\u7b7e\u5230\u9898\u76ee\uff0c\u7ed9\u5b9a\u4e09\u4e2a\u6570a,b\u548cc\uff0c\u9009\u62e9\u4e00\u4e2a\u6570x\uff0c\u4f7f\u5f97x-2&lt;=a\uff0cx-1&lt;=b\u4e14x&lt;=c\uff0c\u6c423*x-3\u7684\u6700\u5927\u503c\u3002</p>"},{"location":"csdn/2021-02-02/#_2","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint main()\n{\nint a,b,c;\ncin&gt;&gt;a&gt;&gt;b&gt;&gt;c;\nint min1=min(a+2,min(b+1,c));\ncout&lt;&lt;min1+min1-1+min1-2&lt;&lt;endl;\n}\n</code></pre>"},{"location":"csdn/2021-02-02/#b","title":"B\u9898","text":""},{"location":"csdn/2021-02-02/#_3","title":"\u9898\u89e3","text":"<p>\u7ed9\u5b9a2 * n\u4e2a\u70b9\uff0c\u5728\u524dn\u4e2a\u70b9\u4e2d\u9009\u4e00\u4e2a\u70b9i\uff0c\u5728\u540en\u4e2a\u70b9\u4e2d\u9009\u4e00\u4e2a\u70b9j\uff0c\u6784\u9020\u4e00\u79cd\u5339\u914d\u65b9\u5f0f\u4f7f\u5f97\u4efb\u610f\u4e24\u70b9\u6a2a\u7eb5\u5750\u6807\u548c(xi+xj,yi+yj)\u5747\u76f8\u540c\u3002\u7531\u4e8exi+xj\u5747\u76f8\u540c\uff0c\u53ef\u4ee5\u628a\u8fd92 * n\u4e2a\u70b9\u7684x\u5750\u6807\u8fdb\u884c\u6c42\u548c\u7136\u540e\u5e73\u5747\u5206\u914d\u6210n\u4efd\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86xi+xj\u7684\u5b9a\u503c\uff0cy\u5750\u6807\u540c\u7406\u3002\uff08\u6ce8\u610f\u5f00long long\uff09</p>"},{"location":"csdn/2021-02-02/#_4","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\ntypedef long long ll;\nint main()\n{\nll n;\nscanf(\"%lld\",&amp;n);\nll sum1=0,sum2=0,x,y;\nfor(int i=1;i&lt;=2*n;i++)\n{\nscanf(\"%lld%lld\",&amp;x,&amp;y);\nsum1+=x,sum2+=y;\n}\nsum1/=n,sum2/=n;\ncout&lt;&lt;sum1&lt;&lt;' '&lt;&lt;sum2&lt;&lt;endl;\n}\n</code></pre>"},{"location":"csdn/2021-02-02/#c","title":"C\u9898","text":""},{"location":"csdn/2021-02-02/#_5","title":"\u9898\u89e3","text":"<p>\u8be5\u9898\u4e3a\u6253\u8868\u627e\u89c4\u5f8b\u6240\u505a\u51fa\u6765\u7684\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e9b\u6700\u5c0f\u503c\u6240\u5bf9\u5e94\u7684k\u53ef\u4ee5\u548cn\u7684\u56e0\u6570\u4e00\u4e00\u5bf9\u5e94\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u679a\u4e3en\u7684\u56e0\u6570\u7136\u540e\u6c42\u51fa\u7ed3\u679c\u5373\u53ef\u3002</p>"},{"location":"csdn/2021-02-02/#_6","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\ntypedef long long ll;\nset&lt;ll&gt;s;\nll n;\nll cal(ll x)\n{\nll size1=n/x;\nll ans=size1+size1*(size1-1)/2*x;\nreturn ans;\n}\nint main()\n{\nscanf(\"%lld\",&amp;n);\nfor(int i=1;i&lt;=sqrt(n);i++)\n{\nif(n%i==0)\n{\ns.insert(cal(i));\ns.insert(cal(n/i));\n}\n}\nset&lt;ll&gt; ::iterator it=s.begin();\nwhile(it!=s.end())\n{\ncout&lt;&lt;*it&lt;&lt;' ';\nit++;\n}\ncout&lt;&lt;endl;\n}\n</code></pre>"},{"location":"csdn/2021-02-02/#d","title":"D\u9898","text":""},{"location":"csdn/2021-02-02/#_7","title":"\u9898\u89e3","text":"<p>\u8fd9\u91cc\u4ee5n=4\u4e3a\u4f8b </p> <ol> <li> <p>\u56db\u4e2a\u6570\u4e00\u7ec4\uff0c\u53ef\u4ee5\u7ec4\u62104! \u4e2a\u7b54\u6848</p> </li> <li> <p>\u7b2c\u4e00\u6392\u5f53\u4e2d \u6bcf\u4e00\u5bf9\u6570\u540e\u4e09\u4e2a \u548c \u4e0b\u4e00\u5bf9\u6570\u7684\u7b2c\u4e00\u4e2a \u7ec4\u6210\u4e00\u4e2a\u7b54\u6848\uff0c\u800c\u7b2c\u4e00\u6392\u4e2d\u6070\u67093! \u5bf9\u6570\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a(3! - 1)*4</p> </li> <li> <p>\u7b2c\u4e00\u6392\u6709\u516d\u5bf9\u6570\uff0c\u53ef\u4ee5\u5212\u5206\u4e3a3\u7ec4\uff0c\u6bcf\u7ec4\u4e24\u4e2a\uff0c\u4e14\u6bcf\u7ec4\u4e2d \u4e0a\u4e00\u5bf9\u6570\u7684\u540e\u4e24\u4e2a \u548c \u4e0b\u4e00\u5bf9\u6570\u7684\u524d\u4e24\u4e2a \u7ec4\u6210\u7b54\u6848\uff0c\u6240\u4ee5\u7b54\u6848\u53c8\u5e94\u5f53\u52a0\u4e0a(2! - 1) * 4 * 3</p> </li> <li>\u7efc\u4e0a\u7b54\u6848\u4e3a4! + (3! - 1) * 4 + (2! - 1) * 4 * 3 =56</li> <li>\u540c\u7406\uff0c5\u7684\u7b54\u6848\u4e3a\uff1a5! + (4! - 1) * 5 + (3! - 1) * 5 * 4 + (2! - 1) * 5 * 4 * 3 = 4 *5! - 5 - 5 *4 - 5 *4 *3 = 395</li> <li>\u6ce8\u610f\u7279\u52241 \uff01\uff01\uff01</li> </ol>"},{"location":"csdn/2021-02-02/#_8","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll n;\nconst ll mod=998244353;\nint main()\n{\nscanf(\"%lld\",&amp;n);\nif(n==1)\n{\ncout&lt;&lt;1&lt;&lt;endl;\nreturn 0;\n}\nll ans=1;\nfor(ll i=1;i&lt;=n;i++)\n{\nans=ans*i;\nans%=mod;\n}\nans=ans*(n-1);\nans%=mod;\nll sum1=1;\nfor(ll i=n;i&gt;=3;i--)\n{\nsum1*=i;\nsum1%=mod;\nans=ans-sum1;\nans=(ans%mod+mod)%mod;\n}\nans=(ans%mod+mod)%mod;\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"csdn/2021-02-02/#i","title":"I\u9898","text":""},{"location":"csdn/2021-02-02/#_9","title":"\u9898\u89e3","text":"<p>\u56fe\u8bba\u9898\u76ee\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u8be5\u70b9\u5230\u6839\u8282\u70b9\u7684\u6743\u503c\u6700\u5c0f\u503c\u5373\u4e3a\u5b50\u8282\u70b9\u6743\u503c\u7684\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u5148dfs\u786e\u5b9a-1\u70b9\u7684\u6743\u503cs[i]\uff0c\u7136\u540e\u6839\u636e\u5f97\u51fa\u7684\u6743\u503c\u8be5\u70b9\u6743\u503cs[i]\u548c\u7236\u8282\u70b9\u6743\u503cs[i]\u5224\u65ad\u662f\u5426\u7b26\u5408\u6761\u4ef6\u5e76\u6c42\u548c\u5f97\u51fa\u7b54\u6848\u3002</p>"},{"location":"csdn/2021-02-02/#_10","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nvector&lt;ll&gt;v[100500];\nll s[100500]={0};\nll fa[100500]={0};\nll dfs(ll k,ll fa)\n{\nll min1=inf;\nfor(int i:v[k])\n{\nif(i!=fa)\n{\nif(dfs(i,k)==-1)\nreturn -1;\nif(s[i]!=-1)\nmin1=min(min1,s[i]);\n}\n}\nif(s[k]==-1)\n{\nif(min1!=inf)\ns[k]=min1;\n}\nelse\n{\nif(s[k]&gt;min1)\nreturn -1;\n}\nreturn 0;\n}\nll ans=0;\nll dfs1(ll k,ll fa,ll sum)\n{\nif(s[k]==-1)\nreturn 0;\nif(s[k]&lt;sum)\nreturn -1;\nsum=max(sum,s[k]);\nans=ans+s[k]-s[fa];\nfor(int i:v[k])\n{\nif(i!=fa)\n{\nif(dfs1(i,k,sum)==-1)\nreturn -1;\n}\n}\nreturn 0;\n}\nint main()\n{\nll n,m;\nscanf(\"%lld\",&amp;n);\nfa[1]=0;\nfor(ll i=2;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;m);\nfa[i]=m;\nv[i].push_back(m);\nv[m].push_back(i);\n}\nfor(ll i=1;i&lt;=n;i++)\nscanf(\"%lld\",&amp;s[i]);\ns[0]=0;\nif(dfs(1,-1)==-1)\n{\nprintf(\"-1\\n\");\nreturn 0;\n}\nif(dfs1(1,0,0)==-1)\n{\nprintf(\"-1\\n\");\nreturn 0;\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"csdn/2021-02-24/","title":"2021-02-24","text":""},{"location":"csdn/2021-02-24/#2020-icpc-asia-tehran-regional-contest-e","title":"2020 icpc asia tehran regional contest E\u9898","text":""},{"location":"csdn/2021-02-24/#social-distancing","title":"Social Distancing","text":""},{"location":"csdn/2021-02-24/#_1","title":"\u9898\u89e3","text":"<p>\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u548c\u66fc\u54c8\u987f\u8ddd\u79bb\u76f8\u4e92\u8f6c\u53d8</p> <p>\u6839\u636e\u4e0a\u8ff0\u6027\u8d28\uff0c\u53ef\u4ee5\u5c06\u6c42\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f\u6700\u5c0f\u503c\u8f6c\u5316\u4e3a\u6c42\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u4e8c\u7ef4\u77e9\u9635\u6c42\u66fc\u54c8\u987f\u8ddd\u79bb\u53ef\u4ee5\u6839\u636e\u524d\u7f00\u548c\u6765\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5982\u679c\u8be5\u70b9\u975e\u75c5\u4eba\uff0c\u6807\u8bb0\u4e3a1\uff0c\u4ee3\u8868\u8be5\u70b9\u6743\u503c\u4e3a1\uff1b\u53cd\u4e4b\u5219\u6807\u8bb0\u4e3a-1\uff0c\u540e\u671f\u6c42\u524d\u7f00\u548c\u65f6\u8be5\u70b9\u6743\u503c\u5b9a\u4e3a0\uff1b\u7136\u540e\u5206\u522b\u6cbf\u56db\u4e2a\u65b9\u5411\u6c42\u524d\u7f00\u548c\uff0c\u53d6\u6700\u5c0f\u503c\u5373\u4e3a\u6bcf\u4e2a\u70b9\u7684\u6700\u5c0f\u66fc\u54c8\u987f\u8ddd\u79bb\u3002</p> <p>\u6700\u540e\u6839\u636e\u6700\u5c0f\u66fc\u54c8\u987f\u8ddd\u79bbdfs\u8fdb\u884c\u641c\u7d22\u5373\u53ef\u5f97\u51fa\u7b54\u6848\u3002</p>"},{"location":"csdn/2021-02-24/#_2","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(2)\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nchar a[505][505]={0};\nint ans1[505][505]={0};\nint dis[505][505]={0};\nint sx,sy,ex,ey;\nstruct node\n{\nint x,y,val;\n};\nint dx[]={0,1,-1,0,0};\nint dy[]={0,0,0,1,-1};\nint n,m;\nint ans=-1;\nint dfs(int x,int y,int val)\n{\nif(ans&gt;=val)\nreturn 0;\nif(x==ex&amp;&amp;y==ey)\n{\nans=max(ans,val);\nreturn 0;\n}\nfor(int i=1;i&lt;=4;i++)\n{\nint xx=x+dx[i],yy=y+dy[i];\nif(xx&lt;1||xx&gt;n||yy&lt;1||yy&gt;m)\ncontinue;\nif(a[xx][yy]=='#')\ncontinue;\nint val1=min(val,dis[xx][yy]);\nif(ans1[xx][yy]&gt;=val1)\ncontinue;\nans1[xx][yy]=val1;\ndfs(xx,yy,val1);\n}\nreturn 0;\n}\nint mp[1050][1050]={0};\nint mp_sum1[1050][1050]={0};\nint mp_sum2[1050][1050]={0};\nint mp_sum3[1050][1050]={0};\nint mp_sum4[1050][1050]={0};\nint main()\n{\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%s\",a[i]+1);\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\ndis[i][j]=inf;\n}\n}\nfor(int i=0;i&lt;1050;i++)\nfor(int j=0;j&lt;1050;j++)\nmp_sum1[i][j]=mp_sum2[i][j]=mp_sum3[i][j]=mp_sum4[i][j]=inf;\nint sum=0;\nfor(int i=0;i&lt;=n+1;i++)\n{\nint j=0;\nmp[i+j][i-j+500]=inf;\nj=m+1;\nmp[i+j][i-j+500]=inf;\n}\nfor(int j=0;j&lt;=m+1;j++)\n{\nint i=0;\nmp[i+j][i-j+500]=inf;\ni=n+1;\nmp[i+j][i-j+500]=inf;\n}\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nif(a[i][j]=='*')\n{\nsum++;\nmp[i+j][i-j+500]=-1;\n}\nelse\n{\nmp[i+j][i-j+500]=1;\n}\nif(a[i][j]=='S')\nsx=i,sy=j;\nif(a[i][j]=='E')\nex=i,ey=j;\n}\n}\nfor(int i=1;i&lt;1050;i++)\n{\nfor(int j=1;j&lt;1050;j++)\n{\nif(mp[i][j]==-1)\nmp_sum1[i][j]=0;\nelse\nmp_sum1[i][j]=min(mp_sum1[i][j],min(mp_sum1[i-1][j],mp_sum1[i][j-1])+mp[i][j]);\n}\n}\n\nfor(int i=1;i&lt;1050;i++)\n{\nfor(int j=1049;j&gt;=1;j--)\n{\nif(mp[i][j]==-1)\nmp_sum2[i][j]=0;\nelse\nmp_sum2[i][j]=min(mp_sum2[i][j],min(mp_sum2[i-1][j],mp_sum2[i][j+1])+mp[i][j]);\n}\n}\n\n\nfor(int i=1049;i&gt;=1;i--)\n{\nfor(int j=1;j&lt;1050;j++)\n{\nif(mp[i][j]==-1)\nmp_sum3[i][j]=0;\nelse\nmp_sum3[i][j]=min(mp_sum3[i][j],min(mp_sum3[i+1][j],mp_sum3[i][j-1])+mp[i][j]);\n}\n}    for(int i=1049;i&gt;=1;i--)\n{\nfor(int j=1049;j&gt;=1;j--)\n{\nif(mp[i][j]==-1)\nmp_sum4[i][j]=0;\nelse\nmp_sum4[i][j]=min(mp_sum4[i][j],min(mp_sum4[i+1][j],mp_sum4[i][j+1])+mp[i][j]);\n}\n}\n\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nint xx=i+j,yy=i-j+500;\ndis[i][j]=min(min(mp_sum1[xx][yy],mp_sum2[xx][yy]),min(mp_sum3[xx][yy],mp_sum4[xx][yy]));\n}\n}\n\ndfs(sx,sy,dis[sx][sy]);\nif(ans!=-1&amp;&amp;sum==0)\n{\nprintf(\"safe\\n\");\nreturn 0;\n}\nprintf(\"%d\\n\",ans);\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/Beyond_compare4_30%E5%A4%A9%E8%AF%95%E7%94%A8%E8%BF%87%E6%9C%9F/","title":"Beyondcompare430\u5929\u8bd5\u7528\u8fc7\u671f","text":""},{"location":"csdn/Beyond_compare4_30%E5%A4%A9%E8%AF%95%E7%94%A8%E8%BF%87%E6%9C%9F/#beyond-compare4","title":"Beyond compare4","text":"<p>\u65b0\u5efa\u4e00\u4e2atxt\u6587\u6863\uff0c\u590d\u5236\u4ee5\u4e0b\u5185\u5bb9\uff1a <pre><code>reg delete \"HKEY_CURRENT_USER\\Software\\Scooter Software\\Beyond Compare 4\" /v CacheID /f\nexit\n</code></pre> \u91cd\u547d\u540d\u4e3a Bcompare.bat\uff0c\u70b9\u51fb\u8fd0\u884c\uff0c\u5373\u53ef\u83b7\u5f97\u53e6\u5916\u768430\u5929\u8bd5\u7528</p>"},{"location":"csdn/GitHub%E5%8D%9A%E5%AE%A2/","title":"GitHub\u535a\u5ba2","text":""},{"location":"csdn/GitHub%E5%8D%9A%E5%AE%A2/#github","title":"github\u535a\u5ba2\u5730\u5740","text":"<p>https://github.tim-wcx.ltd/</p>"},{"location":"csdn/_coverpage/","title":"Tim-wcx","text":""},{"location":"csdn/_coverpage/#_1","title":"\u4e2a\u4eba\u6587\u6863\u7f51\u7ad9","text":"<p>GitHub Get Started</p>"},{"location":"csdn/_sidebar/","title":"sidebar","text":"<ul> <li>\u4e0a\u4e00\u7ea7</li> <li>csdn\u5bfc\u51fa</li> <li>2020-08-01</li> <li>2020-08-02\u7ebf\u6bb5\u6811</li> <li>2020-08-03</li> <li>2020-08-04</li> <li>2020-08-05</li> <li>2020-08-06\u7ebf\u6bb5\u6811</li> <li>2020-08-07</li> <li>2020-08-08</li> <li>2020-08-09</li> <li>2020-08-10</li> <li>2020-08-11</li> <li>2020-08-12\u6b27\u62c9\u51fd\u6570</li> <li>2020-08-13</li> <li>2020-08-14</li> <li>2020-08-16\u6811\u5f62DP\u7b49\u5dee\u6570\u5217\u524d\u7f00\u548c</li> <li>2020-08-17</li> <li>2020-08-18</li> <li>2020-08-19</li> <li>2020-08-20</li> <li>2020-08-21</li> <li>2020-09-05\u5212\u5206\u6811\u6c42\u67d0\u4e00\u533a\u95f4\u7684\u4e2d\u4f4d\u6570</li> <li>2020-09-07</li> <li>2020-09-08\u4e8c\u5206\u6700\u5c0f\u751f\u6210\u6811</li> <li>2020-09-08\u6570\u4f4dDP\u4e8c\u5206</li> <li>2020-09-09\u6570\u4f4dDP</li> <li>2020-09-11\u6811\u72b6\u6570\u7ec4\u6c42\u6700\u5927\u503c</li> <li>2020-09-12\u5b57\u7b26\u4e32\u54c8\u5e0c</li> <li>2020-09-12</li> <li>2020-09-21\u51f8\u5305\u7b97\u6cd5</li> <li>2020-09-23\u6811\u72b6\u6570\u7ec4</li> <li>2020-09-26\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u95ee\u9898</li> <li>2020-10-04\u7ebf\u6bb5\u6811\u626b\u63cf\u7ebf</li> <li>2020-10-05</li> <li>2020-10-07\u5e76\u67e5\u96c6\u542f\u53d1\u5f0f\u5408\u5e76</li> <li>2020-10-15dsuontree</li> <li>2020-11-23</li> <li>2020-12-02</li> <li>2020-7-31</li> <li>2021-02-02</li> <li>2021-02-24</li> <li>Beyondcompare430\u5929\u8bd5\u7528\u8fc7\u671f</li> <li>GitHub\u535a\u5ba2</li> <li>\u4e8c\u5206\u4e8c\u5206\u67e5\u627e\u6a21\u677f</li> <li>\u5f02\u6216\u6c42\u548c\u5f0f</li> <li>\u6c42\u7ec4\u5408\u6570\u7684\u65b9\u6cd5</li> <li>\u6c42\u9006\u5e8f\u5bf9</li> <li>\u7b80\u4ecb\u6269\u5c55\u6b27\u51e0\u91cc\u5fb7\u5b9a\u7406</li> <li>\u94fe\u8868</li> </ul>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/","title":"\u4e8c\u5206\u4e8c\u5206\u67e5\u627e\u6a21\u677f","text":""},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#1k","title":"1.\u67e5\u627e\u5143\u7d20k\u7684\u4f4d\u7f6e","text":""},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_1","title":"\u8f93\u5165","text":"<pre><code>3\n123 132 145\n1\n123\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_2","title":"\u8f93\u51fa","text":"<pre><code>1\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_3","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[100500]= {0};\nll n;\nll find1(ll k)\n{\nll l=1,r=n+1;\nwhile(l&lt;r)\n{\nll mid=(l+r)/2;\nif(a[mid]==k)\nreturn mid;\nelse if(a[mid]&gt;k)\nr=mid;\nelse if(a[mid]&lt;k)\nl=mid+1;\n}\n}\nint main()\n{\nscanf(\"%lld\",&amp;n);\nfor(ll i=1; i&lt;=n; i++)\nscanf(\"%lld\",&amp;a[i]);\nll m;\nscanf(\"%lld\",&amp;m);\nll k;\nfor(ll i=1; i&lt;=m; i++)\n{\nscanf(\"%lld\",&amp;k);\nprintf(\"%lld\\n\",find1(k));\n}\n}\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#2k","title":"2.\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ek\u7684\u5143\u7d20\u4f4d\u7f6e","text":""},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_4","title":"\u8f93\u5165","text":"<pre><code>6\n1 2 2 3 3 4\n4\n1 2 3 4\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_5","title":"\u8f93\u51fa","text":"<pre><code>1\n2\n4\n6\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_6","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[100500]= {0};\nll n;\nll find1(ll k)\n{\nll l=1,r=n+1; //\u641c\u7d22\u65f6\u5de6\u95ed\u53f3\u5f00,while\u5faa\u73afl&lt;r\u5373\u53ef\nwhile(l&lt;r)\n{\nll mid=(l+r)/2;\nif(a[mid]&gt;k)\nr=mid;\nelse if(a[mid]&lt;k)\nl=mid+1;\nelse if(a[mid]==k)\nr=mid;\n}\nreturn l;\n}\nint main()\n{\nscanf(\"%lld\",&amp;n);\nfor(ll i=1; i&lt;=n; i++)\nscanf(\"%lld\",&amp;a[i]);\nll m;\nscanf(\"%lld\",&amp;m);\nll k;\nfor(ll i=1; i&lt;=m; i++)\n{\nscanf(\"%lld\",&amp;k);\nprintf(\"%lld\\n\",find1(k));\n}\n}\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#2k_1","title":"2.\u67e5\u627e\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8ek\u7684\u5143\u7d20\u4f4d\u7f6e","text":""},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_7","title":"\u8f93\u5165","text":"<pre><code>6\n1 2 2 3 3 4\n4\n1 2 3 4\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_8","title":"\u8f93\u51fa","text":"<pre><code>1\n3\n5\n6\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_9","title":"\u4ee3\u7801","text":"<p><pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[100500]= {0};\nll n;\nll find1(ll k)\n{\nll l=1,r=n+1;\nwhile(l&lt;r)\n{\nll mid=(l+r)/2;\nif(a[mid]&gt;k)\nr=mid;\nelse if(a[mid]&lt;k)\nl=mid+1;\nelse if(a[mid]==k)\nl=mid+1;\n}\nreturn l-1; // \u7531\u4e8el=mid+1 \u6240\u4ee5l\u4e0d\u662f\u7b54\u6848\n}\nint main()\n{\nscanf(\"%lld\",&amp;n);\nfor(ll i=1; i&lt;=n; i++)\nscanf(\"%lld\",&amp;a[i]);\nll m;\nscanf(\"%lld\",&amp;m);\nll k;\nfor(ll i=1; i&lt;=m; i++)\n{\nscanf(\"%lld\",&amp;k);\nprintf(\"%lld\\n\",find1(k));\n}\n}\n</code></pre> \u7528\u4e8c\u5206\u6cd5\u89e3\u9898\u65f6\uff0cmid\u4e0a\u4e0b\u53d6\u503c\u6b63\u786e\u4e0e\u5426\u5173\u7cfb\u7a0b\u5e8f\u662f\u5426\u8fdb\u5165\u6b7b\u5faa\u73af\uff01\uff01  </p> <p>\u5bf9\u4e0eif(test(mid)) l=mid;           else r=mid-1;  \u5982\u679c\u7528 mid=(l+r)/2  \u4f1a\u51fa\u73b0\u95ee\u9898\uff01\uff01\uff01 \u53d6l=3,r=4,\u4f1a\u53d1\u73b0\u7a0b\u5e8f\u6b7b\u5faa\u73af\uff01\uff01\uff01\u5f97\u7528 mid=l+(r-l+1)/2;</p> <p>\u5bf9\u4e8eif(test(mid)) r=mid;        else l=mid+1;       \u663e\u7136\u5f97\u7528mid=(l+r)/2   </p> <p>\u4e24\u79cd\u65b9\u5f0f\u4e00\u4e2a\u5411\u4e0a\uff0c\u4e00\u4e2a\u5411\u4e0b\u53d6\u6574\uff0c\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\uff01\uff01</p> <p>\u53c2\u8003\u4e8e\uff1a</p> <p>https://blog.csdn.net/wakouboy/article/details/22995997</p> <p>https://www.jianshu.com/p/f3e3a84d7b8c</p> <p>https://www.cnblogs.com/luoxn28/p/5767571.html</p> <p>----------------------------------\u5206\u5272\u7ebf-----------------------------------------------------</p> <p>http://icpc.upc.edu.cn/problem.php?cid=1405&amp;pid=9</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_10","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u6709\u4e00\u5929\uff0c\u8d2a\u5403\u7684\u732a\u516b\u6212\u6765\u5230\u4e86\u4e00\u4e2a\u5927\u679c\u56ed\uff0c\u679c\u56ed\u91cc\u6709n(n\u2264100000)\u4e2a\u5927\u897f\u74dc\uff0c\u6bcf\u4e2a\u897f\u74dc \u7684\u8d28\u91cf\u4e0d\u5927\u4e8e\u957f\u6574\u578b(longint)\uff0c\u5e76\u4e14\u6bcf\u4e2a\u897f\u74dc\u7684\u8d28\u91cf\u90fd\u4e0d\u540c\u3002\u732a\u516b\u6212\u975e\u5e38\u65e0\u804a\uff0c\u5148\u628a\u6240\u6709\u7684\u897f\u74dc\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u7136\u540e\u518d\u9009m(m\u2264l00000)\u4e2a\u8d28\u91cf\u662fKi\u7684\u897f\u74dc\uff0c\u8bf7\u4f60\u5e2e\u4ed6\u628a\u60f3\u5403\u7684\u897f\u74dc\u627e\u51fa\u6765\u3002</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_11","title":"\u8f93\u5165","text":"<p>\u7b2c1\u884c\u8f93\u5165n\uff0c\u7136\u540e\u4ee5\u4e0bn\u884c\u8f93\u5165n\u4e2a\u6574\u6570\uff1b \u63a5\u7740\u8f93\u5165m\uff0c\u7136\u540e\u4ee5\u4e0bm\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570Ki\u3002</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_12","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fam\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u91cd\u65b0\u6392\u5217\u540e\uff0cKi\u5728\u8fd9N\u4e2a\u6570\u4e2d\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_13","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3\n132\n123\n145\n1\n123\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_14","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>1\n</code></pre> \u7b80\u5355\u7684\u6392\u5e8f+\u4e8c\u5206\u67e5\u627e</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[100500]= {0};\nll n;\nll find1(ll k)\n{\nll l=1,r=n+1;\nwhile(l&lt;r)\n{\nll mid=(l+r)/2;\nif(a[mid]==k)\nreturn mid;\nelse if(a[mid]&gt;k)\nr=mid;\nelse if(a[mid]&lt;k)\nl=mid+1;\n}\n}\nint main()\n{\nscanf(\"%lld\",&amp;n);\nfor(ll i=1; i&lt;=n; i++)\nscanf(\"%lld\",&amp;a[i]);\nsort(a+1,a+n+1);\nll m;\nscanf(\"%lld\",&amp;m);\nll k;\nfor(ll i=1; i&lt;=m; i++)\n{\nscanf(\"%lld\",&amp;k);\nprintf(\"%lld\\n\",find1(k));\n}\n}\n</code></pre> <p>http://icpc.upc.edu.cn/problem.php?cid=1405&amp;pid=11</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_15","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u6211\u6709\u5f88\u591a\uff08n\u6761\uff09\u73cd\u73e0\u9879\u94fe\uff0c\u6bcf\u5929\u6211\u90fd\u8981\u4ece\u4e2d\u6311\u4e00\u6761\u6234\u4e0a\u2026\u2026\u6311\u54ea\u6761\u5f88\u6709\u8bb2\u7a76\uff0c\u4e0d\u80fd\u592a\u96be\u770b\u4e5f\u4e0d\u80fd\u592a\u597d\u770b\u3002\u6240\u4ee5\u6211\u5e0c\u671b\u4f60\u80fd\u5e2e\u5e2e\u6211\uff0c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u2015\u2015\u6bcf\u5929\u5e2e\u6211\u7b97\u7b97\uff0c\u90a3\u5929\u6211\u80fd\u6234\u7684\u9879\u94fe\u6709\u591a\u5c11\u6761\u3002</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_16","title":"\u8f93\u5165","text":"<p>\u7b2c1\u884c\u4e3a\u6b63\u6574\u6570n\uff0c\u8868\u793a\u9879\u94fe\u7684\u603b\u6761\u6570(n\u2264100000)\uff1b \u7b2c2\u884c\u6709n\u4e2a\u6574\u6570\uff08\u4ee3\u8868\u6bcf\u6761\u9879\u94fe\u6676\u7684\u597d\u770b\u7a0b\u5ea6Xi\uff0c0\u2264Xi\u2264maxlongint\uff09\uff1b \u7b2c3\u884c\u4e3a\u6b63\u6574\u6570m\uff0c\u8868\u793a\u603b\u5929\u6570(\u4e5f\u5c31\u662f\u603b\u8be2\u95ee\u6b21\u6570\uff0c\u5176\u4e2dm\u2264100000)\uff1b \u4ee5\u4e0bm\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570Ai\uff0cBi(1\u2264Ai\uff0cBi\u2264maxlongint)\uff0c\u8be2\u95ee\u597d\u770b\u7a0b\u5ea6\u5728Ai\u5230Bi\u4e4b\u95f4\u7684\u9879\u94fe\u6761\u6570\uff08\u542b\u7b49\u4e8eAi\u6216Bi\u7684\uff0cAi\u4e0eBi\u5927\u5c0f\u5173\u7cfb\u4e0d\u786e\u5b9a\uff09\u3002</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_17","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fam\u884c\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u8f93\u51fa\u4e00\u884c\uff0c\u4eceAi\u5230Bi(\u542bAi\uff0cBi)\u597d\u770b\u7a0b\u5ea6\u5728Ai\u5230Bi\u4e4b\u95f4\u7684\u9879\u94fe\u6761\u6570\u3002</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_18","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>7\n8 2 3 5 6 7 7\n6\n1 5\n8 6\n1 10\n5 5\n4 4\n7 8\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_19","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>3\n4\n7\n1\n0\n3\n</code></pre> \u67e5\u627e\u5de6\u53f3\u8fb9\u754c\u505a\u5dee\u5373\u53ef\u3002</p> <p><pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[100500]= {0};\nll n;\nll find1(ll k)\n{\nll l=1,r=n+1;\nwhile(l&lt;r)\n{\nll mid=(l+r)/2;\nif(a[mid]&gt;k)\nr=mid;\nelse if(a[mid]&lt;k)\nl=mid+1;\nelse if(a[mid]==k)\nl=mid+1;\n}\nreturn l-1;\n}\nll find2(ll k)\n{\nll l=1,r=n+1;\nwhile(l&lt;r)\n{\nll mid=(l+r)/2;\nif(a[mid]&gt;k)\nr=mid;\nelse if(a[mid]&lt;k)\nl=mid+1;\nelse if(a[mid]==k)\nr=mid;\n}\nreturn l;\n}\nint main()\n{\nscanf(\"%lld\",&amp;n);\nfor(ll i=1; i&lt;=n; i++)\nscanf(\"%lld\",&amp;a[i]);\nsort(a+1,a+n+1);\nll m;\nscanf(\"%lld\",&amp;m);\nll o,p;\nfor(ll i=1; i&lt;=m; i++)\n{\nscanf(\"%lld%lld\",&amp;o,&amp;p);\nif(o&gt;p)\nswap(o,p);\nprintf(\"%lld\\n\",-find2(o)+find1(p)+1);\n}\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=1405&amp;pid=10</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_20","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u4e07\u5723\u8282\u53c8\u5230\u4e86\uff01FJ\u6253\u7b97\u5e26\u4ed6\u7684\u5976\u725b\u53bb\u53c2\u52a0\u5316\u88c5\u665a\u4f1a\uff0c\u4f46\u662f\uff0cFJ\u53ea\u505a\u4e86\u4e00\u5957\u80fd\u5bb9\u4e0b\u4e24\u5934\u603b\u957f\u4e0d\u8d85\u8fc7S (1\u2264S\u22641000000)\u7684\u5976\u725b\u6050\u6016\u670d\u88c5\u3002FJ\u517b\u4e86N(2\u2264N\u226420000)\u5934\u63091--N\u987a\u5e8f\u7f16\u53f7\u7684\u5976\u725b\uff0c\u7f16\u53f7\u4e3ai\u7684\u5976\u725b\u7684\u957f\u5ea6\u4e3aL_i(1\u2264L_i\u22641000000)\u3002\u5982\u679c\u4e24\u5934\u5976\u725b\u7684\u603b\u957f\u5ea6\u4e0d\u8d85\u8fc7S\uff0c\u90a3\u4e48\u5979\u4eec\u5c31\u80fd\u7a7f\u4e0b\u8fd9\u5957\u670d\u88c5\u3002 FJ\u60f3\u77e5\u9053\uff0c\u5982\u679c\u4ed6\u60f3\u9009\u62e9\u4e24\u5934\u4e0d\u540c\u7684\u5976\u725b\u6765\u7a7f\u8fd9\u5957\u8863\u670d\uff0c\u4e00\u5171\u6709\u591a\u5c11\u79cd\u6ee1\u8db3\u6761\u4ef6\u7684\u65b9\u6848\u3002</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_21","title":"\u8f93\u5165","text":"<p>\u7b2c1\u884c\u662f2\u4e2a\u6574\u6570\uff1aN\u548cS\uff1b \u7b2c2\uff5eN+l\u884c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff1aL_i\u3002</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_22","title":"\u8f93\u51fa","text":"<p>1\u4e2a\u6574\u6570\uff0c\u8868\u793aFJ\u53ef\u9009\u62e9\u7684\u6240\u6709\u65b9\u6848\u6570\u3002\u6ce8\u610f\u5976\u725b\u987a\u5e8f\u4e0d\u540c\u7684\u4e24\u79cd\u65b9\u6848\u662f\u88ab\u89c6\u4e3a\u76f8\u540c\u7684\u3002</p>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_23","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4 6\n3\n5\n2\n1\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_24","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>4\n</code></pre>"},{"location":"csdn/%E4%BA%8C%E5%88%86%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/#_25","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b\u8bf4\u660e\uff1a4\u79cd\u9009\u62e9\u5206\u522b\u4e3a\uff1a\u5976\u725b1\u548c\u5976\u725b3\uff1b\u5976\u725bl\u548c\u5976\u725b4\uff1b\u5976\u725b2\u548c\u5976\u725b4\uff1b\u5976\u725b3\u548c\u5976\u725b4\u3002 \u4e8c\u5206\uff0c\u67e5\u627e\u7b26\u5408\u6761\u4ef6\u7684\u4e0a\u754c\u6c42\u548c\u5373\u53ef\u3002</p> <p><pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[100500]= {0};\nll n,k;\nll find1(ll k)\n{\nll l=1,r=n+1;\nwhile(l&lt;r)\n{\nll mid=(l+r)/2;\nif(a[mid]&gt;k)\nr=mid;\nelse if(a[mid]&lt;k)\nl=mid+1;\nelse if(a[mid]==k)\nl=mid+1;\n}\nreturn l-1;\n}\nint main()\n{\nscanf(\"%lld%lld\",&amp;n,&amp;k);\nfor(ll i=1; i&lt;=n; i++)\nscanf(\"%lld\",&amp;a[i]);\nsort(a+1,a+n+1);\nll sum=0;\nfor(ll i=1;i&lt;=n;i++)\n{\nll w=find1(k-a[i]);\nif(i&lt;=w)\nw--;\nsum+=w;\n}\ncout&lt;&lt;sum/2&lt;&lt;endl;\n}\n</code></pre> \u9644\u4e0a\u4e00\u4efd\u4e8c\u5206\u67e5\u627e\u7684\u6a21\u677f</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nint a[100500]= {0};  ///\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\nint n,m;\nint find1(int k)     ///\u67e5\u627e\u67d0\u4e00\u4e2a\u6570\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n{\nint l=1,r=n,mid;\nwhile(l&lt;r)       ///while\u5faa\u73af\u6761\u4ef6\u4e3al&lt;r,\u5219\u8df3\u51fa\u5faa\u73af\u65f6l==r,\u51cf\u5c11\u5bf9\u8fd4\u56de\u503c\u7684\u8003\u8651\n{\nmid=(l+r)/2; ///\u7531\u4e8e\u662fl=mid+1,\u5efa\u8bae\u7528(l+r)/2\nif(a[mid]==k)\nr=mid;\nelse if(a[mid]&gt;k)\nr=mid;\nelse if(a[mid]&lt;k)\nl=mid+1;\n}\nif(a[r]==k)\nreturn r;\nelse\nreturn -1;\n}\nint find2(int k)     ///\u67e5\u627e\u67d0\u4e00\u4e2a\u6570\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n{\nint l=1,r=n,mid;\nwhile(l&lt;r)\n{\nmid=(l+r+1)/2; ///\u7531\u4e8e\u662fr=mid-1,\u5efa\u8bae\u7528(l+r+1)/2\nif(a[mid]==k)\nl=mid;\nelse if(a[mid]&gt;k)\nr=mid-1;\nelse if(a[mid]&lt;k)\nl=mid;\n}\nif(a[l]==k)\nreturn l;\nelse\nreturn -1;\n}\nint find3(int k)     ///\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ek\u7684\u5143\u7d20\u4f4d\u7f6e\n{\nint l=1,r=n,mid;\nwhile(l&lt;r)\n{\nmid=(l+r)/2; ///\u7531\u4e8e\u662fl=mid+1,\u5efa\u8bae\u7528(l+r)/2\nif(a[mid]==k)\nr=mid;\nelse if(a[mid]&gt;k)\nr=mid;\nelse if(a[mid]&lt;k)\nl=mid+1;\n}\nif(a[l]&gt;=k)\nreturn l;\nelse\nreturn -1;\n}\nint find4(int k)     ///\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8ek\u7684\u5143\u7d20\u4f4d\u7f6e\n{\nint l=1,r=n,mid;\nwhile(l&lt;r)\n{\nmid=(l+r)/2; ///\u7531\u4e8e\u662fl=mid+1,\u5efa\u8bae\u7528(l+r)/2\nif(a[mid]==k)\nl=mid+1;\nelse if(a[mid]&gt;k)\nr=mid;\nelse if(a[mid]&lt;k)\nl=mid+1;\n}\nif(a[l]&gt;k)\nreturn l;\nelse\nreturn -1;\n}\nint find5(int k)       ///\u67e5\u627e\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8ek\u7684\u5143\u7d20\u4f4d\u7f6e\n{\nint l=1,r=n,mid;\nwhile(l&lt;r)\n{\nmid=(l+r+1)/2; ///\u7531\u4e8e\u662fr=mid-1,\u5efa\u8bae\u7528(l+r+1)/2\nif(a[mid]==k)\nl=mid;\nelse if(a[mid]&gt;k)\nr=mid-1;\nelse if(a[mid]&lt;k)\nl=mid;\n}\nif(a[l]&lt;=k)\nreturn l;\nelse\nreturn -1;\n}\nint find6(int k)       ///\u67e5\u627e\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8ek\u7684\u5143\u7d20\u4f4d\u7f6e\n{\nint l=1,r=n,mid;\nwhile(l&lt;r)\n{\nmid=(l+r+1)/2; ///\u7531\u4e8e\u662fr=mid-1,\u5efa\u8bae\u7528(l+r+1)/2\nif(a[mid]==k)\nr=mid-1;\nelse if(a[mid]&gt;k)\nr=mid-1;\nelse if(a[mid]&lt;k)\nl=mid;\n}\nif(a[l]&lt;k)\nreturn l;\nelse\nreturn -1;\n}\nint main()\n{\nprintf(\"\u8bf7\u8f93\u5165\u6570\u5b57\u4e2a\u6570:\\n\");\nscanf(\"%d\",&amp;n);\nprintf(\"\u8bf7\u8f93\u5165\u4e00\u884c\u6570\u5b57,\u4e0d\u5fc5\u5206\u524d\u540e\u987a\u5e8f:\\n\");\nfor(int i=1; i&lt;=n; i++)\nscanf(\"%d\",&amp;a[i]);\nsort(a+1,a+n+1);\nprintf(\"\u8bf7\u8f93\u5165\u8981\u67e5\u8be2\u7684\u6570\u5b57:\\n\");\nwhile(scanf(\"%d\",&amp;m)!=EOF)\n{\nint ans1,ans2,ans3,ans4,ans5,ans6;\nans1=find1(m);\nans2=find2(m);\nans3=find3(m);\nans4=find4(m);\nans5=find5(m);\nans6=find6(m);\nprintf(\"%d \u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a %d\\n\",m,ans1);\nprintf(\"%d \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a %d\\n\",m,ans2);\nprintf(\"\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u6570\u5b57 %d \u7684\u4f4d\u7f6e\u4e3a %d\\n\",m,ans3);\nprintf(\"\u7b2c\u4e00\u4e2a\u5927\u4e8e\u6570\u5b57 %d \u7684\u4f4d\u7f6e\u4e3a %d\\n\",m,ans4);\nprintf(\"\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u6570\u5b57 %d \u7684\u4f4d\u7f6e\u4e3a %d\\n\",m,ans5);\nprintf(\"\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u6570\u5b57 %d \u7684\u4f4d\u7f6e\u4e3a %d\\n\",m,ans6);\nprintf(\"\u8bf7\u8f93\u5165\u8981\u67e5\u8be2\u7684\u6570\u5b57:\\n\");\n}\n}\n</code></pre>"},{"location":"csdn/%E5%BC%82%E6%88%96%E6%B1%82%E5%92%8C%E5%BC%8F/","title":"\u5f02\u6216\u6c42\u548c\u5f0f","text":"<p>\u53c2\u8003\u4e8e\uff1ahttps://blog.csdn.net/ECNU_LZJ/article/details/72853774?utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-1.nonecase</p>"},{"location":"csdn/%E5%BC%82%E6%88%96%E6%B1%82%E5%92%8C%E5%BC%8F/#_2","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217A[i]\uff0c\u6c42\u6240\u6709A[i] xor A[j] (i&lt;j)\u7684\u503c\u4e4b\u548c</p>"},{"location":"csdn/%E5%BC%82%E6%88%96%E6%B1%82%E5%92%8C%E5%BC%8F/#_3","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570N \u63a5\u4e0b\u6765N\u884c\uff0c\u7b2ci\u884c\u4e3aA[i]</p>"},{"location":"csdn/%E5%BC%82%E6%88%96%E6%B1%82%E5%92%8C%E5%BC%8F/#_4","title":"\u8f93\u51fa","text":"<p>\u6240\u9700\u7684\u503c</p>"},{"location":"csdn/%E5%BC%82%E6%88%96%E6%B1%82%E5%92%8C%E5%BC%8F/#_5","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>3 7 3 5</p>"},{"location":"csdn/%E5%BC%82%E6%88%96%E6%B1%82%E5%92%8C%E5%BC%8F/#_6","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>12</p>"},{"location":"csdn/%E5%BC%82%E6%88%96%E6%B1%82%E5%92%8C%E5%BC%8F/#_7","title":"\u6837\u4f8b\u89e3\u91ca","text":"<p>7 xor 3+3 xor 5+7 xor 5 = 4+6+2 = 12</p>"},{"location":"csdn/%E5%BC%82%E6%88%96%E6%B1%82%E5%92%8C%E5%BC%8F/#_8","title":"\u9898\u89e3","text":"<p>\u5f02\u6216\uff1aC++\u4e2d\u5373\u4e3a ^ \u8fd0\u7b97\u7b26 0^0=0 , 0^1=1 ,1^0=1,  1^1=0</p> <p>\u6570\u5b57\u90fd\u5316\u6210\u4e8c\u8fdb\u5236\uff1a7:111, 3:011, 5:101 \u5f02\u6216\u5177\u6709\u4ea4\u6362\u5f8b\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u8981\u80fd\u591f\u4f7f\u5f97\u4efb\u610f\u4e24\u4e2a\u6570\u5b57\u90fd\u5f02\u6216\u4e00\u6b21\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u6bcf\u6b21\u7528\u524d\u9762\u7684\u6570\u5b57\u5f02\u6216\u540e\u9762\u7684\u6570\u5b57\u3002\u8fd9\u542f\u53d1\u6211\u4eec\u4e0d\u5173\u6ce8\u5f02\u6216\u7684\u987a\u5e8f\uff0c\u800c\u662f\u5173\u6ce8\u7ed3\u679c\u3002 \u6613\u77e5\uff1aa\u4e2a1\uff0cb\u4e2a0\u4e24\u4e24\u5f02\u6216\u7684\u7ed3\u679c\u80af\u5b9a\u662fa*b\u4e2a1\uff0c\u5176\u4f59\u90fd\u662f0\u3002 \u4e09\u4e2a\u6570\u5b57\u7684\u6700\u4f4e\u4f4d\u5206\u522b\u662f1,1,1\uff0c\u4e5f\u5c31\u662f\u4e09\u4e2a1\u3002\u90a3\u4e48\u6700\u4f4e\u4f4d\u5f02\u6216\u7684\u7ed3\u679c\u4e00\u5b9a\u662f\u96f6\u4e2a1\uff0c\u4e09\u4e2a0\uff0c\u76f8\u52a0\u4e3a0\u3002 \u6b21\u4f4e\u4f4d\u5206\u522b\u662f1,1,0\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a1\u4e00\u4e2a0\u3002\u90a3\u4e48\u6b21\u4f4e\u4f4d\u5f02\u6216\u7684\u7ed3\u679c\u4e00\u5b9a\u662f\u4e24\u4e2a1\uff0c\u4e00\u4e2a0\uff0c\u76f8\u52a0\u4e3a2\u3002 \u6700\u9ad8\u4f4d\u5206\u522b\u662f1,0,1\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a1\u4e00\u4e2a0\u3002\u90a3\u4e48\u6700\u9ad8\u4f4d\u5f02\u6216\u7684\u7ed3\u679c\u4e00\u5b9a\u662f\u4e24\u4e2a1\uff0c\u4e00\u4e2a0\uff0c\u76f8\u52a0\u4e3a2\u3002 \u6240\u4ee5\u6700\u540e\u7684\u7b54\u6848\u5e94\u8be5\u662f   \u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nlong long b[50]={0};\nint main()\n{\n    int n;\n    scanf(\"%d\",&amp;n);\n    long long a;\n    for(int i=1;i&lt;=n;i++)\n    {\n        scanf(\"%lld\",&amp;a);\n        int cnt=0;\n        while(a)\n        {\n            cnt++;\n            if(a%2==1)\n            {\n                b[cnt]++;\n            }\n            a=a/2;\n        }\n    }\n    long long sum=0;\n    for(int i=0;i&lt;=31;i++)\n    {\n        sum=sum+(1&lt;&lt;i)*(b[i+1])*(n-b[i+1]);  //b[i+1]\u4e3a1\u7684\u4e2a\u6570\uff0cn-b[i+1]\u4e3a0\u7684\u4e2a\u6570,1&lt;&lt;i\u4e3a2\u7684i\u6b21\u5e42\n    }\n    cout&lt;&lt;sum&lt;&lt;endl;\n    return 0;\n}\n</code></pre></p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/","title":"\u6c42\u7ec4\u5408\u6570\u7684\u65b9\u6cd5","text":""},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#1","title":"1.\u66b4\u529b","text":"<p>\u6839\u636e\u9636\u4e58\u516c\u5f0f\u5c55\u5f00\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u4e14\u5bb9\u6613\u70b8\u6389long long</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#2double","title":"2.\u501f\u7528double\u66b4\u529b\u6765\u6c42","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=1438&amp;pid=9</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Imagine you are attending your math lesson at school. Once again, you are bored because your teacher tells things that you already mastered years ago (this time he's explaining that (a+b)2=a2+2ab+b2). So you decide to waste your time with drawing modern art instead. </p> <p>Fortunately you have a piece of squared paper and you choose a rectangle of size n*m on the paper. Let's call this rectangle together with the lines it contains a grid. Starting at the lower left corner of the grid, you move your pencil to the upper right corner, taking care that it stays on the lines and moves only to the right or up. The result is shown on the left:  </p> <p>Really a masterpiece, isn't it? Repeating the procedure one more time, you arrive with the picture shown on the right. Now you wonder: how many different works of art can you produce?</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_2","title":"\u8f93\u5165","text":"<p>The input contains several testcases. Each is specified by two unsigned 32-bit integers n and m, denoting the size of the rectangle. As you can observe, the number of lines of the corresponding grid is one more in each dimension. Input is terminated by n=m=0.</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_3","title":"\u8f93\u51fa","text":"<p>For each test case output on a line the number of different art works that can be generated using the procedure described above. That is, how many paths are there on a grid where each step of the path consists of moving one unit to the right or one unit up? You may safely assume that this number fits into a 32-bit unsigned integer.</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5 4\n1 1\n0 0\n</code></pre>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>126\n2\n</code></pre> \u8f93\u5165a\u548cb\uff0c\u6c42C(b,a+b)</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint main()\n{\nregister ll n,k,a,b;\nregister ll sum,p;\nregister long double sum1=1.0;\nwhile(scanf(\"%lld%lld\",&amp;n,&amp;k)&amp;&amp;(n!=0||k!=0))\n{\nsum1=1.0;\na=n+k;\nb=n&lt;k?n:k;\nfor(int i=1;i&lt;=b;i++)\n{\nsum1=sum1*a*1.0/i;\na--;\n}\nsum1+=0.5;\nsum=sum1;\nprintf(\"%lld\\n\",sum);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#3","title":"3.\u9006\u5143\u6c42\u7ec4\u5408\u6570","text":"<p>http://icpc.upc.edu.cn/problem.php?id=12104</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_6","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>You are given positive integers N and M. How many sequences a of length N consisting of positive integers satisfy a1\u00d7a2\u00d7...\u00d7aN=M? Find the count modulo 109+7. Here, two sequences a' and a\" are considered different when there exists some i such that a'i\u2260a\"i.</p> <p>Constraints \u00b7All values in input are integers. \u00b71\u2264N\u2264105 \u00b71\u2264M\u2264109</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_7","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format: N M</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_8","title":"\u8f93\u51fa","text":"<p>Print the number of the sequences consisting of positive integers that satisfy the condition, modulo 109+7.</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_9","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>2 6</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_10","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>4</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_11","title":"\u63d0\u793a","text":"<p>Four sequences satisfy the condition: {a1,a2}={1,6},{2,3},{3,2} and {6,1}.</p>"},{"location":"csdn/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/#_12","title":"\u601d\u8def","text":"<p>\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u7136\u540e\u6bcf\u4e2a\u7d20\u6570\u56e0\u5b50\u4e2a\u6570\uff0c\u8bbe\u4e3ax\uff0c\u8f6c\u5316\u4e3a\u628ax\u4e2a\u76f8\u540c\u7684\u653e\u8fdbn\u4e2a\u4f4d\u7f6e\uff0c\u5f00\u59cb\u5199\u7684n^x,\u4f46\u662fwa,\u540e\u6765\u5199\u7684\u9694\u677f\u6cd5\u3002 C(n+x-1,n-1)\u3002 \u4e3a\u5565\u4e0d\u662fn^x\uff0c\u56e0\u4e3a\u5143\u7d20\u76f8\u540c\uff0c\u4e0d\u540c\u65b9\u6848\u53d6\u51b3\u4e8e\u6bcf\u4e2a\u76d2\u5b50\u591a\u5c11\u4e2a\u7403\u3002\u53c8\u9694\u677f\u6cd5\u4e0d\u80fd\u6709\u7a7a\u5143\u7d20\uff0c\u4f46\u9898\u76ee\u53ef\u4ee5\u3002\u6240\u4ee5\u6211\u4eec\u6dfb\u52a0\u4e09\u5757\u9694\u677f\uff0c\u7b54\u6848\u4e3a\u4e0a\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef unsigned long long ll;\nconst ll N=1e9+7;\nll w[505500]={0};\nll p(ll x,ll y)\n{\nll sum1=1;\nwhile(y)\n{\nif (y&amp;1)\nsum1=(sum1%N*x%N)%N;\ny&gt;&gt;=1;\nx=(x%N*x%N)%N;\n}\nreturn sum1%N;\n}\nll c1(ll x,ll y)\n{\nif(x&lt;y)\nswap(x,y);\nreturn (w[x]%N*p((w[x-y]%N*w[y]%N)%N,N-2)%N)%N;\n}\nint main()\n{\nll n,m;\nw[1]=1;\nfor(ll i=2;i&lt;=500500;i++)\nw[i]=(w[i-1]*i)%N;\ncin&gt;&gt;n&gt;&gt;m;\nif(n==1)\n{\ncout&lt;&lt;1&lt;&lt;endl;\nreturn 0;\n}\nll sum=1;\nfor(ll i=2;i*i&lt;=m+100;i++)\n{\nif(m%i!=0)\ncontinue;\nll js=0;\nwhile(m%i==0)\n{\nm=m/i;\njs++;\n}\nsum=(sum%N*c1(n-1,n+js-1)%N)%N;\n}\nif(m!=1)\nsum=(sum%N*n%N)%N;\ncout&lt;&lt;sum%N&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/","title":"\u6c42\u9006\u5e8f\u5bf9","text":""},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#1","title":"1.\u6811\u72b6\u6570\u7ec4\u76f4\u63a5\u6c42\u9006\u5e8f\u5bf9","text":"<p>\u91c7\u7528\u6811\u72b6\u6570\u7ec4\u6807\u8bb0\u6765\u6c42\u9006\u5e8f\u5bf9 <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll n,m;\nll a[100500]={0};\nll c[100500]={0};\nll maxn=10050,k,ans=0;\nll lowbit(ll x)\n{\nreturn x&amp;(-x);\n}\nll add(ll k,ll x)\n{\nfor(ll i=k;i&lt;=maxn;i+=lowbit(i))\nc[i]+=x;\n}\nll getsum(ll k)\n{\nll ans=0;\nfor(ll i=k;i&gt;=1;i-=lowbit(i))\nans+=c[i];\nreturn ans;\n}\nint main()\n{\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;k);\nadd(k,1);\nans+=i-getsum(k);\n}\nprintf(\"%d\\n\",ans);\n}\n</code></pre></p>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#2","title":"2.\u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=1422&amp;pid=3</p>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u201c\u88c5\u6ee1\u4e86\u9e45\u5375\u77f3\u7684\u74f6\u5b50\u662f\u6ee1\u7684\u5417\uff1f\u201d\u58a8\u8001\u5e08\u66fe\u7ecf\u8fd9\u6837\u95ee\u8fc7\u4ed6\u7684\u5b66\u751f\u3002\u201c\u4e0d\u662f\uff0c\u56e0\u4e3a\u8fd8\u53ef\u4ee5\u653e\u5165\u5c0f\u77f3\u5b50\u3001\u518d\u653e\u5165\u7ec6\u7802\u3001\u6700\u540e\u518d\u5012\u5165\u6c34\u3002\u201d\u5b66\u751f\u4eec\u56de\u7b54\u3002\u201c\u90a3\u4e48\u4ece\u4e2d\u53ef\u4ee5\u5f97\u5230\u4ec0\u4e48\u542f\u793a\u5462\uff1f\u201d\u58a8\u8001\u5e08\u53c8\u95ee\uff0c\u201c\u542f\u793a\u6211\u4eec\u65f6\u95f4\u603b\u662f\u53ef\u4ee5\u6324\u51fa\u6765\u7684\uff01\u201d\u4e00\u4e2a\u806a\u660e\u7684\u5b66\u751f\u62a2\u7b54\u3002\u201c\u4f60\u8bf4\u5f97\u5bf9\uff01\u201d\u58a8\u8001\u5e08\u5fae\u7b11\u9053\uff0c\u201c\u4f46\u6211\u8fd8\u8981\u544a\u8bc9\u4f60\u4eec\u53e6\u4e00\u4e2a\u91cd\u8981\u7ecf\u9a8c\uff0c\u90a3\u5c31\u662f\uff1a\u5982\u679c\u4f60\u4e0d\u5148\u5c06\u5927\u7684\u9e45\u5375\u77f3\u653e\u8fdb\u74f6\u5b50\u91cc\u53bb\uff0c\u4f60\u4e5f\u8bb8\u4ee5\u540e\u6c38\u8fdc\u6ca1\u673a\u4f1a\u518d\u628a\u5b83\u4eec\u653e\u8fdb\u53bb\u4e86\u3002\u201d</p> <p>\u4f46\u8fd9\u4e16\u4e0a\u7684\u5f88\u591a\u4eba\uff0c\u505a\u4e8b\u5374\u7ecf\u5e38\u5206\u4e0d\u6e05\u4e8b\u60c5\u7684\u8f7b\u91cd\u7f13\u6025\u3002\u6211\u4eec\u53ef\u7231\u7684\u5178\u72f1\u957f\u5927\u4eba\u5c31\u72af\u4e86\u8fd9\u4e2a\u9519\u8bef\uff0c\u5f53\u4ed6\u770b\u5230\u8eab\u9ad8\u53c2\u5dee\u4e0d\u9f50\u7684\u72f1\u8b66\u4eec\u6392\u6210\u4e00\u5217\u65f6\uff0c\u7709\u6bdb\u62e7\u6210\u4e86\u4e00\u4e2a\u7ed3\uff0c\u4ed6\u6700\u60f3\u77e5\u9053\u7684\u5c31\u662f\uff0c\u5230\u5e95\u6709\u591a\u5c11\u4e2a\u72f1\u8b66\u9006\u5e8f\u6392\u961f\u4e86\u3002\u8fd9\u53ef\u4ee5\u62bd\u8c61\u4e3a\u6c42\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u95ee\u9898\uff1a\u5373\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542bn\u4e2a\u975e\u8d1f\u6574\u6570\u7684\u6570\u7ec4A[1\uff0c\u2026\uff0cn]\uff0c\u5982\u679c\u6709i &lt; j\uff0c\u4e14A[ i ]&gt;A[ j ]\uff0c\u5219\u79f0(A[ i] \uff0cA[ j] )\u4e3a\u6570\u7ec4A\u4e2d\u7684\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002</p> <p>\u4f8b\u5982\uff0c\u6570\u7ec4\uff083\uff0c1\uff0c4\uff0c5\uff0c2\uff09\u7684\u9006\u5e8f\u5bf9\u6709(3\uff0c1)\uff0c(3\uff0c2)\uff0c(4\uff0c2)\uff0c(5\uff0c2)\u51714\u4e2a\u3002</p>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#_2","title":"\u8f93\u5165","text":"<p>\u5305\u62ec\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570n(1\u2264n\u22641000)\uff0c\u8868\u793a\u72f1\u8b66\u4eba\u6570\u3002\u7b2c\u4e8c\u884c\u5305\u542bn\u4e2a\u6574\u6570\uff0c\u7528\u7a7a\u683c\u5206\u9694\uff0c\u5373\u6bcf\u4e2a\u72f1\u8b66\u7684\u8eab\u9ad8\uff0c\u72f1\u8b66\u8eab\u9ad8\u5747\u5728int\u8303\u56f4\u5185\u3002</p>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#_3","title":"\u8f93\u51fa","text":"<p>\u5305\u62ec\u4e00\u884c\uff0c\u8fd9\u4e00\u884c\u53ea\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u5373\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002</p>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5\n3 1 4 5 2\n</code></pre>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p><pre><code>4\n</code></pre> \u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u79bb\u6563\u5316\uff0c\u79bb\u6563\u5316\u662f\u5728\u4e0d\u6539\u53d8\u6570\u636e\u76f8\u5bf9\u5927\u5c0f\u7684\u6761\u4ef6\u4e0b\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u76f8\u5e94\u7684\u7f29\u5c0f\u3002\u4f8b\u5982\uff1a\u539f\u6570\u636e\uff1a1,999,100000,15\uff1b\u5904\u7406\u540e\uff1a1,3,4,2\uff1b \u8fd9\u6837\u7ecf\u8fc7\u79bb\u6563\u5316\u5904\u7406\u540e\u80fd\u591f\u51cf\u5c11\u6807\u8bb0\u6570\u7ec4\u7684\u8303\u56f4\uff0c\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll n,m;\nstruct node\n{\nll x;\nll pos;\n};\nnode a[100500]={0};\nll b[100500]={0};\nll c[100500]={0};\nll maxn=100005,k,ans=0;\nll lowbit(ll x)\n{\nreturn x&amp;(-x);\n}\nll add(ll k,ll x)\n{\nfor(ll i=k;i&lt;=maxn;i+=lowbit(i))\nc[i]+=x;\n}\nll getsum(ll k)\n{\nll ans=0;\nfor(ll i=k;i&gt;=1;i-=lowbit(i))\nans+=c[i];\nreturn ans;\n}\nbool cmp(node a,node b)\n{\nreturn a.x&lt;b.x;\n}\nint main()\n{\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;a[i].x);\na[i].pos=i;\n}\nsort(a+1,a+n+1,cmp);\nll cnt=1;\nfor(ll i=1;i&lt;=n;i++)\n{\nif(i!=1&amp;&amp;a[i].x!=a[i-1].x)\ncnt++;\nb[a[i].pos]=cnt;\n}\nfor(ll i=1;i&lt;=n;i++)\n{\nadd(b[i],1);\nans+=i-getsum(b[i]);\n}\nprintf(\"%lld\\n\",ans);\n}\n</code></pre>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#3","title":"3.\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2436&amp;pid=0</p>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#_6","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u67d0\u6b63\u6559\u6388\u7ea7\u7279\u7ea7\u6559\u5e08\u83b7\u5f97\u4e86\u4e00\u6bb5\u53e4\u8001\u7684\u6587\u5b57\uff0c\u5168\u90e8\u7531 26 \u4e2a\u5927\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002\u4ed6\u4ea7\u751f\u4e86\u4e00\u4e2a\u75af\u72c2\u7684\u60f3\u6cd5\uff0c\u5373\u60f3\u628a\u8fd9\u6bb5\u6587\u5b57\u4e2d\u6240\u6709\u5b57\u6bcd\u6309 A \u5230 Z \u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u5373\u6240\u6709 A \u653e\u5728\u5f00\u5934\uff0c\u7136\u540e\u8ddf\u7740\u6240\u6709 B\uff0c\u518d\u662f\u6240\u6709 C\uff0c\u6700\u540e\u662f\u6240\u6709 Z\u3002\u6bd4\u5982\u539f \u5b57\u7b26\u4e32\u4e3a\u201cHELLOWORLD\u201d\uff0c\u6392\u5e8f\u540e\u5e94\u53d8\u4e3a\u201cDEHLLLOORW\u201d\u3002\u4f46\u662f\u7279\u6559\u6bd5\u7adf\u9886\u7740\u56fd\u52a1\u9662\u7684\u7279\u6b8a\u6d25\u8d34\uff0c\u4e8e\u662f\u4ed6\u8fd8\u6709\u4e00\u4e2a\u8981\u6c42\uff0c\u5373\u6392\u5e8f\u65f6\u6bcf\u6b21\u53ea\u80fd\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u5b57\u6bcd\u3002\u73b0\u5728\u4ed6\u60f3\u77e5\u9053\u6700\u5c11\u4ea4\u6362\u591a\u5c11\u6b21\u80fd\u5b8c\u6210\u6392\u5e8f\uff1f </p>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#_7","title":"\u8f93\u5165","text":"<p>\u4ec5\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u4ec5\u542b\u5927\u5199\u5b57\u6bcd\u7684\u957f\u5ea6\u4e3a L \u7684\u5b57\u7b26\u4e32\uff08\u6ce8\u610f L \u4e0d\u8f93\u5165\uff09\u3002 </p>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#_8","title":"\u8f93\u51fa","text":"<p>\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\u8868\u793a\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u3002</p>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#_9","title":"\u6837\u4f8b\u8f93\u5165","text":"<p>\u3010\u6837\u4f8b1\u3011 LSDSL \u3010\u6837\u4f8b2\u3011 HELLOWORLD</p>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#_10","title":"\u6837\u4f8b\u8f93\u51fa","text":"<p>\u3010\u6837\u4f8b1\u3011 4 \u3010\u6837\u4f8b2\u3011 16</p>"},{"location":"csdn/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/#_11","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e50%\u7684\u6570\u636e\uff0c1\u2264L\u22642000\uff1b \u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c1\u2264L\u22642\u00d710^6</p> <p>\u501f\u7528\u5f52\u5e76\u6392\u5e8f\u6765\u6c42\u9006\u5e8f\u5bf9</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nchar a1[2005000]=\"\";\nint a[2005000]= {0};\nint b[2005000]= {0};\nlong long int merge_sort(long long int l,long long int r)\n{\nif (l &gt;= r)\nreturn 0;\nlong long int mid = (l + r) &gt;&gt; 1, res = 0;\nres += merge_sort(l, mid);\nres += merge_sort(mid + 1, r);\nlong long int i = l, j = mid + 1, cnt = 0;\nwhile (i &lt;= mid &amp;&amp; j &lt;= r)\nif (a[i] &lt;= a[j])\nb[cnt++] = a[i++];\nelse\n{\nres += mid - i + 1;\nb[cnt++] = a[j++];\n}\nwhile (i &lt;= mid)\nb[cnt++] = a[i++];\nwhile (j &lt;= r)\nb[cnt++] = a[j++];\nfor (long long int i = l, j = 0; j &lt; cnt; ++i, ++j)\na[i] = b[j];\nreturn res;\n}\nint main()\n{\nscanf(\"%s\",a1);\nfor(long long int i=0; a1[i]; i++)\n{\na[i]=a1[i]-'a';\n}\nlong long int sum=merge_sort(0,strlen(a1)-1);\ncout&lt;&lt;sum&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/","title":"\u7b80\u4ecb\u6269\u5c55\u6b27\u51e0\u91cc\u5fb7\u5b9a\u7406","text":""},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_1","title":"\u6b27\u51e0\u91cc\u5fb7\u5b9a\u7406:","text":"<p>\u5bf9\u4e8e\u6574\u6570a,b\u6765\u8bf4\uff0cgcd(a, b)==gcd(b, a%b)==d(a\u4e0eb\u7684\u6700\u5927\u516c\u7ea6\u6570)\uff0c\u53c8\u79f0\u4e3a\u8f97\u8f6c\u76f8\u9664\u6cd5</p> <p>\u8bc1\u660e\uff1a</p> <p>\u56e0\u4e3aa\u662fd\u7684\u500d\u6570\uff0cb\u662fd\u7684\u500d\u6570\uff1b\u6240\u4ee5a%d=0\uff1b b%d=0\uff1b</p> <p>\u8bbek=a/b\uff1br=a%b\uff1b\u5219 a=k*b+r\uff1b </p> <p>\u7531\u4e0a\u5f97\u51fa\uff1ar=a-k*b\uff1b</p> <p>\u56e0\u4e3aa\u548cb\u90fd\u662fd\u7684\u500d\u6570\uff0c\u6240\u4ee5(a-k*b)\u4e5f\u662fd\u7684\u500d\u6570\uff0c\u6240\u4ee5r\u4e5f\u662fd\u7684\u500d\u6570\uff1b</p> <p>\u6240\u4ee5gcd(a, b)==gcd(b, a%b)==d</p> <p>\u800c\u4e3a\u4ec0\u4e48\u8981\u8bc1\u660egcd(a, b)==gcd(b, a%b)==d\u8fd9\u4e2a\u5f0f\u5b50\u6210\u7acb\u5462\uff1f</p> <p>\u5176\u5b9e\u8bc1\u660egcd(a, b)==gcd(a, a%b)==d\u8fd9\u4e2a\u5f0f\u5b50\u6210\u7acb\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3aa\u4e5f\u662fd\u7684\u500d\u6570\uff0c\u4f46\u662f\u5728\u8fdb\u884c\u9012\u5f52\u4e4b\u524d\u8981\u8fdb\u884c\u4e00\u6b65\u64cd\u4f5c\uff0c\u5c31\u662f\u5224\u65ada\u4e0eb\u7684\u5927\u5c0f\uff0c\u5982\u679ca&lt;b,\u5c31\u6ca1\u529e\u6cd5\u8fdb\u884c\u9012\u5f52\u6216\u8005\u5faa\u73af\u6c42\u6700\u5927\u516c\u7ea6\u6570\uff0c\u90a3\u4e48\u5982\u679cab,\u90a3\u4e48a%b&lt;a\u5fc5\u5b9a\u6210\u7acb\uff1b <p>\u4e8b\u5b9e\u53d1\u73b0\u8bc1\u660egcd(a, b)==gcd(b, a%b)==d\u8fd9\u4e2a\u5f0f\u5b50\u4f1a\u7f29\u5c0f\u5904\u7406\u7684\u6570\u636e\u7684\u8303\u56f4\uff1b</p> <p>\u6b27\u51e0\u91cc\u5fb7\u5e94\u7528\uff1a</p> <p>\u7528\u6765\u6c42a\uff0cb\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a</p> <pre><code>int gcd(int a,int b)\n{\nif(b==0)\nreturn a;\nelse\nreturn gcd(b,a%b);\n}\n</code></pre>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_2","title":"\u6269\u5c55\u6b27\u51e0\u91cc\u5fb7\u5b9a\u5f8b\uff1a","text":"<p>\u5bf9\u4e8e\u4e0d\u5b8c\u5168\u4e3a0\u7684\u975e\u8d1f\u6574\u6570a\uff0cb;gcd(a, b)\u8868\u793aa, b\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u5fc5\u5b9a\u5b58\u5728\u6574\u6570\u5bf9x\uff0cy\uff0c\u6ee1\u8db3a*x+b*y==gcd(a, b);</p> <p>\u8bc1\u660e\uff1a</p> <p>a*x1+b*y1=gcd(a, b); </p> <p>b*x2+(a%b)*y2=gcd(b, a%b);</p> <p>\u56e0\u4e3a\u7531\u6b27\u51e0\u91cc\u5fb7\u5b9a\u7406\u77e5\uff1agcd(a, b)==gcd(b, a%b)</p> <p>\u6240\u4ee5a*x1+b*y1=b*x2+(a%b)*y2;   \u3000\u3000\u56e0\u4e3ar=a%b,   r =a-k*b\u6240\u4ee5==&gt;</p> <p>a*x1+b*y1=b*x2+(a-k*b)*y2;       \u3000\u3000\u56e0\u4e3ak=a/b;\u6240\u4ee5\u3000==&gt;</p> <p>a*x1+b*y1=b*x2+(a-(a/b)*b)*y2;   \u3000\u3000\u5c55\u5f00\u5f97\u5230\u3000\u3000==&gt;\u3000\u3000\u3000\u3000</p> <p>a*x1+b*y1=b*x2+a*y2-b*(a/b)*y2;\u3000\u3000\u8f6c\u6362\u5f97\u5230      ==&gt;</p> <p>a*x1+b*y1=a*y2+b*(x2-(a/b)*y2);</p> <p>\u89c2\u5bdf\u4e0a\u5f0f\u53ef\u77e5 x1=y2, y1=x2-a/b*y2;</p> <p>\u7531\u6b64\u53ef\u77e5x1\uff0cy1\u662f\u7531x2\uff0cy2\u5f97\u51fa\u6765\u7684\uff0c\u7531\u6b64\u7c7b\u63a8x2\uff0cy2\u662f\u7531x3\uff0cy3\u5f97\u51fa\u6765\u7684\uff0c</p> <p>\u90a3\u4ec0\u4e48\u65f6\u5019\u662f\u7ec8\u6b62\u5462\uff1f\u4e5f\u5c31\u662f\u9012\u5f52gcd(a, b)\u4e2db=0\u65f6\uff1b\u4e5f\u5c31\u662f\u8bf4\u6b64\u65f6a\u7684\u503c\u5c31\u662f\u8981\u6c42\u5f97\u6700\u5927\u516c\u7ea6\u6570</p> <p>\u5373gcd(a, 0)\u6b64\u65f6\u7531\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u5b9a\u5f8ba*x+b*y==gcd(a, b)\u77e5 a*x+b*y=a;</p> <p>\u89e3\u51fax=1, y=0;</p> <p>\u6b64\u65f6\u5c31\u662f\u9012\u5f52\u7ec8\u6b62\u7684\u5730\u65b9\uff1a</p> <p>\u6269\u5c55\u6b27\u51e0\u91cc\u5fb7\u5e94\u7528\uff1a</p> <p>\u5c31\u6211\u76ee\u524d\u6240\u77e5\u7684\u5c31\u662f\uff1a\u6c42\u89e3\u4e0d\u5b9a\u65b9\u7a0b\uff1b\u5982a*x+b*y=c; \u5df2\u77e5a, b, c\u7684\u503c\u6c42x\u548cy\u7684\u503c</p> <p>\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u5982\u4f55\u5c06\u6269\u5c55\u6b27\u51e0\u91cc\u5fb7\u5b9a\u5f8b\u5e94\u7528\u5728\u6c42\u89e3\u4e0d\u5b9a\u65b9\u7a0b\u5462\uff1f</p> <p>\u53ef\u4ee5\u8fd9\u6837\u8f6c\u5316   a*x+b*y=gcd(a, b)*c/gcd(a, b);</p> <p>\u6700\u540e\u8f6c\u5316\u4e3a a*x/(c/gcd(a, b))+b*y/(c/gcd(a, b))=gcd(a, b); \u6700\u540e\u6c42\u51fa\u7684\u89e3x0\uff0cy0\u4e58\u4e0ac/gcd(a, b)\u5c31\u662f\u6700\u7ec8\u7684\u7ed3\u679c\u4e86</p> <p>x1=x0*c/gcd(a, b);</p> <p>y1=y0*c/gcd(a, b);</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a  \u4e3e\u4f8b\u8bf4\u660e\uff1ahttp://codeforces.com/problemset/problem/7/C</p> <p><pre><code>#include&lt;stdio.h&gt;\nlong long exgcd(long long a, long long b, long long &amp;x, long long &amp;y);\nint main()\n{\nlong long a, b, c, ans, x, y;\n\nwhile(scanf(\"%lld%lld%lld\", &amp;a, &amp;b, &amp;c)!=EOF)\n{\nans=exgcd(a, b, x, y);\nif(c%ans==0)\n{\nx=-x*c/ans;\ny=-y*c/ans;\nprintf(\"%lld %lld\\n\", x, y);\n}\nelse\nprintf(\"-1\\n\");\n}\nreturn 0;\n}\nlong long exgcd(long long a, long long b, long long &amp;x, long long &amp;y)\n{\nif(b==0)\n{\nx=1;\ny=0;\nreturn a;\n}\nlong long r=exgcd(b, a%b, x, y), t;\nt=x;\nx=y;\ny=t-(a/b)*y;\nreturn r;\n}\n</code></pre> \u4f46\u8fd9\u53ea\u662f\u6c42\u5f97\u4e86\u4e00\u7ec4\u89e3x1\uff0cy1</p> <p>\u5bf9\u4e8ex,y\u5bf9\u5e94\u7684\u89e3\u96c6\u662f\uff1a</p> <p>x=x1+b/gcd(a, b)*t;</p> <p>y=y1-b/gcd(a, b)*t;</p> <p>\u8bc1\u660e\uff1a</p> <p>a*x+b*y=d,d=gcd(a,b).</p> <p>\u63a8\u5bfc\uff1aa*x1+b*y1=a*x2+b*y2    </p> <p>----&gt;a*(x1-x2)=b*(y2-y1)      </p> <p>----&gt;a/d*(x1-x2)=b/d*(y2-y1)  </p> <p>----&gt;a/d,b/d\u4e92\u8d28 </p> <p>----&gt;x1-x2=k*(b/d),y2-y1=k*(a/d)</p> <p>-----&gt;x=x0+b/d*k,y=y0-a/d*k,k\u4e3a\u4efb\u610f\u6574\u6570\u3002</p> <p>\u53c2\u8003\u4e8e\uff1a</p> <p>\u6b27\u51e0\u91cc\u5fb7\u548c\u6269\u5c55\u6b27\u51e0\u91cc\u5fb7\u8be6\u89e3 \u4ee5\u53ca\u4f8b\u9898CodeForces 7C</p> <p>\u62d3\u5c55GCD\uff0c\u5982\u4f55\u7531\u4e00\u7ec4\u89e3\u63a8\u51fa\u591a\u7ec4\u89e3\uff1f</p> <p>----------------------------\u5206\u5272\u7ebf----------------------------------------------</p> <p>http://icpc.upc.edu.cn/problem.php?cid=1437&amp;pid=5</p>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u4e24\u53ea\u9752\u86d9\u5728\u7f51\u4e0a\u76f8\u8bc6\u4e86\uff0c\u5b83\u4eec\u804a\u5f97\u5f88\u5f00\u5fc3\uff0c\u4e8e\u662f\u89c9\u5f97\u5f88\u6709\u5fc5\u8981\u89c1\u4e00\u9762\u3002\u5b83\u4eec\u5f88\u9ad8\u5174\u5730\u53d1\u73b0\u5b83\u4eec\u4f4f\u5728\u540c\u4e00\u6761\u7eac\u5ea6\u7ebf\u4e0a\uff0c\u4e8e\u662f\u5b83\u4eec\u7ea6\u5b9a\u5404\u81ea\u671d\u897f\u8df3\uff0c\u76f4\u5230\u78b0\u9762\u4e3a\u6b62\u3002\u53ef\u662f\u5b83\u4eec\u51fa\u53d1\u4e4b\u524d\u5fd8\u8bb0\u4e86\u4e00\u4ef6\u5f88\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u65e2\u6ca1\u6709\u95ee\u6e05\u695a\u5bf9\u65b9\u7684\u7279\u5f81\uff0c\u4e5f\u6ca1\u6709\u7ea6\u5b9a\u89c1\u9762\u7684\u5177\u4f53\u4f4d\u7f6e\u3002\u4e0d\u8fc7\u9752\u86d9\u4eec\u90fd\u662f\u5f88\u4e50\u89c2\u7684\uff0c\u5b83\u4eec\u89c9\u5f97\u53ea\u8981\u4e00\u76f4\u671d\u7740\u67d0\u4e2a\u65b9\u5411\u8df3\u4e0b\u53bb\uff0c\u603b\u80fd\u78b0\u5230\u5bf9\u65b9\u7684\u3002\u4f46\u662f\u9664\u975e\u8fd9\u4e24\u53ea\u9752\u86d9\u5728\u540c\u4e00\u65f6\u95f4\u8df3\u5230\u540c\u4e00\u70b9\u4e0a\uff0c\u4e0d\u7136\u662f\u6c38\u8fdc\u90fd\u4e0d\u53ef\u80fd\u78b0\u9762\u7684\u3002\u4e3a\u4e86\u5e2e\u52a9\u8fd9\u4e24\u53ea\u4e50\u89c2\u7684\u9752\u86d9\uff0c\u4f60\u88ab\u8981\u6c42\u5199\u4e00\u4e2a\u7a0b\u5e8f\u6765\u5224\u65ad\u8fd9\u4e24\u53ea\u9752\u86d9\u662f\u5426\u80fd\u591f\u78b0\u9762\uff0c\u4f1a\u5728\u4ec0\u4e48\u65f6\u5019\u78b0\u9762\u3002  \u6211\u4eec\u628a\u8fd9\u4e24\u53ea\u9752\u86d9\u5206\u522b\u53eb\u505a\u9752\u86d9A\u548c\u9752\u86d9B\uff0c\u5e76\u4e14\u89c4\u5b9a\u7eac\u5ea6\u7ebf\u4e0a\u4e1c\u7ecf0\u5ea6\u5904\u4e3a\u539f\u70b9\uff0c\u7531\u4e1c\u5f80\u897f\u4e3a\u6b63\u65b9\u5411\uff0c\u5355\u4f4d\u957f\u5ea61\u7c73\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u6761\u9996\u5c3e\u76f8\u63a5\u7684\u6570\u8f74\u3002\u8bbe\u9752\u86d9A\u7684\u51fa\u53d1\u70b9\u5750\u6807\u662fx\uff0c\u9752\u86d9B\u7684\u51fa\u53d1\u70b9\u5750\u6807\u662fy\u3002\u9752\u86d9A\u4e00\u6b21\u80fd\u8df3m\u7c73\uff0c\u9752\u86d9B\u4e00\u6b21\u80fd\u8df3n\u7c73\uff0c\u4e24\u53ea\u9752\u86d9\u8df3\u4e00\u6b21\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u76f8\u540c\u3002\u7eac\u5ea6\u7ebf\u603b\u957fL\u7c73\u3002\u73b0\u5728\u8981\u4f60\u6c42\u51fa\u5b83\u4eec\u8df3\u4e86\u51e0\u6b21\u4ee5\u540e\u624d\u4f1a\u78b0\u9762\u3002 </p>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_4","title":"\u8f93\u5165","text":"<p>\u8f93\u5165\u53ea\u5305\u62ec\u4e00\u884c5\u4e2a\u6574\u6570x\uff0cy\uff0cm\uff0cn\uff0cL\uff0c\u5176\u4e2dx\u2260y &lt; 2000000000\uff0c0 &lt; m\u3001n &lt; 2000000000\uff0c0 &lt; L &lt; 2100000000\u3002</p>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_5","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fa\u78b0\u9762\u6240\u9700\u8981\u7684\u8df3\u8dc3\u6b21\u6570\uff0c\u5982\u679c\u6c38\u8fdc\u4e0d\u53ef\u80fd\u78b0\u9762\u5219\u8f93\u51fa\u4e00\u884c\"Impossible\"</p>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1 2 3 4 5\n</code></pre>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>4\n</code></pre>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_8","title":"\u89e3\u6790","text":"<p>\u8bbe\u4e24\u53ea\u9752\u86d9\u8df3\u4e86t\u6b65\uff0cA\u7684\u5750\u6807\u4e3ax+mt,B\u7684\u5750\u6807\u4e3ay+nt\uff0c\u4ed6\u4eec\u76f8\u9047\u7684\u65f6\u5019\u6ee1\u8db3x+mt-(y+nt) = pL(p\u8868\u793a\u4e24\u9752\u86d9\u8d70\u8fc7\u7684\u8def\u7a0b\u76f8\u5deep\u5708) \u79fb\u9879\u540e\uff1a(n-m)t+Lp=x-y <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll N=1e9+7;\nll exgcd(ll a, ll b, ll &amp;x, ll &amp;y)\n{\nif(b==0)\n{\nx=1;\ny=0;\nreturn a;\n}\nll d = exgcd(b, a%b, x, y);\nll t = x;\nx = y;\ny = t-(a/b)*y;\nreturn d;\n}\nint main()\n{\nll x,y,m,n,l;\ncin&gt;&gt;x&gt;&gt;y&gt;&gt;m&gt;&gt;n&gt;&gt;l;\nif(m==n)\n{\ncout&lt;&lt;\"Impossible\"&lt;&lt;endl;\nreturn 0;\n}\nll x1=0,y1=0,a=n-m,b=l,c=x-y;\nll d=exgcd(a,b,x1,y1);\nif(c%d!=0)\n{\ncout&lt;&lt;\"Impossible\"&lt;&lt;endl;\nreturn 0;\n}\nelse\n{\nx1=x1*c/d;\nx1=(x1%(b/d)+(b/d))%(b/d);\ncout&lt;&lt;x1&lt;&lt;endl;\n}\nreturn 0;\n}\n</code></pre> http://icpc.upc.edu.cn/problem.php?cid=2592&amp;pid=2</p>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_9","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>DIDIDI often takes a shower in school public bathroom. DIDIDI must take a shower in B days after the previous one, or he will die. For routine maintenance, bathroom closes one day per A days. But DIDIDI is lazy, he hopes he can take a shower as less as possible. So he wants to find a stable period for arranging dates of shower. For example, DIDIDI should take a shower every 3-day, and bathroom closes every Sunday. In order to minimize the shower times, in every two-week, DIDIDI can choose Monday, Thursday, Saturday (to avoid Sunday), Tuesday, Friday to take shower. In this case, he need to take a shower 2.5 times per week. Your assignment is to calculate how many times per A days DIDIDI need to take a shower.</p>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_10","title":"\u8f93\u5165","text":"<p>The first line of input contains a positive integer T telling you there are T test cases followed. Each test case will contain two integer, A, B.</p>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_11","title":"\u8f93\u51fa","text":"<p>For each test case, print a line \u201cCase #x: y\u201d, where x is the case number (starting from 1) and y is times per A days of taking a shower. (if y is not a integer, please print fraction like \u201ca/b\u201d, gcd(a,b) = 1)</p>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_12","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2\n7 3\n7 4\n</code></pre>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_13","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>Case #1: 5/2\nCase #2: 2\n</code></pre>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_14","title":"\u63d0\u793a","text":"<p>Tips:1\u2264T\u22642000,2\u2264A,B\u22641e8 Case 1: if bathroom closes in 7th day every 7 days, he can take a shower in 1st,4th, 6th, 2nd,5th,1st, 4th, 6th, 2nd,5th \u2026\u2026 every period contains five shower times and two 7-day, so answer is 5/2. Csse 2: if bathroom closes in 7th day every 7 days, he can take a shower in 3rd,6th, 3rd, 6th \u2026\u2026every period contains two shower times and a 7-day, so answer is 2.</p>"},{"location":"csdn/%E7%AE%80%E4%BB%8B%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E5%AE%9A%E7%90%86/#_15","title":"\u89e3\u51b3","text":"<p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff1aa*x+b *y=gcd(a,b)</p> <p>\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0cgcd==1\u7684\u65f6\u5019\u624d\u4f1a\u7528\u5230\u8fd9\u4e2a\u6765\u6c42x,y\u3002 \u4f46\u662f\u5f97\u51fa\u7684\u53ea\u6709\u5176\u4e2d\u4e00\u4e2a(x,y)\uff0c\u5176\u4e2d\u4e00\u4e2a\u4e3a\u8d1f\u6570\uff0c\u800c\u4e14\u9898\u76ee\u4e2d\u5fc5\u987b b*y - a*x == 1.\u516c\u5f0f\u5f97\u51fa\u6765\u7684\u53ef\u80fd\u662f -1.</p> <p>\u5f97\u4e0d\u51fa\u7b54\u6848\uff0c\u4e66\u4e2d\u5199\u5230\u6709\u591a\u7ec4\u89e3\uff0c\u89e3\u7b49\u4e8e x+ka' , y-kb' (a' = a / gcd(a,b) , b' = b / gcd(a,b) \uff0ck\u4e3a\u6574\u6570).</p> <p>\u4f46\u662f\uff0c \u53ea\u6709a&gt;0\u624d\u4e0d\u7b26\u5408\u60c5\u51b5,a\u53ea\u80fd\u6bcf\u6b21\u51cfb\u3002 <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll N=1e9+7;\nll gcd(ll a,ll b)\n{\nif(b==0)\nreturn a;\nelse\nreturn gcd(b,a%b);\n}\nll exgcd(ll a, ll b, ll &amp;x, ll &amp;y)\n{\nif(b==0)\n{\nx=1;\ny=0;\nreturn a;\n}\nll d = exgcd(b, a%b, x, y);\nll t = x;\nx = y;\ny = t-(a/b)*y;\nreturn d;\n}\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nfor(int t1=1;t1&lt;=t;t1++)\n{\nll a,b;\nscanf(\"%lld%lld\",&amp;a,&amp;b);\nll g=gcd(a,b);\nif(g==1)\n{\nll x=0,y=0;\nll d=exgcd(a,b,x,y);\nif(abs(a*x)-abs(b*y)&lt;0)\n{\nx=abs(x);\ny=abs(y);\nif(x==1)\ncout&lt;&lt;\"Case #\"&lt;&lt;t1&lt;&lt;\": \"&lt;&lt;y&lt;&lt;endl;\nelse\ncout&lt;&lt;\"Case #\"&lt;&lt;t1&lt;&lt;\": \"&lt;&lt;y&lt;&lt;\"/\"&lt;&lt;x&lt;&lt;endl;\n}\nelse\n{\nwhile(abs(a*x)-abs(b*y)&gt;=0)\n{\nx=x-b/d;\ny=y+a/d;\n}\nx=abs(x);\ny=abs(y);\nif(x==1)\ncout&lt;&lt;\"Case #\"&lt;&lt;t1&lt;&lt;\": \"&lt;&lt;y&lt;&lt;endl;\nelse\ncout&lt;&lt;\"Case #\"&lt;&lt;t1&lt;&lt;\": \"&lt;&lt;y&lt;&lt;\"/\"&lt;&lt;x&lt;&lt;endl;\n}\n}\nelse\n{\nif(b==g)\n{\ncout&lt;&lt;\"Case #\"&lt;&lt;t1&lt;&lt;\": \"&lt;&lt;a/g&lt;&lt;endl;\n}\nelse\n{\ncout&lt;&lt;\"Case #\"&lt;&lt;t1&lt;&lt;\": \"&lt;&lt;a/g&lt;&lt;\"/\"&lt;&lt;b/g&lt;&lt;endl;\n}\n}\n}\nreturn 0;\n}\n</code></pre></p>"},{"location":"csdn/%E9%93%BE%E8%A1%A8/","title":"\u94fe\u8868","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int maxn=1e5+5;\nclass List; //\u524d\u89c6\u5b9a\u4e49,\u5426\u5219\u53cb\u5143\u65e0\u6cd5\u5b9a\u4e49\nclass LinkNode\n{\nfriend  List; //\u94fe\u8868\u7ed3\u70b9\u7c7b\u7684\u5b9a\u4e49\nprivate:\nLinkNode *link;\nint data;\npublic:\nLinkNode(const int &amp; item, LinkNode *ptr = NULL)\n{\ndata=item;\nlink=ptr;\n}\nLinkNode (LinkNode *ptr = NULL)\n{\nlink=ptr;\n}\n~LinkNode() { };\n};\nclass List\n{\n//\u5355\u94fe\u8868\u7c7b\u7684\u5b9a\u4e49\nprivate:\nLinkNode *first; //\u6307\u5411\u9996\u7ed3\u70b9\u7684\u6307\u9488\npublic:\nList ()\n{\nfirst = new LinkNode ();\n}\n~List ()\n{\nMakeEmpty();   //\u6790\u6784\u51fd\u6570\n}\nvoid MakeEmpty ( );      //\u94fe\u8868\u7f6e\u7a7a\nint Remove (int i);     //\u9700\u8981\u8865\u5145\u7684\u6210\u5458\u51fd\u6570\nvoid input(int endTag);\nvoid output();      //\u9700\u8981\u8865\u5145\u7684\u6210\u5458\u51fd\u6570\n};\n\nvoid List:: MakeEmpty ( )\n{\nLinkNode *q;\nwhile ( first-&gt;link != NULL )\n{\nq = first-&gt;link;\nfirst-&gt;link = q-&gt;link;\ndelete q;\n}\n};\nvoid List :: input (int endTag)\n{\nLinkNode  *newnode,*last;\nlast=new LinkNode (0);\nfirst-&gt;data=0;\nint val;\ncin&gt;&gt;val;\nwhile(val!=endTag)\n{\nnewnode=new LinkNode (val);\nlast-&gt;link=newnode;\nlast=newnode;\nif(first-&gt;data==0)\n{\nfirst-&gt;data=-1;\nfirst-&gt;link=newnode;\n}\ncin&gt;&gt;val;\n}\n}\nint List :: Remove(int index)\n{\ncout&lt;&lt;\"remove\"&lt;&lt;endl;\n//cout&lt;&lt;first-&gt;link&lt;&lt;endl;\n//if(first==NULL)\n//return 0;\nLinkNode  *q=first,*last;\nint cnt=0;\nwhile(q-&gt;link!=NULL&amp;&amp;cnt&lt;index)\n{\nlast=q;\nq=q-&gt;link;\ncnt=cnt+1;\n}\nif(q-&gt;link==NULL&amp;&amp;cnt!=index)\n{\ncout&lt;&lt;\"Error!!!\"&lt;&lt;endl;\nreturn -1;\n}\nlast-&gt;link=q-&gt;link;\nreturn 0;\n\n}\nvoid List :: output()\n{\n//cout&lt;&lt;first-&gt;link&lt;&lt;endl;\nLinkNode  *q=first,*last;\n//cout&lt;&lt;\"\u7b54\u6848\u662f\"&lt;&lt;endl;\n// cout&lt;&lt;first-&gt;data&lt;&lt;\" \";\nwhile(q-&gt;link!=NULL)\n{\nq = q-&gt;link;\ncout&lt;&lt;q-&gt;data&lt;&lt;\" \";\n}\ncout&lt;&lt;endl;\n}\nint main()\n{\nList l;\nl.input(0); //0\u4e3a\u8f93\u5165\u7684\u7ed3\u675f\u6570\u5b57\nl.output ();\nint index;\ncin&gt;&gt;index; //\u8981\u5220\u9664\u7684\u5143\u7d20\u7684\u4e0b\u6807\uff0c\u4e0b\u6807\u4ece0 \u5f00\u59cb\nl.Remove(index);\nl.output (); //\u5220\u9664\u540e\u8f93\u51fa\nl.MakeEmpty();\nreturn 0;\n\n}\n</code></pre>"},{"location":"icpc/","title":"Index","text":"<p>ICPC\u6a21\u677f\u5e93</p>"},{"location":"icpc/_coverpage/","title":"Tim-wcx","text":""},{"location":"icpc/_coverpage/#_1","title":"\u4e2a\u4eba\u6587\u6863\u7f51\u7ad9","text":"<p>GitHub Get Started</p>"},{"location":"icpc/_sidebar/","title":"sidebar","text":"<ul> <li>\u4e0a\u4e00\u7ea7</li> <li>ICPC\u6a21\u677f</li> <li>\u4e2a\u4eba\u6a21\u677f</li> <li>kuangbin\u6a21\u677f</li> </ul>"},{"location":"icpc/kuangbin%E6%A8%A1%E6%9D%BF/","title":"kuangbin\u6a21\u677f","text":"This browser does not support PDFs. Please download the PDF to view it: Download PDF"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/","title":"\u4e2a\u4eba\u6a21\u677f","text":""},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_1","title":"\u6742\u9879","text":""},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#o2","title":"\u5feb\u8bfb&amp;O2\u4f18\u5316","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#define inf1 0x3f3f3f3f\n#define inf2 0x3f3f3f3f3f3f3f3f\nconst double Pi = acos(-1);\nstd::ios::sync_with_stdio(false);\nstd::cin.tie(0);\ncout&lt;&lt;fixed&lt;&lt;setprecision(20)&lt;&lt;ans&lt;&lt;endl;\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#read","title":"read\u51fd\u6570\u5feb\u8bfb","text":"<pre><code>inline int read()\n{\nint z = 0, flag = 1;\nchar ch = getchar();\nwhile (ch &lt; '0' || ch &gt; '9')\n{\nif (ch == '-')\nflag = -1;\nch = getchar();\n}\nwhile (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n{\nz = z * 10 + ch - '0';\nch = getchar();\n}\nreturn z * flag;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#__int128","title":"\u51fd\u6570\u5f0f__int128 \u8f93\u5165\u548c\u8f93\u51fa","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\n__int128 int128read()\n{\n__int128 x=0;\nint flag=1;\nstring a;\ncin&gt;&gt;a;\nfor(char c:a)\n{\nif(c=='-')\nflag=-1;\nelse\nx=x*10+c-'0';\n}\nreturn flag*x;\n}\nvoid int128print(__int128 x)\n{\nif(x&lt;0)\n{\nputchar('-');\nx=-x;\n}\nif(x&gt;9)\nint128print(x/10);\nputchar(x % 10 + '0');\n}\nint main()\n{\n__int128 a=int128read(),b=int128read();\nint128print(a+b);\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#__int128_1","title":"\u91cd\u8f7d\u5f0f __int128 \u8f93\u5165\u548c\u8f93\u51fa","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nistream &amp;operator&gt;&gt;(istream &amp;in, __int128 &amp;x)\n{\nx = 0;\nint flag = 1;\nstring a;\nin &gt;&gt; a;\nfor (char c : a)\n{\nif (c == '-')\nflag = -1;\nelse\nx = x * 10 + c - '0';\n}\nx = flag * x;\nreturn in;\n}\n\nostream &amp;operator&lt;&lt;(ostream &amp;out, __int128 &amp;x)\n{\nif (x &lt; 0)\n{\nout &lt;&lt; '-';\nx = -x;\n}\nstack&lt;int&gt; s;\nwhile (x)\n{\ns.push(x % 10);\nx /= 10;\n}\nwhile (!s.empty())\n{\nout &lt;&lt; s.top();\ns.pop();\n}\nreturn out;\n}\n\nint main()\n{\n__int128 a, b;\ncin &gt;&gt; a &gt;&gt; b;\ncout &lt;&lt; a &lt;&lt; ' ' &lt;&lt; b &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#java-acm","title":"java ACM \u57fa\u7840","text":"<pre><code>import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\npublic class Main {\npublic static void main(String args[])\n{\n//BigDecimal\u5927\u6570Double\u7c7b\n//\u8bfb\u5165\nScanner cin = new Scanner (new BufferedInputStream(System.in));\nint a; double b; BigInteger c; String d;\na = cin.nextInt(); b = cin.nextDouble(); c = cin.nextBigInteger(); d = cin.nextLine(); // \u6bcf\u79cd\u7c7b\u578b\u90fd\u6709\u76f8\u5e94\u7684\u8f93\u5165\u51fd\u6570.\nSystem.out.printf(\"\u8f93\u5165\u7684\u4e3a%d %f %s %s\\n\",a,b,c.toString(),d);\n\nc=cin.nextBigInteger(2); //\u5927\u6570\u4ee52\u8fdb\u5236\u8bfb\u5165\nString tmp=c.toString(2); ///\u5c06\u5927\u6570\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u8f93\u51fa\n\nSystem.out.print(1); // cout &lt;&lt; \u2026;\nSystem.out.println(1); // cout &lt;&lt; \u2026 &lt;&lt; endl;\nSystem.out.printf(\"%d\",1); // \u4e0eC\u4e2d\u7684printf\u7528\u6cd5\u7c7b\u4f3c.\n\n///\u5b57\u7b26\u4e32\u5904\u7406\nString st = \"abcdefg\";\nSystem.out.println(st.charAt(0)); // st.charAt(i)\u5c31\u76f8\u5f53\u4e8est[i].\nchar [] ch;\nch = st.toCharArray(); // \u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u6570\u7ec4.\nfor (int i = 0; i &lt; ch.length; i++) ch[i] += 1;\nSystem.out.println(ch); // \u8f93\u5165\u4e3a\u201cbcdefgh\u201d.\nif (st.startsWith(\"a\")) // \u5982\u679c\u5b57\u7b26\u4e32\u4ee5'0'\u5f00\u5934.\nst = st.substring(1); // \u5219\u4ece\u7b2c1\u4f4d\u5f00\u59cbcopy(\u5f00\u5934\u4e3a\u7b2c0\u4f4d).\n\n///\u8fdb\u5236\u8f6c\u5316\nint num=15,base=2;\nSystem.out.printf(\"15\u8f6c2\u8fdb\u5236\u4e3a%s\\n\",Integer.toString(num, base));\nst=\"1111\";\nSystem.out.printf(\"2\u8fdb\u5236\u76841111\u8f6c10\u8fdb\u5236\u4e3a%d\\n\",Integer.parseInt(st, base)); // \u628ast\u5f53\u505abase\u8fdb\u5236\uff0c\u8f6c\u621010\u8fdb\u5236\u7684int(parseInt\u6709\u4e24\u4e2a\u53c2\u6570,\u7b2c\u4e00\u4e2a\u4e3a\u8981\u8f6c\u7684\u5b57\u7b26\u4e32,\u7b2c\u4e8c\u4e2a\u4e3a\u8fdb\u5236). \nBigInteger m = new BigInteger(st, base); // st\u662f\u5b57\u7b26\u4e32\uff0cbase\u662fst\u7684\u8fdb\u5236.\n\n///\u6392\u5e8f\nint n=cin.nextInt();\nInteger[] arr=new Integer[n];\nfor(int i=0;i&lt;n;i++)\narr[i]=cin.nextInt();\n\nArrays.sort(arr,new Comparator&lt;Integer&gt;() {\n@Override\npublic int compare(Integer o1, Integer o2) {\nreturn o2-o1;            ///\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n}\n});\n\nfor(int i=0;i&lt;n;i++)\nSystem.out.printf(\"%d \",arr[i]);\nSystem.out.println();\n\n///\u6e05\u7a7a\nArrays.fill(arr,5);\nfor(int i=0;i&lt;n;i++)\nSystem.out.printf(\"%d \",arr[i]);\nSystem.out.println();\n\n///\u4e8c\u5206\u67e5\u627e\nSystem.out.println(Arrays.binarySearch(arr, 5));\n///\u5982\u679ckey\u5728\u6570\u7ec4\u4e2d\uff0c\u5219\u8fd4\u56de\u641c\u7d22\u503c\u7684\u7d22\u5f15\uff1b\u5426\u5219\u8fd4\u56de-1\u6216\u8005\u201d-\u201c(\u63d2\u5165\u70b9)\u3002\n///\u63d2\u5165\u70b9\u662f\u7d22\u5f15\u952e\u5c06\u8981\u63d2\u5165\u6570\u7ec4\u7684\u90a3\u4e00\u70b9\uff0c\u5373\u7b2c\u4e00\u4e2a\u5927\u4e8e\u8be5\u952e\u7684\u5143\u7d20\u7d22\u5f15\u3002\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#java-biginteger","title":"java BigInteger \u8fd0\u7b97","text":"<pre><code>import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\npublic class Main {\n\npublic static void main(String args[]) {\nScanner cin = new Scanner(System.in);\nwhile (cin.hasNext()) ///\u76f8\u5f53\u4e8e scanf()!=EOF\n{ BigInteger a, b, c;\n\n//\u5927\u6570\u521d\u59cb\u5316\n//1.\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\nBigInteger interNum1 = new BigInteger(\"1011100111\",2);\n//2.\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\nBigInteger interNum2 = new BigInteger(\"123456\");\n//3.\u5341\u8fdb\u5236\u6570\u5b57\nBigInteger interNum3 = BigInteger.valueOf(8);\n\n//\u5927\u6570\u8bfb\u5165\na = cin.nextBigInteger();\nb = cin.nextBigInteger();\n\n//\u57fa\u672c\u8fd0\u7b97\n//1.\u628aa\u4e0eb\u76f8\u52a0\u5e76\u8d4b\u7ed9c\nc = a.add(b); //2.\u628aa\u4e0eb\u76f8\u51cf\u5e76\u8d4b\u7ed9c\nc = a.subtract(b); //3.\u628aa\u4e0eb\u76f8\u4e58\u5e76\u8d4b\u7ed9c\nc = a.multiply(b); //4.\u628aa\u4e0eb\u76f8\u9664\u5e76\u8d4b\u7ed9c\nc = a.divide(b);\n//5.\u53d6\u6a21\uff0c(\u9700 b &gt; 0\uff0c\u5426\u5219\u51fa\u73b0\u5f02\u5e38\uff1aArithmeticException(\"BigInteger: modulus not positive\"))\nc = a.mod(b);\n//6.\u6c42\u4f59\nc = a.remainder(b);\n//7.\u76f8\u5f53\u4e8ea^b\nc = a.pow(2); //8.\u6839\u636e\u8be5\u6570\u503c\u662f\u5c0f\u4e8e\u3001\u7b49\u4e8e\u3001\u6216\u5927\u4e8ea \u8fd4\u56de -1\u30010 \u6216 1\nint ans1 = a.compareTo(b);\n//9.\u5224\u65ad\u4e24\u6570\u662f\u5426\u76f8\u7b49\uff0c\u4e5f\u53ef\u4ee5\u7528compareTo\u6765\u4ee3\u66ff\nboolean ans2 = a.equals(b); //10.\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\nc = a.min(b);\nc = a.max(b);\n\n//\u7c7b\u578b\u8f6c\u6362\n//1.\u8f6c\u6362\u4e3abigNum\u7684\u4e8c\u8fdb\u5236\u8865\u7801\u5f62\u5f0f\nbyte[] num1 = a.toByteArray(); //2.\u8f6c\u6362\u4e3abigNum\u7684\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u5f62\u5f0f\nString num2 = a.toString();    //3.\u8f6c\u6362\u4e3abigNum\u7684radix\u8fdb\u5236\u5b57\u7b26\u4e32\u5f62\u5f0f\nString num3 = a.toString(2);\n//4.\u5c06bigNum\u8f6c\u6362\u4e3aint\nint num4 = a.intValue();\n//5.\u5c06bigNum\u8f6c\u6362\u4e3along\nlong num5 = a.longValue();\n//6.\u5c06bigNum\u8f6c\u6362\u4e3afloat\nfloat num6 = a.floatValue();\n//7.\u5c06bigNum\u8f6c\u6362\u4e3adouble\ndouble num7 = a.doubleValue();\n\n//\u4e8c\u8fdb\u5236\u8fd0\u7b97\n//1.\u4e0e\uff1aa&amp;b\nBigInteger bigNum1 = a.and(b);\n//2.\u6216\uff1aa|b\nBigInteger bigNum2 = a.or(b);\n//3.\u5f02\u6216\uff1aa^b\nBigInteger bigNum3 = a.xor(b);\n//4.\u53d6\u53cd\uff1a~a\nBigInteger bigNum4 = a.not();\n//5.\u5de6\u79fbn\u4f4d\uff1a (a &lt;&lt; n)\nBigInteger bigNum5 = a.shiftLeft(3);\n//6.\u53f3\u79fbn\u4f4d\uff1a (a &gt;&gt; n)\nBigInteger bigNum6 = a.shiftRight(3);\n}\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#java-bigdecimal","title":"java BigDecimal \u8fd0\u7b97","text":"<pre><code>import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\npublic class Main {\n\npublic static void main(String args[]) {\nScanner cin = new Scanner(System.in);\nwhile (cin.hasNext()) ///\u76f8\u5f53\u4e8e scanf()!=EOF\n{ BigDecimal a, b, c;\n\n//\u5927\u6570\u521d\u59cb\u5316\n//1.\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\nBigDecimal interNum1 = new BigDecimal(\"0.005\");\n//2.\u5341\u8fdb\u5236\u6570\u5b57\nBigDecimal interNum2 =new BigDecimal(0.000005);\nBigDecimal interNum3 = BigDecimal.valueOf(0.000005);\n\n//\u5927\u6570\u8bfb\u5165\na = cin.nextBigDecimal();\nb = cin.nextBigDecimal();\n\n//\u5927\u6570\u4fdd\u7559\u5c0f\u6570\u4f4d\u8f93\u51fa\nBigDecimal d=a.setScale(10, RoundingMode.HALF_UP);//\u4fdd\u7559\u5341\u4f4d\u5c0f\u6570\nSystem.out.println(d);\n\n//\u57fa\u672c\u8fd0\u7b97\n//1.\u628aa\u4e0eb\u76f8\u52a0\u5e76\u8d4b\u7ed9c\nc = a.add(b); //2.\u628aa\u4e0eb\u76f8\u51cf\u5e76\u8d4b\u7ed9c\nc = a.subtract(b); //3.\u628aa\u4e0eb\u76f8\u4e58\u5e76\u8d4b\u7ed9c\nc = a.multiply(b); //4.\u628aa\u4e0eb\u76f8\u9664\u5e76\u8d4b\u7ed9c\nc = a.divide(b,10,BigDecimal.ROUND_UP); //\u820d\u5165\u8fdc\u79bb\u96f6\u7684\u820d\u5165\u6a21\u5f0f\u3002\nc = a.divide(b,10,BigDecimal.ROUND_DOWN); //\u63a5\u8fd1\u96f6\u7684\u820d\u5165\u6a21\u5f0f\u3002\nc = a.divide(b,10,BigDecimal.ROUND_CEILING); //\u63a5\u8fd1\u6b63\u65e0\u7a77\u5927\u7684\u820d\u5165\u6a21\u5f0f\u3002\nc = a.divide(b,10,BigDecimal.ROUND_FLOOR); //\u63a5\u8fd1\u8d1f\u65e0\u7a77\u5927\u7684\u820d\u5165\u6a21\u5f0f\u3002\nc = a.divide(b,10,BigDecimal.ROUND_HALF_UP); //\u5411\u201c\u6700\u63a5\u8fd1\u7684\u201d\u6570\u5b57\u820d\u5165\uff0c\u5982\u679c\u4e0e\u4e24\u4e2a\u76f8\u90bb\u6570\u5b57\u7684\u8ddd\u79bb\u76f8\u7b49\uff0c\u5219\u4e3a\u5411\u4e0a\u820d\u5165\u7684\u820d\u5165\u6a21\u5f0f\u3002\nc = a.divide(b,10,BigDecimal.ROUND_HALF_DOWN); //\u5411\u201c\u6700\u63a5\u8fd1\u7684\u201d\u6570\u5b57\u820d\u5165\uff0c\u5982\u679c\u4e0e\u4e24\u4e2a\u76f8\u90bb\u6570\u5b57\u7684\u8ddd\u79bb\u76f8\u7b49\uff0c\u5219\u4e3a\u4e0a\u820d\u5165\u7684\u820d\u5165\u6a21\u5f0f\u3002\nc = a.divide(b,10,BigDecimal.ROUND_HALF_EVEN); //\u5411\u201c\u6700\u63a5\u8fd1\u7684\u201d\u6570\u5b57\u820d\u5165\uff0c\u5982\u679c\u4e0e\u4e24\u4e2a\u76f8\u90bb\u6570\u5b57\u7684\u8ddd\u79bb\u76f8\u7b49\uff0c\u5219\u5411\u76f8\u90bb\u7684\u5076\u6570\u820d\u5165\u3002\n//5.\u6c42\u4f59\nc = a.remainder(b);\n//6.\u76f8\u5f53\u4e8ea^b\nc = a.pow(2); //7.\u6839\u636e\u8be5\u6570\u503c\u662f\u5c0f\u4e8e\u3001\u7b49\u4e8e\u3001\u6216\u5927\u4e8ea \u8fd4\u56de -1\u30010 \u6216 1\nint ans1 = a.compareTo(b);\n//8.\u5224\u65ad\u4e24\u6570\u662f\u5426\u76f8\u7b49\uff0c\u4e5f\u53ef\u4ee5\u7528compareTo\u6765\u4ee3\u66ff\nboolean ans2 = a.equals(b); //9.\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\nc = a.min(b);\nc = a.max(b);\n//10.\u7edd\u5bf9\u503c\nc = a.abs();\n\n//\u7c7b\u578b\u8f6c\u6362\n//1.\u8f6c\u6362\u4e3abigNum\u7684\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u5f62\u5f0f\nString num2 = a.toString();\n//2.\u5c06bigNum\u8f6c\u6362\u4e3aint\nint num4 = a.intValue();\n//3.\u5c06bigNum\u8f6c\u6362\u4e3along\nlong num5 = a.longValue();\n//4.\u5c06bigNum\u8f6c\u6362\u4e3afloat\nfloat num6 = a.floatValue();\n//5.\u5c06bigNum\u8f6c\u6362\u4e3adouble\ndouble num7 = a.doubleValue();\n}\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_2","title":"\u5224\u65ad\u5468\u51e0","text":"<pre><code>int getWeek(int y, int m, int d) {\nif (m == 1 || m == 2) { m += 12;     y--; } int week = (d +1 + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400) % 7;\nreturn week;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_3","title":"\u7ec4\u5408\u6570\u5947\u5076\u5224\u65ad","text":""},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_4","title":"\u56fe\u8bba","text":""},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#prim","title":"\u5806\u4f18\u5316prim\u7b97\u6cd5","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nint to, val;\n};\nvector&lt;node&gt; v[100500];\nstruct node1\n{\nint now, val;\nbool operator&lt;(const node1 &amp;a) const\n{\nreturn a.val &lt; val;\n}\n};\npriority_queue&lt;node1&gt; que;\nint dis[100500] = {0};\nvoid prim()\n{\nmemset(dis, -1, sizeof(dis));\nque.push({1, 0});\nwhile (!que.empty())\n{\nnode1 now = que.top();\nque.pop();\nif (dis[now.now] != -1)\ncontinue;\ndis[now.now] = now.val;\nfor (int i = 0; i &lt; v[now.now].size(); i++)\n{\nint to = v[now.now][i].to;\nint val = v[now.now][i].val;\nif (dis[to] != -1)\ncontinue;\nque.push({to, val});\n}\n}\n}\nint main()\n{\nint n, m, from, to, val;\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= m; i++)\n{\nscanf(\"%d%d%d\", &amp;from, &amp;to, &amp;val);\nv[from].push_back({to, val});\nv[to].push_back({from, val});\n}\nprim();\nll ans = 0;\nfor (ll i = 1; i &lt;= n; i++)\n{\nif (dis[i] == -1)\nreturn 0 * puts(\"orz\"); ///\u4e0d\u8fde\u901a\nans += dis[i];\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n````\n\n####  SPFA\u5224\u65ad\u8d1f\u73af\n\n```c++\n#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;cmath&gt;\n#include &lt;queue&gt;\n#include &lt;algorithm&gt;\n#define INF 0x3f3f3f3f\n\nusing namespace std;\nconst int MAXN = 5500;\nint n,m,w;\n\nstruct Edge\n{\nint v,w,next;\n}edge[MAXN];\nint head[MAXN],dis[MAXN],vis[MAXN],t;\n\nvoid Init()\n{\nmemset(head,-1,sizeof(head));\nt = 0;\n}\nvoid Add_edge(int u,int v,int w)\n{\nedge[t].v = v;edge[t].w = w;edge[t].next = head[u];head[u] = t++;\n}\n\nbool SPFA()\n{\nint mark[MAXN];//\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5982\u961f\u5217\u7684\u6b21\u6570\nfor(int i = 1;i &lt;= n;i ++)\n{\nmark[i] = 0;dis[i] = INF;vis[i] = 0;\n}\nqueue&lt;int&gt; q;\nq.push(1);  //\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u8d1f\u73af\uff0c\u968f\u4fbf\u627e\u4e00\u4e2a\u8d77\u70b9\u5c31\u597d\ndis[1] = 0;\nvis[1] = 1;//\u5165\u961f\u5217\nmark[1] ++;\nwhile(!q.empty())\n{\nint  u = q.front();\nq.pop();\nvis[u] = 0;//\u51fa\u961f\u5217\nfor(int i = head[u];i != -1;i = edge[i].next)\n{\nint v = edge[i].v;\nif(dis[v] &gt; dis[u] + edge[i].w)\n{\ndis[v] = dis[u] + edge[i].w;\nif(!vis[v])//\u4e0d\u5728\u961f\u5217\u4e2d\u7684\u65f6\u5019\u51fa\u961f\n{\nq.push(v);mark[v] ++;vis[v] = 1;\n}\nif(mark[v] &gt;= n)//\u5982\u679c\u4e0d\u5b58\u5728\u8d1f\u73af\uff0c\u90a3\u4e48\u6700\u591a\u66f4\u65b0n-1\u6b21\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7684\u7b54\u6848\uff0c\u56e0\u4e3a\u4e00\u6b21\u6700\u5c11\u66f4\u65b0\u4e00\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5982\u679c\u51fa\u73b0\u4e86\u66f4\u65b0n\u6b21\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u51fa\u73b0\u4e86\u8d1f\u73af\nreturn false;\n}\n}\n}\nreturn true;\n}\nint main()\n{\nint T;\nscanf(\"%d\",&amp;T);\nwhile(T--)\n{\nInit();\nint u,v,z;\nscanf(\"%d%d%d\",&amp;n,&amp;m,&amp;w);\nfor(int i = 0;i &lt; m;i ++)\n{\nscanf(\"%d%d%d\",&amp;u,&amp;v,&amp;z);\nAdd_edge(u,v,z);\nAdd_edge(v,u,z);\n}\nfor(int i = 0;i &lt; w;i ++)\n{\nscanf(\"%d%d%d\",&amp;u,&amp;v,&amp;z);\nAdd_edge(u,v,-z);\n}\nif(!SPFA())\nprintf(\"YES\\n\");\nelse\nprintf(\"NO\\n\");\n}\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#dijikastrak","title":"dijikastra\u7b2ck\u77ed\u8def","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nconst int MAX = 1005;\nint n,m;\nint start,end,k;\nstruct Edge\n{\nint w;\nint to;\nint next;\n};\nEdge e[100005];\nint head[MAX],edgeNum;\nint dis[MAX];   //dis[i]\u8868\u793a\u4ecei\u70b9\u5230end\u7684\u6700\u77ed\u8ddd\u79bb\nbool vis[MAX];\nint cnt[MAX];\nvector&lt;Edge&gt; opp_Graph[MAX];\n\nstruct Node\n{\nint f,g;    //f = g+dis[v]\nint v;      //\u5f53\u524d\u5230\u8fbe\u7684\u8282\u70b9\nNode(int a, int b,int c):f(a),g(b),v(c){}\nbool operator &lt; (const Node&amp; a) const\n{\nreturn a.f &lt; f;\n}\n};\n\nvoid addEdge(int from, int to, int w)\n{\ne[edgeNum].to = to;\ne[edgeNum].w = w;\ne[edgeNum].next = head[from];\nhead[from] = edgeNum++;\n}\n\nvoid dijikastra(int start)\n{\nint i;\nmemset(vis,0,sizeof(vis));\nfor(i = 1; i &lt;= n; i++)\ndis[i] = INF;\ndis[start] = 0;\npriority_queue&lt;Node&gt; que;\nque.push(Node(0,0,start));\nNode next(0,0,0);\nwhile(!que.empty())\n{\nNode now = que.top();\nque.pop();\nif(vis[now.v])              //\u4ece\u96c6\u5408T\u4e2d\u9009\u53d6\u5177\u6709\u6700\u77ed\u8ddd\u79bb\u7684\u8282\u70b9\ncontinue;\nvis[now.v] = true;          //\u6807\u8bb0\u8282\u70b9\u5df2\u4ece\u96c6\u5408T\u52a0\u5165\u5230\u96c6\u5408S\u4e2d\nfor(i = 0; i &lt; opp_Graph[now.v].size(); i++)    //\u66f4\u65b0\u4ece\u6e90\u70b9\u5230\u5176\u5b83\u8282\u70b9(\u96c6\u5408T\u4e2d)\u7684\u6700\u77ed\u8ddd\u79bb\n{\nEdge edge = opp_Graph[now.v][i];\nif(!vis[edge.to] &amp;&amp; dis[now.v] + edge.w &lt; dis[edge.to])     //\u52a0\u4e0d\u52a0\u524d\u9762\u7684\u5224\u65ad\u65e0\u6240\u8c13\n{\ndis[edge.to] = dis[now.v] + edge.w;\nnext.f = dis[edge.to];\nnext.v = edge.to;\nque.push(next);\n}\n}\n}\n}\n\nint A_Star()\n{\nint i;\npriority_queue&lt;Node&gt; que;\nif(dis[start] == INF)\nreturn -1;\nque.push(Node(dis[start],0,start));\nNode next(0,0,0);\nwhile(!que.empty())\n{\nNode now = que.top();\nque.pop();\ncnt[now.v]++;\nif(cnt[end] == k)\nreturn now.f;\nif(cnt[now.v] &gt; k)\ncontinue;\nfor(i = head[now.v]; i != -1; i = e[i].next)\n{\nnext.v = e[i].to;\nnext.g = now.g + e[i].w;\nnext.f = next.g + dis[e[i].to];\nque.push(next);\n}\n}\nreturn -1;\n}\n\nint main()\n{\nint i;\nint from,to,w;\nedgeNum = 0;\nmemset(head,-1,sizeof(head));\nmemset(opp_Graph,0,sizeof(opp_Graph));\nmemset(cnt,0,sizeof(cnt));\nscanf(\"%d %d\",&amp;n,&amp;m);\nEdge edge;\nfor(i = 1; i &lt;= m; i++)\n{\nscanf(\"%d %d %d\",&amp;from,&amp;to,&amp;w);\naddEdge(from,to,w);\nedge.to = from;\nedge.w = w;\nopp_Graph[to].push_back(edge);\n}\nscanf(\"%d %d %d\",&amp;start,&amp;end,&amp;k);\nif(start == end)\nk++;\ndijikastra(end);\nint result = A_Star();\nprintf(\"%d\\n\",result);\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#lcast","title":"LCA+ST\u500d\u589e\u7b97\u6cd5","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//lca\u677f\u5b50\u9898,\u6c42\u4fe9\u4e2a\u70b9\u6700\u77ed\u8ddd\u79bb\n//\u6811\u4e0a\u4e24\u70b9\u6700\u77ed\u8def\u5f84:\u4ece\u6839\u8282\u70b9\u51fa\u53d1dis[u]+dis[v]-dis[lca]*2\nstruct node\n{\nint to, next;\n};\nint tot = 0;\nnode edge[1000500] = {0};\nint head[500500] = {0};\nint fa[500500][18] = {0};\nint dep[500500] = {0};\nvoid add(int from, int to)\n{\nedge[++tot].next = head[from];\nedge[tot].to = to;\nhead[from] = tot;\n}\nvoid dfs(int now, int fa1)\n{\ndep[now] = dep[fa1] + 1;\nfa[now][0] = fa1;\nfor (int i = head[now]; i; i = edge[i].next)\n{\nint to = edge[i].to;\nif (to != fa1)\ndfs(to, now);\n}\n}\nint lca(int x, int y)\n{\nif (dep[x] &lt; dep[y])\nswap(x, y);\nfor (int j = 17; j &gt;= 0; j--)\n{\nif (dep[fa[x][j]] &gt;= dep[y])\nx = fa[x][j];\n}\nif (x == y)\nreturn x;\nfor (int j = 17; j &gt;= 0; j--)\n{\nif (fa[x][j] != fa[y][j])\nx = fa[x][j], y = fa[y][j];\n}\nreturn fa[x][0];\n}\nint main()\n{\nint n, m, s, f, t;\nscanf(\"%d%d%d\", &amp;n, &amp;m, &amp;s); ///s\u4e3a\u6839\u8282\u70b9\nfor (int i = 1; i &lt;= n - 1; i++)\n{\nscanf(\"%d%d\", &amp;f, &amp;t);\nadd(f, t);\nadd(t, f);\n}\ndfs(s, 0);\nfor (int j = 1; j &lt;= 17; j++)\n{\nfor (int i = 1; i &lt;= n; i++)\n{\nfa[i][j] = fa[fa[i][j - 1]][j - 1];\n}\n}\nfor (int i = 1; i &lt;= m; i++)\n{\nscanf(\"%d%d\", &amp;f, &amp;t);\nprintf(\"%d\\n\", lca(f, t));\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_5","title":"\u6811\u7684\u76f4\u5f84","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nstruct node\n{\nint to,val,next;\n};\nnode edge[200500]={0};\nint head[200500]={0};\nint cnt=0;\nint add_edge(int from,int to,int val)\n{\nedge[++cnt].next=head[from];\nedge[cnt].to=to;\nedge[cnt].val=val;\nhead[from]=cnt;\n}\nint dp[200500][4]={0};\nint down[200500]={0};\nint up[200500]={0};\nint len[200500][3]={0};\nint dfs1(int now,int fa)\n{\nfor(int i=head[now];i;i=edge[i].next)\n{\nint to=edge[i].to,val=edge[i].val;\nif(to==fa)\ncontinue;\ndfs1(to,now);\nint tmp=dp[to][0]+val;\nif(tmp&gt;dp[now][0])swap(dp[now][0],tmp);\nif(tmp&gt;dp[now][1])swap(dp[now][1],tmp);\nif(tmp&gt;dp[now][2])swap(dp[now][2],tmp);\ndown[now]=max(down[now],down[to]);\n}\ndown[now]=max(down[now],dp[now][0]+dp[now][1]);\n}\nint dfs2(int now,int fa)\n{\nfor(int i=head[now];i;i=edge[i].next)\n{\nif(edge[i].to==fa)\ncontinue;\nint tem=down[edge[i].to];\nif(tem&gt;len[now][0])\nswap(tem,len[now][0]);\nif(tem&gt;len[now][1])\nswap(tem,len[now][1]);\n}\nfor(int i=head[now];i;i=edge[i].next)\n{\nint to=edge[i].to,val=edge[i].val;\nif(to==fa)\ncontinue;\nif(dp[now][0]==dp[to][0]+val)\n{\ndp[to][3]=max(dp[now][1],dp[now][3])+val;\nup[to]=max(dp[now][2],dp[now][3])+dp[now][1];\n}\nelse if(dp[now][1]==dp[to][0]+val)\n{\ndp[to][3]=max(dp[now][0],dp[now][3])+val;\nup[to]=max(dp[now][2],dp[now][3])+dp[now][0];\n}\nelse\n{\ndp[to][3]=max(dp[now][0],dp[now][3])+val;\nup[to]=max(dp[now][1],dp[now][3])+dp[now][0];\n}\nif(len[now][0]==down[to])\nup[to]=max(up[to],len[now][1]);\nelse\nup[to]=max(up[to],len[now][0]);\ndfs2(to,now);\n}\n}\nint main()\n{\nint n,from,to,val;\nscanf(\"%d\",&amp;n);\nfor(int i=1;i&lt;=n-1;i++)\n{\nscanf(\"%d%d%d\",&amp;from,&amp;to,&amp;val);\nadd_edge(from,to,val);\nadd_edge(to,from,val);\n}\ndfs1(1,-1);\ndfs2(1,-1);\nint ans=0;\nfor(int i=1;i&lt;=n;i++)\nans=max(ans,up[i]+down[i]);\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_6","title":"\u6700\u5927\u6d41\u7b97\u6cd5","text":"<p>EK\u7b97\u6cd5\uff1a</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nll to,val,next;\n};\nnode edge[805]={0};\nll head[205]={0};\nll cnt=0;\nll s=1,e=1;\nvoid add_edge(ll from,ll to,ll val)\n{\nedge[cnt].next=head[from];\nedge[cnt].to=to;\nedge[cnt].val=val;\nhead[from]=cnt++;\n}\nll pre[205]={0},tag[205]={0},vis[205]={0};\nll bfs()\n{\nqueue&lt;ll&gt;que;\nmemset(tag,0,sizeof(tag));\nmemset(pre,0,sizeof(pre));\nmemset(vis,0,sizeof(vis));\nque.push(s);\nvis[s]=1;\nwhile(!que.empty())\n{\nll now=que.front();\nque.pop();\nfor(ll i=head[now];i!=-1;i=edge[i].next)\n{\nll to=edge[i].to,val=edge[i].val;\nif(!vis[to]&amp;&amp;val&gt;0)\n{\nvis[to]=1;\npre[to]=now;\ntag[to]=i;\nif(to==e)\nreturn 1;\nque.push(to);\n}\n}\n}\nreturn 0;\n}\nll EK()\n{\nll ans=0;\nwhile(bfs())\n{\nll min1=inf;\nfor(ll i=e;i!=s;i=pre[i])\n{\nmin1=min(min1,edge[tag[i]].val);\n}\nfor(ll i=e;i!=s;i=pre[i])\n{\nedge[tag[i]].val-=min1;\nedge[tag[i]^1].val+=min1;\n}\nans+=min1;\n}\nreturn ans;\n}\nint main()\n{\nll n,m,from,to,val;\nwhile(scanf(\"%lld%lld\",&amp;m,&amp;n) == 2&amp;&amp;n){\ne=n;\ncnt=0;\nfor(int i=1;i&lt;=n;i++)\nhead[i]=-1;\nfor(ll i=1;i&lt;=m;i++)\n{\nscanf(\"%lld%lld%lld\",&amp;from,&amp;to,&amp;val);\nadd_edge(from,to,val);\nadd_edge(to,from,0);\n}\nprintf(\"%lld\\n\",EK());\n}\n}\n</code></pre> <p>\u4f18\u5316\u7248Dinic\u7b97\u6cd5\uff1a</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\n#define INF 0x3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\n\nstruct Edge\n{\nll from, to, cap, flow, index;\nEdge(ll from, ll to, ll cap, ll flow, ll index) : from(from), to(to), cap(cap), flow(flow), index(index) {}\n};\n\nstruct Dinic\n{\nll N;\nvector&lt;vector&lt;Edge&gt;&gt; G;\nvector&lt;Edge *&gt; dad;\nvector&lt;ll&gt; Q;\nDinic(ll N) : N(N), G(N), dad(N), Q(N) {}\nvoid AddEdge(ll from, ll to, ll cap)\n{\nG[from].push_back(Edge(from, to, cap, 0, G[to].size()));\nif (from == to)\nG[from].back().index++;\nG[to].push_back(Edge(to, from, 0, 0, G[from].size() - 1));\n}\nll BlockingFlow(ll s, ll t)\n{\nfill(dad.begin(), dad.end(), (Edge *)NULL);\ndad[s] = &amp;G[0][0] - 1;\n\nll head = 0, tail = 0;\nQ[tail++] = s;\nwhile (head &lt; tail)\n{\nll x = Q[head++];\nfor (ll i = 0; i &lt; G[x].size(); i++)\n{\nEdge &amp;e = G[x][i];\nif (!dad[e.to] &amp;&amp; e.cap - e.flow &gt; 0)\n{\ndad[e.to] = &amp;G[x][i];\nQ[tail++] = e.to;\n}\n}\n}\nif (!dad[t])\nreturn 0;\nll totflow = 0;\nfor (ll i = 0; i &lt; G[t].size(); i++)\n{\nEdge *start = &amp;G[G[t][i].to][G[t][i].index];\nll amt = INF;\nfor (Edge *e = start; amt &amp;&amp; e != dad[s]; e = dad[e-&gt;from])\n{\nif (!e)\n{\namt = 0;\nbreak;\n}\namt = min(amt, e-&gt;cap - e-&gt;flow);\n}\nif (amt == 0)\ncontinue;\nfor (Edge *e = start; amt &amp;&amp; e != dad[s]; e = dad[e-&gt;from])\n{\ne-&gt;flow += amt;\nG[e-&gt;to][e-&gt;index].flow -= amt;\n}\ntotflow += amt;\n}\nreturn totflow;\n}\n\nll GetMaxFlow(ll s, ll t)\n{\nll totflow = 0;\nwhile (ll flow = BlockingFlow(s, t))\ntotflow += flow;\nreturn totflow;\n}\n};\n\nint main()\n{\nll n, m, f, t, v, s, e;\nscanf(\"%lld%lld\", &amp;n, &amp;m);\nscanf(\"%lld%lld\", &amp;s, &amp;e);\nDinic dinic(n + 10);\nfor (ll i = 1; i &lt;= m; i++)\n{\nscanf(\"%lld%lld%lld\", &amp;f, &amp;t, &amp;v);\ndinic.AddEdge(f, t, v);\n}\nprintf(\"%lld\\n\", dinic.GetMaxFlow(s, e));\n}\n</code></pre> <p>\u666e\u901a\u7248\u672cdinic\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll INF = 1e18;\nconst int N = 5e2 + 7;\nconst int M = 2e5 + 7;\n\nint head[N], nex[M], ver[M], tot = 1;\nll edge[M];\nint n, m, s, t;\nll maxflow;\nll deep[N]; //\u5c42\u7ea7\u6570\uff0c\u5176\u5b9e\u5e94\u8be5\u662flevel\nint now[M]; //\u5f53\u524d\u5f27\u4f18\u5316\nqueue&lt;int&gt; q;\n\ninline void add(int x, int y, int z)\n{ //\u5efa\u6b63\u8fb9\u548c\u53cd\u5411\u8fb9\nver[++tot] = y;\nedge[tot] = z;\nnex[tot] = head[x];\nhead[x] = tot;\nver[++tot] = x;\nedge[tot] = 0;\nnex[tot] = head[y];\nhead[y] = tot;\n}\n\ninline bool bfs()\n{ //\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\u6784\u9020\u5206\u5c42\u56fe\nfor (int i = 1; i &lt;= n; i++)\ndeep[i] = INF;\nwhile (!q.empty())\nq.pop();\nq.push(s);\ndeep[s] = 0;\nnow[s] = head[s]; //\u4e00\u4e9b\u521d\u59cb\u5316\nwhile (!q.empty())\n{\nint x = q.front();\nq.pop();\nfor (int i = head[x]; i; i = nex[i])\n{\nint y = ver[i];\nif (edge[i] &gt; 0 &amp;&amp; deep[y] == INF)\n{ //\u6ca1\u8d70\u8fc7\u4e14\u5269\u4f59\u5bb9\u91cf\u5927\u4e8e0\nq.push(y);\nnow[y] = head[y]; //\u5148\u521d\u59cb\u5316\uff0c\u6682\u65f6\u90fd\u4e00\u6837\ndeep[y] = deep[x] + 1;\nif (y == t)\nreturn 1; //\u627e\u5230\u4e86\n}\n}\n}\nreturn 0;\n}\n\n//flow\u662f\u6574\u6761\u589e\u5e7f\u8def\u5bf9\u6700\u5927\u6d41\u7684\u8d21\u732e\uff0crest\u662f\u5f53\u524d\u6700\u5c0f\u5269\u4f59\u5bb9\u91cf\uff0c\u7528rest\u53bb\u66f4\u65b0flow\nll dfs(int x, ll flow)\n{ //\u5728\u5f53\u524d\u5206\u5c42\u56fe\u4e0a\u589e\u5e7f\nif (x == t)\nreturn flow;\nll ans = 0, k, i;\nfor (i = now[x]; i &amp;&amp; flow; i = nex[i])\n{\nnow[x] = i; //\u5f53\u524d\u5f27\u4f18\u5316\uff08\u907f\u514d\u91cd\u590d\u904d\u5386\u4ecex\u51fa\u53d1\u7684\u4e0d\u53ef\u62d3\u5c55\u7684\u8fb9\uff09\nint y = ver[i];\nif (edge[i] &gt; 0 &amp;&amp; (deep[y] == deep[x] + 1))\n{                                   //\u5fc5\u987b\u662f\u4e0b\u4e00\u5c42\u5e76\u4e14\u5269\u4f59\u5bb9\u91cf\u5927\u4e8e0\nk = dfs(y, min(flow, edge[i])); //\u53d6\u6700\u5c0f\nif (!k)\ndeep[y] = INF; //\u526a\u679d\uff0c\u53bb\u6389\u589e\u5e7f\u5b8c\u6bd5\u7684\u70b9\nedge[i] -= k;      //\u56de\u6eaf\u65f6\u66f4\u65b0\nedge[i ^ 1] += k;  //\u6210\u5bf9\u53d8\u6362\nans += k;\nflow -= k;\n}\n}\n\nreturn ans;\n}\n\nvoid dinic()\n{\nwhile (bfs())\nmaxflow += dfs(s, INF);\n}\n\nint main()\n{\nscanf(\"%d%d%d%d\", &amp;n, &amp;m, &amp;s, &amp;t);\ntot = 1;\nfor (ll i = 1; i &lt;= m; i++)\n{\nint x, y, z;\nscanf(\"%d%d%d\", &amp;x, &amp;y, &amp;z);\nadd(x, y, z);\n}\ndinic();\nprintf(\"%lld\\n\", maxflow);\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_7","title":"\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u7b97\u6cd5","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct node\n{\nint next;\nint flow;\nint dis;\nint to;\n};\nint head[100500]= {0};\nnode edge[100500]= {0};\nint dis[100500]= {0};\nint pre[100500]= {0};\nint vis[100500]= {0};\nint last[100500]= {0};\nint flow[100500]={0};\nchar g[1000][1000]= {0};\nint n,m,s,t,cnt=-1,maxflow=0,mincost=0;\nint num(int i,int j)\n{\nreturn i*m+j;\n}\nint add(int from,int to,int flow,int dis)\n{\nedge[++cnt].next=head[from];\nedge[cnt].to=to;\nedge[cnt].flow=flow;\nedge[cnt].dis=dis;\nhead[from]=cnt;\n}\nqueue&lt;int&gt;w;\nbool spfa(int start,int end1)\n{\nw.push(start);\nmemset(dis,0x3f3f3f,sizeof(dis));\nmemset(vis,0,sizeof(vis));\nmemset(flow,0x3f3f3f,sizeof(flow));\npre[end1]=-1;\nvis[start]=1;\ndis[start]=0;\nwhile(!w.empty())\n{\nint now=w.front();\nw.pop();\nvis[now]=0;\nfor(int i=head[now]; i!=-1; i=edge[i].next)\n{\n//cout&lt;&lt;i&lt;&lt;endl;\nif(edge[i].flow&gt;0&amp;&amp;dis[edge[i].to]&gt;dis[now]+edge[i].dis)\n{\ndis[edge[i].to]=dis[now]+edge[i].dis;\npre[edge[i].to]=now;\nlast[edge[i].to]=i;\nflow[edge[i].to]=min(flow[now],edge[i].flow);\nif(!vis[edge[i].to])\n{\nvis[edge[i].to]=1;\nw.push(edge[i].to);\n}\n}\n}\n}\nreturn pre[end1]!=-1;\n}\nint MCMF()\n{\nwhile(spfa(s,t))\n{\nmaxflow+=flow[t];\nmincost+=dis[t]*flow[t];\nint now=t;\nwhile(now!=s)\n{\nedge[last[now]].flow-=flow[t];\nedge[last[now]^1].flow+=flow[t];\nnow=pre[now];\n}\n}\n}\nint main()\n{\nmemset(head,-1,sizeof(head));\nscanf(\"%d%d\",&amp;n,&amp;m);\ns=n*m+200,t=n*m+100;\nfor(int i=1; i&lt;=n; i++)\n{\nscanf(\"%s\",g[i]+1);\n}\nfor(int i=1; i&lt;=n; i++)\n{\nfor(int j=1; j&lt;=m; j++)\n{\nif(g[i][j]=='x')\ncontinue;\nif(j&gt;1&amp;&amp;g[i][j-1]!='x')\n{\nadd(num(i,j),num(i,j-1),1,1);\nadd(num(i,j-1),num(i,j),0,-1);\n}\nif(i&gt;1&amp;&amp;g[i-1][j]!='x')\n{\nadd(num(i,j),num(i-1,j),1,1);\nadd(num(i-1,j),num(i,j),0,-1);\n}\nif(j&lt;m&amp;&amp;g[i][j+1]!='x')\n{\nadd(num(i,j),num(i,j+1),1,1);\nadd(num(i,j+1),num(i,j),0,-1);\n}\nif(i&lt;n&amp;&amp;g[i+1][j]!='x')\n{\nadd(num(i,j),num(i+1,j),1,1);\nadd(num(i+1,j),num(i,j),0,-1);\n}\nif(g[i][j]=='F')\n{\nadd(s,num(i,j),2,0);\nadd(num(i,j),s,0,0);\n}\nif(g[i][j]=='C'||g[i][j]=='B')\n{\nadd(num(i,j),t,1,0);\nadd(t,num(i,j),0,0);\n}\n}\n}\nMCMF();\n// cout&lt;&lt;maxflow&lt;&lt;\" \"&lt;&lt;mincost&lt;&lt;endl;\nif(maxflow!=2)\nprintf(\"-1\\n\");\nelse\nprintf(\"%d\\n\",mincost);\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_8","title":"\u4e8c\u5206\u56fe\u6a21\u677f","text":"<p>\u9898\u610f\uff1a\u7ed9\u4f60n\u4e2a\u957f\u5ea6\u76f8\u540c\uff0c\u5305\u542b\u5b57\u6bcd\u79cd\u7c7b\u76f8\u540c\uff0c\u6bcf\u79cd\u5b57\u6bcd\u6570\u91cf\u76f8\u540c\uff0c\u8ba9\u4f60\u786e\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u4e32\u4e0d\u80fd\u901a\u8fc7\u4ea4\u6362\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\u53d8\u6210\u96c6\u5408\u4e2d\u7684\u53e6\u4e00\u4e2a\u4e32\uff0c\u95ee\u4f60\u96c6\u5408\u6700\u5927\u6709\u591a\u4e2a\u5b57\u7b26\u4e32\u3002</p> <p>\u601d\u8def\uff1a</p> <p>\u6211\u4eec\u5bf9\u4e8e\u4e24\u4e2a\u4e00\u6b21\u64cd\u4f5c\uff08\u4ea4\u6362\u4e24\u4e2a\u4e0d\u540c\u4f4d\u7f6e\uff09\u4e0d\u80fd\u4e92\u76f8\u53d8\u6362\u7684\u4e32\u5efa\u8fb9\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u8fd9\u4e2a\u56fe\u7684\u6700\u5927\u56e2\u3002 \u4e00\u4e2a\u56fe\u7684\u6700\u5927\u56e2\u7b49\u4e8e\u8fd9\u4e2a\u56fe\u8865\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u5efa\u8fd9\u4e2a\u56fe\u7684\u8865\u56fe\u3002 \u8fd9\u4e2a\u56fe\u7684\u8865\u56fe\u5c31\u662f\u5bf9\u80fd\u591f\u4e00\u6b21\u64cd\u4f5c\u4e92\u76f8\u53d8\u6362\u7684\u4e24\u4e2a\u4e32\u5efa\u8fb9\u3002 \u90a3\u4e48\u73b0\u5728\u7b54\u6848\u5c31\u662f\u8fd9\u4e2a\u8865\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\u3002 \u8fd9\u4e2a\u8865\u56fe\u4e00\u5b9a\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002 \u4e8c\u5206\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\u7b49\u4e8e\u56fe\u4e2d\u70b9\u7684\u4e2a\u6570 - \u6700\u5927\u5339\u914d\u6570\u3002 \u6240\u4ee5\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u4e8c\u5206\u56fe\u6c42\u4e00\u4e2a\u6700\u5927\u5339\u914d\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nchar a[1000][300] = {0};\nint mp[1000][1000] = {0};\nmap&lt;int, int&gt; mp1, vis;\nint n;\nint dfs(int k)\n{\nfor (int i = 1; i &lt;= n; i++)\n{\nif (mp[i][k] &amp;&amp;!vis[i])\n{\nvis[i] = 1;\nif (mp1[i] == 0 || dfs(mp1[i]))\n{\nmp1[i] = k;\nreturn 1;\n}\n}\n}\nreturn 0;\n}\nint main()\n{\nscanf(\"%d\", &amp;n);  ///\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e0d\u80fd\u6709\u4e24\u4e2a\u5b57\u7b26\u76f8\u540c\uff0c\u95ee\u81f3\u5c11\u9700\u8981\u5206\u4e3a\u591a\u5c11\u7ec4\nfor (int i = 1; i &lt;= n; i++)\nscanf(\"%s\", a[i] + 1);\nfor (int i = 1; i &lt;= n; i++)\n{\nfor (int j = 1; j &lt;= n; j++)\n{\nint sum = 0;\nfor (int k = 1; a[i][k]; k++)\n{\nif (a[i][k] != a[j][k])\nsum++;\n}\nif (sum == 2)\nmp[i][j] = 1;\n}\n}\n//cout&lt;&lt;mp[1][2]&lt;&lt;endl;\nint ans = 0;\nfor (int i = 1; i &lt;= n; i++)\n{\nvis.clear();\nans += dfs(i);\n}\ncout &lt;&lt; n - ans / 2 &lt;&lt; endl;\n}\n</code></pre> <p>\u4e8c\u5206\u56fe\u5224\u65ad</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nvector&lt;int&gt; v[100500];\nint color[100500] = {0};\nint bfs(int i)\n{\nqueue&lt;int&gt; que;\nque.push(i);\nwhile (!que.empty())\n{\nint now = que.front();\nque.pop();\nfor (int i : v[now])\n{\nif (color[i] == 0)\n{\ncolor[i] = 3 - color[now];\nque.push(i);\n}\nelse\n{\nif (color[i] == color[now])\nreturn 0;\n}\n}\n}\nreturn 1;\n}\nint main()\n{\nint n, m;\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= m; i++)\n{\nint from, to;\nscanf(\"%d %d\", &amp;from, &amp;to);\nv[from].push_back(to);\nv[to].push_back(from);\n}\nfor (int i = 1; i &lt;= m; i++)\n{\nif (color[i] == 0)\n{\nint tmp = bfs(i);\nif (tmp == 0)\n{\nputs(\"No\");\nreturn 0;\n}\n}\n}\nputs(\"Yes\");\n}\n/*\n\u8f93\u5165\uff1a\n7 6\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n\u8f93\u51fa\uff1a\nYes\n\u8f93\u5165\uff1a\n3 3\n1 2\n2 3\n1 3\n\u8f93\u51fa\uff1a\nNo\n*/\n</code></pre> <p>\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nvector&lt;int&gt; v[100500];\nmap&lt;int, int&gt; mp, vis, mp1;\nint dfs(int now)\n{\nfor (int i = 0; i &lt; v[now].size(); i++)\n{\nint to = v[now][i];\nif (!vis[to])\n{\nvis[to] = 1;\nif (mp[to] == 0 || dfs(mp[to]))\n{\nmp[to] = now;\nmp1[now] = to;\nreturn 1;\n}\n}\n}\nreturn 0;\n}\nint main()\n{\nint n1, n2, m;\nscanf(\"%d%d%d\", &amp;n1, &amp;n2, &amp;m);\nint from, to;\nfor (int i = 1; i &lt;= m; i++)\n{\nscanf(\"%d%d\", &amp;from, &amp;to);\nto += n1;\nv[from].push_back(to);\nv[to].push_back(from);\n}\nint ans = 0;\nfor (int i = 1; i &lt;= n1; i++)\n{\nvis.clear();\nans += dfs(i);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nfor (int i = 1; i &lt;= n1; i++)\ncout &lt;&lt; max(0,mp1[i]-n1) &lt;&lt; ' ';\n}\n</code></pre> <p>\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\uff1a</p> <p>\u9009\u6700\u591a\u7684\u70b9\uff0c\u6ee1\u8db3\u4e24\u4e24\u4e4b\u95f4\u6ca1\u6709\u8fb9\u76f8\u8fde\u3002</p> <p>\u4e8c\u5206\u56fe\u4e2d\uff0c\u6700\u5927\u72ec\u7acb\u96c6 =n- \u6700\u5927\u5339\u914d\u3002</p> <p>\u4e8c\u5206\u56fe\u6700\u5c0f\u70b9\u8986\u76d6\uff1a</p> <p>\u9009\u6700\u5c11\u7684\u70b9\uff0c\u6ee1\u8db3\u6bcf\u6761\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u88ab\u9009\uff0c\u4e0d\u96be\u53d1\u73b0\u8865\u96c6\u662f\u72ec\u7acb\u96c6\u3002</p> <p>\u4e8c\u5206\u56fe\u4e2d\uff0c\u6700\u5c0f\u70b9\u8986\u76d6 =n- \u6700\u5927\u72ec\u7acb\u96c6\u3002</p> <p>\u4e8c\u5206\u56fe\u6709\u5411\u65e0\u5411\u5efa\u56fe\u89c4\u5219\uff1a</p> <p>\u6709\u5de6\u53f3\u4e4b\u5206\u5efa\u5355\u5411\u8fb9\uff0c\u65e0\u5de6\u53f3\u4e4b\u5206\u5efa\u65e0\u5411\u8fb9 \u7b54\u6848\u96642</p> <p>\u4e00\u5207\u6811\u5747\u4e3a\u4e8c\u5206\u56fe</p> <p>\u4e8c\u5206\u56fe\u6700\u5927\u6743\u5339\u914d\uff1a</p> <p>\u9898\u76ee\uff1ahttps://uoj.ac/problem/80</p> <p>\u9898\u89e3\uff1ahttps://blog.csdn.net/weixin_30528371/article/details/99263983</p> <p>\u8bb2\u89e3\uff1ahttps://www.cnblogs.com/wenruo/p/5264235.html</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nint n, m, q;\nint w[405] = {0}, v[405] = {0};\nint vl[405] = {0}, vr[405] = {0}, c[405] = {0};\nint a[405][405] = {0}, ans[405] = {0}, b[405] = {0};\nint tim = 0;\nint dfs(int x)\n{\nvl[x] = tim;\nfor (int i = 1; i &lt;= m; i++)\n{\nif (vr[i] == tim)\ncontinue;\nint d = w[x] + v[i] - a[x][i];\nif (d == 0)\n{\nvr[i] = tim;\nif (!b[i] || dfs(b[i]))\n{\nb[i] = x;\nreturn 1;\n}\n}\nelse\n{\nc[i] = min(c[i], d);\n}\n}\nreturn 0;\n}\nvoid km()\n{\nfor (int i = 1; i &lt;= n; i++)\nfor (int j = 1; j &lt;= m; j++)\nw[i] = max(w[i], a[i][j]);\nfor (int i = 1; i &lt;= n; i++)\n{\nmemset(c, inf, sizeof(c));\ntim += 1;\nif (dfs(i))\ncontinue;\n\nwhile (1)\n{\nint d = inf, y = 0;\nfor (int j = 1; j &lt;= m; j++)\nif (vr[j] != tim)\nd = min(d, c[j]);\n\nfor (int j = 1; j &lt;= n; j++)\nif (vl[j] == tim)\nw[j] -= d;\n\nfor (int j = 1; j &lt;= m; j++)\n{\nif (vr[j] == tim)\nv[j] += d;\nelse if (!(c[j] -= d))\ny = j;\n}\n\nif (!b[y])\nbreak;\n\nint x = b[y];\nvl[x] = vr[y] = tim;\nfor (int j = 1; j &lt;= m; j++)\nc[j] = min(c[j], w[x] + v[j] - a[x][j]);\n}\ntim += 1;\ndfs(i);\n}\nll ans1 = 0;\nfor (int i = 1; i &lt;= m; i++)\nans1 += a[b[i]][i];\nprintf(\"%lld\\n\", ans1);\nfor (int i = 1; i &lt;= m; i++)\n{\nif (a[b[i]][i])\nans[b[i]] = i;\n}\nfor (int i = 1; i &lt;= n; i++)\nprintf(\"%d \", ans[i]);\n}\nint main()\n{\nscanf(\"%d%d%d\", &amp;n, &amp;m, &amp;q);\nm = max(m, n);\nfor (int i = 1; i &lt;= q; i++)\n{\nint x, y, v;\nscanf(\"%d%d%d\", &amp;x, &amp;y, &amp;v);\na[x][y] = v;\n}\nkm();\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#tarjan","title":"Tarjan\u7b97\u6cd5","text":"<p>Tarjan \u7b97\u6cd5\u53ca\u5176\u5e94\u7528</p> <ol> <li>\u6c42\u5272\u8fb9</li> </ol> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct node\n{\nint to, next;\n};\nnode edge[200500] = {0};\nint head[200500] = {0}, dfn[200500] = {0}, low[200500] = {0}, bridge[200500] = {0};\nint cnt = 1, tot = 0;\nvoid add_edge(int from, int to)\n{\nedge[++cnt] = {to, head[from]};\nhead[from] = cnt;\n}\nvoid tarjan(int x, int in_edge)\n{\ndfn[x] = low[x] = ++tot;\nfor (int i = head[x]; i; i = edge[i].next)\n{\nint y = edge[i].to;\nif (!dfn[y])\n{\ntarjan(y, i);\nlow[x] = min(low[x], low[y]);\nif (low[y] &gt; dfn[x])\nbridge[i] = bridge[i ^ 1] = 1; ///\u6865\n}\nelse if (i != (in_edge ^ 1))\nlow[x] = min(low[x], dfn[y]);\n}\n}\nint main()\n{\nint n, m, from, to;\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= m; i++)\n{\nscanf(\"%d%d\", &amp;from, &amp;to);\nadd_edge(from, to);\nadd_edge(to, from);\n}\nfor (int i = 1; i &lt;= n; i++)\n{\nif (!dfn[i])\ntarjan(i, 0);\n}\nfor (int i = 2; i &lt;= cnt; i += 2)\n{\nif (bridge[i])\n{\nprintf(\"%d %d\\n\", edge[i ^ 1].to, edge[i].to);\n}\n}\n}\n</code></pre> <ol> <li>\u7f29\u70b9\u6c42\u5c06\u56fe\u8f6c\u53d8\u4e3a\u5f3a\u8fde\u901a\u56fe\u9700\u8981\u52a0\u8fb9\u7684\u6570\u76ee</li> </ol> <p>\u9898\u76ee\u6765\u6e90\uff1aPOJ 2767 </p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct node\n{\nint to, next;\n};\nnode edge[200500] = {0};\nint head[200500] = {0}, dfn[200500] = {0}, low[200500] = {0};\nint stack1[200500] = {0}, vis[200500] = {0}, color[200500] = {0};\nbool in[200500] = {0}, out[200500] = {0};\nint cnt = 0, tot = 0, top = 0, color_num = 0;\nvoid add_edge(int from, int to)\n{\nedge[++cnt] = {to, head[from]};\nhead[from] = cnt;\n}\nvoid tarjan(int now)\n{\nstack1[++top] = now;\nvis[now] = 1;\ndfn[now] = low[now] = ++tot;\nfor (int i = head[now]; i; i = edge[i].next)\n{\nint y = edge[i].to;\nif (!dfn[y])\n{\ntarjan(y);\nlow[now] = min(low[now], low[y]);\n}\nelse if (vis[y])\nlow[now] = min(low[now], dfn[y]);\n}\nif (dfn[now] == low[now]) ///\u5f3a\u8fde\u901a\u5757\n{\ncolor[now] = ++color_num;\nvis[now] = 0;\nwhile (stack1[top] != now)\n{\ncolor[stack1[top]] = color_num;\nvis[stack1[top--]] = 0;\n}\nvis[stack1[top]] = 0;\ntop--;\n}\n}\nint main()\n{\nint t;\nscanf(\"%d\", &amp;t);\nwhile (t--)\n{\nint n, m, from, to;\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 0; i &lt;= n + 1; i++)\nin[i] = out[i] = head[i] = dfn[i] = low[i] = stack1[i] = vis[i] = color[i] = 0;\ncnt = 0, tot = 0, top = 0, color_num = 0;\nfor (int i = 1; i &lt;= m; i++)\n{\nscanf(\"%d%d\", &amp;from, &amp;to);\nadd_edge(from, to);\n}\nfor (int i = 1; i &lt;= n; i++)\n{\nif (!dfn[i])\ntarjan(i);\n}\nif (color_num == 1)\n{\nprintf(\"0\\n\");\ncontinue;\n}\nint in_num = color_num, out_num = color_num;\nfor (int i = 1; i &lt;= n; i++)\n{\nfor (int j = head[i]; j; j = edge[j].next)\n{\nint to = edge[j].to;\nif (color[to] != color[i])\n{\nif (!in[color[to]])\n{\nin_num--;\nin[color[to]] = 1;\n}\nif (!out[color[i]])\n{\nout_num--;\nout[color[i]] = 1;\n}\n}\n}\n}\nprintf(\"%d\\n\", max(out_num, in_num));\n}\n}\n</code></pre> <ol> <li>\u6c42\u5272\u70b9</li> </ol> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct node\n{\nint to, next;\n};\nnode edge[200500] = {0};\nint head[200500] = {0}, dfn[200500] = {0}, low[200500] = {0}, cut[200500] = {0};\nint cnt = 0, tot = 0;\nvoid add_edge(int from, int to)\n{\nedge[++cnt] = {to, head[from]};\nhead[from] = cnt;\n}\nvoid tarjan(int now, int root)\n{\ndfn[now] = low[now] = ++tot;\nint ct = 0;\nfor (int i = head[now]; i; i = edge[i].next)\n{\nint y = edge[i].to;\nct++;\nif (!dfn[y])\n{\ntarjan(y, root);\nlow[now] = min(low[now], low[y]);\nif (now != root &amp;&amp; low[y] &gt;= dfn[now])\ncut[now] = 1;\nif (now == root &amp;&amp; ct &gt; 1)\ncut[now] = 1;\n}\nelse\nlow[now] = min(low[now], dfn[y]);\n}\n}\nint main()\n{\nint t;\nscanf(\"%d\", &amp;t);\nwhile (t--)\n{\nint n, m, from, to;\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 0; i &lt;= n + 1; i++)\nhead[i] = dfn[i] = low[i] = cut[i] = 0;\ncnt = 0, tot = 0;\nfor (int i = 1; i &lt;= m; i++)\n{\nscanf(\"%d%d\", &amp;from, &amp;to);\nadd_edge(from, to);\nadd_edge(to, from);\n}\nfor (int i = 1; i &lt;= n; i++)\n{\nif (!dfn[i])\ntarjan(i, i);\n}\nfor (int i = 1; i &lt;= n; i++)\n{\nif (cut[i])\nprintf(\"%d \", i);\n}\nprintf(\"\\n\");\n}\n}\n/*\n\u8f93\u5165\uff1a\n1\n7 7\n1 2\n1 5\n5 6\n5 7\n2 3\n2 4\n3 4\n\u5272\u70b9\u4e3a\uff1a\n1 2 5 \n*/\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_9","title":"\u6811\u94fe\u5256\u5206+\u7ebf\u6bb5\u6811","text":"<p>https://oi-wiki.org/graph/hld/#_4</p> <p></p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll sum[400500] = {0}, lazy[400500] = {0};\nll dep[200500] = {0}, size1[200500] = {0}, son[200500] = {0}, f[200500] = {0}, id[200500] = {0}, top[200500] = {0};\nstruct node\n{\nll to, next;\n};\nnode edge[400500] = {0};\nll head[400500] = {0};\nll num = 0, cnt = 0;\nvoid add_edge(ll from, ll to)\n{\nedge[++num] = {to, head[from]};\nhead[from] = num;\n}\nvoid dfs1(ll now, ll fa)\n{\nsize1[now] = 1;\nfor (ll i = head[now]; i; i = edge[i].next)\n{\nll to = edge[i].to;\nif (to == fa)\ncontinue;\nf[to] = now;\ndep[to] = dep[now] + 1;\ndfs1(to, now);\nsize1[now] += size1[to];\nif (size1[to] &gt; size1[son[now]])\nson[now] = to;\n}\n}\nvoid dfs2(ll now, ll fa)\n{\nid[now] = ++cnt;\ntop[now] = fa;\nif (son[now])\ndfs2(son[now], fa);\nfor (ll i = head[now]; i; i = edge[i].next)\n{\nll to = edge[i].to;\nif (to == f[now] || to == son[now])\ncontinue;\ndfs2(to, to);\n}\n}\nvoid push_down(ll t, ll l, ll r)\n{\nif (lazy[t] == 0)\nreturn;\nlazy[2 * t + 1] += lazy[t];\nlazy[2 * t] += lazy[t];\nll mid = (l + r) / 2;\nsum[2 * t] += (mid - l + 1) * lazy[t];\nsum[2 * t + 1] += (r - mid) * lazy[t];\nlazy[t] = 0;\n}\nvoid push_up(ll t)\n{\nsum[t] = sum[2 * t] + sum[2 * t + 1];\n}\nvoid update(ll t, ll l, ll r, ll L, ll R, ll add)\n{\nif (l &lt;= L &amp;&amp; R &lt;= r)\n{\nlazy[t] += add;\nsum[t] += add * (R - L + 1);\nreturn;\n}\npush_down(t, L, R);\nll mid = (L + R) / 2;\nif (l &lt;= mid)\nupdate(2 * t, l, r, L, mid, add);\nif (mid &lt; r)\nupdate(2 * t + 1, l, r, mid + 1, R, add);\npush_up(t);\n}\nll query(ll t, ll l, ll r, ll L, ll R)\n{\nif (l &lt;= L &amp;&amp; R &lt;= r)\nreturn sum[t];\npush_down(t, L, R);\nll mid = (L + R) / 2;\nll ans = 0;\nif (l &lt;= mid)\nans += query(2 * t, l, r, L, mid);\nif (mid &lt; r)\nans += query(2 * t + 1, l, r, mid + 1, R);\nreturn ans;\n}\nvoid update_chain(ll x, ll y)\n{\nll fx = top[x], fy = top[y];\nwhile (fx != fy) ///\u4e0d\u5728\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\n{\nif (dep[fx] &lt; dep[fy])\nswap(x, y), swap(fx, fy);\nupdate(1, id[fx], id[x], 1, cnt, 1);\nx = f[fx], fx = top[x]; ///\u8df3\u8f6c\u5230\u53e6\u4e00\u6761\u91cd\u94fe\n}\nif (id[x] &gt; id[y])\nswap(x, y);\nupdate(1, id[x] + 1, id[y], 1, cnt, 1);\n}\nll query_chain(ll x, ll y)\n{\nll fx = top[x], fy = top[y], ans = 0;\nwhile (fx != fy) ///\u4e0d\u5728\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\n{\nif (dep[fx] &lt; dep[fy])\nswap(x, y), swap(fx, fy);\nans += query(1, id[fx], id[x], 1, cnt);\nx = f[fx], fx = top[x]; ///\u8df3\u8f6c\u5230\u53e6\u4e00\u6761\u91cd\u94fe\n}\nif (id[x] &gt; id[y])\nswap(x, y);\nans += query(1, id[x] + 1, id[y], 1, cnt);\nreturn ans;\n}\nint main()\n{\nll n, m, from, to;\nscanf(\"%lld%lld\", &amp;n, &amp;m);\nfor (ll i = 1; i &lt;= n - 1; i++)\n{\nscanf(\"%lld%lld\", &amp;from, &amp;to);\nadd_edge(from, to);\nadd_edge(to, from);\n}\nf[1] = 0, dep[1] = 1;\ndfs1(1, 0), dfs2(1, 1);\nchar c[10];\nfor (ll i = 1; i &lt;= m; i++)\n{\nscanf(\"%s%lld%lld\", c + 1, &amp;from, &amp;to);\nif (c[1] == 'P')\nupdate_chain(from, to);\nelse\nprintf(\"%lld\\n\", query_chain(from, to));\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_10","title":"\u5206\u5c42\u6700\u77ed\u8def","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair&lt;int, int&gt; pii;\nconst int N = 100000 + 5;\nconst int K = 10 + 5;\nconst ll inf = 0x3f3f3f3f3f3f3f3f;\n\nvector&lt; pii &gt; e[N];\n\nstruct Info {\nint pos, num;\nll val;\ninline Info(){}\ninline Info(int _pos, int _num, ll _val) {\npos = _pos, num = _num, val = _val;\n}\ninline bool operator &lt; (const Info &amp; b) const {\nreturn val &gt; b.val;\n}\n};\n\nll f[N][K];\nbool vis[N][K];\npriority_queue&lt;Info&gt; q;\n\nclass TaskL {\npublic:\nvoid solve(std::istream&amp; in, std::ostream&amp; out) {\nint T;\nin &gt;&gt; T;\nwhile (T--) {\nint n, m, k;\nin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\nwhile (q.size()) q.pop();\nfor (int i = 1; i &lt;= n; ++i) {\ne[i].clear();\nfor (int j = 0; j &lt;= k; ++j) {\nf[i][j] = inf;\nvis[i][j] = false;\n}\n}\nfor (int i = 1, x, y, z; i &lt;= m; ++i) {\nin &gt;&gt; x &gt;&gt; y &gt;&gt; z;\ne[x].push_back({y, z});\n}\nf[1][0] = 0;\nq.push(Info(1, 0, 0));\nwhile (q.size()) {\nInfo now = q.top(); q.pop();\nif (vis[now.pos][now.num] == true) continue;\nvis[now.pos][now.num] = true;\nfor (int i = 0; i &lt; e[now.pos].size(); ++i) {\nint to = e[now.pos][i].first, val = e[now.pos][i].second;\nif (f[to][now.num] &gt; f[now.pos][now.num] + val) {\nf[to][now.num] = f[now.pos][now.num] + val;\nq.push(Info(to, now.num, f[to][now.num]));\n}\nif (now.num &lt; k &amp;&amp; f[to][now.num + 1] &gt; f[now.pos][now.num]) {\nf[to][now.num + 1] = f[now.pos][now.num];\nq.push(Info(to, now.num + 1, f[to][now.num + 1]));\n}\n}\n}\nll ans = inf;\nfor (int i = 0; i &lt;= k; ++i) {\nans = min(ans, f[n][i]);\n}\nout &lt;&lt; ans &lt;&lt; endl;\n}\n}\n};\n\n\nint main()\n{\nios::sync_with_stdio(false);\ncin.tie(0);\ncout.tie(0);\nTaskL solver;\nstd::istream&amp; in(std::cin);\nstd::ostream&amp; out(std::cout);\nsolver.solve(in, out);\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#lct","title":"LCT \u52a8\u6001\u6811","text":"<p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://www.luogu.com.cn/problem/P3690</p> <p>https://www.cnblogs.com/zwfymqz/p/7896036.html#!comments</p> <p>https://www.cnblogs.com/zzy2005/p/10312977.html</p> <p>https://www.cnblogs.com/JeremyGJY/p/5921594.html</p> <p>https://blog.csdn.net/qq_36551189/article/details/79152612</p> <pre><code>#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll f[100500] = {0}, c[100500][2] = {0}, v[100500] = {0}, s[100500] = {0}, st[100500] = {0};\nbool r[100500] = {0};\n//\u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u4e00\u4e2aSplay\u7684\u6839\ninline bool nroot(register ll x)\n{\nreturn c[f[x]][0] == x || c[f[x]][1] == x;\n//\u539f\u7406\u4e3a\u5982\u679c\u8fde\u7684\u662f\u8f7b\u8fb9\uff0c\u4ed6\u7684\u7236\u4eb2\u7684\u513f\u5b50\u91cc\u6ca1\u6709\u5b83\n}\n//\u4e0a\u4f20\u4fe1\u606f\ninline void pushup(ll x)\n{\ns[x] = s[c[x][0]] ^ s[c[x][1]] ^ v[x];\n}\n//\u7ffb\u8f6c\u64cd\u4f5c\ninline void pushr(register ll x)\n{\nregister ll t = c[x][0];\nc[x][0] = c[x][1];\nc[x][1] = t;\nr[x] ^= 1;\n}\n//\u5224\u65ad\u5e76\u91ca\u653e\u61d2\u6807\u8bb0\ninline void pushdown(register ll x)\n{\nif (r[x])\n{\nif (c[x][0])\npushr(c[x][0]);\nif (c[x][1])\npushr(c[x][1]);\nr[x] = 0;\n}\n}\n//\u4e00\u6b21\u65cb\u8f6c\ninline void rotate(register ll x)\n{\nregister ll y = f[x], z = f[y], k = c[y][1] == x, w = c[x][!k];\nif (nroot(y))\nc[z][c[z][1] == y] = x;\nc[x][!k] = y;\nc[y][k] = w;\nif (w)\nf[w] = y;\nf[y] = x;\nf[x] = z;\npushup(y);\n}\n//\u53ea\u4f20\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u56e0\u4e3a\u6240\u6709\u64cd\u4f5c\u7684\u76ee\u6807\u90fd\u662f\u8be5Splay\u7684\u6839\ninline void splay(register ll x)\n{\nregister ll y = x, z = 0;\nst[++z] = y; //st\u4e3a\u6808\uff0c\u6682\u5b58\u5f53\u524d\u70b9\u5230\u6839\u7684\u6574\u6761\u8def\u5f84\uff0cpushdown\u65f6\u4e00\u5b9a\u8981\u4ece\u4e0a\u5f80\u4e0b\u653e\u6807\u8bb0\nwhile (nroot(y))\nst[++z] = y = f[y];\nwhile (z)\npushdown(st[z--]);\nwhile (nroot(x))\n{\ny = f[x];\nz = f[y];\nif (nroot(y))\nrotate((c[y][0] == x) ^ (c[z][0] == y) ? x : y);\nrotate(x);\n}\npushup(x);\n}\n//\u8bbf\u95ee\ninline void access(register ll x)\n{\nfor (register ll y = 0; x; x = f[y = x])\nsplay(x), c[x][1] = y, pushup(x);\n}\n//\u6362\u6839\ninline void makeroot(register ll x)\n{\naccess(x);\nsplay(x);\npushr(x);\n}\n//\u627e\u6839\uff08\u5728\u771f\u5b9e\u7684\u6811\u4e2d\u7684\uff09\ninline ll findroot(register ll x)\n{\naccess(x);\nsplay(x);\nwhile (c[x][0])\npushdown(x), x = c[x][0];\nsplay(x);\nreturn x;\n}\n//\u63d0\u53d6\u8def\u5f84\ninline void split(register ll x, register ll y)\n{\nmakeroot(x);\naccess(y);\nsplay(y);\n}\n//\u8fde\u8fb9\ninline void link(register ll x, register ll y)\n{\nmakeroot(x);\nif (findroot(y) != x)\nf[x] = y;\n}\n//\u65ad\u8fb9\nvoid cut(register ll x, register ll y)\n{\nmakeroot(x);\nif (findroot(y) == x &amp;&amp; f[y] == x &amp;&amp; !c[y][0])\n{\nf[y] = c[x][1] = 0;\npushup(x);\n}\n}\n\nint main()\n{\nint n, m;\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; i++) //\u7ed9\u5b9a n \u4e2a\u70b9\u4ee5\u53ca\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\nscanf(\"%d\", &amp;v[i]);\nfor (int i = 1; i &lt;= m; i++)\n{\nint opt, x, y;\nscanf(\"%d%d%d\", &amp;opt, &amp;x, &amp;y);\nif (opt == 0) //\u4ee3\u8868\u8be2\u95ee\u4ece x \u5230 y \u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u6743\u503c\u7684 xor \u548c\u3002\u4fdd\u8bc1 x \u5230 y \u662f\u8054\u901a\u7684\u3002\n{\nsplit(x, y);\nprintf(\"%d\\n\", s[y]);\n}\nelse if (opt == 1) //\u4ee3\u8868\u8fde\u63a5 x \u5230 y\uff0c\u82e5 x \u5230 y \u5df2\u7ecf\u8054\u901a\u5219\u65e0\u9700\u8fde\u63a5\u3002\n{\nlink(x, y);\n}\nelse if (opt == 2) //\u4ee3\u8868\u5220\u9664\u8fb9 (x,y)\uff0c\u4e0d\u4fdd\u8bc1\u8fb9 (x,y) \u5b58\u5728\u3002\n{\ncut(x, y);\n}\nelse if (opt == 3) //\u4ee3\u8868\u5c06\u70b9 x \u4e0a\u7684\u6743\u503c\u53d8\u6210 y\u3002\n{\nsplay(x);\nv[x] = y;\n}\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_11","title":"\u6570\u636e\u7ed3\u6784","text":""},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_12","title":"\u6811\u72b6\u6570\u7ec4\u524d\u7f00\u548c","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll n,m;\nll a[100500]={0};\nll c[100500]={0};\nll lowbit(ll x)\n{\nreturn x&amp;(-x);\n}\nll update(ll k,ll x)\n{\nfor(ll i=k;i&lt;=n;i+=lowbit(i))\nc[i]+=x;\n}\nll sum1(ll k)\n{\nll ans=0;\nfor(ll i=k;i&gt;=1;i-=lowbit(i))\nans+=c[i];\nreturn ans;\n}\nint main()\n{\nll a1,b1,c1;\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(ll i=1;i&lt;=m;i++)\n{\nscanf(\"%lld%lld%lld\",&amp;a1,&amp;b1,&amp;c1);\nif(a1==0)\nupdate(b1,c1);\nelse\nprintf(\"%lld\\n\",sum1(c1)-sum1(b1-1));\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_13","title":"\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c","text":"<pre><code>#include &lt;stdio.h&gt;\nusing namespace std;\ntypedef long long ll;\nll num[100500]={0};\nll lazy[800500]={0};\nll sum[800500]={0};\nvoid push_up(ll t)\n{\nsum[t]=sum[2*t]+sum[2*t+1];\n}\nvoid push_down(ll t,ll l,ll r)\n{\nif(lazy[t]==0)\nreturn ;\nlazy[2*t]+=lazy[t];\nlazy[2*t+1]+=lazy[t];\nll mid=(l+r)/2;\nsum[2*t]+=lazy[t]*(mid-l+1);\nsum[2*t+1]+=lazy[t]*(r-mid);\nlazy[t]=0;\n}\nvoid build(ll t,ll l,ll r)\n{\nif(l==r)\n{\nsum[t]=num[l];\nreturn ;\n}\nll mid=(l+r)/2;\nbuild(2*t,l,mid);\nbuild(2*t+1,mid+1,r);\npush_up(t);\n}\nvoid update(ll t,ll l,ll r,ll L,ll R,ll add) ///l,r\u4e3a\u66f4\u65b0\u533a\u95f4\uff0cL,R\u4e3a\u7ebf\u6bb5\u6811\u533a\u95f4\n{\nif(l&lt;=L&amp;&amp;r&gt;=R)\n{\nsum[t]+=add*(R-L+1);\nlazy[t]+=add;\nreturn ;\n}\npush_down(t,L,R);\nll mid=(L+R)/2;\nif(l&lt;=mid)\nupdate(2*t,l,r,L,mid,add);\nif(mid&lt;r)\nupdate(2*t+1,l,r,mid+1,R,add);\npush_up(t);\n}\nll query_sum(ll t,ll l,ll r,ll L,ll R) ///l,r\u4e3a\u66f4\u65b0\u533a\u95f4\uff0cL,R\u4e3a\u7ebf\u6bb5\u6811\u533a\u95f4\n{\nif(l&lt;=L&amp;&amp;r&gt;=R)\n{\nreturn sum[t];\n}\npush_down(t,L,R);\nll mid=(L+R)/2,sum=0;\nif(l&lt;=mid)\nsum+=query_sum(2*t,l,r,L,mid);\nif(mid&lt;r)\nsum+=query_sum(2*t+1,l,r,mid+1,R);\nreturn sum;\n}\nint main()\n{\nll n,m;\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(ll i=1;i&lt;=n;i++)\nscanf(\"%lld\",&amp;num[i]);\nbuild(1,1,n);\nchar s[10];\nll l,r,x;\nfor(ll i=1;i&lt;=m;i++)\n{\nscanf(\"%s%lld%lld\",s,&amp;l,&amp;r);\nif(s[0]=='Q')\n{\nprintf(\"%lld\\n\",query_sum(1,l,r,1,n));\n}\nelse\n{\nscanf(\"%lld\",&amp;x);\nupdate(1,l,r,1,n,x);\n}\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_14","title":"\u5212\u5206\u6811\u6c42\u4e2d\u4f4d\u6570","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nint tree[20][100500]={0};\nint to[20][100500]={0};\nint num[100500]={0};\nint sorted[100500]={0};\nint build(int l,int r,int deep)\n{\nif(l==r)\nreturn 0;\nint mid=(l+r)/2;\nint midd=sorted[mid];\nint suppose=mid-l+1;\nfor(int i=l;i&lt;=r;i++)\n{\nif(tree[deep][i]&lt;midd)\nsuppose--;\n}\nint sleft=l,sright=mid+1;\nfor(int i=l;i&lt;=r;i++)\n{\nif(i==l)\nto[deep][l]=0;\nelse\nto[deep][i]=to[deep][i-1];\nif(tree[deep][i]&lt;midd)\n{\nto[deep][i]++;\ntree[deep+1][sleft++]=tree[deep][i];\n}\nelse if(tree[deep][i]==midd&amp;&amp;suppose&gt;0)\n{\nsuppose--;\nto[deep][i]++;\ntree[deep+1][sleft++]=tree[deep][i];\n}\nelse\n{\ntree[deep+1][sright++]=tree[deep][i];\n}\n}\nbuild(l,mid,deep+1);\nbuild(mid+1,r,deep+1);\n}\nint query(int l,int r,int L,int R,int k,int deep)\n{\nif(L==R)\nreturn tree[deep][L];\nint mid=(l+r)/2;\nint lef;\nint toleft;\nif(l==L)\nlef=0,toleft=to[deep][R];\nelse\nlef=to[deep][L-1],toleft=to[deep][R]-lef;\nif(k&lt;=toleft)\n{\nreturn query(l,mid,l+lef,l+toleft+lef-1,k,deep+1);\n}\nelse\n{\nreturn query(mid+1,r,mid+L-l-lef+1,mid+R-l-toleft-lef+1,k-toleft,deep+1);\n}\n}\nint main()\n{\nint n,m,summ=0;\nwhile(scanf(\"%d\",&amp;n)!=EOF)\n{\nsumm++;\nfor(int i=1;i&lt;=n;i++)\n{\nscanf(\"%d\",&amp;num[i]);\nsorted[i]=num[i];\ntree[0][i]=num[i];\n}\nsort(sorted+1,sorted+n+1);\nbuild(1,n,0);\nprintf(\"Case %d:\\n\",summ);\nscanf(\"%d\",&amp;m);\nfor(int i=1;i&lt;=m;i++)\n{\nint a,b,c; /// a,b,c\u4ee3\u8868\u67e5\u8be2a\u5230b\u533a\u95f4\u5185\u7b2cc\u5927\u7684\u6570\nscanf(\"%d%d\",&amp;a,&amp;b);\nc=(b-a)/2+1;\nprintf(\"%d\\n\",query(1,n,a,b,c,0));\n}\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_15","title":"\u5355\u8c03\u6808","text":"<p>\u5355\u8c03\u6808 \u662f\u5728\u6808\u7684**\u5148\u8fdb\u540e\u51fa**\u57fa\u7840\u4e4b\u4e0a\u989d\u5916\u6dfb\u52a0\u4e00\u4e2a\u7279\u6027\uff1a**\u4ece\u6808\u9876\u5230\u6808\u5e95**\u7684\u5143\u7d20\u662f\u4e25\u683c\u9012\u589e\u6216\u9012\u51cf\u3002</p> <p>\u4e3a\u4e86\u7ef4\u62a4\u6808\u7684\u5355\u8c03\u6027\uff0c\u5728\u8fdb\u6808\u8fc7\u7a0b\u4e2d\u9700\u8981\u8fdb\u884c\u5224\u65ad\uff0c\u5177\u4f53\u8fdb\u6808\u8fc7\u7a0b\u5982\u4e0b\uff1a\u5047\u8bbe\u5f53\u524d\u8fdb\u6808\u5143\u7d20\u4e3a e\uff0c</p> <ul> <li>\u5bf9\u4e8e\u5355\u8c03\u9012\u589e\u6808\uff0c\u4ece\u6808\u9876\u5f00\u59cb\u904d\u5386\u5143\u7d20\uff0c\u628a\u5c0f\u4e8e e \u6216\u8005\u7b49\u4e8e e \u7684\u5143\u7d20\u5f39\u51fa\u6808\uff0c\u76f4\u81f3\u9047\u89c1\u4e00\u4e2a\u5927\u4e8e e \u7684\u5143\u7d20\u6216\u8005\u6808\u4e3a\u7a7a\u4e3a\u6b62\uff0c\u7136\u540e\u518d\u628a e \u538b\u5165\u6808\u4e2d\uff0c\u8fd9\u6837\u5c31\u80fd\u6ee1\u8db3\u4ece\u6808\u9876\u5230\u6808\u5e95\u7684\u5143\u7d20\u662f\u9012\u589e\u7684</li> <li>\u5bf9\u4e8e\u5355\u8c03\u9012\u51cf\u6808\uff0c\u5219\u6bcf\u6b21\u5f39\u51fa\u7684\u662f\u5927\u4e8e e \u6216\u8005\u7b49\u4e8e e \u7684\u5143\u7d20\uff0c\u76f4\u81f3\u9047\u89c1\u4e00\u4e2a\u5c0f\u4e8ee\u7684\u5143\u7d20\u6216\u8005\u6808\u4e3a\u7a7a\u4e3a\u6b62</li> </ul> <p>\u5355\u8c03\u6808\u7684\u4f5c\u7528\u5728\u4e8e</p> <ul> <li>\u5355\u8c03\u9012\u589e\u6808\u4ece\u6808\u9876\u5230\u6808\u5e95\u662f\u9012\u589e\u7684\uff0c\u6808\u4e2d\u4fdd\u7559\u7684\u90fd\u662f\u6bd4\u5f53\u524d\u5165\u6808\u5143\u7d20\u5927\u7684\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u5165\u6808\u5143\u7d20\u5de6\u8fb9\u6bd4\u4ed6\u5927\u7684\u5143\u7d20</li> <li>\u5355\u8c03\u9012\u51cf\u6808\u4ece\u6808\u9876\u5230\u6808\u5e95\u662f\u9012\u51cf\u7684\uff0c\u6808\u4e2d\u4fdd\u7559\u7684\u90fd\u662f\u6bd4\u5f53\u524d\u5165\u6808\u5143\u7d20\u5c0f\u7684\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u5165\u6808\u5143\u7d20\u5de6\u8fb9\u6bd4\u4ed6\u5c0f\u7684\u5143\u7d20</li> </ul> <p>\u5355\u8c03\u6808\u6c42\u533a\u95f4\u957f\u5ea6\u548c\u533a\u95f4\u6700\u5c0f\u503c\u4e58\u79ef\u6700\u5927\u503c\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nll pos, val;\n};\nnode s[2005000] = {0};\nll a[2005000] = {0};\nint main()\n{\nll n, top = 0, ans = 0;\nscanf(\"%lld\", &amp;n);\nfor (int i = 1; i &lt;= n; i++)\nscanf(\"%lld\", &amp;a[i]);\nfor (int j = 1; j &lt;= n + 1; j++)\n{\nif (top == 0)\n{\ns[++top] = {j, a[j]};\n}\nelse\n{\nwhile (s[top].val &gt; a[j]) ///\u9012\u589e\u6808\n{\nll tmp = (j - s[top - 1].pos - 1) * s[top].val;\nans = max(ans, tmp);\ntop--;\n}\ns[++top] = {j, a[j]};\n}\n}\nprintf(\"%lld\\n\", ans);\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_16","title":"\u7ebf\u6027\u57fa","text":"<p>\u7ebf\u6027\u57fa\u6c42\u4ea4\uff0c\u53c2\u8003\u4e0e\uff1ahttps://blog.csdn.net/qcwlmqy/article/details/97584411</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int maxn=50500;\ntypedef long long ll;\nclass Bit_Set\n{\npublic:\nll d[32];\nBit_Set()\n{\nmemset(d,0,sizeof(d));\n}\nBit_Set(const Bit_Set&amp; t)\n{\nfor(int i=0; i&lt;=31; i++)\nd[i]=t.d[i];\n}\nvoid clear()\n{\nmemset(d,0,sizeof(d));\n}\nvoid insert(ll x)\n{\nfor(int i=31; i&gt;=0; i--)\n{\nif(x&amp;(ll(1)&lt;&lt;i))\n{\nif(!d[i])\n{\nd[i]=x;\nreturn ;\n}\nx^=d[i];\n}\n}\n}\nbool check(ll x)\n{\nfor(int i=31; i&gt;=0; i--)\n{\nif(x&amp;(ll(1)&lt;&lt;i))\n{\nif(!d[i])\nreturn false;\nx^=d[i];\n}\n}\nreturn true;\n}\nvoid show()\n{\nfor(int i=0; i&lt;=31; i++)\ncout&lt;&lt;i&lt;&lt;' '&lt;&lt;d[i]&lt;&lt;endl;\n}\nfriend Bit_Set operator + (const Bit_Set&amp; a, const Bit_Set&amp; b)\n{\nBit_Set a_b(a),c,res;\nfor(int i=31; i&gt;=0; i--)\n{\nif(b.d[i])\n{\nll x=b.d[i],k=ll(1)&lt;&lt;i;\nbool flag=true;\nfor(int j=31; j&gt;=0; j--)\n{\nif(x &amp; (ll(1) &lt;&lt; j))\n{\nif(a_b.d[j])\n{\nx^=a_b.d[j];\nk^=c.d[j];   //\u5c06\u7528\u4e0a\u7684b\u5143\u7d20\u8ba1\u5165k\n}\nelse\n{\nflag=false; //\u82e5\u4e0d\u80fd\u88aba_b\u8868\u793a\uff0c\u5c06b[i]\u52a0\u5165\u6570\u7ec4\na_b.d[j]=x;\nc.d[j]^=k;   //\u5c06a_b\u4e2db\u5143\u7d20\u6807\u8bb0\nbreak;\n}\n}\n}\nif(flag)\n{\nll x=0;\nfor(int j=31; j&gt;=0; j--)\n{\nif(k&amp;(ll(1)&lt;&lt;j))\nx^=b.d[j];\n//\u5c06\u7528\u4e0a\u7684b\u5143\u7d20\u548c\u672c\u8eab\u7684b[i]\u5f02\u6216\u5728\u4e00\u8d77\uff0c\n//\u7531(a[argv---]^b[argv---]^b[i]==0),\u6240\u5f97\u5373\u4e3aV1\u7684\u8d21\u732e\n}\nres.insert(x);\n}\n}\n}\nreturn res;\n}\n};\nBit_Set tree[maxn&lt;&lt;2];\nvoid build(ll t,ll l,ll r)\n{\nif(l==r)\n{\nint k;\nll x;\nscanf(\"%d\",&amp;k);\nwhile(k--)\n{\nscanf(\"%lld\",&amp;x);\ntree[t].insert(x);\n}\nreturn ;\n}\nint mid=(l+r)/2;\nbuild(2*t,l,mid);\nbuild(2*t+1,mid+1,r);\ntree[t]=tree[2*t]+tree[2*t+1];\n}\nint query(ll t,ll l,ll r,ll L,ll R,ll x)\n{\nif(l&lt;=L&amp;&amp;R&lt;=r)\n{\nreturn tree[t].check(x);\n}\nint flag=1;\nint mid=(L+R)/2;\nif(l&lt;=mid)\nflag&amp;=query(2*t,l,r,L,mid,x);\nif(r&gt;mid)\nflag&amp;=query(2*t+1,l,r,mid+1,R,x);\nreturn flag;\n}\nint main()\n{\nint n,m;\nscanf(\"%d%d\",&amp;n,&amp;m);\nbuild(1,1,n);\nwhile(m--)\n{\nint l,r,x;\nscanf(\"%d%d%d\",&amp;l,&amp;r,&amp;x);\nif(query(1,l,r,1,n,x))\nputs(\"YES\");\nelse\nputs(\"NO\");\n}\n}\n</code></pre> <p>\u7ebf\u6027\u57fa\u57fa\u7840</p> <p>\u6027\u8d28</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b58\u5728\u4e00\u4e9b\u6570\u6784\u6210\u8be5\u6570\u7ec4\u7684\u7ebf\u6027\u57fa</p> <p>\u7ebf\u6027\u57fa\u6709\u4e09\u5927\u5f88\u4f18\u7f8e\u7684\u6027\u8d28</p> <ul> <li>\u6570\u7ec4\u4e2d\u6240\u6709\u6570\u5747\u53ef\u4ee5\u7531\u7ebf\u6027\u57fa\u4e2d\u90e8\u5206\u6570\u5f02\u6216\u5f97\u5230</li> <li>\u6570\u7ec4\u4e2d\u6240\u6709\u6570\u5f02\u6216\u51fa\u6765\u5747\u4e0d\u4e3a0</li> <li>\u5bf9\u4e8e\u540c\u4e00\u6570\u7ec4\u7ebf\u6027\u57fa\u4e2a\u6570\u552f\u4e00   \u4f8b\u59822 \uff0c4 \uff0c 5 \uff0c 6 ,\u7531\u7ebf\u6027\u57fa1 , 2 , 4 1 , 2 , 4 \u6570\u7ec4\u6240\u6709\u6570\u5747\u53ef\u4ee5\u75311,2,41,2,41 , 2 , 4 1 , 2 , 4 \u6570\u7ec4\u6240\u6709\u6570\u5747\u53ef\u4ee5\u75311,2,41,2,4\u5f02\u6216\u5f97\u5230</li> </ul> <p>\u7ebf\u6027\u57fa\u6784\u9020</p> <p>\u6570\u7ec4\u6bcf\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u5bf9\u7ebf\u6027\u57fa\u8fdb\u884c\u4fee\u6539 \u4ee4\u7ebf\u6027\u57fa\u4e3ad[32] ,\u6570\u7ec4\u957f\u5ea6\u4e3amax(a[i])\u7684\u6700\u5927\u4e8c\u8fdb\u5236\uff08\u6240\u6709\u6570\u5747\u53ef\u4ee5\u7531$ 1 , 2 , 4 \u22ef ,2^n$ \u8868\u793a\uff09</p> <pre><code>void add(int x) {\nfor(int i=31; i&gt;=0; i--) {  //i\u4e3a\u7ebf\u6027\u57fa\u4e0b\u6807\nif(x&amp;(1&lt;&lt;i)) { if(d[i])x^=d[i];    //\u82e5\u8be5\u4e8c\u8fdb\u5236\u4f4d\u5df2\u6709\u503c\uff0c\u5f02\u6216\u5bfb\u627e\u7ebf\u6027\u57fa\u80fd\u5426\u8868\u8fbex^d[i]\nelse {\nd[i]=x;         //\u82e5\u4e8c\u8fdb\u5236\u4f4d\u6ca1\u6709\u503c\uff0c\u8bf4\u660ex\u4e0d\u80fd\u88ab\u7ebf\u6027\u57fa\u8868\u8fbe\uff0c\u4ee4d[i]=x\nbreak;          //\u8bb0\u5f97\u5982\u679c\u63d2\u5165\u6210\u529f\u4e00\u5b9a\u8981\u9000\u51fa\n}\n}\n}\n}\n</code></pre> <p>\u6784\u9020\u5408\u7406\u6027\uff1a</p> <ul> <li>\u82e5\u80fd\u63d2\u5165x \uff0c\u5219\u5c06d[i] =x\uff0cx\u53ef\u4ee5\u7531\u7ebf\u6027\u57fa\u8868\u8fbe</li> <li>\u82e5\u4e0d\u80fd\u63d2\u5165x\uff0c\u5219x\u6700\u7ec8\u5f02\u6216\u4e3a0\uff0c\u5373\u53ef\u4ee5\u7531\u7ebf\u6027\u57fa\u8868\u8fbe</li> </ul> <p>\u533a\u95f4\u5f02\u6216\u6700\u5927\u503c</p> <p>\u6570\u7ec4( L , R ) \u5185\u53d6\u82e5\u5e72\u4e2a\u6570\uff0c\u4f7f\u8fd9\u4e9b\u6570\u5f02\u6216\u540e\u5f97\u5230\u7684\u503c\u6700\u5927</p> <p>\u4ee4d [ 32 ] \u6570\u7ec4\u8868\u793a\u7ebf\u6027\u57fa\u7684\u503c\uff0cp [ 32 ]p [ 32 ]p [ 32 ]p [ 32 ]\u6570\u7ec4\u8868\u793a\u7ebf\u6027\u57fa\u7684\u4f4d\u7f6e\uff08\u4e3a\u4e86\u4fbf\u4e8e\u8be2\u95ee\uff0c\u4f4d\u7f6e\u5c3d\u91cf\u5b58\u504f\u53f3\u7684\uff09</p> <pre><code>int ask(int l,int r){\nint res=0;\nfor\uff08int i=31;i&gt;=0;i--\uff09\nif(p[i]&gt;=l&amp;&amp;(res^d[i])&gt;res)\nres^=d[i];\nreturn res;\n}\n</code></pre> <p>\u8d2a\u5fc3\uff1a\u9ad8\u4f4d\u80fd\u53d8\u62101\uff0c\u5c31\u53d8\u62101\uff08\u9ad8\u4f4d1\u6bd4\u4f4e\u4f4d\u90fd\u53d8\u62101\u90fd\u6709\u4ef7\u503c\uff09</p> <p>\u533a\u95f4\u5f02\u6216\u7b2ck\u5927</p> <p>\u5148\u5c06\u7ebf\u6027\u57fa\u5904\u7406\u6210$ 1 , 2 , 4 , \u22ef  ,2^n$ \u7684\u4e8c\u8fdb\u5236\u8868\u8fbe\u5f62\u5f0f</p> <p>\u53bb\u9664\u4e3a0\u7684\u5f02\u6216\u503c\uff0c\u6bcf\u4e00\u4f4dd[i] =1 \u76f8\u5f53\u4e8e\u53ef\u4ee5\u8868\u8fbe\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\u589e\u52a0\u4e00\u4f4d</p> <pre><code>void work() {           //\u5c06\u7ebf\u6027\u57fa\u8f6c\u5316\u4e3a2\u8fdb\u5236\nfor(int i=1; i&lt;=31; i++)\nfor(int j=1; j&lt;=i; j++)\nif(d[i]&amp;(1&lt;&lt;(j-1)))\nd[i]^=d[j-1];\n}\nint k_th(int k) {\nif(k==1&amp;&amp;tot&lt;n)return 0;   //\u7279\u5224\u4e00\u4e0b\uff0c\u5047\u5982k=1\uff0c\u5e76\u4e14\u539f\u6765\u7684\u5e8f\u5217\u53ef\u4ee5\u5f02\u6216\u51fa0\uff0c\u5c31\u8981\u8fd4\u56de0\uff0c\n//tot\u8868\u793a\u7ebf\u6027\u57fa\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\uff0cn\u8868\u793a\u5e8f\u5217\u957f\u5ea6\nif(tot&lt;n)k--;       //\u7c7b\u4f3c\u4e0a\u9762\uff0c\u53bb\u63890\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u7ebf\u6027\u57fa\u4e2d\u53ea\u80fd\u5f02\u6216\u51fa\u4e0d\u4e3a0\u7684\u89e3\nwork();\nint ans=0;\nfor(int i=0; i&lt;=31; i++)\nif(d[i]!=0) {\nif(k&amp;1)ans^=d[i];\nk&gt;&gt;=1;\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_17","title":"\u4e3b\u5e2d\u6811","text":"<p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://blog.csdn.net/zuzhiang/article/details/78173412</p> <p>https://www.cnblogs.com/s1124yy/p/6258026.html</p> <p>https://blog.csdn.net/tianwei0822/article/details/79439054</p> <p>\u4e3b\u5e2d\u6811\u7ef4\u62a4\u533a\u95f4\u7b2ck\u5927\u6570</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint L[3200500] = {0}, R[3200500] = {0}, sum[3200500] = {0};\nint tot = 0;\nint a[3200500] = {0}, hash1[3200500] = {0}, T[3200500] = {0};\nint build(int l, int r)\n{\nint root = ++tot;\nsum[root] = 0;\nif (l &lt; r)\n{\nint mid = (l + r) / 2;\nL[root] = build(l, mid);\nR[root] = build(mid + 1, r);\n}\nreturn root;\n}\nint update(int pre, int l, int r, int pos)\n{\nint root = ++tot;\nL[root] = L[pre];\nR[root] = R[pre];\nsum[root] = sum[pre] + 1;\nif (l &lt; r)\n{\nint mid = (l + r) / 2;\nif (pos &lt;= mid)\nL[root] = update(L[pre], l, mid, pos);\nelse\nR[root] = update(R[pre], mid + 1, r, pos);\n}\nreturn root;\n}\nint query(int l1, int r1, int l, int r, int k) //\u53c2\u6570\u5206\u522b\u4e3a\uff1a\u4e24\u9897\u7ebf\u6bb5\u6811\u6839\u8282\u70b9\u7684\u7f16\u53f7\uff0c\u5de6\u53f3\u7aef\u70b9\uff0c\u7b2ck\u5927\n{\nif (l &gt;= r)\nreturn l;\nint mid = (l + r) / 2;\nint num = sum[L[r1]] - sum[L[l1]];\nif (num &gt;= k)\nreturn query(L[l1], L[r1], l, mid, k);\nelse\nreturn query(R[l1], R[r1], mid + 1, r, k - num);\n}\nint main()\n{\nint t;\nscanf(\"%d\", &amp;t);\nwhile (t--)\n{\ntot = 0;\nint n, m;\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;a[i]), hash1[i] = a[i];\nsort(hash1 + 1, hash1 + n + 1);\nint d = unique(hash1 + 1, hash1 + n + 1) - hash1 - 1;\nT[0] = build(1, d);\nfor (int i = 1; i &lt;= n; i++)\n{\nint pos = lower_bound(hash1 + 1, hash1 + d + 1, a[i]) - hash1;\nT[i] = update(T[i - 1], 1, d, pos);\n}\nfor (int i = 1; i &lt;= m; i++)\n{\nint l, r, k;\nscanf(\"%d%d%d\", &amp;l, &amp;r, &amp;k);\nint pos = query(T[l - 1], T[r], 1, d, k);\nprintf(\"%d\\n\", hash1[pos]);\n}\n}\n}\n</code></pre> <p>\u67e5\u8be2\u533a\u95f4\u5185\u5c0f\u4e8e\u7b49\u4e8e\u7ed9\u5b9a\u7684K\u7684\u6570\u7684\u4e2a\u6570</p> <p>\u9898\u76ee\u94fe\u63a5\uff1ahttps://acm.hdu.edu.cn/showproblem.php?pid=4417</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint L[3200500] = {0}, R[3200500] = {0}, sum[3200500] = {0};\nint tot = 0;\nint a[3200500] = {0}, hash1[3200500] = {0}, T[3200500] = {0};\nint build(int l, int r)\n{\nint root = ++tot;\nsum[root] = 0;\nif (l &lt; r)\n{\nint mid = (l + r) / 2;\nL[root] = build(l, mid);\nR[root] = build(mid + 1, r);\n}\nreturn root;\n}\nint update(int pre, int l, int r, int pos)\n{\nint root = ++tot;\nL[root] = L[pre];\nR[root] = R[pre];\nsum[root] = sum[pre] + 1;\nif (l &lt; r)\n{\nint mid = (l + r) / 2;\nif (pos &lt;= mid)\nL[root] = update(L[pre], l, mid, pos);\nelse\nR[root] = update(R[pre], mid + 1, r, pos);\n}\nreturn root;\n}\nint query(int l1, int r1, int l, int r, int k)\n{\nif (k &lt; hash1[l])\nreturn 0;\nif (hash1[r] &lt;= k)\nreturn sum[r1] - sum[l1];\nint mid = (l + r) / 2;\nif (k &lt;= hash1[mid])\n{\nreturn query(L[l1], L[r1], l, mid, k);\n}\nelse\n{\nint num = 0;\nnum += sum[L[r1]] - sum[L[l1]];\nnum += query(R[l1], R[r1], mid + 1, r, k);\nreturn num;\n}\n}\nint main()\n{\nint t;\nscanf(\"%d\", &amp;t);\nfor (int t1 = 1; t1 &lt;= t; t1++)\n{\ntot = 0;\nint n, m;\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;a[i]), hash1[i] = a[i];\nsort(hash1 + 1, hash1 + n + 1);\nint d = unique(hash1 + 1, hash1 + n + 1) - hash1 - 1;\nT[0] = build(1, d);\nfor (int i = 1; i &lt;= n; i++)\n{\nint pos = lower_bound(hash1 + 1, hash1 + d + 1, a[i]) - hash1;\nT[i] = update(T[i - 1], 1, d, pos);\n}\nprintf(\"Case %d:\\n\", t1);\nfor (int i = 1; i &lt;= m; i++)\n{\nint l, r, k;\nscanf(\"%d%d%d\", &amp;l, &amp;r, &amp;k);\nint ans = query(T[l], T[r + 1], 1, d, k);\nprintf(\"%d\\n\", ans);\n}\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#st","title":"ST\u8868","text":"<p>ST \u8868\u662f\u7528\u4e8e\u89e3\u51b3 \u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898 \u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898 \u662f\u6307\u5bf9\u4e8e\u8fd0\u7b97opt\uff0c\u6ee1\u8db3x\\quad opt\\quad x = x \uff0c\u5219\u5bf9\u5e94\u7684\u533a\u95f4\u8be2\u95ee\u5c31\u662f\u4e00\u4e2a\u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u6700\u5927\u503c\u6709max(x,x)=x\uff0cgcd \u6709gcd(x,x)=x \uff0c\u6240\u4ee5 RMQ \u548c\u533a\u95f4 GCD \u5c31\u662f\u4e00\u4e2a\u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898\u3002\u50cf\u533a\u95f4\u548c\u5c31\u4e0d\u5177\u6709\u8fd9\u4e2a\u6027\u8d28\uff0c\u5982\u679c\u6c42\u533a\u95f4\u548c\u7684\u65f6\u5019\u91c7\u7528\u7684\u9884\u5904\u7406\u533a\u95f4\u91cd\u53e0\u4e86\uff0c\u5219\u4f1a\u5bfc\u81f4\u91cd\u53e0\u90e8\u5206\u88ab\u8ba1\u7b97\u4e24\u6b21\uff0c\u8fd9\u662f\u6211\u4eec\u6240\u4e0d\u613f\u610f\u770b\u5230\u7684\u3002\u53e6\u5916\uff0c opt\u8fd8\u5fc5\u987b\u6ee1\u8db3\u7ed3\u5408\u5f8b\u624d\u80fd\u4f7f\u7528 ST \u8868\u6c42\u89e3\u3002</p> <p>\u4e00\u7ef4ST\u8868\u6a21\u677f</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#define max(a, b) (a &gt; b ? a : b)\n#define min(a, b) (a &lt; b ? a : b)\nusing namespace std;\nint a[50050] = {0}, dp_max[50050][30] = {0}, dp_min[50050][30] = {0};\nint n, m;\nvoid st()\n{\nfor (int i = 1; i &lt;= n; i++)\ndp_max[i][0] = dp_min[i][0] = a[i];\nfor (int j = 1; (1 &lt;&lt; j) &lt;= n; j++)\n{\nfor (int i = 1; i + (1 &lt;&lt; j) - 1 &lt;= n; i++)\n{\ndp_max[i][j] = max(dp_max[i][j - 1], dp_max[i + (1 &lt;&lt; (j - 1))][j - 1]);\ndp_min[i][j] = min(dp_min[i][j - 1], dp_min[i + (1 &lt;&lt; (j - 1))][j - 1]);\n}\n}\n}\nint query_max(int l, int r)\n{\nint k = log2(r - l + 1);\nreturn max(dp_max[l][k], dp_max[r - (1 &lt;&lt; k) + 1][k]);\n}\nint query_min(int l, int r)\n{\nint k = log2(r - l + 1);\nreturn min(dp_min[l][k], dp_min[r - (1 &lt;&lt; k) + 1][k]);\n}\nint main()\n{\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; i++)\nscanf(\"%d\", &amp;a[i]);\nst();\nwhile (m--)\n{\nint l, r;\nscanf(\"%d%d\", &amp;l, &amp;r);\nprintf(\"%d\\n\", query_max(l, r) - query_min(l, r));\n}\n}\n</code></pre> <p>\u4e00\u7ef4ST\u7ef4\u62a4GCD\u6a21\u677f</p> <p>\u9898\u76ee\u5927\u610f\u4e3a\u7ed9\u5b9a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217\uff0c\u540e\u9762\u53c8m\u6b21\u8be2\u95ee\uff0c\u8be2\u95ee\u6ee1\u8db3\u533a\u95f4gcd\u4e3a\u7ed9\u5b9a\u6570\u503c\u7684\u4e2a\u6570\u3002</p> <p>\u7b97\u6cd5\u4e3a\u4e8c\u5206+ST\u8868\uff0c\u7531\u4e8e\u533a\u95f4\u4e2d\u4e0d\u540cGCD\u4e2a\u6570\u6700\u591a\u4e3alog\u4e2a\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6nlog(n)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[100500] = {0}, dp[100500][30] = {0};\nmap&lt;ll, ll&gt; mp;\nll n, m, k;\nvoid st()\n{\nfor (ll i = 1; i &lt;= n; i++)\ndp[i][0] = a[i];\nfor (ll j = 1; (1 &lt;&lt; j) &lt;= n; j++)\n{\nfor (ll i = 1; i + (1 &lt;&lt; j) - 1 &lt;= n; i++)\n{\ndp[i][j] = __gcd(dp[i][j - 1], dp[i + (1 &lt;&lt; (j - 1))][j - 1]);\n}\n}\n}\nll query(ll l, ll r)\n{\nll k = log2(r - l + 1);\nreturn __gcd(dp[l][k], dp[r - (1 &lt;&lt; k) + 1][k]);\n}\nint main()\n{\nscanf(\"%lld\", &amp;n);\nfor (ll i = 1; i &lt;= n; i++)\nscanf(\"%lld\", &amp;a[i]);\nst();\nfor (ll i = 1; i &lt;= n; i++)\n{\nll cur = i, gc = a[i];\nwhile (cur &lt;= n)\n{\nll l = cur, r = n;\nwhile (l &lt; r)\n{\nll mid = (l + r + 1) / 2;\nif (query(cur, mid) == gc)\nl = mid;\nelse\nr = mid - 1;\n}\nif (mp.count(gc) == 0)\nmp[gc] = (l - cur + 1);\nelse\nmp[gc] += (l - cur + 1);\ncur = l + 1;\nif (cur &lt;= n)\ngc = __gcd(gc, a[cur]);\n}\n}\nscanf(\"%lld\", &amp;m);\nfor (ll i = 1; i &lt;= m; i++)\n{\nscanf(\"%lld\", &amp;k);\nprintf(\"%lld\\n\", mp[k]);\n}\nreturn 0;\n}\n</code></pre> <p>\u4e8c\u7ef4ST\u8868\u6a21\u677f</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint dp_max[300][300][20] = {0};\nint dp_min[300][300][30] = {0};\nint a[300][300] = {0};\nint n, m;\nvoid st()\n{\nfor (int i = 1; i &lt;= n; i++)\n{\nfor (int k = 0; (1 &lt;&lt; k) &lt;= m; k++)\n{\nfor (int j = 1; j + (1 &lt;&lt; k) - 1 &lt;= m; j++)\n{\nif (k == 0)\ndp_max[i][j][k] = dp_min[i][j][k] = a[i][j];\nelse\n{\ndp_max[i][j][k] = max(dp_max[i][j][k - 1], dp_max[i][j + (1 &lt;&lt; (k - 1))][k - 1]);\ndp_min[i][j][k] = min(dp_min[i][j][k - 1], dp_min[i][j + (1 &lt;&lt; (k - 1))][k - 1]);\n}\n}\n}\n}\n}\nint query_max(int x, int y, int xx, int yy)\n{\nint k = log2(yy - y + 1);\nint mm = 0;\nfor (int i = x; i &lt;= xx; i++)\nmm = max(mm, max(dp_max[i][y][k], dp_max[i][yy - (1 &lt;&lt; k) + 1][k]));\nreturn mm;\n}\nint query_min(int x, int y, int xx, int yy)\n{\nint k = log2(yy - y + 1);\nint mm = 0x3f3f3f3f;\nfor (int i = x; i &lt;= xx; i++)\nmm = min(mm, min(dp_min[i][y][k], dp_min[i][yy - (1 &lt;&lt; k) + 1][k]));\nreturn mm;\n}\nint main()\n{\nint b, k;\nscanf(\"%d%d%d\", &amp;n, &amp;b, &amp;k);\nm = n;\nfor (int i = 1; i &lt;= n; i++)\nfor (int j = 1; j &lt;= m; j++)\nscanf(\"%d\", &amp;a[i][j]);\nst();\nwhile (k--)\n{\nint p, q;\nscanf(\"%d%d\", &amp;p, &amp;q);\nint ans1 = query_max(p, q, p + b - 1, q + b - 1);\nint ans2 = query_min(p, q, p + b - 1, q + b - 1);\nprintf(\"%d\\n\", ans1 - ans2);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_18","title":"\u5b57\u7b26\u4e32","text":""},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#kmp","title":"KMP\u7b97\u6cd5","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod=1e9+7;\nconst ll N = 1005000;\nll Next[N];\nchar s[N];\nchar t[N];\nll  tlen,len;\nvoid getNext(char s[N])\n{\nll j=0,k=-1;\nNext[0]=-1;\nwhile(j&lt;tlen)\n{\nif(k==-1||s[j]==s[k])\n{\nNext[++j]=++k;\n}\nelse\nk=Next[k];\n}\n}\nint main()\n{\nwhile(1)\n{\nscanf(\"%s\",s);\nif(s[0]=='.')\nbreak;\ntlen=strlen(s);\nlen=tlen;\ngetNext(s);\nll kk=tlen-Next[tlen];\nif(strlen(s)%kk==0)\n{\nprintf(\"%d\\n\",strlen(s)/kk);\n}\nelse\n{ printf(\"1\\n\");   //\u5982\u679c\u4e0d\u80fd\u9664\u5c3d\uff0c\u8bf4\u660e\u6709\u540e\u7f00\uff0c\u4f8b\u5982abababa\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ea\u80fd\u4e3a1\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_19","title":"\u5b57\u7b26\u4e32\u54c8\u5e0c","text":"<p>\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5b57\u7b26\u4e32(1&lt;=n&lt;=200000),\u4ed6\u53ea\u5305\u542b**\u5c0f\u5199**\u5b57\u6bcd </p> <p>\u627e\u5230\u8fd9\u4e2a\u5b57\u7b26\u4e32\u591a\u5c11\u4e2a\u524d\u7f00\u662fM\u5f62\u5b57\u7b26\u4e32. </p> <p>M\u5f62\u5b57\u7b26\u4e32\u5b9a\u4e49\u5982\u4e0b: </p> <p>\u4ed6\u7531\u4e24\u4e2a\u76f8\u540c\u7684\u56de\u6587\u4e32\u62fc\u63a5\u800c\u6765,\u7b2c\u4e00\u4e2a\u56de\u6587\u4e32\u7684\u7ed3\u5c3e\u5b57\u7b26\u548c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u5b57\u7b26\u53ef\u4ee5\u91cd\u53e0,\u4e5f\u5c31\u662f\u4ee5\u4e0b\u90fd\u662fM \u5f62\u5b57\u7b26\u4e32.  </p> <p>abccbaabccba(\u7531abccba+abccba\u7ec4\u6210) </p> <p>abcbaabcba(\u6709abcba+abcba\u7ec4\u6210) </p> <p>abccbabccba(\u7531abccba+abccba\u7ec4\u6210\u7ec4\u6210,\u4f46\u662f\u4e2d\u95f4\u76841\u662f\u5171\u7528\u7684) </p> <p>a(\u4e00\u4e2a\u5355\u72ec\u5b57\u7b26\u4e5f\u7b97) </p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef unsigned long long int ULL;\nconst int N = 200010;\n\nint P = 131;\nULL p[N], h[N], ed[N];\nint ask1(int l, int r)\n{\nreturn h[r] - h[l - 1] * p[r - l + 1];\n}\nint ask2(int l, int r)\n{\nreturn ed[l] - ed[r + 1] * p[r - l + 1];\n}\nint main()\n{\nint ans = 0;\nchar str[N];\ncin &gt;&gt; str + 1;\nint n = strlen(str + 1);\np[0] = 1;\nfor (int i = 1; i &lt;= n; i++)\n{\nh[i] = h[i - 1] * P + str[i];\np[i] = p[i - 1] * P;\n}\nfor (int i = n; i &gt;= 0; i--)\n{\ned[i] = ed[i +1] * P + str[i];\n}\nfor (int i = 1; i &lt;= n; i++)\n{\nif (i % 2 == 1)\n{\nint x = (i + 1) / 2;\nif (ask1(1, x) == ask1(x, i) &amp;&amp; ask1(1, x) == ask2(1, x))\nans++;\n}\nelse\n{\nint x = i / 2;\nif (ask1(1, x) == ask1(x + 1, i) &amp;&amp; ask1(1, x) == ask2(1, x))\nans++;\n}\n}\ncout &lt;&lt; ans ;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_20","title":"\u56de\u6587\u4e32\u5339\u914d\u7b97\u6cd5\uff08\u9a6c\u62c9\u8f66\u7b97\u6cd5\uff09","text":"<pre><code>#include &lt;bits/stdc++.h&gt; ///\u6c42\u89e3\u6700\u957f\u56de\u6587\u4e32\uff0c\u5bf9p[i]/2\u6c42\u548c\u5373\u53ef\u5f97\u56de\u6587\u4e32\u4e2a\u6570\nusing namespace std;\ntypedef long long ll;\nchar a[500500]={0};\nint l[500500]={0};\nint r[500500]={0};\nstring str=\"$#\";\nvector&lt;int&gt;p;\nvoid manacher(char *c)\n{\nint max_id=0,id=0;\nfor(int i=1;c[i];i++)\nstr+=c[i],str+=\"#\";\np.push_back(1);\nfor(int i=1;i&lt;(int)str.size();i++)\n{\nif(max_id&gt;i)\np.push_back(min(max_id-i,p[2*id-i]));  else\np.push_back(1);\nwhile(i+p[i]&lt;(int)str.size()&amp;&amp;str[i+p[i]]==str[i-p[i]])\np[i]++;\nif(i+p[i]&gt;max_id){\nmax_id=i+p[i],id=i;\n}\n}\n}\nint main()\n{\nscanf(\"%s\",a+1);\nmanacher(a);\nint now=0,n=str.size(),ans=0;\nfor(int i=0;i&lt;n;i++)\nans=max(ans,p[i]-1);\nprintf(\"%d\",ans);\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_21","title":"\u5b57\u5178\u6811","text":"<p>\u4ece\u4e00\u7ec4\u6570\u636e\u4e2d\u9009\u53d6\u4e24\u4e2a\u6570\u6c42\u6700\u5927\u5f02\u6216\u503c\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint a[1005000]={0};\nint tree[5000500][3]={0};\nint tot=1;///\u5fc5\u987b\u4ece1\u5f00\u59cb\nint in(int x)\n{\nint p=1;\nfor(int i=30;i&gt;=0;i--)\n{\nint k=x&gt;&gt;i&amp;1;\nif(tree[p][k]==0)\ntree[p][k]=++tot;\np=tree[p][k];\n}\n}\nint out(int x)\n{\nint p=1,ans=0;\nfor(int i=30;i&gt;=0;i--)\n{\nint k=x&gt;&gt;i&amp;1;\nif(tree[p][!k])\n{\nans=ans*2+!k;\np=tree[p][!k];\n}\nelse\n{\nans=ans*2+k;\np=tree[p][k];\n}\n}\nreturn ans;\n}\nint main()\n{\nint n;\nscanf(\"%d\",&amp;n);\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%d\",&amp;a[i]);\nint max1=0;\nfor(int i=1;i&lt;=n;i++)\n{\nin(a[i]);\nint num=out(a[i]);\nmax1=max(max1,num^a[i]);\n}\ncout&lt;&lt;max1&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_22","title":"\u6587\u6cd5\u5206\u6790","text":"<p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://blog.csdn.net/qq_40736036/article/details/89110584</p> <p></p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef unsigned long long ull;\ntypedef long long ll;\nconst ll mod = 10000;\nchar c[5000500] = {0};\nstruct grammer\n{\npair&lt;char *, ll&gt; Q(char *p)\n{\npair&lt;char *, ll&gt; ans1 = E(p);\n\nif (ans1.first == NULL)\nreturn {NULL, 0};\nans1.second %= mod;\nreturn ans1;\n}\npair&lt;char *, ll&gt; E(char *p)\n{\npair&lt;char *, ll&gt; ans1 = T(p);\nif (ans1.first == NULL)\nreturn {NULL, 0};\nwhile (*ans1.first == '+' || *ans1.first == '-')\n{\npair&lt;char *, ll&gt; ans2 = T(ans1.first + 1);\nif (ans2.first == NULL)\nreturn {NULL, 0};\nif (*ans1.first == '+')\nans1.second += ans2.second;\nelse if (*ans1.first == '-')\nans1.second -= ans2.second;\nans1.second = (ans1.second % mod + mod) % mod;\nans1.first = ans2.first;\n}\nreturn ans1;\n}\npair&lt;char *, ll&gt; T(char *p)\n{\npair&lt;char *, ll&gt; ans1 = F(p);\nif (ans1.first == NULL)\nreturn {NULL, 0};\nwhile (*ans1.first == '*')\n{\npair&lt;char *, ll&gt; ans2 = F(ans1.first + 1);\n\nif (ans2.first == NULL)\nreturn {NULL, 0};\nans1.second *= ans2.second;\nans1.second %= mod;\nans1.first = ans2.first;\n}\nreturn ans1;\n}\npair&lt;char *, ll&gt; F(char *p)\n{\nif (*p &gt;= '0' || *p &lt;= '9')\n{\nreturn N(p);\n}\nelse if (*p == '-')\n{\npair&lt;char *, ll&gt; ans1 = F(p + 1);\nif (ans1.first == NULL)\nreturn {NULL, 0};\nreturn {ans1.first, (-ans1.second % mod + mod) % mod};\n}\nelse if (*p == '(')\n{\npair&lt;char *, ll&gt; ans1 = E(p + 1);\nif (ans1.first == NULL)\nreturn {NULL, 0};\nif (*ans1.first == ')')\nreturn {ans1.first + 1, ans1.second % mod};\nelse\nreturn {NULL, 0};\n}\nelse\n{\nreturn {NULL, 0};\n}\n}\npair&lt;char *, ll&gt; N(char *p)\n{\nif (*p == '0')\n{\n// if (*(p + 1) &gt;= '0' || *(p + 1) &lt;= '9')\n//     return {NULL, 0};\n// else\nreturn {p + 1, 0};\n}\nelse if (*p &gt;= '1' &amp;&amp; *p &lt;= '9')\n{\npair&lt;char *, ll&gt; ans1 = B(p);\nif (ans1.first == NULL)\n{\nreturn {NULL, 0};\n}\nreturn {ans1.first, ans1.second % mod};\n}\nelse\n{\nreturn {NULL, 0};\n}\n}\npair&lt;char *, ll&gt; B(char *p)\n{\nll sum = 0;\nwhile (*p &gt;= '0' &amp;&amp; *p &lt;= '9')\n{\nsum = sum * 10 + *p - '0';\np++;\nsum %= mod;\n}\nreturn {p, sum % mod};\n}\n} Grammer;\nint main()\n{\nscanf(\"%s\", c + 1);\nll ans = (Grammer.Q(c + 1).second % mod + mod) % mod;\nprintf(\"%lld\\n\", ans);\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#ac","title":"AC\u81ea\u52a8\u673a","text":"<p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://www.cnblogs.com/nullzx/p/7499397.html</p> <p>https://zhuanlan.zhihu.com/p/80325757</p> <p>https://oi-wiki.org/string/ac-automaton/</p> <p>AC\u81ea\u52a8\u673a\u6a21\u677f\uff1a</p> <p>\u7ed9\u5b9a n \u4e2a\u6a21\u5f0f\u4e32 s_i \u548c\u4e00\u4e2a\u6587\u672c\u4e32 t\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6a21\u5f0f\u4e32\u5728\u6587\u672c\u4e32\u91cc\u51fa\u73b0\u8fc7\u3002</p> <p>\u4e24\u4e2a\u6a21\u5f0f\u4e32\u4e0d\u540c\u5f53\u4e14\u4ec5\u5f53\u4ed6\u4eec**\u7f16\u53f7**\u4e0d\u540c\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N = 1e6 + 6;\nint n;\n\nnamespace AC\n{\nint tr[N][26], tot;\nint e[N], fail[N];\nvoid insert(char *s)\n{\nint u = 0;\nfor (int i = 1; s[i]; i++)\n{\nif (!tr[u][s[i] - 'a'])\ntr[u][s[i] - 'a'] = ++tot; //\u5982\u679c\u6ca1\u6709\u5219\u63d2\u5165\u65b0\u8282\u70b9\nu = tr[u][s[i] - 'a'];         //\u641c\u7d22\u4e0b\u4e00\u4e2a\u8282\u70b9\n}\ne[u]++; //\u5c3e\u4e3a\u8282\u70b9 u \u7684\u4e32\u7684\u4e2a\u6570\n}\nqueue&lt;int&gt; q;\nvoid build()\n{\nfor (int i = 0; i &lt; 26; i++)\nif (tr[0][i])\nq.push(tr[0][i]);\nwhile (q.size())\n{\nint u = q.front();\nq.pop();\nfor (int i = 0; i &lt; 26; i++)\n{\nif (tr[u][i])\n{\nfail[tr[u][i]] =\ntr[fail[u]][i]; // fail\u6570\u7ec4\uff1a\u540c\u4e00\u5b57\u7b26\u53ef\u4ee5\u5339\u914d\u7684\u5176\u4ed6\u4f4d\u7f6e\nq.push(tr[u][i]);\n}\nelse\ntr[u][i] = tr[fail[u]][i];\n}\n}\n}\nint query(char *t)\n{\nint u = 0, res = 0;\nfor (int i = 1; t[i]; i++)\n{\nu = tr[u][t[i] - 'a']; // \u8f6c\u79fb\nfor (int j = u; j &amp;&amp; e[j] != -1; j = fail[j])\n{\nres += e[j], e[j] = -1;\n}\n}\nreturn res;\n}\n} // namespace AC\n\nchar s[N];\nint main()\n{\nscanf(\"%d\", &amp;n);\nfor (int i = 1; i &lt;= n; i++)\nscanf(\"%s\", s + 1), AC::insert(s);\nscanf(\"%s\", s + 1);\nAC::build();\nprintf(\"%d\", AC::query(s));\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_23","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":"<p>\u53c2\u8003\u4e8e\uff1ahttps://www.cnblogs.com/luowentao/p/10332311.html</p> <pre><code>1.\u89c4\u5219\n{n}\u5339\u914d\u786e\u5b9a\u7684n\u6b21 \n{n,}\u81f3\u5c11\u5339\u914dn\u6b21(\u6ce8:\u8bf7\u4e0d\u8981\u64c5\u81ea\u52a0\u7a7a\u683c\u4e0a\u53bb) \n{n,m}\u6700\u5c11n\u6b21,\u6700\u591am\u6b21. \n*\u5339\u914d\u524d\u9762\u7684\u5b50\u8868\u8fbe\u5f0f0\u6b21\u6216\u591a\u6b21 = {0,} \n+\u5339\u914d\u524d\u9762\u7684\u5b50\u8868\u8fbe\u5f0f1\u6b21\u6216\u591a\u6b21 = {1,} \n?\u5339\u914d\u524d\u9762\u7684\u5b50\u8868\u8fbe\u5f0f1\u6b21\u6216\u4e24\u6b21 = {1,2} \n()\u8868\u793a\u4e00\u4e2a\u6574\u4f53 \n[]\u8868\u793a\u4e00\u4f4d \n{}\u8868\u793a\u5339\u914d\u591a\u5c11\u6b21 \n.\u5339\u914d\u9664\u6362\u884c\u7b26\u4e4b\u5916\u7684\u4efb\u610f\u5b57\u7b26 \n\\w\u5339\u914d\u5355\u5b57\u5b57\u7b26(a-z,A-Z,0-9\u4ee5\u53ca\u4e0b\u5212\u7ebf) \n\\W\u5339\u914d\u975e\u5355\u5b57\u5b57\u7b26 \n\\s\u5339\u914d\u7a7a\u767d\u5b57\u7b26(\u7a7a\u683c,\u5236\u8868\u7b26,\u6362\u884c\u7b26) \n\\S\u5339\u914d\u975e\u7a7a\u767d\u5b57\u7b26 \n\\d\u5339\u914d\u6570\u5b57\u5b57\u7b26 \n\\D\u5339\u914d\u975e\u6570\u5b57\u5b57\u7b26 \n^\u6307\u793a\u4ece\u884c\u7684\u5f00\u59cb\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d(\u8fd8\u6709\u58f0\u660e\u4e0d\u5728\u5b57\u7b26\u96c6\u6307\u5b9a\u8303\u56f4\u5185) \n$\u6307\u793a\u4ece\u884c\u7684\u7ed3\u675f\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d \n\\b\u5339\u914d\u5355\u8bcd\u7684\u5f00\u59cb\u6216\u7ed3\u675f\u4f4d\u7f6e\n\n2.\u901f\u8bb0\u7406\u89e3\n. [ ] ^ $\u56db\u4e2a\u5b57\u7b26\u662f\u6240\u6709\u8bed\u8a00\u90fd\u652f\u6301\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\u8fd9\u56db\u4e2a\u662f\u57fa\u7840\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u6b63\u5219\u96be\u7406\u89e3\u56e0\u4e3a\u91cc\u9762\u6709\u4e00\u4e2a\u7b49\u4ef7\u7684\u6982\u5ff5\uff0c\u8fd9\u4e2a\u6982\u5ff5\u5927\u5927\u589e\u52a0\u4e86\u7406\u89e3\u96be\u5ea6\uff0c\u8ba9\u5f88\u591a\u521d\u5b66\u8005\u770b\u8d77\u6765\u4f1a\u61f5\uff0c\u5982\u679c\u628a\u7b49\u4ef7\u90fd\u6062\u590d\u6210\u539f\u59cb\u5199\u6cd5\uff0c\u81ea\u5df1\u4e66\u5199\u6b63\u5219\u5c31\u8d85\u7ea7\u7b80\u5355\u4e86\uff0c\u5c31\u50cf\u8bf4\u8bdd\u4e00\u6837\u53bb\u5199\u4f60\u7684\u6b63\u5219\u4e86\uff1a\n\n\u7b49\u4ef7\uff1a\n    \u7b49\u4ef7\u662f\u7b49\u540c\u4e8e\u7684\u610f\u601d\uff0c\u8868\u793a\u540c\u6837\u7684\u529f\u80fd\uff0c\u7528\u4e0d\u540c\u7b26\u53f7\u6765\u4e66\u5199\u3002\n\n?,*,+,\\d,\\w \u90fd\u662f\u7b49\u4ef7\u5b57\u7b26\n\u3000\u3000?\u7b49\u4ef7\u4e8e\u5339\u914d\u957f\u5ea6{0,1}\n\u3000\u3000*\u7b49\u4ef7\u4e8e\u5339\u914d\u957f\u5ea6{0,} \n\u3000\u3000+\u7b49\u4ef7\u4e8e\u5339\u914d\u957f\u5ea6{1,}\n\u3000\u3000\\d\u7b49\u4ef7\u4e8e[0-9]\n   \\D\u7b49\u4ef7\u4e8e[^0-9]\n   \\w\u7b49\u4ef7\u4e8e[A-Za-z_0-9]\n   \\W\u7b49\u4ef7\u4e8e[^A-Za-z_0-9]\u3002\n\n\u5e38\u7528\u8fd0\u7b97\u7b26\u4e0e\u8868\u8fbe\u5f0f\uff1a\n\u3000\u3000^ \u5f00\u59cb\n\u3000\u3000() \u57df\u6bb5\n\u3000\u3000[] \u5305\u542b,\u9ed8\u8ba4\u662f\u4e00\u4e2a\u5b57\u7b26\u957f\u5ea6\n\u3000\u3000[^] \u4e0d\u5305\u542b,\u9ed8\u8ba4\u662f\u4e00\u4e2a\u5b57\u7b26\u957f\u5ea6\n\u3000\u3000{n,m} \u5339\u914d\u957f\u5ea6 \n\u3000\u3000. \u4efb\u4f55\u5355\u4e2a\u5b57\u7b26(\\. \u5b57\u7b26\u70b9)\n\u3000\u3000| \u6216\n\u3000\u3000\\ \u8f6c\u4e49\n\u3000\u3000$ \u7ed3\u5c3e\n\u3000\u3000[A-Z] 26\u4e2a\u5927\u5199\u5b57\u6bcd\n\u3000\u3000[a-z] 26\u4e2a\u5c0f\u5199\u5b57\u6bcd\n\u3000\u3000[0-9] 0\u81f39\u6570\u5b57\n   [A-Za-z0-9] 26\u4e2a\u5927\u5199\u5b57\u6bcd\u300126\u4e2a\u5c0f\u5199\u5b57\u6bcd\u548c0\u81f39\u6570\u5b57\n\n, \u5206\u5272\n\u3000\u3000\u5206\u5272\u8bed\u6cd5\uff1a\n\u3000\u3000[A,H,T,W] \u5305\u542bA\u6216H\u6216T\u6216W\u5b57\u6bcd\n\u3000\u3000[a,h,t,w] \u5305\u542ba\u6216h\u6216t\u6216w\u5b57\u6bcd\n\u3000\u3000[0,3,6,8] \u5305\u542b0\u62163\u62166\u62168\u6570\u5b57\n\n\n\u8bed\u6cd5\u4e0e\u91ca\u4e49\uff1a\n\u3000\u3000\u57fa\u7840\u8bed\u6cd5 \"^([]{})([]{})([]{})$\"\n\u3000\u3000\u6b63\u5219\u5b57\u7b26\u4e32 = \"\u5f00\u59cb\uff08[\u5305\u542b\u5185\u5bb9]{\u957f\u5ea6}\uff09\uff08[\u5305\u542b\u5185\u5bb9]{\u957f\u5ea6}\uff09\uff08[\u5305\u542b\u5185\u5bb9]{\u957f\u5ea6}\uff09\u7ed3\u675f\" \n\u3000\u3000\n\u3000\u3000?,*,+,\\d,\\w \u8fd9\u4e9b\u90fd\u662f\u7b80\u5199\u7684,\u5b8c\u5168\u53ef\u4ee5\u7528[]\u548c{}\u4ee3\u66ff\uff0c\u5728(?:)(?=)(?!)(?&lt;=)(?&lt;!)(?i)(*?)(+?)\u8fd9\u79cd\u7279\u6b8a\u7ec4\u5408\u60c5\u51b5\u4e0b\u9664\u5916\u3002\n\u3000\u3000\u521d\u5b66\u8005\u53ef\u4ee5\u5ffd\u7565?,*,+,\\d,\\w\u4e00\u4e9b\u7b80\u5199\u6807\u793a\u7b26\uff0c\u5b66\u4f1a\u4e86\u57fa\u7840\u4f7f\u7528\u518d\u6309\u8868\u81ea\u5df1\u53bb\u7b49\u4ef7\u66ff\u6362\n\u3000\u3000\n\u3000\u3000\u5b9e\u4f8b\uff1a\n\u3000\u3000\u5b57\u7b26\u4e32\uff1btel:086-0666-88810009999\n\u3000\u3000\u539f\u59cb\u6b63\u5219\uff1a\"^tel:[0-9]{1,3}-[0][0-9]{2,3}-[0-9]{8,11}$\" \n\u3000\u3000\u901f\u8bb0\u7406\u89e3\uff1a\u5f00\u59cb \"tel:\u666e\u901a\u6587\u672c\"[0-9\u6570\u5b57]{1\u81f33\u4f4d}\"-\u666e\u901a\u6587\u672c\"[0\u6570\u5b57][0-9\u6570\u5b57]{2\u81f33\u4f4d}\"-\u666e\u901a\u6587\u672c\"[0-9\u6570\u5b57]{8\u81f311\u4f4d} \u7ed3\u675f\"\n\u3000\u3000\u7b49\u4ef7\u7b80\u5199\u540e\u6b63\u5219\u5199\u6cd5\uff1a\"^tel:\\d{1,3}-[0]\\d{2,3}-\\d{8,11}$\" \uff0c\u7b80\u5199\u8bed\u6cd5\u4e0d\u662f\u6240\u6709\u8bed\u8a00\u90fd\u652f\u6301\u3002\n\n3.\u4ee3\u7801\u5b9e\u4f8b\n3.1 \u793a\u4f8b\u4e00\n// \u5b9a\u4e49\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f , 4~23 \u4f4d\u6570\u5b57\u548c\u5b57\u6bcd\u7684\u7ec4\u5408\nregex repPattern(\"[0-9a-zA-Z]{4,23}\",regex_constants::extended);\n// \u58f0\u660e\u5339\u914d\u7ed3\u679c\u53d8\u91cf\nmatch_results&lt;string::const_iterator&gt; rerResult;\n// \u5b9a\u4e49\u5f85\u5339\u914d\u7684\u5b57\u7b26\u4e32\nstring strValue = \"123abc\";\n// \u8fdb\u884c\u5339\u914d\nbool bValid = regex_match(strValue, rerResult, repPattern);\nif (bValid)\n{\n    // \u5339\u914d\u6210\u529f\n}\n\n3.2 \u793a\u4f8b\u4e8c\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nregex r(\"(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4]\\\\d|25[0-5])\\\\.(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4]\\\\d|25[0-5])\\\\.(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4]\\\\d|25[0-5])\\\\.(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4]\\\\d|25[0-5]):(\\\\d|[1-9]\\\\d{1,3}|[1-5]\\\\d{4}|6[0-4]\\\\d{3}|65[0-4]\\\\d{2}|655[0-2]\\\\d|6553[0-5])\");\nint main()\n{\n    String a;\n    cin &gt;&gt; a;\n    if (!regex_match(b, r))\n        puts(\"No\");\n    else\n        puts(\"Yes\");\n}\n\n\n4.\u5e38\u7528\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\n4.1 \u68c0\u9a8c\u6570\u5b57\u7684\u8868\u8fbe\u5f0f\n\u6570\u5b57 : ^[0-9]*$\nn \u4f4d\u7684\u6570\u5b57 : ^\\d{n}$\n\u81f3\u5c11 n \u4f4d\u7684\u6570\u5b57 : ^\\d{n,}$\nm-n \u4f4d\u7684\u6570\u5b57 : ^\\d{m,n}$\n\u96f6\u548c\u975e\u96f6\u5f00\u5934\u7684\u6570\u5b57 : ^(0|[1-9][0-9]*)$\n\u975e\u96f6\u5f00\u5934\u7684\u6700\u591a\u5e26\u4e24\u4f4d\u5c0f\u6570\u7684\u6570\u5b57 : ^([1-9][0-9]*)+(.[0-9]{1,2})?$\n\u5e26 1~2 \u4f4d\u5c0f\u6570\u7684\u6b63\u6570\u6216\u8d1f\u6570 : ^(\\-)?\\d+(\\.\\d{1,2})?$\n\u6b63\u6570 , \u8d1f\u6570 , \u548c\u5c0f\u6570 : ^(\\-|\\+)?\\d+(\\.\\d+)?$\n\u6709\u4e24\u4f4d\u5c0f\u6570\u7684\u6b63\u5b9e\u6570 : ^[0-9]+(.[0-9]{2})?$\n\u6709 1~3 \u4f4d\u5c0f\u6570\u7684\u6b63\u5b9e\u6570 : ^[0-9]+(.[0-9]{1,3})?$\n\u975e\u96f6\u7684\u6b63\u6574\u6570 : ^[1-9]\\d*$ \u6216 ^([1-9][0-9]*){1,3}$ \u6216 ^\\+?[1-9][0-9]*$\n\u975e\u96f6\u7684\u8d1f\u6574\u6570 : ^\\-[1-9][]0-9\u2033*$ \u6216 ^-[1-9]\\d*$\n\u975e\u8d1f\u6574\u6570 : ^\\d+$ \u6216 ^[1-9]\\d*|0$\n\u975e\u6b63\u6574\u6570 : ^-[1-9]\\d*|0$ \u6216 ^((-\\d+)|(0+))$\n\u975e\u8d1f\u6d6e\u70b9\u6570 : ^\\d+(\\.\\d+)?$ \u6216 ^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0$\n\u975e\u6b63\u6d6e\u70b9\u6570 : ^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$ \u6216 ^(-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*))|0?\\.0+|0$\n\u6b63\u6d6e\u70b9\u6570 : ^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*$ \u6216 ^(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*))$\n\u8d1f\u6d6e\u70b9\u6570 : ^-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*)$ \u6216 ^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$\n\u6d6e\u70b9\u6570 : ^(-?\\d+)(\\.\\d+)?$ \u6216 ^-?([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0)$\n\n4.2 \u68c0\u9a8c\u5b57\u7b26\u7684\u8868\u8fbe\u5f0f\n\u6c49\u5b57 : ^[\\u4e00-\\u9fa5]{0,}$\n\u82f1\u6587\u548c\u6570\u5b57 : ^[A-Za-z0-9]+$ \u6216 ^[A-Za-z0-9]{4,40}$\n\u957f\u5ea6\u4e3a 3~20 \u7684\u6240\u6709\u5b57\u7b26 : ^.{3,20}$\n\u7531 26 \u4e2a\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 : ^[A-Za-z]+$\n\u7531 26 \u4e2a\u5927\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 : ^[A-Z]+$\n\u7531 26 \u4e2a\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 : ^[a-z]+$\n\u7531\u6570\u5b57\u548c 26 \u4e2a\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 : ^[A-Za-z0-9]+$\n\u7531\u6570\u5b57 , 26 \u4e2a\u82f1\u6587\u5b57\u6bcd\u6216\u8005\u4e0b\u5212\u7ebf\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 : ^\\w+$ \u6216 ^\\w{3,20}$\n\u4e2d\u6587 , \u82f1\u6587 , \u6570\u5b57\u5305\u62ec\u4e0b\u5212\u7ebf : ^[\\u4E00-\\u9FA5A-Za-z0-9_]+$\n\u4e2d\u6587 , \u82f1\u6587 , \u6570\u5b57\u4f46\u4e0d\u5305\u62ec\u4e0b\u5212\u7ebf\u7b49\u7b26\u53f7 : ^[\\u4E00-\\u9FA5A-Za-z0-9]+$ \u6216 ^[\\u4E00-\\u9FA5A-Za-z0-9]{2,20}$\n\u53ef\u4ee5\u8f93\u5165\u542b\u6709^%&amp;',;=?$\\\"\u7b49\u5b57\u7b26 : [^%&amp;',;=?$\\x22]+\n\u7981\u6b62\u8f93\u5165\u542b\u6709 ~ \u7684\u5b57\u7b26 : [^~\\x22]+\n\n4.3 \u7279\u6b8a\u9700\u6c42\u8868\u8fbe\u5f0f\nEmail \u5730\u5740 : ^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$\n\u57df\u540d : [a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?\nInternetURL : [a-zA-z]+://[^\\s]* \u6216 ^http://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&amp;=]*)?$\n\u624b\u673a\u53f7\u7801 : ^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$\n\u7535\u8bdd\u53f7\u7801(\"XXX-XXXXXXX\" , \"XXXX-XXXXXXXX\" , \"XXX-XXXXXXX\" , \"XXX-XXXXXXXX\" , \"XXXXXXX\"\u548c\"XXXXXXXX) : ^($$\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$\n\u56fd\u5185\u7535\u8bdd\u53f7\u7801 (0511-4405222 , 021-87888822) : \\d{3}-\\d{8}|\\d{4}-\\d{7}\n\u8eab\u4efd\u8bc1\u53f7 (15 \u4f4d , 18 \u4f4d\u6570\u5b57) : ^\\d{15}|\\d{18}$\n\u77ed\u8eab\u4efd\u8bc1\u53f7\u7801 (\u6570\u5b57 , \u5b57\u6bcd x \u7ed3\u5c3e) : ^([0-9]){7,18}(x|X)?$ \u6216 ^\\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$\n\u5e10\u53f7\u662f\u5426\u5408\u6cd5(\u5b57\u6bcd\u5f00\u5934\uff0c\u5141\u8bb8 5~16 \u5b57\u8282\uff0c\u5141\u8bb8\u5b57\u6bcd\u6570\u5b57\u4e0b\u5212\u7ebf) : ^[a-zA-Z][a-zA-Z0-9_]{4,15}$\n\u5bc6\u7801 (\u4ee5\u5b57\u6bcd\u5f00\u5934\uff0c\u957f\u5ea6\u5728 6~18 \u4e4b\u95f4\uff0c\u53ea\u80fd\u5305\u542b\u5b57\u6bcd , \u6570\u5b57\u548c\u4e0b\u5212\u7ebf) : ^[a-zA-Z]\\w{5,17}$\n\u5f3a\u5bc6\u7801 (\u5fc5\u987b\u5305\u542b\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\u6570\u5b57\u7684\u7ec4\u5408\uff0c\u4e0d\u80fd\u4f7f\u7528\u7279\u6b8a\u5b57\u7b26\uff0c\u957f\u5ea6\u5728 8~10 \u4e4b\u95f4) : ^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$\n\u65e5\u671f\u683c\u5f0f : ^\\d{4}-\\d{1,2}-\\d{1,2}\n\u4e00\u5e74\u7684 12 \u4e2a\u6708(01\uff5e09\u548c1\uff5e12) : ^(0?[1-9]|1[0-2])$\n\u4e00\u4e2a\u6708\u7684 31 \u5929(01\uff5e09\u548c1\uff5e31) : ^((0?[1-9])|((1|2)[0-9])|30|31)$\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_24","title":"\u6570\u8bba","text":""},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_25","title":"\u6574\u6570\u5206\u5757","text":"<p>\u4ee3\u7801\u5b9e\u73b0\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint main()\n{\nll n, ans = 0;\nscanf(\"%lld\", &amp;n);\nfor (ll l = 1, r; l &lt;= n; l = r + 1)\n{\nr = n / (n / l);\nans += (r - l + 1) * (n / l);\n}\nprintf(\"%lld\\n\", ans);\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_26","title":"\u7ebf\u6027\u7b5b\u6c42\u8d28\u56e0\u6570\u7684\u4e2a\u6570","text":"<pre><code>///\u53c2\u7167\u4e8e\uff1a\n//https://www.luogu.com.cn/blog/SuuTTT/solution%2Dp1029\n#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nconst ll maxn=1e7+5;\nll low_prime[10050000]={0};\nll prime[700500]={0};\nll cnt=0;\nint main()\n{\nfor(ll i=2;i&lt;=maxn;i++)\n{\nif(low_prime[i]==0)\n{\nlow_prime[i]=i;\nprime[++cnt]=i;\n}\nfor(ll j=1;j&lt;=cnt&amp;&amp;prime[j]*i&lt;=maxn;j++)\n{\nlow_prime[prime[j]*i]=prime[j];\nif(i%prime[j]==0)\nbreak;\n}\n}\nll t;\nscanf(\"%lld\",&amp;t);\nwhile(t--)\n{\nll n,flag=0;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\n{\nll m,sum=0;\nscanf(\"%lld\",&amp;m);\nwhile(m&gt;1)\n{\nm/=low_prime[m];\nsum++;\n}\nflag^=sum; ///sum\u5373\u4e3a\u8d28\u56e0\u6570\u7684\u4e2a\u6570\n}\nif(!flag)\nputs(\"Bob\");\nelse\nputs(\"Alice\");\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_27","title":"\u6b27\u62c9\u51fd\u6570\u6a21\u677f","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint is_prime[100500]={0};\nvector&lt;int&gt;prime;\nint oula_table[100500]={0};\nvoid init(int n)  ///\u6253\u7d20\u6570\u8868\n{\nfor(int i=2;i&lt;=n;i++)\n{\nif(!is_prime[i])\nprime.push_back(i);\nfor (int j = 0; j &lt;=prime.size() &amp;&amp; i*prime[j] &lt;= n; j++) {\nis_prime[i*prime[j]] = 1;\nif (i % prime[j] == 0)\nbreak;\n}\n}\n}\nint oula1(int n) ///\u6839\u636e\u7d20\u6570\u8868\u6c42\u89e3\u6b27\u62c9\u51fd\u6570\n{\nint ans=n;\nfor(int i=0;prime[i]*prime[i]&lt;=n;i++)\n{\nif(n%prime[i]==0)\nans=ans-ans/prime[i];\nwhile(n%prime[i]==0)\nn/=prime[i];\n}\nreturn ans;\n}\nint oula2(int n)  ///\u5206\u89e3\u8d28\u56e0\u6570\u6cd5\u6c42\u89e3\u6b27\u62c9\u51fd\u6570\n{\nint m=n;\nint ans=n;\nfor(int i=2;i&lt;=sqrt(n);i++)\n{\nif(m%i==0)\nans=ans-ans/i;\nwhile(m%i==0)\nm/=i;\n}\nif(m!=1)\nans=ans-ans/m;\nreturn ans;\n}\nvoid get_oula_table(int n) ///\u6b27\u62c9\u6253\u8868\n{\nfor(int i=1;i&lt;=n;i++)\noula_table[i]=0;\noula_table[1]=1;\nfor(int i=2;i&lt;=n;i++)\n{\nif(!oula_table[i]) ///\u8bf4\u660ei\u662f\u8d28\u6570\n{\nfor(int j=i;j&lt;=n;j+=i) //\u53bb\u627ei\u7684\u500d\u6570\n{\nif(!oula_table[j])\noula_table[j]=j;\noula_table[j]=oula_table[j]/i*(i-1);\n}\n}\n}\n}\nint main()\n{\nint n;\ncin&gt;&gt;n;\ninit(n);\ncout&lt;&lt;\"\u627e\u7d20\u6570\u6c42\u89e3\u6b27\u62c9\u51fd\u6570\u503c\u4e3a\"&lt;&lt;oula1(n)&lt;&lt;endl;\ncout&lt;&lt;\"\u5206\u89e3\u8d28\u56e0\u6570\u6cd5\u6c42\u89e3\u6b27\u62c9\u51fd\u6570\u503c\u4e3a\"&lt;&lt;oula2(n)&lt;&lt;endl;\nget_oula_table(n);\ncout&lt;&lt;\"\u6253\u8868\u6cd5\u6c42\u89e3\u6b27\u62c9\u51fd\u6570\u503c\u4e3a\";\nfor(int i=1;i&lt;=n;i++)\ncout&lt;&lt;oula_table[i]&lt;&lt;' ';\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_28","title":"\u9006\u5e8f\u5bf9","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint a[2005000]= {0};\nint b[2005000]= {0};\nlong long int merge_sort(long long int l,long long int r)\n{\nif (l &gt;= r)\nreturn 0;\nlong long int mid = (l + r) &gt;&gt; 1, res = 0;\nres += merge_sort(l, mid);\nres += merge_sort(mid + 1, r);\nlong long int i = l, j = mid + 1, cnt = 0;\nwhile (i &lt;= mid &amp;&amp; j &lt;= r)\nif (a[i] &lt;= a[j])\nb[cnt++] = a[i++];\nelse\n{\nres += mid - i + 1;\nb[cnt++] = a[j++];\n}\nwhile (i &lt;= mid)\nb[cnt++] = a[i++];\nwhile (j &lt;= r)\nb[cnt++] = a[j++];\nfor (long long int i = l, j = 0; j &lt; cnt; ++i, ++j)\na[i] = b[j];\nreturn res;\n}\nint main()\n{\nint n;\ncin&gt;&gt;n;\nfor(long long int i=0;i&lt;n; i++)\n{\ncin&gt;&gt;a[i];\n}\nlong long int sum=merge_sort(0,n-1);\ncout&lt;&lt;sum&lt;&lt;endl;\nreturn 0;\n}\n</code></pre> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll n,m;\nll a[100500]={0};\nll c[100500]={0};\nll maxn=10050,k,ans=0;\nll lowbit(ll x)\n{\nreturn x&amp;(-x);\n}\nll add(ll k,ll x)\n{\nfor(ll i=k;i&lt;=maxn;i+=lowbit(i))\nc[i]+=x;\n}\nll getsum(ll k)\n{\nll ans=0;\nfor(ll i=k;i&gt;=1;i-=lowbit(i))\nans+=c[i];\nreturn ans;\n}\nint main()\n{\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;k);\nadd(k,1);\nans+=i-getsum(k);\n}\nprintf(\"%d\\n\",ans);\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_29","title":"\u4e8c\u7ef4\u524d\u7f00\u548c","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int maxn = 5010;\nint g[maxn][maxn];\nint main(void)\n{\nint N,R;\ncin &gt;&gt; N &gt;&gt; R;\nint n = R, m = R;\nfor(int i = 0,x,y,w;i &lt; N;++i)\n{\ncin &gt;&gt; x &gt;&gt; y &gt;&gt; w;\nx++,y++;\nn = max(n,x);\nm = max(m,y);\ng[x][y] += w;\n}\nfor(int i = 1; i &lt;= n; i++)\nfor(int j = 1;j &lt;= m; j++)\ng[i][j] += g[i-1][j] + g[i][j-1] - g[i-1][j-1];\nint ans = 0;\nfor(int i = R;i &lt;= n;i++)\nfor(int j = R;j &lt;= m;j++)\nans = max(ans,g[i][j]-g[i-R][j]-g[i][j-R]+g[i-R][j-R]);\ncout &lt;&lt; ans ;\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_30","title":"\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u5b9a\u7406","text":"<ol> <li>\u6c42\u89e3$a * x + b * y = gcd(a,b) $\u65b9\u7a0b\u7684\u901a\u89e3x\u548cy</li> </ol> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll N=1e9+7;\nll exgcd(ll a, ll b, ll &amp;x, ll &amp;y)\n{\nif(b==0)\n{\nx=1;\ny=0;\nreturn a;\n}\nll d = exgcd(b, a%b, x, y);\nll t = x;\nx = y;\ny = t-(a/b)*y;\nreturn d;\n}\nint main()\n{\nll a=3,b=5,x=0,y=0;\nll g=exgcd(a,b,x,y);\ncout&lt;&lt;\"\u7279\u89e3\u4e3a\"&lt;&lt;\"x=\"&lt;&lt;x&lt;&lt;\",y=\"&lt;&lt;y&lt;&lt;endl;\nfor(int i=1;i&lt;=5;i++)\n{\nx+=b/g;\ny-=a/g;\ncout&lt;&lt;\"\u901a\u89e3\u4e3a\"&lt;&lt;\"x=\"&lt;&lt;x&lt;&lt;\",y=\"&lt;&lt;y&lt;&lt;endl;\n}\nreturn 0;\n}\n</code></pre> <ol> <li>\u6c42\u89e3\u4e00\u822c\u65b9\u7a0ba * x+b * y=c\u7684\u901a\u89e3x\u548cy</li> </ol> <p>\u5c06\u65b9\u7a0b\u8f6c\u53d8\u4e3a\uff1aa * x+b * y=gcd(a, b) * c/gcd(a, b);</p> <p>\u6700\u7ec8\u5373\u4e3a\uff1aa * x/(c/gcd(a, b))+b * y/(c/gcd(a, b))=gcd(a, b);</p> <p>\u5373\u628a\u7ed3\u679c\u8c03\u6574\u4e3a\uff1ax1=x0 * c/gcd(a, b); y1=y0 * c/gcd(a, b);</p> <pre><code>#include&lt;stdio.h&gt;\nlong long exgcd(long long a, long long b, long long &amp;x, long long &amp;y)\n{\nif(b==0)\n{\nx=1;\ny=0;\nreturn a;\n}\nlong long r=exgcd(b, a%b, x, y), t;\nt=x;\nx=y;\ny=t-(a/b)*y;\nreturn r;\n}\nint main()\n{\nlong long a, b, c, ans, x, y;\nwhile(scanf(\"%lld%lld%lld\", &amp;a, &amp;b, &amp;c)!=EOF)\n{\nans=exgcd(a, b, x, y);\nif(c%ans==0)\n{\nx=-x*c/ans;\ny=-y*c/ans;\nprintf(\"%lld %lld\\n\", x, y);\n}\nelse\nprintf(\"-1\\n\");\n}\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_31","title":"\u9006\u5143","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a,q;\nll ksm(ll n,ll k)\n{\nll sum1=1,sum2=n;\nwhile(k!=0)\n{\nif(k%2==1)\nsum1=sum1*sum2%q;\nsum2=sum2*sum2%q;\nk/=2;\n}\nreturn sum1;\n}\nint main()\n{\ncout&lt;&lt;\"\u8bf7\u8f93\u5165a\u548cq\u7684\u503c\"&lt;&lt;endl;\ncin&gt;&gt;a&gt;&gt;q;\ncout&lt;&lt;\"a\u5173\u4e8e\u6a21q\u7684\u9006\u5143\u4e3a\"&lt;&lt;ksm(a,q-2)&lt;&lt;endl;\n}\n</code></pre> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll exgcd(ll a,ll b,ll&amp; x,ll&amp; y) ///\u540e\u4e24\u4e2a\u53c2\u6570\u4e3a\u5f15\u7528\n{\nif(b==0)\n{\nx=1;\ny=0;\nreturn a;\n}\nll gcd_ans=exgcd(b,a%b,x,y);\nll tem=x;\nx=y;\ny=tem-a/b*y;\nreturn gcd_ans;\n}\nint main()\n{\ncout&lt;&lt;\"\u8bf7\u8f93\u5165a\u548cq\u7684\u503c\"&lt;&lt;endl;\nll a,q,x=0,y=0;\ncin&gt;&gt;a&gt;&gt;q;\nll gcd_ans=exgcd(q,a,x,y);\nll mul=q/gcd_ans;\ny=(y%mul+mul)%mul;\ncout&lt;&lt;\"a\u5173\u4e8e\u6a21q\u7684\u9006\u5143\u4e3a\"&lt;&lt;y&lt;&lt;endl;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_32","title":"\u8868\u8fbe\u5f0f\u6c42\u503c\uff08\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f\uff09","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstack&lt;char&gt; sc;\nstack&lt;ll&gt; sll;\nchar a[100500] = {0};\ninline ll qpow(ll a, ll b)\n{\nll ans = 1;\nwhile (b)\n{\nif (b &amp; 1)\nans *= a;\na *= a, b &gt;&gt;= 1;\n}\nreturn ans;\n}\n\nint cmp1(char a1, char a2)\n{\nif (a2 == '(')\nreturn -1;\n\nif (a2 == ')')\n{\nif (a1 == '(')\nreturn 0;\nelse if (a1 == '#')\nreturn 0;\nelse\nreturn 1;\n}\nif (a2 == '+' || a2 == '-')\n{\nif (a1 == '+' || a1 == '-' || a1 == '*' || a1 == '/' || a1 == '^')\nreturn 1;\nelse\nreturn -1;\n}\nif (a2 == '*' || a2 == '/')\n{\nif (a1 == '*' || a1 == '/' || a1 == '^')\nreturn 1;\nelse\nreturn -1;\n}\nif (a2 == '^')\n{\nif (a1 == '^')\nreturn 1;\nelse\nreturn -1;\n}\nif (a2 == '#')\n{\nif (a1 == '#')\nreturn 0;\nelse if (a1 == '(' || a1 == ')')\nreturn 0;\nelse\nreturn 1;\n}\nreturn 0;\n}\nint main()\n{\nscanf(\"%s\", a + 1);\na[strlen(a + 1) + 1] = '#';\nll tem = 0, tem2, tem1;\nsll.push(0);\nsc.push('#');\nfor (int i = 1; a[i]; i++)\n{\nif (a[i] &lt;= '9' &amp;&amp; a[i] &gt;= '0')\n{\ntem = tem * 10 + a[i] - '0';\nif (a[i + 1] &lt; '0' || a[i + 1] &gt; '9')\nsll.push(tem), tem = 0;\n}\nelse\n{\nwhile (!sc.empty())\n{\nll tem_cmp = cmp1(sc.top(), a[i]);\nif (tem_cmp == 1)\n{\ntem2 = sll.top();\nsll.pop();\n\ntem1 = sll.top();\nsll.pop();\n\nif (sc.top() == '+')\nsll.push(tem1 + tem2);\nelse if (sc.top() == '-')\nsll.push(tem1 - tem2);\nelse if (sc.top() == '*')\nsll.push(tem1 * tem2);\nelse if (sc.top() == '/')\nsll.push(tem1 / tem2);\nelse if (sc.top() == '^')\nsll.push((ll)qpow(tem1, tem2));\nsc.pop();\n}\nelse if (tem_cmp == 0)\n{\nif (a[i] != ')' || (a[i] == ')' &amp;&amp; sc.size() &gt; 1))\nsc.pop();\nbreak;\n}\nelse if (tem_cmp == -1)\n{\nsc.push(a[i]);\nbreak;\n}\n}\n}\n}\ncout &lt;&lt; sll.top() &lt;&lt; endl;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_33","title":"\u7ec4\u5408\u6570\u5b66","text":"<p>\u53c2\u8003\u535a\u5ba2\uff1ahttps://blog.csdn.net/Luoxiaobaia/article/details/107593528</p> <p>1.\u7403\u540c\uff0c\u76d2\u4e0d\u540c\uff0c\u4e0d\u80fd\u7a7a\uff08\u9694\u677f\u6cd5\uff09</p> <p>\u4e00\u5171\u6709n-1\u4e2a\u7a7a\u9699(\u603b\u5171n+1\u4e2a\u7a7a\u9699\uff0c\u4e0d\u80fd\u7a7a\u8981\u53bb\u6389\u5934\u5c3e=n-1) \uff0c\u8981\u63d2m-1\u4e2a\u677f\uff0c\u7b54\u6848\u4e3a C_{n-1}^{m-1}\u200b</p> <p>2.\u7403\u540c\uff0c\u76d2\u4e0d\u540c\uff0c\u80fd\u7a7a</p> <p>\u5982\u679c\u7ed9\u6bcf\u4e2a\u76d2\u5b50\u4e00\u4e2a\u7403\uff0c\u5c31\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e0d\u80fd\u7a7a\u7684\u60c5\u51b5\u4e86,\u5c31\u76f8\u5f53\u4e8en+m\u4e2a\u5c0f\u7403\u653e\u5165m\u4e2a\u76d2\u5b50\u4e14\u4e0d\u80fd\u7a7a\uff0c\u7b54\u6848\u5c31\u662f C_{n+m-1}^{m-1}</p> <p>3.\u7403\u4e0d\u540c\uff0c\u76d2\u540c\uff0c\u4e0d\u80fd\u7a7a\uff08dp\u95ee\u9898\uff09</p> <p>dp[n][m]\u4ee3\u8868n\u4e2a\u5c0f\u7403\u653e\u5165m\u4e2a\u4e0d\u540c\u7684\u76d2\u5b50\u4e14\u4e0d\u80fd\u7a7a\u7684\u65b9\u6cd5</p> <p>\u5f53 i &gt;= 0 \u65f6\uff0cdp[i][i]=1 (i\u4e2a\u5c0f\u7403\u653e\u5165i\u4e2a\u76d2\u5b50\uff0c\u5c31\u53ea\u80fd1\u4e2a\u76d2\u5b50\u653e1\u4e2a)</p> <p>\u5f53 i &gt; 0 \u65f6,dp[i][0]=0(\u90fd\u6ca1\u6709\u76d2\u5b50\u4e86\uff0c\u80af\u5b9a\u65e0\u89e3)</p> <p>dp[i][j] = j * dp[i-1][j] + dp[i-1][j-1]</p> <p>(\u7b2ci\u4e2a\u7403\u53ef\u4ee5\u653e\u5728\u5df2\u7ecf\u6709\u7684j\u4e2a\u76d2\u5b50\u7684\u4e00\u4e2a\uff0c\u6709j\u79cd\u65b9\u6cd5,\u4e5f\u5c31\u662fj*dp[i-1][j],</p> <p>\u4e5f\u53ef\u4ee5\u662f\u653e\u5165\u4e00\u4e2a\u65b0\u7684\u76d2\u5b50,\u5c31\u662fdp[i-1][j-1]) \u6240\u4ee5\u7b54\u6848\u5982\u4e0b\uff1a </p> <p>4.\u7403\u4e0d\u540c\uff0c\u76d2\u540c\uff0c\u53ef\u4ee5\u7a7a\uff08\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570\uff09 </p> <p>\u90a3\u5c31\u662f3\u7684\u60c5\u51b5(\u7403\u4e0d\u540c\uff0c\u76d2\u540c\uff0c\u4e0d\u5141\u8bb8\u4e3a\u7a7a)\u75281\u4e2a\u76d2\u5b50+\u75282\u4e2a\u76d2\u5b50+\u2026+m\u4e2a\u76d2\u5b50</p> <p></p> <p>5.\u7403\u4e0d\u540c\uff0c\u76d2\u4e0d\u540c\uff0c\u4e0d\u80fd\u7a7a </p> <p>\u90a3\u5c31\u662f3\u7684\u60c5\u51b5(\u7403\u4e0d\u540c\uff0c\u76d2\u540c\uff0c\u4e0d\u5141\u8bb8\u4e3a\u7a7a)\u5bf9\u76d2\u5b50\u8fdb\u884c\u5168\u6392\u5217 \u7b54\u6848\u5c31\u662f m!*dp[n][m] (dp[n][m]\u662f\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570)</p> <p>6.\u7403\u4e0d\u540c\uff0c\u76d2\u4e0d\u540c\uff0c\u53ef\u4ee5\u7a7a</p> <p>\u6bcf\u4e00\u4e2a\u5c0f\u7403\u90fd\u6709m\u79cd\u65b9\u6cd5\uff0c\u4e14\u76f8\u4e92\u72ec\u7acb\uff0c\u7b54\u6848\u5c31\u662fm^n</p> <p>7.\u7403\u540c\uff0c\u76d2\u540c\uff0c\u53ef\u4ee5\u7a7a\uff08dp\u95ee\u9898\uff09</p> <p>dp[i][j]\u4ee3\u8868\u7403\u540c\uff0c\u76d2\u540c\uff0c\u53ef\u4ee5\u7a7a\u7684\u653e\u6cd5 \u5f53 i&gt;=j \u65f6\uff0cdp[i][j] = dp[i][j-1]+dp[i-j][j]</p> <p>( \u6211\u4eec\u53ef\u4ee5\u5728\u6240\u6709\u7684\u76d2\u5b50\u4e0a\u653e\u4e00\u4e2a\u7403dp[i-j][j]\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u9009\u62e9\u8fd9\u79cd\u64cd\u4f5c\uff0c\u4f46\u662f\u4ee5\u540e\u90fd\u4e0d\u5bf9\u5176\u4e2d\u4e00\u4e2a\u76d2\u5b50\u8fdb\u884c\u64cd\u4f5c\u4e86\uff0c\u90a3\u5c31\u662fdp[i][j-1] )</p> <p>\u5f53 i&lt;j \u65f6\uff0cdp[i][i] (\u591a\u4f59\u7684\u76d2\u5b50\u90fd\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\u4e86)</p> <p>\u5f53 j=1 \u65f6\uff0c1(\u53ea\u6709\u4e00\u4e2a\u76d2\u5b50\u4e86\u5c31\u53ea\u80fd\u653e\u5728\u90a3\u4e2a\u76d2\u5b50\u4e86\uff0c\u53ea\u6709\u4e00\u79cd\u653e\u6cd5)</p> <p>\u5f53 i=1 \u65f6\uff0c1(\u53ea\u6709\u4e00\u4e2a\u7403\u4e86\uff0c\u653e\u54ea\u4e2a\u76d2\u5b50\u90fd\u4e00\u6837\uff0c\u53ea\u6709\u4e00\u79cd\u653e\u6cd5)</p> <p>\u5f53 i=0 \u65f6 1(\u6ca1\u6709\u7403\u4e86\uff0c\u4e5f\u662f1\u79cd\u65b9\u6cd5)</p> <p>\u7b54\u6848\u662f</p> <p>8.\u7403\u540c\uff0c\u76d2\u540c\uff0c\u4e0d\u80fd\u7a7a</p> <p>\u90a3\u5c31\u662f7\u7684\u60c5\u51b5(\u7403\u540c\uff0c\u76d2\u540c\uff0c\u53ef\u4ee5\u7a7a)\u6bcf\u4e2a\u76d2\u5b50\u5148\u653e\u4e00\u4e2a\u4fdd\u8bc1\u4e0d\u7a7a</p> <p>\u6240\u4ee5\u7b54\u6848\u662f dp[n-m][m] (n&gt;=m) 0 (n&lt;m)</p> <p>\u5176\u4e2ddp\u662f\u60c5\u51b57\u7684dp</p> <p>\u9644\u60c5\u51b57\u7684\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;iostream&gt;\nint main() {\nconst int N = 11;\nint dp[N][N] = {}, t, n, m;\nfor(int i=0; i&lt;N; ++i)\nfor(int j=1; j&lt;N; ++j) {\nif(i&lt;=1 || j==1)  dp[i][j] = 1;\nelse if(i&lt;j)  dp[i][j] = dp[i][i];\nelse  dp[i][j] = dp[i][j-1] + dp[i-j][j];\n}\nscanf(\"%d\", &amp;t);\nwhile (t--) {\nscanf(\"%d%d\", &amp;n, &amp;m);\nprintf(\"%d\\n\", dp[n][m]);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_34","title":"\u5361\u7279\u5170\u6570","text":"<p>\u53c2\u7167\u535a\u5ba2\uff1ahttps://zhuanlan.zhihu.com/p/97619085</p> <p>\u5361\u7279\u5170\u6570\uff08Catalan number\uff09\u662f \u7ec4\u5408\u6570\u5b66 \u4e2d\u4e00\u4e2a\u5e38\u51fa\u73b0\u5728\u5404\u79cd \u8ba1\u6570\u95ee\u9898 \u4e2d\u7684 \u6570\u5217\u3002</p> <p>\u6570\u5217\u7684\u524d\u51e0\u9879\u4e3a\uff1a1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862\uff0c...</p> <p>\u5361\u7279\u5170\u6570\u516c\u5f0f\uff1a</p> <p></p> <p></p> <p>\u7535\u5f71\u8d2d\u7968\u95ee\u9898</p> <p>\u7535\u5f71\u7968\u4e00\u5f20 50 coin\uff0c\u4e14\u552e\u7968\u5385\u6ca1\u6709 coin\u3002m \u4e2a\u4eba\u5404\u81ea\u6301\u6709 50 coin\uff0cn \u4e2a\u4eba\u5404\u81ea\u6301\u6709 100 coin\u3002</p> <p>\u5219\u6709\u591a\u5c11\u79cd\u6392\u961f\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u4e70\u5230\u7535\u5f71\u7968\u3002</p> <p>\u601d\u8def</p> <p>\u6301\u6709 50 coin \u7684\u4eba\u6bcf\u6b21\u8d2d\u7968\u65f6\u4e0d\u9700\u8981\u627e\u96f6\uff0c\u5e76\u4e14\u53ef\u4ee5\u5e2e\u52a9\u540e\u9762\u6301\u6709 100 coin \u7684\u4eba\u627e\u96f6\uff1b\u800c\u5bf9\u4e8e\u6301\u6709 100 coin \u7684\u4eba\u6bcf\u6b21\u8d2d\u7968\u65f6\u9700\u8981\u627e\u96f6\uff0c\u4f46 100 coin \u5bf9\u540e\u9762\u7684\u627e\u96f6\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\u3002</p> <p>\u56e0\u6b64\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u6301\u6709 100 coin \u7684\u4eba\u90fd\u9700\u8981\u548c\u4e00\u4e2a\u6301\u6709 50 coin \u7684\u4eba\u8fdb\u884c\u5339\u914d\u3002\u6211\u4eec\u5c06\u6301\u6709 50 coin \u7684\u6807\u8bb0\u4e3a +1\uff0c\u6301\u6709 100 coin \u7684\u6807\u8bb0\u4e3a -1\uff0c\u6b64\u65f6\u53c8\u56de\u5230\u4e86\u8fdb\u51fa\u6808\u95ee\u9898\u3002</p> <p>\u4e0d\u540c\u7684\u662f\uff0cm \u5e76\u4e00\u5b9a\u7b49\u4e8e n\uff0c\u4e14\u6392\u961f\u5e8f\u5217\u662f\u4e00\u79cd\u6392\u5217\uff0c\u9700\u8981\u8003\u8651\u5148\u540e\u987a\u5e8f\uff0c\u4f8b\u5982\u5404\u81ea\u6301\u6709 50 coin \u7684\u7532\u548c\u4e59\u7684\u524d\u540e\u5173\u7cfb\u4f1a\u9020\u6210\u4e24\u79cd\u4e0d\u540c\u7684\u6392\u961f\u5e8f\u5217\u3002\u6240\u4ee5\uff0c\u5c06\u4f1a\u6709 </p> <p>\u7b2c\u4e8c\u9879\u4e3a\u4ec0\u4e48\u662f  \uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u6bcf\u6b21\u628a\u7b2c\u4e00\u4e2a\u524d\u7f00\u5c0f\u4e8e0 \u7684\u524d\u7f00\u53d6\u53cd\u540e\uff0c\u4f1a\u9020\u6210 +1 \u591a\u4e86\u4e00\u4e2a\u800c -1 \u5c11\u4e86\u4e00\u4e2a\u3002\u8fd9\u91cc +1 \u6709 m \u4e2a\uff0c-1 \u6709 n \u4e2a\uff0c\u53d6\u53cd\u540e +1 \u53d8\u6210<code>m + 1</code>\u4e2a\uff0c-1 \u53d8\u6210<code>n - 1</code>\u4e2a\uff0c\u603b\u548c\u4e0d\u53d8\u3002</p> <pre><code>const int C_maxn = 1e4 + 10;\nll CatalanNum[C_maxn];\nll inv[C_maxn];\ninline void Catalan_Mod(int N, LL mod)\n{\ninv[1] = 1;\nfor (int i = 2; i &lt;= N + 1; i++) ///\u7ebf\u6027\u9884\u5904\u7406 1 ~ N \u5173\u4e8e mod \u7684\u9006\u5143\ninv[i] = (mod - mod / i) * inv[mod % i] % mod;\n\nCatalanNum[0] = CatalanNum[1] = 1;\n\nfor (int i = 2; i &lt;= N; i++)\nCatalanNum[i] = CatalanNum[i - 1] * (4 * i - 2) % mod * inv[i + 1] % mod;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_35","title":"\u79ef\u6027\u51fd\u6570","text":"<p>\u79ef\u6027\u51fd\u6570\u662f\u6307\u5bf9\u4e8e\u4efb\u610f\u4e92\u8d28\u7684\u6574\u6570a\u548cb\u6709\u6027\u8d28f(ab)=f(a)f(b)\u7684\u6570\u8bba\u51fd\u6570</p> <p>\u5e38\u7528\u79ef\u6027\u51fd\u6570\u6709\uff1a</p> <p>\u03c6(n) \uff0d\u6b27\u62c9\u51fd\u6570</p> <p>\u03bc(n) \uff0d\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\uff0c\u5173\u4e8e\u975e\u5e73\u65b9\u6570\u7684\u8d28\u56e0\u5b50\u6570\u76ee</p> <p>gcd(n,k) \uff0d\u6700\u5927\u516c\u56e0\u5b50\uff0c\u5f53k\u56fa\u5b9a\u7684\u60c5\u51b5</p> <p>d(n) \uff0dn\u7684\u6b63\u56e0\u5b50\u6570\u76ee</p> <p>\u03c3(n) \uff0dn\u7684\u6240\u6709\u6b63\u56e0\u5b50\u4e4b\u548c</p>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_36","title":"\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14","text":"<p>\u53c2\u8003\u4e8e</p> <p>https://zhuanlan.zhihu.com/p/45744228</p> <p>\u51fd\u6570\u5b9a\u4e49</p> <p></p> <p>\u8f85\u52a9\u5b9a\u7406</p> <p>\u5bf9\u4e8e\u4efb\u610f\u6b63\u6574\u6570  \uff0c\u6052\u6709</p> <p></p> <p>\u5176\u6b21\uff0c\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u548c\u6b27\u62c9\u51fd\u6570\u7684\u5173\u7cfb\uff1a</p> <p>\\sum_{d|n}\\frac{\\mu[d]}{d}=\\frac{\\varphi(n)}{n}</p> <p>\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u5b9a\u7406</p> <p> \u548c  \u662f\u5b9a\u4e49\u5728\u6b63\u6574\u6570\u96c6\u5408\u4e0a\u7684\u4e24\u4e2a\u51fd\u6570\uff0c\u82e5</p> <p></p> <p>\u5219</p> <p></p> <p>\u53cd\u4e4b\u4ea6\u7136.</p> <p>\u8bc1\u660e\uff1a</p> <p></p> <p>\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u5b9e\u9645\u4e0a\u662f\u5bb9\u65a5\u3002</p> <p>\u5e38\u89c1\u53cd\u6f14</p> <p>1\u3001</p> <p></p> <p>\u6240\u4ee5\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u672c\u8eab\u4e5f\u53ef\u4ee5\u53cd\u6f14\u3002</p> <p>2\u3001</p> <p></p> <p>\u7ebf\u6027\u9884\u5904\u7406</p> <p>\u6c42\u89e3\u533a\u95f4  \u548c\u533a\u95f4  \u4e0a\u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p></p> <p>\u4ee3\u7801</p> <pre><code>void get_mu(int n)\n{\nmu[1]=1;\nfor(int i=2;i&lt;=n;i++)\n{\nif(!vis[i]){prim[++cnt]=i;mu[i]=-1;}\nfor(int j=1;j&lt;=cnt&amp;&amp;prim[j]*i&lt;=n;j++)\n{\nvis[prim[j]*i]=1;\nif(i%prim[j]==0)break;\nelse mu[i*prim[j]]=-mu[i];\n}\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#fftnnt","title":"FFT\u548cNNT\u6a21\u677f","text":"<p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://www.acwing.com/file_system/file/content/whole/index/content/1563813/</p> <p>https://blog.csdn.net/hzf0701/article/details/119428159</p> <p>https://blog.csdn.net/zz_1215/article/details/40430041</p> <p>https://www.luogu.com.cn/problem/P3803</p> <p>NTT \u5feb\u901f\u6570\u8bba\u53d8\u6362\u53d6\u6a21\u591a\u9879\u5f0f\u6a21\u677f</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 998244353;\nconst ll G = 3;\nll n, m, L, R[6005000] = {0};\nll a[6005000] = {0}, b[6005000] = {0}, inv[6005000] = {0};\nll qpow(ll a, ll b)\n{\nll ans1 = 1, ans2 = a;\nwhile (b != 0)\n{\nif (b &amp; 1)\nans1 = ans1 * ans2 % mod;\nans2 = ans2 * ans2 % mod;\nb /= 2;\n}\nreturn ans1 % mod;\n}\n\nvoid NTT(ll *a, ll f)\n{\nfor (ll i = 0; i &lt; n; i++)\n{\nif (i &lt; R[i])\nswap(a[i], a[R[i]]);\n}\nfor (ll i = 1; i &lt; n; i &lt;&lt;= 1)\n{\nll gn = qpow(G, (mod - 1) / (i &lt;&lt; 1));\nfor (ll j = 0; j &lt; n; j += (i &lt;&lt; 1))\n{\nll g = 1;\nfor (ll k = 0; k &lt; i; k++, g = g * gn % mod)\n{\nll x = a[j + k], y = g * a[j + k + i] % mod;\na[j + k] = (x + y) % mod;\na[j + k + i] = (x - y + mod) % mod;\n}\n}\n}\nif (f == 1)\nreturn;\nll inv = qpow(n, mod - 2);\nreverse(a + 1, a + n);\nfor (ll i = 0; i &lt; n; i++)\na[i] = 1ll * a[i] * inv % mod;\n}\nvoid solve(ll *A, ll *B)\n{\nm = n + m;\nfor (n = 1; n &lt;= m; n &lt;&lt;= 1)\nL++;\nfor (int i = 0; i &lt; n; i++)\nR[i] = (R[i &gt;&gt; 1] &gt;&gt; 1) | ((i &amp; 1) &lt;&lt; (L - 1));\nNTT(A, 1);\nNTT(B, 1);\nfor (int i = 0; i &lt; n; i++)\nA[i] = (A[i] % mod * B[i] % mod + mod) % mod;\nNTT(A, -1);\n}\nint main()\n{\nscanf(\"%lld%lld\", &amp;n, &amp;m);\nfor (ll i = 0; i &lt;= n; i++)\nscanf(\"%lld\", &amp;a[i]);\nfor (ll i = 0; i &lt;= m; i++)\nscanf(\"%lld\", &amp;b[i]);\nsolve(a, b);\nfor (ll i = 0; i &lt;= m; i++)\nprintf(\"%lld \", a[i]);\nreturn 0;\n}\n</code></pre> <p>FFT\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\u6a21\u677f</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; pii;\ntypedef long long ll;\nconst int N = 6e6 + 10;\nconst int P = 1e9 + 7;\nconst int INF = 0x3f3f3f3f;\nconst double PI = acos(-1.0); //\u5706\u5468\u7387PI\u3002\n\nstruct Complex\n{\ndouble x, y; //\u590d\u6570\uff0cx\u4ee3\u8868\u5b9e\u90e8\uff0cy\u4ee3\u8868\u865a\u90e8\u3002\nComplex(double _x = 0, double _y = 0)\n{\nx = _x, y = _y;\n}\n} a[N], b[N];                 //\u591a\u9879\u5f0fa\u548cb\uff0c\u76f8\u4e58\u3002\nint n, m, l, r[N], limit = 1; //n\u4e3aa\u7684\u6b21\u6570,m\u4e3ab\u7684\u6b21\u6570\u3002limit\u5373\u4e3a\u6700\u5927\u9650\u5236\u30022^n\u6b21\u65b9\uff0c\u800cl\u4e3a\u4e8c\u8fdb\u5236\u7684\u4f4d\u6570\n//\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002\nComplex operator+(Complex a, Complex b)\n{\nreturn Complex(a.x + b.x, a.y + b.y);\n}\nComplex operator-(Complex a, Complex b)\n{\nreturn Complex(a.x - b.x, a.y - b.y);\n}\n//\u590d\u6570\u76f8\u4e58\uff0c\u5219\u6a21\u957f\u76f8\u4e58\uff0c\u5e45\u5ea6\u76f8\u52a0\u3002\nComplex operator*(Complex a, Complex b)\n{\nreturn Complex(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);\n}\nvoid fft(Complex *A, int type)\n{\nfor (int i = 0; i &lt; limit; ++i)\n{\nif (i &lt; r[i])\nswap(A[i], A[r[i]]);\n//\u6c42\u51fa\u8981\u8fed\u4ee3\u7684\u533a\u95f4\u3002\u5c0f\u4e8er[i]\u65f6\u624d\u4ea4\u6362\uff0c\u9632\u6b62\u540c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\u4e24\u6b21\uff0c\u56de\u5230\u539f\u6765\u7684\u4f4d\u7f6e\u3002\n}\n//\u4ece\u5e95\u5c42\u5f80\u4e0a\u5408\u5e76\u3002\nfor (int mid = 1; mid &lt; limit; mid &lt;&lt;= 1)\n{\n//\u5f85\u5408\u5e76\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u6700\u5f00\u59cb\u662f\u4e24\u4e2a\u957f\u5ea6\u4e3a1\u7684\u5e8f\u5217\u5408\u5e76,mid = 1;\nComplex Wn(cos(PI / mid), type * sin(PI / mid)); //\u5355\u4f4d\u6839\u3002\nfor (int len = mid &lt;&lt; 1, j = 0; j &lt; limit; j += len)\n{\n//len\u662f\u533a\u95f4\u7684\u957f\u5ea6\uff0cj\u662f\u5f53\u524d\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u5408\u5e76\u5230\u4e86\u54ea\u4e00\u4f4d\u3002\nComplex w(1, 0); //\u5e42\uff0c\u4e00\u76f4\u4e58\uff0c\u5f97\u5230\u5e73\u65b9\uff0c\u4e09\u6b21\u65b9\u3002\nfor (int k = 0; k &lt; mid; ++k, w = w * Wn)\n{\n//\u679a\u4e3e\u5de6\u534a\u90e8\u5206\u3002\u8774\u8776\u53d8\u6362\u5f97\u5230\u53f3\u534a\u90e8\u5206\u7684\u7b54\u6848\u3002w\u4e3awn * k\nComplex x = A[j + k], y = w * A[j + mid + k]; //\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206\u3002\nA[j + k] = x + y;                             //\u5de6\u8fb9\u52a0\u3002\nA[j + mid + k] = x - y;                       //\u53f3\u8fb9\u51cf\u3002\n}\n}\n}\nif (type == 1)\nreturn;\nfor (int i = 0; i &lt;= limit; ++i)\n{\na[i].x /= limit;\n//\u6700\u540e\u9700\u8981\u9664\u4ee5limit\u4e5f\u5c31\u662f\u8865\u6210\u4e862\u7684\u6574\u6570\u5e42\u3002\u5c06\u70b9\u503c\u8f6c\u6362\u4e3a\u7cfb\u6570\u3002\n}\n}\nvoid solve()\n{\nwhile (limit &lt;= n + m)\n{\nlimit &lt;&lt;= 1, l++;\n}\n//\u521d\u59cb\u5316r\u6570\u7ec4\u3002\nfor (int i = 0; i &lt; limit; ++i)\n{\nr[i] = (r[i &gt;&gt; 1] &gt;&gt; 1) | ((i &amp; 1) &lt;&lt; (l - 1));\n}\nfft(a, 1); //\u5c06a\u7684\u7cfb\u6570\u8f6c\u5316\u4e3a\u70b9\u503c\u8868\u793a\uff0c\nfft(b, 1); //\u5c06b\u7684\u7cfb\u6570\u8f6c\u5316\u4e3a\u70b9\u503c\u8868\u793a\u3002\nfor (int i = 0; i &lt;= limit; ++i)\n{\n//\u5bf9\u5e94\u9879\u76f8\u4e58\uff0c\u5f97\u5230\u70b9\u503c\u8868\u793a\u7684\u89e3\u3002\na[i] = a[i] * b[i];\n}\nfft(a, -1);\nfor (int i = 0; i &lt;= n + m; ++i)\n{\n//\u53d6\u51fa\u6765\u96642\uff0c\u52a0\u4e0a0.5\u56db\u820d\u4e94\u5165\u3002\nprintf(\"%d \", (int)(a[i].x + 0.5));\n}\nprintf(\"\\n\");\n}\nint main()\n{\nscanf(\"%d%d\", &amp;n, &amp;m);\n//\u8bfb\u5165\u591a\u9879\u5f0f\u7684\u6bcf\u4e00\u9879\u3002\nfor (int i = 0; i &lt;= n; ++i)\n{\nscanf(\"%lf\", &amp;a[i].x);\n}\n\u00b7  for (int i = 0; i &lt;= m; ++i)\n{\nscanf(\"%lf\", &amp;b[i].x);\n}\nsolve();\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#meissel-lehmer","title":"Meissel-Lehmer \u7b97\u6cd5","text":"<p>\u662f\u4e00\u79cd\u80fd\u5728\u4e9a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u6c42\u51fa 1\u223cn\u5185\u8d28\u6570\u4e2a\u6570\u7684\u4e00\u79cd\u7b97\u6cd5\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6O(n^{\\frac{2}{3}})</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ll = long long;\n//\u901a\u8fc7\u77e5\u9053\u524d\u9762\u7684 n^1/3 \u7684\u8d28\u6570\u53ef\u4ee5\u63a8\u65ad\u540e\u9762n^2/3\u7684\u8d28\u6570\u6240\u4ee5\u53ef\u4ee5\u9002\u5f53\u51cf\u5c0f\nconst int N  = 9e3;\nconst int M  = 2;         //\u4e3a\u4e86\u51cf\u5c0f\u5185\u5b58\u53ef\u4ee5\u4e0d\u8fc7\u662f\u8d28\u6570\nconst int PM = 2 * 3 * 5; //\u4e3a\u4e86\u51cf\u5c0f\u5185\u5b58\u53ef\u4ee5\u4e0d\u8fc7\u8981\u6309\u8d28\u6570\u51cf\u5c0f\u5982\u53bb\u638917\nll n;\nbool np[N];\nint prime[N], pi[N];\nint phi[PM + 1][M + 1], sz[M + 1];\n\nint getprime() {\nint cnt = 0;\nnp[0] = np[1] = true;\npi[0] = pi[1] = 0;\nfor (int i = 2; i &lt; N; ++i) {\nif (!np[i]) prime[++cnt] = i;\npi[i] = cnt;\nfor (int j = 1; j &lt;= cnt &amp;&amp; i * prime[j] &lt; N; ++j) {\nnp[i * prime[j]] = true;\nif (i % prime[j] == 0) break;\n}\n}\nreturn cnt;\n}\n\nvoid init() {\ngetprime();\nsz[0] = 1;\nfor (int i = 0; i &lt;= PM; ++i) phi[i][0] = i;\nfor (int i = 1; i &lt;= M; ++i) {\nsz[i] = prime[i] * sz[i - 1];\nfor (int j = 1; j &lt;= PM; ++j) phi[j][i] = phi[j][i - 1] - phi[j / prime[i]][i - 1];\n}\n}\n\nint sqrt2(ll x) {\nll r = (ll)sqrt(x - 0.1);\nwhile (r * r &lt;= x) ++r;\nreturn int(r - 1);\n}\n\nint sqrt3(ll x) {\nll r = (ll)cbrt(x - 0.1);\nwhile (r * r * r &lt;= x) ++r;\nreturn int(r - 1);\n}\n\nll getphi(ll x, int s) {\nif (s == 0) return x;\nif (s &lt;= M) return phi[x % sz[s]][s] + (x / sz[s]) * phi[sz[s]][s];\nif (x &lt;= prime[s] * prime[s]) return pi[x] - s + 1;\nif (x &lt;= prime[s] * prime[s] * prime[s] &amp;&amp; x &lt; N) {\nint s2x = pi[sqrt2(x)];\nll ans  = pi[x] - (s2x + s - 2) * (s2x - s + 1) / 2;\nfor (int i = s + 1; i &lt;= s2x; ++i) ans += pi[x / prime[i]];\nreturn ans;\n}\nreturn getphi(x, s - 1) - getphi(x / prime[s], s - 1);\n}\n\nll getpi(ll x) {\nif (x &lt; N) return pi[x];\nll ans = getphi(x, pi[sqrt3(x)]) + pi[sqrt3(x)] - 1;\nfor (int i = pi[sqrt3(x)] + 1, ed = pi[sqrt2(x)]; i &lt;= ed; ++i) ans -= getpi(x / prime[i]) - i + 1;\nreturn ans;\n}\n\nll lehmer_pi(ll x) { //\u5c0f\u4e8e\u7b49\u4e8en\u7684\u7d20\u6570\u6709\u591a\u5c11\u4e2a\nif (x &lt; N) return pi[x];\nint a  = (int)lehmer_pi(sqrt2(sqrt2(x)));\nint b  = (int)lehmer_pi(sqrt2(x));\nint c  = (int)lehmer_pi(sqrt3(x));\nll sum = getphi(x, a) + (ll)(b + a - 2) * (b - a + 1) / 2;\nfor (int i = a + 1; i &lt;= b; i++) {\nll w = x / prime[i];\nsum -= lehmer_pi(w);\nif (i &gt; c) continue;\nll lim = lehmer_pi(sqrt2(w));\nfor (int j = i; j &lt;= lim; j++) sum -= lehmer_pi(w / prime[j]) - (j - 1);\n}\nreturn sum;\n}\n\nint main() {\nios_base::sync_with_stdio(false), cin.tie(0);\ninit();\nwhile (cin &gt;&gt; n &amp;&amp; n) cout &lt;&lt; lehmer_pi(n) &lt;&lt; \"\\n\";\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#miller-rabin","title":"Miller Rabin\u7d20\u6570\u5224\u5b9a\u7b97\u6cd5","text":"<pre><code>// C++ Version\nbool millerRabin(int n) {\nif (n &lt; 3 || n % 2 == 0) return n == 2;\nint a = n - 1, b = 0;\nwhile (a % 2 == 0) a /= 2, ++b;\n// test_time \u4e3a\u6d4b\u8bd5\u6b21\u6570,\u5efa\u8bae\u8bbe\u4e3a\u4e0d\u5c0f\u4e8e 8\n// \u7684\u6574\u6570\u4ee5\u4fdd\u8bc1\u6b63\u786e\u7387,\u4f46\u4e5f\u4e0d\u5b9c\u8fc7\u5927,\u5426\u5219\u4f1a\u5f71\u54cd\u6548\u7387\nfor (int i = 1, j; i &lt;= test_time; ++i) {\nint x = rand() % (n - 2) + 2, v = quickPow(x, a, n);\nif (v == 1) continue;\nfor (j = 0; j &lt; b; ++j) {\nif (v == n - 1) break;\nv = (long long)v * v % n;\n}\nif (j &gt;= b) return 0;\n}\nreturn 1;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_37","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_38","title":"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","text":"<p>\u5982\u679c\u4f60\u9700\u8981\u79fb\u52a8\u4e00\u6837\u4e1c\u897f\uff0c\u663e\u7136\u63a5\u89e6\u6216\u8005\u4f7f\u7528\u78c1\u573a\u7535\u573a\u4e4b\u7c7b\u7684\u53ef\u4ee5\u89e3\u51b3\u3002\u4f46\u662f\u6709\u6ca1\u6709\u529e\u6cd5\u8fdb\u884c\u8d85\u8d8a\u8ddd\u79bb\u7684\u968f\u5fc3\u6240\u6b32\u7684\u79fb\u52a8\uff1f \u5bf9\u4e8e\u7269\u4f53\u6216\u8005\u6587\u5b57\u8fdb\u884c\u8d85\u8ddd\u79bb\u79fb\u52a8\u4e00\u76f4\u662f\u4eba\u7c7b\u7684\u68a6\u60f3\uff0c\u6709\u4e00\u5929\u8fd9\u4e2a\u96be\u9898\u7ec8\u4e8e\u88ab\u6211\u4eec\u7684\u5927\u725b\u89e3\u51b3\u4e86\uff01\u4ed6\u73b0\u5728\u9700\u8981\u7684\u5c31\u662f\u6574\u7406\u6570\u5217\u3002\u6570\u5217\u5c31\u662f\u6240\u8c13\u7684\u5199\u5728\u7eb8\u4e0a\u6216\u8005\u5728\u7535\u8111\u54c1\u76ee\u4e0a\u7684\u6570\u5217... \u6574\u7406\u6570\u5217\u9700\u8981\u4e00\u4e2a\u53eb\u505aswap\u7684\u64cd\u4f5c\uff0cswap\u64cd\u4f5c\u5c31\u662f\u6307\u5927\u725b\u901a\u8fc7\u8d85\u8ddd\u79bb\u7684\u63a7\u5236\u628a\u6570\u5217\u4e2d\u7684\u67d0\u4e00\u4f4d\u76f4\u63a5\u63d2\u5165\u67d0\u4e24\u4f4d\u7684\u4e2d\u95f4\u6216\u8005\u6570\u5217\u7684\u5f00\u59cb\u6216\u8005\u7ec8\u6b62\u7684\u64cd\u4f5c\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7684\u5173\u952e\u5728\u4e8e\u8d85\u8ddd\u79bb\u63a7\u5236\uff0c\u663e\u7136\u8fd9\u79cd\u4e8b\u60c5\u4e0d\u80fd\u5e72\u592a\u591a\u6b21\uff0c\u4e0d\u4f46\u964dRP\uff0c\u800c\u4e14\u5f88\u8017\u4f53\u529b\u3002\u4f60\u7684\u4efb\u52a1\u5c31\u662f\u4ece\u521d\u59cb\u72b6\u6001\u5230\u76ee\u6807\u72b6\u6001\u6240\u9700\u8981\u505aswap\u7684\u6700\u5c11\u6b21\u6570\u3002</p> <p>\u8f93\u5165 \u4e09\u884c\uff0c\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 n\uff08n&lt;600000\uff09 \u7b2c\u4e8c\u884c\uff0cn \u4e2a\u6574\u6570\uff081-n\uff09\uff0c\u8868\u793a\u521d\u59cb\u6570\u5217\u3002 \u7b2c\u4e09\u884c\uff0cn \u4e2a\u6574\u6570\uff081-n\uff09\uff0c\u8868\u793a\u76ee\u6807\u6570\u5217\u3002 \u4fdd\u8bc1\u6574\u6570\u4e0d\u91cd\u590d\u3002</p> <p>\u8f93\u51fa \u4e00\u884c \u8868\u793a\u6700\u5c11swap\u6b21\u6570\u3002 \u6837\u4f8b\u8f93\u5165 10 1 2 3 4 5 6 7 8 9 10 10 9 8 7 6 5 4 3 2 1 \u6837\u4f8b\u8f93\u51fa 9</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int inf=0x7fffffff;\nint b[1005001],mp[1005001],c[1005001];\nint main()\n{\nint n,x;\ncin&gt;&gt;n;\nfor(int i=1; i&lt;=n; i++)\nscanf(\"%d\",&amp;x),mp[x]=i;\nfor(int i=1; i&lt;=n; i++)\nscanf(\"%d\",&amp;b[i]),c[i]=inf;\nint len=0;\nc[0]=0;\nfor(int i=1; i&lt;=n; i++)\n{\nint l=0,r=len,mid;\nif(mp[b[i]]&gt;c[len])\nc[++len]=mp[b[i]];\nelse\n{\nwhile(l&lt;r)\n{\nmid=(l+r)/2;\nif(c[mid]&gt;mp[b[i]])\nr=mid;\nelse\nl=mid+1;\n}\nc[l]=min(mp[b[i]],c[l]);\n}\n}\ncout&lt;&lt;n-len&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_39","title":"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217","text":"<pre><code>for(int i = 1; i &lt;= strlen(a); i ++)\nfor(int j = 1; j &lt;= strlen(b); j ++)\nif(a[i] == b[j])\ndp[i][j] = dp[i-1][j-1] + 1;\nelse\ndp[i][j] = max(dp[i-1][j],dp[i][j-1]);\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#dp","title":"\u72b6\u538bDP","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef unsigned long long ull;\ntypedef long long ll;\n\nconst int inf=0x3f3f3f3f;\nint n,m;\n\nstruct node{\nint cost,num;\n}nd[100005];\n\nint f[1005][(1&lt;&lt;12)+5];//1\u5de6\u79fb12\u4f4d\u518d\u52a05\n\nint main()\n{\ncin&gt;&gt;n&gt;&gt;m;\nfor(int i=1;i&lt;=m;i++)\n{\nint b;\nscanf(\"%d%d\",&amp;nd[i].cost,&amp;b);\nint t=0;\nfor(int j=1;j&lt;=b;j++)\n{\nint temp;\nscanf(\"%d\",&amp;temp);\nt|=(1&lt;&lt;(temp-1));///1\u672c\u6765\u5c31\u5728\u7b2c\u4e00\u4e2a\u4f4d\uff0c\u6240\u4ee5\u8981\u5230\u7b2ctemp\u4f4d\uff0c\u53ea\u9700\u8981\u5411\u5de6\u79fb\u52a8temp-1\u4f4d\n}\nnd[i].num=t;\n}\nmemset(f,inf,sizeof(f));\nf[0][0]=0;///\u5f88\u91cd\u8981\nfor(int i=1;i&lt;=m;i++)\n{\nfor(int j=0;j&lt;(1&lt;&lt;n);j++)///n\u4e2a\u9501\n{\nint kk=j|nd[i].num;///\u5bf9\u5e94\u6bcf\u4e2a\u9501\u9009\u4e0d\u9009\nf[i][kk]=min(f[i][kk],f[i-1][j]+nd[i].cost);\nf[i][j]=min(f[i][j],f[i-1][j]);///\n}\n}\nif(f[m][(1&lt;&lt;n)-1]!=inf)///1\u5411\u5de6\u79fb\u52a812\uff0c\u76f8\u5f53\u4e8e1000000000000\uff0c\u7136\u800c12\u4e2a\u4f4d\u7f6e\u90fd\u4e3a1\uff0c\u5373(111111111111)=(1000000000000)-1\nprintf(\"%d\\n\",f[m][(1&lt;&lt;n)-1]);\nelse printf(\"-1\");\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#dp_1","title":"\u659c\u7387DP","text":"<p>\u4f18\u5316$ Dp[i]=min(Dp[i]\uff0cDp[j]+(h[j]-h[i])^2 +m)(m\u4e3a\u5e38\u6570)$</p> <p>\u9898\u76ee\u94fe\u63a5\uff1a</p> <p>Frog 3-ICPC</p> <p>Frog 3-Atcoder</p> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://www.cnblogs.com/orzzz/p/7885971.html</p> <p>https://blog.csdn.net/mengxiang000000/article/details/78113980</p> <p>https://blog.csdn.net/bllsll/article/details/78267029</p> <p>\u516c\u5f0f\u63a8\u5bfc\uff1a</p> <p>\u6211\u4eec\u5047\u8bbe\u5728\u6c42\u89e3dp[i]\u65f6\uff0c\u5b58\u5728j,k(j&gt;k)\u4f7f\u5f97\u4ecej\u8f6c\u79fb\u6bd4\u4ecek\u8f6c\u79fb\u66f4\u4f18\uff0c\u90a3\u4e48\u9700\u8981\u6ee1\u8db3\u6761\u4ef6\uff1a</p> <p>dp[j]+(S[i+1]\u2212S[j])^2+M&lt;dp[k]+(S[i+1]\u2212S[k])^2+M</p> <p>\u5c55\u5f00\u4e0a\u5f0f</p> <p>dp[j]+S[i+1]^2\u22122S[i+1]S[j]+S[j]^2+M&lt;dp[k]+S[i+1]^2\u22122S[i+1]S[k]+S[k]^2+M</p> <p>\u79fb\u9879\u5e76\u6d88\u53bb\u518d\u5408\u5e76\u540c\u7c7b\u9879\u5f97</p> <p>$dp[j]\u2212dp[k]+S[j]2\u2212S[k]2&lt;2S[i+1] (S[j]\u2212S[k]) $</p> <p>\u628aS[j]\u2212S[k]S[j]\u2212S[k]\u9664\u8fc7\u53bb\uff0c\u5f97\u5230</p> <p>\\frac{dp[j]\u2212dp[k]+S[j]^2\u2212S[k]^2}{S[j]\u2212S[k]}&lt;2S[i+1]</p> <p>\u6211\u4eec\u8bbef[x]=dp[x]+S[x]^2\uff0c\u5c31\u5316\u6210\u4e86</p> <p>\\frac{f[j]\u2212f[k]}{S[j]\u2212S[k]}&lt;2S[i+1]</p> <p>\u5373\u5f53(j&gt;k)\u65f6\uff0c\u82e5\\frac{f[j]\u2212f[k]}{S[j]\u2212S[k]}&lt;2S[i+1]\uff0c\u5219j\u5bf9\u66f4\u65b0dp[i]\u6bd4k\u66f4\u65b0dp[i]\u4f18\u3002---\u659c\u7387\u3002</p> <p>\u5f53\u4e00\u4e2a\u6570\u7684dp\u503c\u6c42\u5b8c\u4e86\uff0c\u5b83\u7684f\u503c\u4e5f\u8ddf\u7740\u786e\u5b9a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7a7a\u95f4\u4e2d\u7ed8\u5236\u51fa\u70b9(S[i],f[i])\u3002\u8fd9\u4e2a\u70b9\u4ee3\u8868\u5df2\u7ecf\u6c42\u51fadp\u503c\u7684\u4e00\u4e2a\u70b9\u3002</p> <p></p> <p>\u5f53\u6211\u4eec\u8981\u6c42\u89e3dp[t]\u65f6\uff0c\u5982\u679c\u53ef\u7528\u7684\u96c6\u5408\u91cc\u5b58\u5728\u8fd9\u6837\u4e09\u4e2a\u70b9\uff0c\u4f4d\u7f6e\u5173\u7cfb\u5982\u56fe\u6240\u793a\uff1a</p> <p>\u90a3\u4e48\u663e\u7136</p> <p>\\frac{f[j]\u2212f[k]}{S[j]\u2212S[k]}&gt;\\frac{f[i]\u2212f[j]}{S[i]\u2212S[j]}</p> <p>\u8fd9\u65f6\u5019\u4ed6\u4eec\u548c2S[t+1]2S[t+1]\u7684\u5173\u7cfb\u67093\u79cd\uff1a</p> <p>\u00b7\\frac{f[j]\u2212f[k]}{S[j]\u2212S[k]}&gt;\\frac{f[i]\u2212f[j]}{S[i]\u2212S[j]}&gt;2S[t+1]</p> <p>\u90a3\u4e48j\u6bd4i\u4f18\uff0ck\u6bd4j\u4f18\u3002</p> <p>\u00b7\\frac{f[j]\u2212f[k]}{S[j]\u2212S[k]}&gt;2S[t+1]&gt;\\frac{f[i]\u2212f[j]}{S[i]\u2212S[j]}</p> <p>\u90a3\u4e48i\u6bd4j\u4f18\uff0ck\u6bd4j\u4f18\u3002</p> <p>\u00b72S[t+1]&gt;\\frac{f[j]\u2212f[k]}{S[j]\u2212S[k]}&gt;\\frac{f[i]\u2212f[j]}{S[i]\u2212S[j]}</p> <p>\u90a3\u4e48i\u6bd4j\u4f18\uff0cj\u6bd4k\u4f18\u3002</p> <p>\u7efc\u4e0a\uff0c\u4e0d\u7ba1\u4ec0\u4e48\u6837\u7684S[t+1]\uff0c\u4ecej\u8f6c\u79fb\u90fd\u4e0d\u4f1a\u662f\u6700\u4f73\u65b9\u6848\u3002\u90a3\u4e48\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e00\u4e2a\u51f8\u5305\uff08\u4e0b\u51f8\uff09\uff0c\u6bcf\u52a0\u5165\u4e00\u4e2a\u70b9\u5c31\u5220\u53bb\u4e00\u4e9b\u70b9\uff0c\u4f7f\u5176\u7ef4\u6301\u51f8\u5305\u7684\u5f62\u6001\u3002\u6700\u4f18\u8f6c\u79fb\u4e00\u5b9a\u5728\u8fd9\u4e2a\u51f8\u5305\u4e2d\u3002</p> <p>\u90a3\u4e48\u6839\u636e\u4e0a\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u4e24\u4e2a\u63a8\u8bba\uff1a</p> <p>1.G[j\uff0ck]&lt;=S[i]\uff0c\u90a3\u4e48\u4f4d\u5b50k\u5c31\u53ef\u4ee5\u88ab\u6dd8\u6c70\u3002</p> <p>2.G[j\uff0ck]&lt;=G[i\uff0cj]\uff0c\u90a3\u4e48\u8868\u793aj\u6bd4k\u66f4\u4f18\uff0c\u5e76\u4e14i\u6bd4j\u66f4\u4f18\uff0c\u90a3\u4e48\u4f4d\u5b50j\u662f\u53ef\u4ee5\u88ab\u6dd8\u6c70\u7684\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll h[200500] = {0};\nll dp[200500] = {0};\ndeque&lt;ll&gt; que;\ndouble xielv(ll i, ll j)\n{\ndouble ans = (dp[i] + h[i] * h[i] - dp[j] - h[j] * h[j]) * 1.0 / (2 * (h[i] - h[j]));\nreturn ans;\n}\nint main()\n{\nll n, m;\nscanf(\"%lld%lld\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; i++)\nscanf(\"%lld\", &amp;h[i]);\nque.push_back(1);\ndp[1] = 0;\nfor (int i = 2; i &lt;= n; i++)\n{\nwhile (que.size() &gt;= 2 &amp;&amp; xielv(que[0], que[1]) &lt;= h[i])\nque.pop_front();\nif (que.size())\ndp[i] = dp[que[0]] + (h[i] - h[que[0]]) * (h[i] - h[que[0]]) + m;\nwhile (que.size() &gt;= 2 &amp;&amp; xielv(que[que.size() - 2], que[que.size() - 1]) &gt; xielv(que[que.size() - 1], i))\nque.pop_back();\nque.push_back(i);\n}\ncout &lt;&lt; dp[n] &lt;&lt; endl;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_40","title":"\u8d2a\u5fc3","text":""},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_41","title":"\u533a\u95f4\u8d2a\u5fc3\u95ee\u9898","text":"<p>\u53c2\u8003\u94fe\u63a5\uff1ahttps://www.cnblogs.com/dchnzlh/p/10427309.html</p> <p>\u533a\u95f4\u9009\u53d6\uff08\u4f1a\u573a\u5b89\u6392\u95ee\u9898\uff09\uff0c\u7ed9\u4e00\u4e2a\u5927\u533a\u95f4l,r\u7136\u540e\u7ed9\u4f60n\u4e2a\u533a\u95f4\uff0c\u6700\u6700\u591a\u591a\u5c11\u4e2a\u533a\u95f4\u6ca1\u6709\u91cd\u590d\u90e8\u5206</p> <p>\u4f8b\u5b50\uff1a</p> <p>\u5b66\u6821\u7684\u5c0f\u793c\u5802\u6bcf\u5929\u90fd\u4f1a\u6709\u8bb8\u591a\u6d3b\u52a8\uff0c\u6709\u65f6\u95f4\u8fd9\u4e9b\u6d3b\u52a8\u7684\u8ba1\u5212\u65f6\u95f4\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u9700\u8981\u9009\u62e9\u51fa\u4e00\u4e9b\u6d3b\u52a8\u8fdb\u884c\u4e3e\u529e\u3002\u5c0f\u5218\u7684\u5de5\u4f5c\u5c31\u662f\u5b89\u6392\u5b66\u6821\u5c0f\u793c\u5802\u7684\u6d3b\u52a8\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6700\u591a\u5b89\u6392\u4e00\u4e2a\u6d3b\u52a8\u3002\u73b0\u5728\u5c0f\u5218\u6709\u4e00\u4e9b\u6d3b\u52a8\u8ba1\u5212\u7684\u65f6\u95f4\u8868\uff0c\u4ed6\u60f3\u5c3d\u53ef\u80fd\u7684\u5b89\u6392\u66f4\u591a\u7684\u6d3b\u52a8\uff0c\u8bf7\u95ee\u4ed6\u8be5\u5982\u4f55\u5b89\u6392\u3002</p> <p>\u8f93\u5165\uff1a</p> <p>\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u578b\u6570m(m&lt;100)\u8868\u793a\u5171\u6709m\u7ec4\u6d4b\u8bd5\u6570\u636e\u3002 \u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570n(1&lt;n&lt;10000)\u8868\u793a\u8be5\u6d4b\u8bd5\u6570\u636e\u5171\u6709n\u4e2a\u6d3b\u52a8\u3002 \u968f\u540e\u7684n\u884c\uff0c\u6bcf\u884c\u6709\u4e24\u4e2a\u6b63\u6574\u6570Bi,Ei(0&lt;=Bi,Ei&lt;10000),\u5206\u522b\u8868\u793a\u7b2ci\u4e2a\u6d3b\u52a8\u7684\u8d77\u59cb\u4e0e\u7ed3\u675f\u65f6\u95f4\uff08Bi&lt;=Ei)</p> <p>\u8f93\u51fa\uff1a</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u8f93\u5165\uff0c\u8f93\u51fa\u6700\u591a\u80fd\u591f\u5b89\u6392\u7684\u6d3b\u52a8\u6570\u91cf\u3002</p> <p>\u7b56\u7565\uff1a\u6bcf\u9009\u4e00\u4e2a\u4e4b\u540e\u80fd\u7ed9\u540e\u9762\u7684\u7559\u66f4\u591a\u7684\u65f6\u95f4\uff08\u6548\u679c\uff1a\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\uff09</p> <p>\u90a3\u4e48\u7b2c\u4e00\u4e2a\u65f6\uff0c\u80af\u5b9a\u9009\u6b64\u65f6\u80fd\u9009\u7684\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\uff0c\u9009\u5176\u4ed6\u7684\u8bdd\u7ed9\u540e\u9762\u7559\u7684\u65f6\u95f4\u90fd\u6bd4\u524d\u8005\u5c0f\uff0c\u6240\u4ee5\u54b1\u4eec\u9009\u7684\u7b2c\u4e00\u4e2a\u80af\u5b9a\u6ca1\u9519\uff0c\u5c31\u662f\u6b64\u65f6\u80fd\u9009\u7684\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\uff0c\u7136\u540e\u9009\u7b2c\u4e8c\u4e2a\u65f6\uff0c\u4e5f\u662f\u9009\u53ef\u9009\u65f6\u95f4\u4e2d\u7ed3\u675f\u6700\u65e9\u7684\uff0c\u8fd9\u6837\u4fdd\u8bc1\u6709\u5176\u6700\u4f18\u89e3\uff0c\u5f52\u7eb3\u8d77\u6765\u6fc0\u5c31\u662f\uff0c\u6bcf\u4e2a\u6839\u636e\u5f53\u524d\u53ef\u7528\u65f6\u95f4\uff0c\u9009\u53d6\u4e00\u4e2a\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\uff0c\u505a\u4e3a\u4e0b\u4e00\u4e2a\u4f1a\u573a\u7684\u5b89\u6392\uff0c</p> <pre><code>#include&lt;stdio.h&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int maxn=10010;\nstruct Node{\nint beg,end;\n}node[maxn];\nbool cmp(Node a,Node b)\n{\nreturn a.end&lt;b.end;\n}\nint main()\n{\nint t,n,ans;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nscanf(\"%d\",&amp;n);\nfor(int i=0;i&lt;n;++i)//\u8f93\u5165\u533a\u95f4 \u5e76\u5904\u7406\n{\nscanf(\"%d %d\",&amp;node[i].beg,&amp;node[i].end);\nnode[i].end++;//\u5c06\u533a\u95f4\u53d8\u4e3a\u5de6\u95ed\u53f3\u5f00\n}\nsort(node,node+n,cmp);//\u5c06\u533a\u95f4\u6309\u53f3\u7aef\u70b9\u6392\u5e8f,\u53f3\u7aef\u70b9\u5c0f\u7684\u5728\u524d\u9762\nans=0;\nint pos=0;//\u521d\u59cb\u5316\n//pos\u610f\u4e3a\u4e0a\u4e00\u4e2a\u9009\u53d6\u7684\u6d3b\u52a8\u7ed3\u675f\u7684\u4f4d\u7f6e,\u82e5\u679cbeg&gt;=pos\u5c31\u53ef\u4ee5\u5b89\u6392\nfor(int i=0;i&lt;n;++i)\n{\nif(node[i].beg&gt;=pos)\n{\n++ans;\npos=node[i].end;\n}\n}\nprintf(\"%d\\n\",ans);\n}\n}\n</code></pre> <p>\u533a\u95f4\u9009\u70b9\u95ee\u9898,n\u4e2a\u95ed\u533a\u95f4[ai,bi]\uff0c\u8ba9\u4ed6\u53d6\u5c3d\u91cf\u5c11\u7684\u70b9\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u95ed\u533a\u95f4\u5185\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u3002</p> <p>\u8f93\u5165\uff1a</p> <p>n\u4e2a\u95ed\u533a\u95f4\uff0c</p> <p>\u8f93\u51fa\uff1a</p> <p>\u6700\u5c11\u7528\u51e0\u4e2a\u70b9\uff0c\u628a\u6bcf\u4e2a\u533a\u95f4\u90fd\u5305\u542b\u4e00\u4e2a\u70b9</p> <p>\u7b56\u7565\uff1a\u8ba9\u8fd9\u4e2a\u70b9\u51fa\u73b0\u5728\u4e00\u4e2a\u6ca1\u6709\u70b9\u7684\u533a\u95f4\u4e0a\uff0c\u5c3d\u53ef\u80fd\u8986\u76d6\u591a\u7684\u533a\u95f4\u7684\u5730\u65b9\uff08\u6548\u679c\uff1a\u6309\u7ed3\u675f\u5904\u6392\u5e8f\uff09</p> <p>\u9996\u5148\u4e3a\u4e86\u5c06\u6700\u5de6\u8fb9\u7684\u4e00\u4e2a\u533a\u95f4\u8986\u76d6\uff0c\uff08\u6309\u7ed3\u675f\u6392\u5e8f\u5373\u53ef\uff09\u90a3\u4e48\u7b2c\u4e00\u4e2a\u70b9\u5fc5\u987b\u5728\u7b2c\u4e00\u4e2a\u533a\u95f4\u4e0a\uff0c\u90a3\u4e48\u5728\u533a\u95f4\u4e0a\u54ea\u5462\uff1f\u4e3a\u4e86\u8ba9\u8fd9\u4e2a\u70b9\u8ba9\u66f4\u591a\u7684\u533a\u95f4\u7684\u533a\u95f4\u78b0\u5230\uff0c\u8ba9\u8fd9\u4e2a\u70b9\u6700\u9760\u53f3\uff0c\u8fd9\u6837\u7684\u8bdd\u80fd\u4fdd\u8bc1\u8fd9\u4e2a\u70b9\u8986\u76d6\u7684\u5730\u65b9\u6700\u591a\uff0c\u7136\u540e\u4e00\u76f4\u5f80\u540e\u904d\u5386\uff0c\u76f4\u5230\u4e00\u4e2a\u533a\u95f4\u4e0d\u5728\u8fd9\u4e2a\u70b9\u4e0a\u65f6\uff0c\u4e3a\u4e86\u8ba9\u8fd9\u4e2a\u533a\u95f4\u88ab\u8986\u76d6\uff0c\u5fc5\u987b\u5728\u4ece\u8fd9\u4e2a\u533a\u95f4\u4e0a\u627e\u4e00\u70b9\uff0c\uff08\u95ee\u9898\u53d8\u4e3a\u4e86\u524d\u8005\uff09 \u6bcf\u6b21\u4e00\u4e2a\u70b9\u53ef\u4ee5\u89e3\u51b3\u4e00\u4e2a\u533a\u95f4\u6216\u8005\u82e5\u5e72\u4e2a\u533a\u95f4\uff0c\u8fd9\u904d\u5386\u5b8c\u6240\u6709\u533a\u95f4\u5373\u53ef</p> <pre><code>#include&lt;stdio.h&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int maxn=10010;\nstruct Node{\nint beg,end;\n}node[maxn];\nbool cmp(Node a,Node b)\n{\nreturn a.end&lt;b.end;\n}\nint main()\n{\nint n,ans;\nwhile(~scanf(\"%d\",&amp;n))\n{\nfor(int i=0;i&lt;n;++i)//\u8f93\u5165\u533a\u95f4 \u5e76\u5904\u7406\n{\nscanf(\"%d %d\",&amp;node[i].beg,&amp;node[i].end);\n}\nsort(node,node+n,cmp);//\u5c06\u533a\u95f4\u6309\u53f3\u7aef\u70b9\u6392\u5e8f,\u53f3\u7aef\u70b9\u5c0f\u7684\u5728\u524d\u9762\nans=0;\nint pos=-1;//pos\u4ee3\u8868\u7b2c\u4e00\u4e2a\u533a\u95f4\u9009\u53d6\u7684\u70b9\nfor(int i=0;i&lt;n;++i)\n{\nif(node[i].beg&gt;pos)\n{\npos=node[i].end;\n++ans;\n}\n}\nprintf(\"%d\\n\",ans);\n}\n}\n</code></pre> <p>\u533a\u95f4\u5b8c\u5168\u8986\u76d6\u95ee\u9898</p> <p>\u95ee\u9898\u63cf\u8ff0\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3am\u7684\u533a\u95f4\uff08\u5168\u90e8\u95ed\u5408\uff09\uff0c\u518d\u7ed9\u51fan\u6761\u7ebf\u6bb5\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff08\u6ce8\u610f\u8fd9\u91cc\u662f\u95ed\u533a\u95f4\uff09\uff0c\u6c42\u6700\u5c11\u4f7f\u7528\u591a\u5c11\u6761\u7ebf\u6bb5\u53ef\u4ee5\u5c06\u6574\u4e2a\u533a\u95f4\u5b8c\u5168\u8986\u76d6</p> <p>\u5c06\u6240\u6709\u533a\u95f4\u5316\u4f5c\u6b64\u533a\u95f4\u7684\u533a\u95f4\uff0c\u526a\u8f91\u4e00\u4e0b\uff08\u6ca1\u7528\u7684\u533a\u95f4\u5220\u9664\uff09</p> <p>\u7b56\u7565\uff1a\u5728\u80fd\u8fde\u63a5\u533a\u95f4\u5de6\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u627e\u5230\u5411\u53f3\u8fb9\u6269\u5c55\u6700\u957f\u7684\u4f4d\u7f6e\u3002\uff08\u6548\u679c\uff1a\u6309\u5f00\u5934\u6392\u5e8f\uff0c\u5f00\u5934\u4e00\u6837\uff0c\u53f3\u8fb9\u6700\u957f\u7684\u9760\u524d\uff09</p> <p>\u4e3a\u4e86\u8fde\u63a5\u5230\u8fd9\u4e2a**\u9700\u8981\u88ab\u8986\u76d6\u533a\u95f4\u7684\u5de6\u8fb9**\uff0c\u9009\u4e00\u4e2a\u5de6\u7aef\u70b9\u6700\u9760\u524d\u7684\u533a\u95f4\uff0c\u5982\u679c\u5de6\u7aef\u70b9\u76f8\u540c\u8ba9\u53f3\u7aef\u70b9\u5927\u7684\u6392\u5728\u524d\u9762</p> <p>\u7136\u540e\u5411\u53f3\u626b\u63cf\u533a\u95f4\u2026\uff0c\u5982\u4f55\u627e\u4e0b\u4e00\u4e2a\u9700\u8981\u5b89\u7f6e\u7684\u533a\u95f4\u5462\uff0c\u5373\u76f4\u5230\u627e\u5230\u4e0e\u4e0a\u4e00\u4e2a\u533a\u95f4\u6ca1\u6709\u8fde\u63a5\u7684\u5730\u65b9\uff0c\u8fd9\u65f6\u5019\u5fc5\u987b\u627e\u4e00\u4e2a\u533a\u95f4\u6765\u6765\u4f5c\u4e3a\u4e00\u4e2a\u8fde\u63a5\uff0c\u56e0\u4e3a\u524d\u9762\u533a\u95f4\u90fd\u6ca1\u6709\u65ad\u5f00\uff0c\u6240\u4ee5\u5728\u524d\u9762\u626b\u63cf\u8fc7\u7684\u533a\u95f4\u627e\u5230\u4e00\u4e2a\u7ed3\u675f\u5904\u6700\u5927\u7684\u533a\u95f4\u4f5c\u4e3a\u8fde\u63a5\u5c31\u884c\uff0c\u8bb0\u4e0b\u8fd9\u4e2a\u80fd\u6269\u5c55\u5230\u53f3\u8fb9\u7684\u6700\u5927\u4f4d\u7f6e\uff08\u5176\u5b9e\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u627e\u8fb9\u7684\u8fc7\u7a0b\uff09\u3002\u5982\u679c\u8fd9\u4e2a\u6700\u5927\u4f4d\u7f6e\u90fd\u4e0d\u80fd\u8fde\u7740\uff0c\u8bc1\u660e\u8fd9\u4e2a\u533a\u95f4\u4e0d\u80fd\u88ab\u5b8c\u5168\u8986\u76d6\uff01\u5373\u4e0d\u5b58\u5728\u89e3\u3002</p> <pre><code>#include&lt;stdio.h&gt;\n#include&lt;string&gt;\n#include&lt;string.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;algorithm&gt;\n#include&lt;math.h&gt;\nusing namespace std;\nconst int maxn=10010;\nstruct Node{\ndouble beg,end;\n}node[maxn];\nbool cmp(Node a,Node b)\n{\nif(a.beg==b.beg)\nreturn a.end&gt;b.end;\nreturn a.beg&lt;b.beg;\n}\nint main()\n{\nint t,n,cnt=0;\ndouble w,h;\nint ans=0;\ndouble x,r;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nscanf(\"%d %lf %lf\",&amp;n,&amp;w,&amp;h);\ncnt=0;\nwhile(n--)\n{\nscanf(\"%lf %lf\",&amp;x,&amp;r);\nif(r&lt;=h/2.0)//\u8fc7\u6ee4\u6389\u65e0\u6548\u7684\u55b7\u6c34\u88c5\u7f6e\ncontinue;\ndouble ll,rr;//\u5b58\u4e0b\u8be5\u55b7\u6c34\u88c5\u7f6e\u533a\u95f4\u7684\u8303\u56f4\ndouble mid=sqrt(r*r-(h*h/4.0));\nll=x-mid;\nrr=x+mid;//\u5c06\u55b7\u6c34\u88c5\u7f6e\u8f6c\u5316\u4e3a\u80fd\u8986\u76d6\u7684\u533a\u95f4\nll=max(0.0,ll);\nrr=min((double)w,rr);\nnode[cnt].beg=ll;\nnode[cnt].end=rr;\n++cnt;\n}\n/*\n        \u6b64\u65f6\u8f6c\u5316\u4e3a\u4e00\u4e2a\u533a\u95f4\u8986\u76d6\u95ee\u9898   \u5373\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3aw\u7684\u533a\u95f4\u5185  \u9009\u51fa\u6700\u5c11\u7684\u533a\u95f4\u8ba9\u8fd9\u4e2a\u533a\u95f4\u8986\u76d6\n        */\nnode[cnt].beg=(double)w;\nnode[cnt].end=(double)w;//\u52a0\u5165\u4e00\u4e2a\u7ec8\u7aef\u533a\u95f4[w,w]\u8fd9\u6837\u904d\u5386\u5230\u6574\u4e2a\u533a\u95f4\u6700\u540e\u4f1a\u627e\u51fa\u6765\u4e00\u4e2a\u5f80\u53f3\u8fb9\u5ef6\u4f38\u5230w\u7684\u4f4d\u7f6e\u7684\u533a\u95f4\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u6ca1\u7b54\u6848\n++cnt;\nsort(node,node+cnt,cmp);\ndouble maxpos,nowpos;\nnowpos=0.0;\nmaxpos=0.0;\nint flag=1;//\nans=0;\nfor(int i=0;i&lt;cnt;++i)\n{\nif(node[i].beg&lt;=nowpos)//\u8fd9\u4e2a\u533a\u95f4\u53ef\u4ee5\u4e0e\u524d\u9762\u7684\u533a\u95f4\u8fde\u7740\nmaxpos=max(maxpos,node[i].end);//\u66f4\u65b0\u8bfe\u6269\u5c55\u7684\u6700\u5927\u533a\u95f4\nelse\n{\nif(maxpos&gt;=node[i].beg)//\u9047\u5230\u4e00\u4e2a\u95f4\u9694\u7684 \u9700\u8981\u627e\u4e00\u4e2a\u533a\u95f4\u8865\u4e00\u4e0b\n{\nans++;\nnowpos=maxpos;\n--i;\n}\nelse//\u5982\u679c\u4e0d\u80fd\u8865\n{\nflag=0;\nbreak;//\u65e0\u89e3\n}\n}\n}\nif(flag)\nprintf(\"%d\\n\",ans);\nelse\nprintf(\"0\\n\");\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_42","title":"\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66","text":""},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_43","title":"\u51f8\u5305\u7b97\u6cd5","text":"<pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;cmath&gt;\n#define PI 3.1415926535\nusing namespace std;\nstruct node\n{\nint x,y;\n};\nnode vex[1000];//\u5b58\u5165\u7684\u6240\u6709\u7684\u70b9\nnode stackk[1000];//\u51f8\u5305\u4e2d\u6240\u6709\u7684\u70b9\nint xx,yy;\nbool cmp1(node a,node b)//\u6392\u5e8f\u627e\u7b2c\u4e00\u4e2a\u70b9\n{\nif(a.y==b.y)\nreturn a.x&lt;b.x;\nelse\nreturn a.y&lt;b.y;\n}\nint cross(node a,node b,node c)//\u8ba1\u7b97\u53c9\u79ef\n{\nreturn (b.x-a.x)*(c.y-a.y)-(c.x-a.x)*(b.y-a.y);\n}\ndouble dis(node a,node b)//\u8ba1\u7b97\u8ddd\u79bb\n{\nreturn sqrt((a.x-b.x)*(a.x-b.x)*1.0+(a.y-b.y)*(a.y-b.y));\n}\nbool cmp2(node a,node b)//\u6781\u89d2\u6392\u5e8f\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u901f\u5ea6\u5feb\n{\nif(atan2(a.y-yy,a.x-xx)!=atan2(b.y-yy,b.x-xx))\nreturn (atan2(a.y-yy,a.x-xx))&lt;(atan2(b.y-yy,b.x-xx));\nreturn a.x&lt;b.x;\n}\nbool cmp(node a,node b)//\u6781\u89d2\u6392\u5e8f\n{\nint m=cross(vex[0],a,b);\nif(m&gt;0)\nreturn 1;\nelse if(m==0&amp;&amp;dis(vex[0],a)-dis(vex[0],b)&lt;=0)\nreturn 1;\nelse return 0;\n/*if(m==0)\n        return dis(vex[0],a)-dis(vex[0],b)&lt;=0?true:false;\n    else\n        return m&gt;0?true:false;*/\n}\nint main()\n{\nint t,L;\nwhile(~scanf(\"%d\",&amp;t),t)\n{\nint i;\nfor(i=0; i&lt;t; i++)\n{\nscanf(\"%d%d\",&amp;vex[i].x,&amp;vex[i].y);\n}\nif(t==1)\nprintf(\"%.2f\\n\",0.00);\nelse if(t==2)\nprintf(\"%.2f\\n\",dis(vex[0],vex[1]));\nelse\n{\nmemset(stackk,0,sizeof(stackk));\nsort(vex,vex+t,cmp1);\nstackk[0]=vex[0];\nxx=stackk[0].x;\nyy=stackk[0].y;\nsort(vex+1,vex+t,cmp2);//cmp2\u662f\u66f4\u5feb\u7684\uff0ccmp\u66f4\u5bb9\u6613\u7406\u89e3\nstackk[1]=vex[1];//\u5c06\u51f8\u5305\u4e2d\u7684\u7b2c\u4e24\u4e2a\u70b9\u5b58\u5165\u51f8\u5305\u7684\u7ed3\u6784\u4f53\u4e2d\nint top=1;//\u6700\u540e\u51f8\u5305\u4e2d\u62e5\u6709\u70b9\u7684\u4e2a\u6570\nfor(i=2; i&lt;t; i++)\n{\nwhile(i&gt;=1&amp;&amp;cross(stackk[top-1],stackk[top],vex[i])&lt;0)   //\u5bf9\u4f7f\u7528\u6781\u89d2\u6392\u5e8f\u7684i&gt;=1\u6709\u65f6\u53ef\u4ee5\u4e0d\u7528\uff0c\u4f46\u52a0\u4e0a\u603b\u662f\u597d\u7684\ntop--;\nstackk[++top]=vex[i];                                    //\u63a7\u5236&lt;0\u6216&lt;=0\u53ef\u4ee5\u63a7\u5236\u91cd\u70b9\uff0c\u5171\u7ebf\u7684\uff0c\u5177\u4f53\u89c6\u9898\u76ee\u800c\u5b9a\u3002\n}\ndouble s=0;\n//for(i=1; i&lt;=top; i++)//\u8f93\u51fa\u51f8\u5305\u4e0a\u7684\u70b9\n//cout&lt;&lt;stackk[i].x&lt;&lt;\" \"&lt;&lt;stackk[i].y&lt;&lt;endl;\nfor(i=1; i&lt;=top; i++)   //\u8ba1\u7b97\u51f8\u5305\u7684\u5468\u957f\ns+=dis(stackk[i-1],stackk[i]);\ns+=dis(stackk[top],vex[0]);//\u6700\u540e\u4e00\u4e2a\u70b9\u548c\u7b2c\u4e00\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n/*s+=2*PI*L;\n            int ans=s+0.5;//\u56db\u820d\u4e94\u5165\n            printf(\"%d\\n\",ans);*/\nprintf(\"%.2lf\\n\",s);\n}\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_44","title":"\u6c42\u4efb\u610f\u591a\u8fb9\u5f62\u9762\u79ef","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct Point{\ndouble x,y;\n}p[100500];\nint n;\ndouble polygonarea()\n{\nint i,j;\ndouble area = 0;\nfor(i = 1;i &lt;= n;++i){\nif(i&lt;n)\nj=i+1;\nelse\nj=1;\narea += p[i].x*p[j].y;\narea -= p[i].y*p[j].x;\n}\narea /= 2.0;\nreturn (area&lt;0?-area:area);\n}\nint main()\n{\nwhile(scanf(\"%d\",&amp;n)!=EOF&amp;&amp;n!=0)\n{\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%lf%lf\",&amp;p[i].x,&amp;p[i].y);\nprintf(\"%.1f\\n\",polygonarea());\n}\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_45","title":"\u626b\u63cf\u7ebf\u7b97\u6cd5","text":"<p>\u7ebf\u6bb5\u6811+\u626b\u63cf\u7ebf\u6c42\u6b63\u65b9\u5f62\u989c\u8272\u53cd\u8f6c</p> <p>\u8f93\u5165\uff1a</p> <pre><code>1\n5 2  2 4 1 3\n1 5 3 5\n</code></pre> <p>\u4ee3\u88681\u7ec4\u6d4b\u8bd5\u6837\u4f8b\uff0c\u7ed9\u5b9a5*2\u7684\u6b63\u65b9\u5f62\uff0c\u5c062&lt;=x&lt;=4&amp;&amp;1&lt;=y&lt;=3\u7684\u8303\u56f4\u5185\u7684\u5c0f\u6b63\u65b9\u5f62\u8fdb\u884c\u9ed1\u767d\u53cd\u8f6c\uff0c\u6c42\u6700\u7ec8\u9ed1\u8272\u6b63\u65b9\u5f62\u7684\u4e2a\u6570\uff0c\u7b54\u6848\u4e3a18.</p> <p></p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nint h,a,b,num;\n};\nint mark[100500]={0};\nint sum[100500]={0};\nnode edge[100500]={0};\nbool cmp(node a,node b)\n{\nif(a.h==b.h)\nreturn a.num&gt;b.num;\nelse\nreturn a.h&lt;b.h;\n}\nint nodeupdate(int root,int l,int r,ll num)\n{\nmark[root]^=1;\nsum[root]=r-l+1-sum[root];\n}\nint pushdown(int root,int l,int r)\n{\nif(mark[root]==0)\nreturn 0;\nint mid=(l+r)/2;\nnodeupdate(2*root,l,mid,mark[root]);\nnodeupdate(2*root+1,mid+1,r,mark[root]);\nmark[root]=0;\n}\nint update(int root,int l,int r,int L,int R,ll num)\n{\nif(l&gt;=L&amp;&amp;r&lt;=R)\n{\nnodeupdate(root,l,r,num);\nreturn 0;\n}\npushdown(root,l,r);\nint mid=(l+r)/2;\nif(mid&gt;=L)\nupdate(root*2,l,mid,L,R,num);\nif(mid&lt;R)\nupdate(root*2+1,mid+1,r,L,R,num);\nsum[root]=sum[2*root]+sum[2*root+1];\n}\nint main()\n{\nint t,cnt;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nmemset(sum,0,sizeof(sum));\nmemset(mark,0,sizeof(mark));\nint n,m,ans=0;\ncnt=0;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=m;i++)\n{\nint x1,y1,x2,y2;\nscanf(\"%d%d%d%d\",&amp;x1,&amp;x2,&amp;y1,&amp;y2);\nedge[cnt++]=node{y1,x1,x2,1};\nedge[cnt++]=node{y2,x1,x2,-1};\n}\nsort(edge,edge+cnt,cmp);\nfor(int i=1,j=0;i&lt;=n;i++)\n{\nwhile(j&lt;cnt&amp;&amp;edge[j].h&lt;=i&amp;&amp;edge[j].num==1)\n{\nupdate(1,1,n,edge[j].a,edge[j].b,1);\nj++;\n}\nans+=sum[1];\nwhile(j&lt;cnt&amp;&amp;edge[j].h&lt;=i)\n{\nupdate(1,1,n,edge[j].a,edge[j].b,1);\nj++;\n}\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\nreturn 0;\n}\n</code></pre> <p>\u7ebf\u6bb5\u6811\u79bb\u6563\u5316\u6c42\u9762\u79ef\u7684\u5e76\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nll n;\nll s[400500] = {0};\nll len[400500] = {0};\nll x[400500]= {0};\nunordered_map&lt;ll,ll&gt;mpx;\nvoid push_up(ll t, ll l, ll r)\n{\nif (s[t])\nlen[t] = x[r+1] - x[l];\nelse if (l == r)\nlen[t] = 0;\nelse\nlen[t] = len[2 * t + 1] + len[2 * t];\n}\nvoid update(ll t, ll l, ll r, ll L, ll R, ll add)\n{\nif (l &lt;= L &amp;&amp; R &lt;= r)\n{\ns[t] += add;\npush_up(t, L, R);\nreturn;\n}\nll mid = (L + R) / 2;\nif (l &lt;= mid)\nupdate(2 * t, l, r, L, mid, add);\nif (mid &lt; r)\nupdate(2 * t + 1, l, r, mid + 1, R, add);\npush_up(t, L, R);\n}\nstruct node1\n{\nll l,r,h,d;\n};\nnode1 edge[200500]= {0};\nbool cmp(node1 a,node1 b)\n{\nreturn a.h&lt;b.h;\n}\nint main()\n{\nscanf(\"%lld\", &amp;n);\nll cnt=0;\nfor (ll i = 1; i &lt;= n; i++)\n{\nll x1,x2,y1,y2;\nscanf(\"%lld%lld%lld%lld\", &amp;x1, &amp;y1, &amp;x2, &amp;y2);\nx[++cnt]=x1,edge[cnt]= {x1,x2,y1,1};\nx[++cnt]=x2,edge[cnt]= {x1,x2,y2,-1};\n}\nsort(x+1,x+cnt+1);\nsort(edge+1,edge+cnt+1,cmp);\nll m=unique(x+1,x+cnt+1)-x-1;\nfor(int i=1; i&lt;=m; i++)\nmpx[x[i]]=i;\nll ans = 0;\nfor (ll i = 1; i &lt; cnt; i++)\n{\nll l=mpx[edge[i].l],r=mpx[edge[i].r];\nupdate(1, l,r-1, 1, m, edge[i].d);\nans += len[1]*(edge[i+1].h-edge[i].h);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n</code></pre> <p>\u626b\u63cf\u7ebf\u7ef4\u62a4\u533a\u95f4\u5185\u6240\u6709\u957f\u65b9\u5f62\u8fb9\u957f\u957f\u5ea6</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f\nusing namespace std;\nint n;\nint lazy[400500] = {0};\nint len[400500] = {0};\nint x[100500] = {0};\nint vis[50050] = {0};\nunordered_map&lt;int, int&gt; mpx;\nvoid push_up(int t, int l, int r)\n{\nif (l == r)\nlen[t] = 0;\nelse\nlen[t] = len[2 * t + 1] + len[2 * t];\n}\nvoid push_down(int t, int l, int r)\n{\nif (lazy[t])\n{\nint mid = (l + r) / 2;\nlen[2 * t] += lazy[t] * (x[mid + 1] - x[l]);\nlen[2 * t + 1] += lazy[t] * (x[r + 1] - x[mid + 1]);\nlazy[2 * t + 1] += lazy[t];\nlazy[2 * t] += lazy[t];\nlazy[t] = 0;\n}\n}\nint query(int t, int l, int r, int L, int R)\n{\nif (l &lt;= L &amp;&amp; R &lt;= r)\nreturn len[t];\npush_down(t, L, R);\nint ans = 0, mid = (L + R) / 2;\nif (l &lt;= mid)\nans += query(2 * t, l, r, L, mid);\nif (mid &lt; r)\nans += query(2 * t + 1, l, r, mid + 1, R);\nreturn ans;\n}\nvoid update(int t, int l, int r, int L, int R, int add)\n{\nif (l &lt;= L &amp;&amp; R &lt;= r)\n{\nlazy[t] += add;\nlen[t] += add * (x[r + 1] - x[l]);\nreturn;\n}\nint mid = (L + R) / 2;\nif (l &lt;= mid)\nupdate(2 * t, l, r, L, mid, add);\nif (mid &lt; r)\nupdate(2 * t + 1, l, r, mid + 1, R, add);\npush_up(t, L, R);\n}\nstruct node1\n{\nint l, r, h, d, id;\n};\nnode1 edge[100500] = {0};\nbool cmp(node1 a, node1 b)\n{\nreturn a.h &lt; b.h;\n}\nint main()\n{\nscanf(\"%d\", &amp;n);\nint cnt = 0;\nfor (int i = 1; i &lt;= n; i++)\n{\nint x1, x2, y1, y2;\nscanf(\"%d%d%d%d\", &amp;x1, &amp;y1, &amp;x2, &amp;y2);\nx[++cnt] = x1, edge[cnt] = {x1, x2, y1, 1, i};\nx[++cnt] = x2, edge[cnt] = {x1, x2, y2, -1, i};\n}\nsort(x + 1, x + cnt + 1);\nsort(edge + 1, edge + cnt + 1, cmp);\nint m = unique(x + 1, x + cnt + 1) - x - 1;\nfor (int i = 1; i &lt;= m; i++)\nmpx[x[i]] = i;\nfor (int i = 1; i &lt;= cnt; i++)\n{\nint l = mpx[edge[i].l], r = mpx[edge[i].r];\nif (edge[i].d == 1 &amp;&amp; query(1, l, r - 1, 1, m) != 0)\nvis[edge[i].id] = 1;\nif (vis[edge[i].id] == 1)\ncontinue;\nupdate(1, l, r - 1, 1, m, edge[i].d);\n}\nint ans = 0;\nfor (int i = 1; i &lt;= n; i++)\nans += (!vis[i]);\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_46","title":"\u535a\u5f08\u8bba","text":""},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_47","title":"\u5df4\u4ec0\u535a\u5f08","text":"<p>\u53ea\u6709\u4e00\u5806n\u4e2a\u7269\u54c1\uff0c\u4e24\u4e2a\u4eba\u4ece\u8f6e\u6d41\u4e2d\u53d6\u51fa\uff081~m\uff09\u4e2a\uff1b\u6700\u540e\u53d6\u5149\u8005\u80dc\u3002</p> <p>\u82e5n=k*(m+1) \u90a3\u4e48\u5148\u53d6\u8005\u5fc5\u8f93\u3002</p> <pre><code> int Bash_Game(int n,int m)//\u662f\u5426\u5148\u624b\u6709\u5fc5\u8d62\u7b56\u7565\n{\nif (n%(m+1)!=0) return 1;\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_48","title":"\u5c3c\u59c6\u535a\u5f08","text":"<p>\u6709\u82e5\u5e72\u5806\u5404\u82e5\u5e72\u4e2a\u7269\u54c1\uff0c\u4e24\u4e2a\u4eba\u8f6e\u6d41\u4ece\u67d0\u4e00\u5806\u53d6\u4efb\u610f\u591a\u7684\u7269\u54c1\uff0c\u89c4\u5b9a\u6bcf\u6b21\u81f3\u5c11\u53d6\u4e00\u4e2a\uff0c\u591a\u8005\u4e0d\u9650\uff0c\u6700\u540e\u53d6\u5149\u8005\u5f97\u80dc\u3002</p> <p>XOR \u5224\u65ad:</p> <pre><code>int Nimm_Game(int n)//\u5047\u8bben\u4e2a\u6570\u5b58\u5728\u6570\u7ec4f[]\u4e2d,\u6709\u5fc5\u80dc\u7b56\u7565\u8fd4\u56de1\n{\nint flag=0;\nfor(int i=1;i&lt;=n;i++)\nflag^=f[i];\nif(flag) return 1;\nreturn 0;\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#_49","title":"\u5a01\u4f50\u592b\u535a\u5955","text":"<p>\u6709\u4e24\u5806\u5404\u82e5\u5e72\u4e2a\u7269\u54c1\uff0c\u4e24\u4e2a\u4eba\u8f6e\u6d41\u4ece\u67d0\u4e00\u5806\u6216\u540c\u65f6\u4ece\u4e24\u5806\u4e2d\u53d6\u540c\u6837\u591a\u7684\u7269\u54c1\uff0c\u89c4\u5b9a\u6bcf\u6b21\u81f3\u5c11\u53d6\u4e00\u4e2a\uff0c\u591a\u8005\u4e0d\u9650\uff0c\u6700\u540e\u53d6\u5149\u8005\u5f97\u80dc\u3002</p> <p>\u5224\u65ad\u662f\u5426\u4e3a\u5947\u5f02\u5c40\u52bf</p> <p>\u8bbex=   k=[a*x]\uff0c\u5411\u4e0a\u53d6\u6574</p> <p>\u5982\u679ca+k=b\uff0c\u5219\uff08a\uff0cb\uff09\u4e3a\u5947\u5f02\u5c40\u52bf\uff0c\u540e\u624b\u80dc\uff0c\u53cd\u4e4b\u4e3a\u5148\u624b\u80dc</p> <p>\u5bf9\u5e94\u7684\u4ee3\u7801\u5728\u8fd9\u91cc\uff1a</p> <pre><code>int Wythoff_Game(int a,int b)\n{\nif(a&gt;b)\nswap(a,b);\ndouble x=(sqrt(5.0)-1.0)/2.0;\nint k=ceil(1.0*a*x);\nif(a+k==b)\nreturn 0;//\u5947\u5f02\u5c40\u52bf\uff0c\u540e\u624b\u80dc\uff01\nelse\nreturn 1;//\u975e\u5947\u5f02\u5c40\u52bf\uff0c\u5148\u624b\u80dc\uff01\n}\n</code></pre>"},{"location":"icpc/%E4%B8%AA%E4%BA%BA%E6%A8%A1%E6%9D%BF/#sgnim","title":"SG\u51fd\u6570\u548cNIM\u535a\u5f08","text":"<p>\u9898\u76ee\u9898\u89e3 \u9898\u76ee\u94fe\u63a5 SG\u51fd\u6570\u8be6\u89e3</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nbool vis[300]={0};\nint sg[110][110]={0};\nvoid init()\n{\nfor(int i=0;i&lt;=100;i++)\nsg[i][i]=sg[i][0]=sg[0][i]=199;\nfor(int i=0;i&lt;=100;i++)\n{\nfor(int j=0;j&lt;=100;j++)\n{\nif(i==j||i==0||j==0)\ncontinue;\nmemset(vis,0,sizeof(vis));\nfor(int a=0;a&lt;i;a++)\nvis[sg[a][j]]=1;\nfor(int b=0;b&lt;j;b++)\nvis[sg[i][b]]=1;\nfor(int c=min(i,j);c&gt;=1;c--)\nvis[sg[i-c][j-c]]=1;\nfor(int k=0;;k++)\n{\nif(!vis[k])\n{\nsg[i][j]=k;\nbreak;\n}\n}\n}\n}\n}\nint main()\n{\nint n;\nscanf(\"%d\",&amp;n);\nint a,b;\nint nim=0;\ninit();\nfor(int i=1;i&lt;=n;i++)\n{\nscanf(\"%d%d\",&amp;a,&amp;b);\nif(a==b)\n{\nprintf(\"Y\\n\");\nreturn 0;\n}\nnim^=sg[a][b];\n}\nif(nim!=0)\nprintf(\"Y\\n\");\nelse\nprintf(\"N\\n\");\n}\n</code></pre>"},{"location":"plan/","title":"\u5b89\u6392\u5217\u8868","text":""},{"location":"plan/#_2","title":"\u5f85\u5b8c\u6210","text":"<p>1\u3001PLCT\u5b9e\u4e60\u751f</p> <p>SMP\u5904\u7406\u5668\uff1f</p> <p>WIFI\u7684\u5b9e\u73b0\uff1f</p> <p>SPI+LCD\u7684\u8c03\u8bd5\uff1f</p> <p>2\u3001\u6bd5\u8bbe\u5f00\u9898\u62a5\u544a\u4e66\u5199</p> <p>\u4fee\u6539\u6bd5\u8bbe\u5f00\u9898\u62a5\u544a</p> <p>\u5b8c\u6210\u4e24\u7bc7\u5916\u6587\u6587\u732e\u7684\u7ffb\u8bd1</p> <p>3\u3001\u56fe\u4f18\u90e8\u5206</p> <p>\u8fd0\u884c\u76f8\u5173\u6570\u636e\u96c6\uff0c\u6536\u96c6\u5b9e\u9a8c\u6570\u636e</p> <p>\u5c1d\u8bd5\u4e66\u5199\u5b9e\u73b0Tegra\u4ee3\u7801</p> <p>\u7ee7\u7eed\u9605\u8bfbGraphBolt\u6e90\u4ee3\u7801</p> <p>4\u3001\u63d0\u9192\u73ed\u7ea7\u7701\u7f51\u4f18\u79c0\u6bd5\u4e1a\u751f\u62a5\u5907</p>"},{"location":"plan/#_3","title":"\u6682\u7f13","text":"<p>1\u3001\u4e00\u751f\u4e00\u82af\u7684\u8fdb\u4e00\u6b65\u4f18\u5316 </p> <p>\u51cf\u5c11\u5bc4\u5b58\u5668\u6570\u76ee</p> <p>2\u3001C#\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf</p> <p>\u7b49\u5f85\u786c\u4ef6\u8054\u5408\u8c03\u8bd5\u3002\u3002\u3002</p>"},{"location":"plan/#_4","title":"\u5df2\u5b8c\u6210","text":"<p>1\u3001\u7cfb\u7edf\u7ed3\u6784\u5b9e\u9a8c 1\u67086\u65e5\u4e4b\u524d \u63d0\u524d \u91c7\u7528\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1</p> <p>http://xzc.cn/wMYSERYGAE</p> <p>2\u3001\u7cfb\u7edf\u7ed3\u6784\u8003\u8bd5</p> <p>3\u3001\u6d3b\u585e\u6c14\u4e3e\u7cfb\u7edf </p> <p>\u57fa\u672c\u5b8c\u6210\u3002\u3002\u3002</p> <p>https://ubuntu.tim-wcx.ltd/oil/</p> <p>https://ubuntu.tim-wcx.ltd/oil_new</p> <p>4\u3001\u8bba\u6587\u9605\u8bfb</p> <p>\u7b2c\u4e00\u7bc7\u8bba\u6587\u5df2\u57fa\u672c\u8bfb\u5b8c</p> <p>\u7b2c\u4e8c\u7bc7\u8bba\u6587\u6293\u7d27\u8bfb</p> <p>5\u3001\u5199\u4e00\u4e2a\u7b80\u5355\u7684PDF\u7ffb\u8bd1\u8f6f\u4ef6 \u5229\u7528Electron\u5f00\u53d1 \u6682\u7f13</p> <p>\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u57fa\u4e8e\u5f00\u6e90Pdf.js\u4ee5\u53ca\u7559\u6709\u63d2\u4ef6\u7a7a\u95f4\uff0cPOST\u548cGET\uff0c\u589e\u52a0\u817e\u8baf\u7ffb\u8bd1\u548cbing\u7ffb\u8bd1\uff0c\u5bf9\u4ee3\u7801\u8fdb\u884c\u6df7\u6dc6</p> <p>\u589e\u52a0\u6570\u636e\u5b58\u50a8\u529f\u80fd\uff0c\u8bbe\u7f6e\u76f8\u5e94API ID\u548c\u5bc6\u94a5\u4fdd\u5b58\u3002</p> <p>\u4e24\u8fb9\u5bf9\u9f50</p> <p>\u6a21\u5757\u5f0f\u5f00\u53d1\uff0c\u652f\u6301\u6a21\u7ec4\uff01\uff01\uff01</p> <p>\u6570\u636e\u6e05\u6d17\u529f\u80fd\u52a0\u5f3a</p> <p>6\u3001\u8fc1\u79fb\u670d\u52a1\u5668</p> <p>\u5185\u5bb9\u8fc1\u79fb</p> <p>\u57df\u540d\u8fc1\u79fb</p> <p>7\u3001\u63d0\u9192\u7701\u7f51\u6863\u6848\u8865\u5168</p>"},{"location":"plan/_coverpage/","title":"Tim-wcx","text":""},{"location":"plan/_coverpage/#_1","title":"\u4e2a\u4eba\u6587\u6863\u7f51\u7ad9","text":"<p>GitHub Get Started</p>"},{"location":"plan/_sidebar/","title":"sidebar","text":"<ul> <li>\u4e0a\u4e00\u7ea7</li> <li>\u4e2a\u4eba\u8ba1\u5212</li> </ul>"},{"location":"problem/","title":"Index","text":"<p>\u9898\u89e3\u7cfb\u5217</p>"},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-02-02-2\u67082\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#a","title":"A\u9898","text":""},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u89e3","text":"<p>\u7b7e\u5230\u9898\u76ee\uff0c\u7ed9\u5b9a\u4e09\u4e2a\u6570a,b\u548cc\uff0c\u9009\u62e9\u4e00\u4e2a\u6570x\uff0c\u4f7f\u5f97x-2&lt;=a\uff0cx-1&lt;=b\u4e14x&lt;=c\uff0c\u6c423*x-3\u7684\u6700\u5927\u503c\u3002</p>"},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint main()\n{\nint a,b,c;\ncin&gt;&gt;a&gt;&gt;b&gt;&gt;c;\nint min1=min(a+2,min(b+1,c));\ncout&lt;&lt;min1+min1-1+min1-2&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#b","title":"B\u9898","text":""},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_3","title":"\u9898\u89e3","text":"<p>\u7ed9\u5b9a2 * n\u4e2a\u70b9\uff0c\u5728\u524dn\u4e2a\u70b9\u4e2d\u9009\u4e00\u4e2a\u70b9i\uff0c\u5728\u540en\u4e2a\u70b9\u4e2d\u9009\u4e00\u4e2a\u70b9j\uff0c\u6784\u9020\u4e00\u79cd\u5339\u914d\u65b9\u5f0f\u4f7f\u5f97\u4efb\u610f\u4e24\u70b9\u6a2a\u7eb5\u5750\u6807\u548c(xi+xj,yi+yj)\u5747\u76f8\u540c\u3002\u7531\u4e8exi+xj\u5747\u76f8\u540c\uff0c\u53ef\u4ee5\u628a\u8fd92 * n\u4e2a\u70b9\u7684x\u5750\u6807\u8fdb\u884c\u6c42\u548c\u7136\u540e\u5e73\u5747\u5206\u914d\u6210n\u4efd\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86xi+xj\u7684\u5b9a\u503c\uff0cy\u5750\u6807\u540c\u7406\u3002\uff08\u6ce8\u610f\u5f00long long\uff09</p>"},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_4","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\ntypedef long long ll;\nint main()\n{\nll n;\nscanf(\"%lld\",&amp;n);\nll sum1=0,sum2=0,x,y;\nfor(int i=1;i&lt;=2*n;i++)\n{\nscanf(\"%lld%lld\",&amp;x,&amp;y);\nsum1+=x,sum2+=y;\n}\nsum1/=n,sum2/=n;\ncout&lt;&lt;sum1&lt;&lt;' '&lt;&lt;sum2&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#c","title":"C\u9898","text":""},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_5","title":"\u9898\u89e3","text":"<p>\u8be5\u9898\u4e3a\u6253\u8868\u627e\u89c4\u5f8b\u6240\u505a\u51fa\u6765\u7684\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e9b\u6700\u5c0f\u503c\u6240\u5bf9\u5e94\u7684k\u53ef\u4ee5\u548cn\u7684\u56e0\u6570\u4e00\u4e00\u5bf9\u5e94\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u679a\u4e3en\u7684\u56e0\u6570\u7136\u540e\u6c42\u51fa\u7ed3\u679c\u5373\u53ef\u3002</p>"},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_6","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\ntypedef long long ll;\nset&lt;ll&gt;s;\nll n;\nll cal(ll x)\n{\nll size1=n/x;\nll ans=size1+size1*(size1-1)/2*x;\nreturn ans;\n}\nint main()\n{\nscanf(\"%lld\",&amp;n);\nfor(int i=1;i&lt;=sqrt(n);i++)\n{\nif(n%i==0)\n{\ns.insert(cal(i));\ns.insert(cal(n/i));\n}\n}\nset&lt;ll&gt; ::iterator it=s.begin();\nwhile(it!=s.end())\n{\ncout&lt;&lt;*it&lt;&lt;' ';\nit++;\n}\ncout&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#d","title":"D\u9898","text":""},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_7","title":"\u9898\u89e3","text":"<p>\u8fd9\u91cc\u4ee5n=4\u4e3a\u4f8b</p> <p>1 2 3 4 2 1 3 4 3 1 2 4 4 1 2 3</p> <p>1 2 4 3 2 1 4 3 3 1 4 2 4 1 3 2</p> <p>1 3 2 4 2 3 1 4 3 2 1 4 4 2 1 3</p> <p>1 3 4 2 2 3 4 1 3 2 4 1 4 2 3 1</p> <p>1 4 2 3 2 4 1 3 3 4 1 2 4 3 1 2</p> <p>1 4 3 2 2 4 3 1 3 4 2 1 4 3 2 1</p> <ol> <li> <p>\u56db\u4e2a\u6570\u4e00\u7ec4\uff0c\u53ef\u4ee5\u7ec4\u62104! \u4e2a\u7b54\u6848</p> </li> <li> <p>\u7b2c\u4e00\u6392\u5f53\u4e2d \u6bcf\u4e00\u5bf9\u6570\u540e\u4e09\u4e2a \u548c \u4e0b\u4e00\u5bf9\u6570\u7684\u7b2c\u4e00\u4e2a \u7ec4\u6210\u4e00\u4e2a\u7b54\u6848\uff0c\u800c\u7b2c\u4e00\u6392\u4e2d\u6070\u67093! \u5bf9\u6570\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a(3! - 1)*4</p> </li> <li> <p>\u7b2c\u4e00\u6392\u6709\u516d\u5bf9\u6570\uff0c\u53ef\u4ee5\u5212\u5206\u4e3a3\u7ec4\uff0c\u6bcf\u7ec4\u4e24\u4e2a\uff0c\u4e14\u6bcf\u7ec4\u4e2d \u4e0a\u4e00\u5bf9\u6570\u7684\u540e\u4e24\u4e2a \u548c \u4e0b\u4e00\u5bf9\u6570\u7684\u524d\u4e24\u4e2a \u7ec4\u6210\u7b54\u6848\uff0c\u6240\u4ee5\u7b54\u6848\u53c8\u5e94\u5f53\u52a0\u4e0a(2! - 1) * 4 * 3</p> </li> <li>\u7efc\u4e0a\u7b54\u6848\u4e3a4! + (3! - 1) * 4 + (2! - 1) * 4 * 3 =56</li> <li>\u540c\u7406\uff0c5\u7684\u7b54\u6848\u4e3a\uff1a5! + (4! - 1) * 5 + (3! - 1) * 5 * 4 + (2! - 1) * 5 * 4 * 3 = 4 *5! - 5 - 5 *4 - 5 *4 *3 = 395</li> <li>\u6ce8\u610f\u7279\u52241 \uff01\uff01\uff01</li> </ol>"},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_8","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll n;\nconst ll mod=998244353;\nint main()\n{\nscanf(\"%lld\",&amp;n);\nif(n==1)\n{\ncout&lt;&lt;1&lt;&lt;endl;\nreturn 0;\n}\nll ans=1;\nfor(ll i=1;i&lt;=n;i++)\n{\nans=ans*i;\nans%=mod;\n}\nans=ans*(n-1);\nans%=mod;\nll sum1=1;\nfor(ll i=n;i&gt;=3;i--)\n{\nsum1*=i;\nsum1%=mod;\nans=ans-sum1;\nans=(ans%mod+mod)%mod;\n}\nans=(ans%mod+mod)%mod;\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#i","title":"I\u9898","text":""},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_9","title":"\u9898\u89e3","text":"<p>\u56fe\u8bba\u9898\u76ee\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u8be5\u70b9\u5230\u6839\u8282\u70b9\u7684\u6743\u503c\u6700\u5c0f\u503c\u5373\u4e3a\u5b50\u8282\u70b9\u6743\u503c\u7684\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u5148dfs\u786e\u5b9a-1\u70b9\u7684\u6743\u503cs[i]\uff0c\u7136\u540e\u6839\u636e\u5f97\u51fa\u7684\u6743\u503c\u8be5\u70b9\u6743\u503cs[i]\u548c\u7236\u8282\u70b9\u6743\u503cs[i]\u5224\u65ad\u662f\u5426\u7b26\u5408\u6761\u4ef6\u5e76\u6c42\u548c\u5f97\u51fa\u7b54\u6848\u3002</p>"},{"location":"problem/2021-02-02-2%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_10","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nvector&lt;ll&gt;v[100500];\nll s[100500]={0};\nll fa[100500]={0};\nll dfs(ll k,ll fa)\n{\nll min1=inf;\nfor(int i:v[k])\n{\nif(i!=fa)\n{\nif(dfs(i,k)==-1)\nreturn -1;\nif(s[i]!=-1)\nmin1=min(min1,s[i]);\n}\n}\nif(s[k]==-1)\n{\nif(min1!=inf)\ns[k]=min1;\n}\nelse\n{\nif(s[k]&gt;min1)\nreturn -1;\n}\nreturn 0;\n}\nll ans=0;\nll dfs1(ll k,ll fa,ll sum)\n{\nif(s[k]==-1)\nreturn 0;\nif(s[k]&lt;sum)\nreturn -1;\nsum=max(sum,s[k]);\nans=ans+s[k]-s[fa];\nfor(int i:v[k])\n{\nif(i!=fa)\n{\nif(dfs1(i,k,sum)==-1)\nreturn -1;\n}\n}\nreturn 0;\n}\nint main()\n{\nll n,m;\nscanf(\"%lld\",&amp;n);\nfa[1]=0;\nfor(ll i=2;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;m);\nfa[i]=m;\nv[i].push_back(m);\nv[m].push_back(i);\n}\nfor(ll i=1;i&lt;=n;i++)\nscanf(\"%lld\",&amp;s[i]);\ns[0]=0;\nif(dfs(1,-1)==-1)\n{\nprintf(\"-1\\n\");\nreturn 0;\n}\nif(dfs1(1,0,0)==-1)\n{\nprintf(\"-1\\n\");\nreturn 0;\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-07-2%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-02-07-2\u67087\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-02-07-2%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u89e3","text":"<p>\u8be5\u9898\u4e3a\u62ec\u53f7\u5339\u914d\u95ee\u9898\uff0c\u6c42\u6700\u591a\u80fd\u591f\u5339\u914d\u7684\u5bf9\u6570\uff0c\u53ef\u4ee5\u53d1\u73b0 )(\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u62ec\u53f7\u4e00\u5b9a\u4e0d\u80fd\u591f\u53c2\u4e0e\u5339\u914d\uff0c\u53ea\u6709\u53bb\u9664\u5339\u914d\u62ec\u53f7\u540e\u5269\u4f59\u5168\u90e8\u4e3a\u5de6\u62ec\u53f7\u6216\u53f3\u62ec\u53f7\u624d\u80fd\u591f\u53c2\u4e0e\u5339\u914d\uff0c\u4e0e\u5176\u4ed6\u7684\u7ec4\u6210\u5b8c\u6574\u7684\u62ec\u53f7\u5e8f\u5217\u3002</p>"},{"location":"problem/2021-02-07-2%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nchar a[500500]={0};\nint num[500500]={0};\nint b[100500]={0};\nstack&lt;char&gt;s;\nint main()\n{\nint n;\nscanf(\"%d\",&amp;n);\nint ans=0;\nfor(int i=1;i&lt;=n;i++)\n{\nscanf(\"%s\",a+1);\nfor(int j=1;a[j];j++)\n{\nif(s.empty())\n{\ns.push(a[j]);\n}\nelse    {\nif(a[j]==')'&amp;&amp;s.top()=='(')\ns.pop();\nelse\ns.push(a[j]);\n}\n}\nint sum1=0,flag=1;\nwhile(!s.empty())\n{\nif(s.top()==')')\n{\ns.pop();\nif(sum1&gt;0)\nflag=0;\nelse\nsum1--;\n}\nelse\n{\ns.pop();\nif(sum1&lt;0)\nflag=0;\nelse\nsum1++;\n}\n}\nif(flag)\n{\nif(sum1&lt;0)\nnum[-sum1]++;\nb[i]=sum1;\nif(sum1==0)\nans++;\n}\n}\nans/=2;\nfor(int i=1;i&lt;=n;i++)\n{\nif(b[i]&lt;=0)\ncontinue;\nelse\n{\nif(num[b[i]]!=0)\nnum[b[i]]--,ans++;\n}\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-08-2%E6%9C%888%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-02-08-2\u67088\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-02-08-2%E6%9C%888%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u89e3","text":"<p>\u5148\u8fdb\u884cLCA\u7b97\u6cd5\uff0c\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u3001\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u7b49\uff0c\u7136\u540e\u5bf9\u4e94\u4e2a\u70b9\uff08\u5206\u522b\u4e3as1,s2,s3,s4,s5\uff09\u8fdb\u884c\u5904\u7406\uff1a</p> <ol> <li>\u5c06\u7b2cs1\u52a0\u5165\u56fe\u4e2d\uff0c\u5982\u56fe\uff0c\u589e\u52a0\u7684\u6743\u503c\u4e3adis[s1]</li> </ol> <p></p> <ol> <li>\u5c06s2\u52a0\u5165\u56fe\u4e2d\uff0c\u5047\u5982s1\u548cs2\u7684\u6700\u5c0f\u516c\u5171\u7956\u5148\u4e3afa1\u5373\u4e3alca(s1,s2)\uff0c\u5219\u589e\u52a0\u7684\u6743\u503c\u4e3adis[s2]-dis[fa1]</li> </ol> <p></p> <ol> <li>\u5c06s3\u52a0\u5165\u56fe\u4e2d\uff0c\u5047\u8bbes1\u548cs3\u7684\u6700\u5c0f\u516c\u5171\u7956\u5148\u4e3afa2\uff0cs2\u548cs3\u7684\u6700\u5c0f\u516c\u5171\u6700\u5148\u4e3afa1\uff0c\u5047\u8bbefa1\u7684\u6df1\u5ea6\u5c0f\u4e8efa2\u7684\u6df1\u5ea6\uff0c\u5219\u589e\u52a0\u7684\u6743\u503c\u4e3adis[s3]-dis[fa2]</li> </ol> <p></p> <ol> <li>\u91cd\u590d\u7b2c3\u8fc7\u7a0b\uff0c\u5c06s4,s5\u4e24\u4e2a\u70b9\u52a0\u5165\u5230\u56fe\u5f53\u4e2d\uff0c\u6700\u540e\u6743\u503c\u548c\u51cf\u53bb\u6240\u6709\u70b9\u7684\u6700\u5c0f\u516c\u5171\u7956\u5148\u5230\u6839\u8282\u70b91\u7684\u8ddd\u79bb\u5373\u4e3a\u7b54\u6848\u3002</li> </ol>"},{"location":"problem/2021-02-08-2%E6%9C%888%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u4ee3\u7801","text":"<pre><code>#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int maxn=1e5+500;\nstruct node\n{\nint to,nex,w;\n} road[maxn*2];\nint n,q,cnt;\nint pre[maxn][32],head[maxn],depth[maxn];\nint dis[maxn];\nvoid add(int u,int v,int w)\n{\nroad[cnt].to=v;\nroad[cnt].w=w;\nroad[cnt].nex=head[u];\nhead[u]=cnt++;\n}\nvoid dfs(int u,int fa)\n{\npre[u][0]=fa;\ndepth[u]=depth[fa]+1;\nfor(int i=1; (1&lt;&lt;i)&lt;=depth[u]; i++) //\u500d\u589e\npre[u][i]=pre[pre[u][i-1]][i-1];\nfor(int i=head[u]; ~i; i=road[i].nex)\n{\nint v=road[i].to;\nif(v!=fa)\n{\ndis[v]=dis[u]+road[i].w;\ndfs(v,u);\n}\n}\n}\nint lca(int u,int v)\n{\nif(depth[u]&lt;depth[v])\n{\nswap(u,v);\n}\nint i=-1,j;\nwhile((1&lt;&lt;(i+1))&lt;=depth[u])\ni++;\nfor(j=i; j&gt;=0; j--)\n{\nif(depth[u]-(1&lt;&lt;j)&gt;=depth[v])\n{\nu=pre[u][j];\n}\n}\nif(u==v)\nreturn u;\nfor(int j=i; j&gt;=0; j--)\n{\nif(pre[u][j]!=pre[v][j])\n{\nu=pre[u][j];\nv=pre[v][j];\n}\n}\nreturn pre[u][0];\n}\nint main()\n{\nscanf(\"%d\",&amp;n);\nmemset(head,-1,sizeof(head));\nmemset(depth,0,sizeof(depth));\ncnt=0;\nfor(int i=1; i&lt;n; i++)\n{\nint u,v,w;\nscanf(\"%d %d %d\",&amp;u,&amp;v,&amp;w);\nadd(u+1,v+1,w);\nadd(v+1,u+1,w);\n}\ndis[1]=0;\ndfs(1,0);\nscanf(\"%d\",&amp;q);\nwhile(q--)\n{\nint point[10]={0};\nfor(int i=1;i&lt;=5;i++)\nscanf(\"%d\",&amp;point[i]),point[i]++;\nint ans=0;\nfor(int i=1;i&lt;=5;i++)\n{\nint dep=1;\nfor(int j=1;j&lt;i;j++)\n{\nint fa=lca(point[i],point[j]);\nif(depth[fa]&gt;depth[dep])\ndep=fa;\n}\nans+=dis[point[i]];\nans-=dis[dep];\n}\nint dep=point[1];\nfor(int i=1;i&lt;=5;i++)\ndep=lca(point[i],dep);\nans-=dis[dep];\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n}\n</code></pre>"},{"location":"problem/2021-02-08-2%E6%9C%888%E6%97%A5%E9%A2%98%E8%A7%A3/#_3","title":"\u9898\u89e3","text":"<p>\u8be5\u9898\u70b9\u6570\u8f83\u5c11\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u505a\uff0c\u4f46\u662fdfs\u4f1a\u8d85\u65f6\uff0c\u6539\u7528bfs\u5373\u53ef\uff0c\u8be6\u7ec6\u89c1\u4ee3\u7801\u3002</p>"},{"location":"problem/2021-02-08-2%E6%9C%888%E6%97%A5%E9%A2%98%E8%A7%A3/#_4","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nvector&lt;ll&gt;v[100500]; //\u5b58\u56fe\u7528\nll vis[5050]={0};    ///\u8bb0\u5f55\u8ddd\u79bb\u7528\nll to[5050]={0};     ///\u5230\u8be5\u70b9\u7684\u9053\u8def\u4e2a\u6570\nll sum_vis[5050]={0};  ///bfs\u7edf\u8ba1\u7528\nlong double val_all[5050]={0};  ///\u7edf\u8ba1\u6743\u503c\u7528\nll s,e;  ///\u5f00\u59cb\u7ed3\u5c3e\nll sum_size=0;\nstruct node\n{\nll pos,val;\n};\nvoid bfs()\n{\nqueue&lt;node&gt;que;\nque.push({s,0});\nvis[s]=0;\nto[s]=1;\nwhile(!que.empty())\n{\nnode now=que.front();\nque.pop();\nvis[now.pos]=min(vis[now.pos],now.val);\nfor(ll i:v[now.pos])\n{\nif(vis[i]&gt;now.val+1)\n{\nvis[i]=now.val+1;\nto[i]=to[now.pos];\nque.push({i,now.val+1});\n}\nelse if(vis[i]==now.val+1)\n{\nto[i]+=to[now.pos];\n}\n}\n}\nsum_size=to[e];\n}\nvoid bfs1()\n{\nqueue&lt;int&gt;que;\nque.push(e);\nwhile(!que.empty())\n{\nint now=que.front();\nque.pop();\nsum_vis[vis[now]]+=to[now];\nfor(int i:v[now])\n{\nif(vis[i]==vis[now]-1)\nque.push(i);\n}\n}\nque.push(e);\nwhile(!que.empty())\n{\nint now=que.front();\nque.pop();\nval_all[now]+=to[now]*1.0/sum_vis[vis[now]];   ///\u5230\u8be5\u70b9\u8def\u7684\u6761\u6570\u5360\u76f8\u540c\u957f\u5ea6\u6761\u6570\u7684\u6bd4\u4f8b\nfor(int i:v[now])\n{\nif(vis[i]==vis[now]-1)\n{\nque.push(i);\n}\n}\n}\n}\nll dfs(ll k,ll sum)\n{\nif(k==e)\n{\nif(sum==vis[k])\nsum_size++;\nelse if(sum&lt;vis[k])\nvis[k]=sum,sum_size=1;\n}\nvis[k]=min(vis[k],sum);\nfor(ll i:v[k])\n{\nif(vis[i]&gt;=sum+1)\ndfs(i,sum+1);\n}\nreturn 0;\n}\nlong double dfs1(ll k,ll sum)\n{\nif(sum&gt;vis[e])\nreturn 0;\nif(k==e)\n{\nval_all[k]+=1.0/sum_size;\nreturn 1.0/sum_size;\n}\nlong double val=0;\nfor(ll i:v[k])\n{\nif(vis[i]==vis[k]+1)\nval+=dfs1(i,sum+1);\n}\nval_all[k]+=val;\nreturn val;\n}\nint main()\n{\nll n,m;\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(ll i=1;i&lt;=m;i++)\n{\nscanf(\"%lld%lld\",&amp;s,&amp;e);\nv[s].push_back(e);\nv[e].push_back(s);\n}\nll k;\nscanf(\"%lld\",&amp;k);\nfor(ll i=1;i&lt;=k;i++)\n{\nscanf(\"%lld%lld\",&amp;s,&amp;e);\nmemset(vis,inf,sizeof(vis));\nmemset(to,0,sizeof(to));\nmemset(sum_vis,0,sizeof(sum_vis));\nbfs(); //dfs(s,0)    ///\u8fd9\u91ccdfs\u4e5f\u53ef\u4ee5\u5f97\u51fa\u6b63\u786e\u7b54\u6848\uff0c\u4f46\u662f\u65f6\u95f4\u4f1a\u8d85,qwq\nbfs1();//dfs1(s,0);   ///bfs\u548cdfs\u5747\u53ef\uff0cbfs\u66f4\u5feb\u4e00\u70b9\uff0cdfs\u66f4\u597d\u7406\u89e3\u4e00\u70b9\uff0c\u8fd9\u91cc\u7528dfs\u65f6\u95f4\u4e0d\u4f1a\u8d85\n}\nll max1=0;\nfor(ll i=0;i&lt;n;i++)\n{\nif(val_all[i]&gt;val_all[max1])\nmax1=i;\n}\ncout&lt;&lt;max1&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-08-2%E6%9C%888%E6%97%A5%E9%A2%98%E8%A7%A3/#_5","title":"\u9898\u89e3","text":"<p>\u8be5\u9898\u76ee\u53c2\u7167\u535a\u5ba2https://m-sea-blog.com/archives/2139\uff0c\u9644\u4e00\u5f20\u56fe\uff1a</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u53d6\u4f59\u540e\u7684\u7ed3\u679c\u4e3a\u5468\u671f\u4e3aa\u7684\u5468\u671f\u51fd\u6570\uff0c\u4efb\u53d6\u4e00\u70b9k\uff0c\u5982\u679c(2 * k)%a &lt;= k%a\uff0c\u5219\u4e00\u5b9a\u6709k &lt; a &lt;= 2 * k\uff0c\u9884\u5148\u7f29\u5c0f\u8303\u56f4\u7136\u540e\u4e8c\u5206\u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002</p>"},{"location":"problem/2021-02-08-2%E6%9C%888%E6%97%A5%E9%A2%98%E8%A7%A3/#_6","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nchar query(int x,int y)\n{\ncout&lt;&lt;\"? \"&lt;&lt;x&lt;&lt;\" \"&lt;&lt;y&lt;&lt;endl;\ncout.flush();\nchar ans;\ncin&gt;&gt;ans;\nreturn ans;\n}\nint main()\n{\nwhile(1)\n{\nstring s;\ncin&gt;&gt;s;\nif(s==\"end\")\nbreak;\nll l,r;\nfor(ll i=1;;i=i*2)\n{\nl=i,r=min(i*2,(ll)2e9);\nchar ans=query(l,r);\nif(ans=='x')\n{\nl=i,r=min(i*2,(ll)1e9);\nbreak;\n}\n}\nwhile(l&lt;r)\n{\nint mid=(l+r)/2;\nchar ans=query(mid*2,mid);\nif(ans=='x')\nr=mid;\nelse\nl=mid+1;\n}\nif(l==2)\n{\nchar ans=query(2,1);\nif(ans=='x')\n{\ncout&lt;&lt;\"! 1\"&lt;&lt;endl;\ncout.flush();\ncontinue;\n}\nelse\n{\ncout&lt;&lt;\"! 2\"&lt;&lt;endl;\ncout.flush();\ncontinue;\n}\n}\ncout&lt;&lt;\"! \"&lt;&lt;l&lt;&lt;endl;\ncout.flush();\n}\n}\n</code></pre>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-02-09-2\u67089\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u89e3","text":"<p>\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u67d0\u4e00\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5bf9 (0,n-1) \u6bcf\u4e00\u4e2a\u6570\u8fdb\u884c\u67e5\u8be2\uff0c\u5b9a\u4f4d\u5230\u8be5\u6570\u6240\u5728\u7684\u6700\u5c0f\u533a\u95f4\uff08\u6ce8\u610f\u7279\u5224\u4e00\u4e2a\u6700\u5c0f\u503c\u5bf9\u5e94\u591a\u4e2a\u533a\u95f4\u8fd9\u79cd\u60c5\u51b5\uff09\uff0c\u7136\u540e\u5bf9\u8be5\u533a\u95f4\u7684\u6700\u5c0f\u503c\u7684 \u6700\u5c0f\u503c \u8fdb\u884c\u67e5\u8be2\uff0c\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u90fd\u6bd4\u8be5\u503c\u5927\uff0c\u5219\u8f93\u51fa-1\u3002</p>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nll l,r,pos,min1,add;\n};\nll n,q;\nnode tree[400500]={0};\nstruct node1\n{\nll l,r;\n};\nvector&lt;node1&gt;v[100500];\nll num[100500]={0};\nvoid build(ll t,ll l,ll r)\n{\ntree[t].pos=l;\ntree[t].l=l;\ntree[t].r=r;\ntree[t].min1=-1;\ntree[t].add=-1;\nif(l==r)\nreturn ;\nll mid=(l+r)/2;\nbuild(2*t,l,mid);\nbuild(2*t+1,mid+1,r);\nreturn ;\n}\nvoid push_up(ll p)\n{\nif(tree[p*2].min1&lt;tree[p*2+1].min1){\ntree[p].min1=tree[p*2].min1;\ntree[p].pos=tree[p*2].pos;\n}else {\ntree[p].min1=tree[p*2+1].min1;\ntree[p].pos=tree[p*2+1].pos;\n}\nreturn ;\n}\nvoid push_down(ll t)\n{\nif(tree[t].add==-1)\nreturn ;\ntree[2*t].add=max(tree[t].add,tree[2*t].add);   ///\u6700\u5c0f\u503c\u4e2d\u53d6\u6700\u5927\ntree[2*t+1].add=max(tree[t].add,tree[2*t+1].add);\n\ntree[2*t].min1=max(tree[t].min1,tree[2*t].min1);\ntree[2*t+1].min1=max(tree[t].min1,tree[2*t+1].min1);\n\ntree[t].add=-1;\nreturn ;\n}\nvoid update(ll t,ll l,ll r,ll x)\n{\nif(l==tree[t].l&amp;&amp;r==tree[t].r)\n{\ntree[t].add=max(tree[t].add,x);\ntree[t].min1=max(tree[t].min1,x);\nreturn ;\n}\npush_down(t);\nll mid=(tree[t].l+tree[t].r)/2;\nif(r&lt;=mid)\nupdate(2*t,l,r,x);\nelse if(l&gt;mid)\nupdate(2*t+1,l,r,x);\nelse\n{\nupdate(2*t,l,mid,x);\nupdate(2*t+1,mid+1,r,x);\n}\npush_up(t);\nreturn ;\n}\nvoid update(ll t,ll pos)\n{\nif(tree[t].l==tree[t].r)\n{\ntree[t].min1=1e9;\nreturn ;\n}\npush_down(t);\nll mid=(tree[t].l+tree[t].r)/2;\nif(pos&lt;=mid)\nupdate(2*t,pos);\nif(pos&gt;mid)\nupdate(2*t+1,pos);\npush_up(t);\nreturn ;\n}\nnode query(ll t,ll l,ll r)\n{\nif(tree[t].l==l&amp;&amp;tree[t].r==r)\n{\nreturn tree[t];\n}\npush_down(t);\nll mid=(tree[t].l+tree[t].r)/2;\nif(r&lt;=mid)\nreturn query(2*t,l,r);\nelse if(mid&lt;l)\nreturn query(2*t+1,l,r);\nelse\n{\nnode tree1=query(2*t,l,mid);\nnode tree2=query(2*t+1,mid+1,r);\nif(tree1.min1&lt;tree2.min1)\nreturn tree1;\nelse\nreturn tree2;\n}\n}\nint main()\n{\nscanf(\"%lld%lld\",&amp;n,&amp;q);\nbuild(1,1,n);\nfor(ll i=1;i&lt;=q;i++)\n{\nll l,r,x;\nscanf(\"%lld%lld%lld\",&amp;l,&amp;r,&amp;x);\nl++,r++,x++;\nupdate(1,l,r,x);\nv[x].push_back({l,r});\n}\nll flag=1;\nfor(ll x=1;x&lt;=n&amp;&amp;flag;x++)\n{\nll l=1,r=n;\nfor(int i=0;i&lt;v[x].size();i++)\n{\nl=max(l,v[x][i].l);\nr=min(r,v[x][i].r);\n}\nif(l&gt;r)   ///\u4e00\u4e2a\u6700\u5c0f\u503c\u5bf9\u5e94\u591a\u4e2a\u533a\u95f4\u7684\u60c5\u51b5\n{\nflag=0;\nbreak;\n}\nnode ans=query(1,l,r);\nif(ans.min1&gt;x)\n{\nflag=0;\nbreak;\n}\nll pos=ans.pos;\nnum[pos]=x-1;\nupdate(1,pos);\n}\nif(!flag)\n{\nfor(ll i=1;i&lt;=n;i++)\n{\nprintf(\"-1 \");\n}\nprintf(\"\\n\");\n}\nelse\n{\nfor(ll i=1;i&lt;=n;i++)\n{\nprintf(\"%d \",num[i]);\n}\nprintf(\"\\n\");\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_3","title":"\u9898\u89e3","text":"<p>\u8def\u5f84\u53ef\u4ee5\u62fc\u51d1\u6210\u4e00\u4e2a\u957f\u65b9\u5f62\uff0c\u53ea\u9700\u8981\u66b4\u529b\u627e\u5230\u8fd9\u4e2a\u957f\u65b9\u5f62\u5373\u53ef\uff0c\u6ce8\u610f\u5982\u679c\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u6761\u76f4\u7ebf\u4e0a\u5219\u9700\u8981\u5c06\u4e24\u4e2a\u70b9\u9519\u5f00\u3002</p>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_4","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint x1,x2,y1,y2;\nint px,py,dis=0;\nint judge1(int x,int y)\n{\nint dis1=abs(x1-x)+abs(y1-y);\nif(dis1&gt;dis)\npx=x,py=y,dis=dis1;\n}\nint main()\n{\nscanf(\"%d%d%d%d\",&amp;x1,&amp;y1,&amp;x2,&amp;y2);\nif(x1==x2)\nx1++;\nif(y1==y2)\ny1++;\njudge1(x2+1,y2+1);\njudge1(x2+1,y2);\njudge1(x2+1,y2-1);\njudge1(x2,y2+1);\njudge1(x2,y2-1);\njudge1(x2-1,y2+1);\njudge1(x2-1,y2);\njudge1(x2-1,y2-1);\nprintf(\"%d\\n\",dis*2);\n}\n</code></pre>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_5","title":"\u9898\u89e3","text":"<p>\u6839\u636e\u9898\u610f\u76f4\u63a5\u6807\u8bb0\u6a21\u62df\u5373\u53ef\u3002</p>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_6","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nchar a[2000]={0};\nmap&lt;char,int&gt;s;\nmap&lt;int,int&gt;k;\nchar b[2000][2000]={0};\nmap&lt;char,int&gt;mp1;\nmap&lt;char,int&gt;mp;\nint main()\n{\nint n;\nscanf(\"%d\",&amp;n);\nscanf(\"%s\",a+1);\nfor(int i=1;i&lt;=n;i++)\n{\nif(a[i]=='*')\nk[i]=1;\nelse\ns[a[i]]=1;\n}\nint m;\nscanf(\"%d\",&amp;m);\nint sum=0;\nfor(int i=1;i&lt;=m;i++)\n{\nscanf(\"%s\",b[++sum]+1);\nint flag=1;\nfor(int j=1;j&lt;=n&amp;&amp;flag;j++)\n{\nif(k[j]&amp;&amp;s[b[sum][j]])\nflag=0;\nelse if(!k[j]&amp;&amp;b[sum][j]!=a[j])\nflag=0;\n}\nif(!flag)\nsum--;\n}\nfor(int i=1;i&lt;=sum;i++)\n{\nmp.clear();\nfor(int j=1;j&lt;=n;j++)\n{\nif(k[j])\n{\nif(!mp[b[i][j]])\n{\nmp[b[i][j]]=1;\nmp1[b[i][j]]++;\n}\n}\n}\n}\nint ans=0;\nfor(char i='a';i&lt;='z';i++)\n{\nif(mp1[i]==sum)\nans++;\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_7","title":"\u9898\u89e3","text":"<p>\u5c06u\u66ff\u6362\u4e3aoo\uff0ckh\u66ff\u6362\u4e3ah\uff0c\u7136\u540e\u627e\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u5373\u53ef\u3002</p>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_8","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nchar a[500][500]={0};\nint ans[500]={0};\nint main()\n{\nint n;\nscanf(\"%d\",&amp;n);\nfor(int i=1;i&lt;=n;i++)\n{\nscanf(\"%s\",a[i]+1);\n}\nfor(int i=1;i&lt;=n;i++)\n{\nstack&lt;char&gt;s;\nfor(int j=1;a[i][j];j++)\n{\nif(a[i][j]=='u')\n{\ns.push('o');\ns.push('o');\n}\nelse if(a[i][j]=='h')\n{\nwhile(!s.empty()&amp;&amp;s.top()=='k')\ns.pop();\ns.push('h');\n}\nelse\n{\ns.push(a[i][j]);\n}\n}\nint sum=0;\nwhile(!s.empty())\n{\na[i][++sum]=s.top();\ns.pop();\n}\na[i][++sum]='\\0';\n}\nint ans1=0;\nfor(int i=1;i&lt;=n;i++)\n{\nif(ans[i])\ncontinue;\nfor(int j=i+1;j&lt;=n;j++)\n{\nif(strcmp(a[i]+1,a[j]+1)==0)\n{\nans[j]=1;\nans1++;\n}\n}\n}\ncout&lt;&lt;n-ans1&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_9","title":"\u9898\u89e3","text":"<p>\u627e\u6700\u5927\u76f8\u540c\u957f\u5ea6\u7684\u56de\u6587\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u53d1\u73b0\u6784\u9020 abcba \u8fd9\u79cd\u5b57\u7b26\u4e32\uff08\u4e24\u8fb9\u4e3a\u80fd\u591f\u5339\u914d\u7684\u5b57\u6bcd\uff0c\u4e2d\u95f4\u4e3a\u4e0d\u80fd\u5339\u914d\u7684\uff09\u80fd\u591f\u6700\u5c0f\u7a0b\u5ea6\u7684\u51cf\u5c11\u5757\u6570\uff0c\u63d0\u9ad8\u957f\u5ea6\uff0c\u7528\u5806\u6808\u6765\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\u5373\u53ef\u3002</p>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_10","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nchar a[400500]={0};\nmap&lt;char,int&gt;mp;\nstack&lt;char&gt;s1,s2;\nqueue&lt;char&gt;que2;\nint main()\n{\nint n;\nscanf(\"%d\",&amp;n);\nscanf(\"%s\",a+1);\nfor(int i=1;i&lt;=n;i++)\nmp[a[i]]++;\nfor(char i='a';i&lt;='z';i++)\n{\nif(mp[i]%2==1)\nque2.push(i);\nfor(int j=1;j&lt;=mp[i]/2;j++)\n{\ns1.push(i);\ns2.push(i);\n}\n}\nfor(char i='0';i&lt;='9';i++)\n{\nif(mp[i]%2==1)\nque2.push(i);\nfor(int j=1;j&lt;=mp[i]/2;j++)\n{\ns1.push(i);\ns2.push(i);\n}\n}\nfor(char i='A';i&lt;='Z';i++)\n{\nif(mp[i]%2==1)\nque2.push(i);\nfor(int j=1;j&lt;=mp[i]/2;j++)\n{\ns1.push(i);\ns2.push(i);\n}\n}\nif(que2.size()==0)\n{\nprintf(\"%d\\n\",1);\nstack&lt;char&gt;s;\nwhile(!s1.empty())\ns.push(s1.top()),s1.pop();\nwhile(!s.empty())\nprintf(\"%c\",s.top()),s.pop();\nwhile(!s2.empty())\nprintf(\"%c\",s2.top()),s2.pop();\n}\nelse\n{\nwhile(s1.size()%que2.size()!=0)\n{\nque2.push(s1.top());\ns1.pop();\nque2.push(s2.top());\ns2.pop();\n}\nprintf(\"%d\\n\",que2.size());\nint size1=s1.size()/que2.size();\nwhile(!que2.empty())\n{\nstack&lt;char&gt;s;\nfor(int i=0;i&lt;size1;i++)\ns.push(s1.top()),s1.pop();\nwhile(!s.empty())\nprintf(\"%c\",s.top()),s.pop();\nprintf(\"%c\",que2.front()),que2.pop();\nfor(int i=0;i&lt;size1;i++)\nprintf(\"%c\",s2.top()),s2.pop();\nprintf(\" \");\n}\n}\n}\n</code></pre>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_11","title":"\u9898\u89e3","text":"<p>\u4e8c\u5206\u6700\u5927\u5dee\u503c\uff0c\u7136\u540e\u7528dp\u6765\u8fdb\u884ccheck()</p>"},{"location":"problem/2021-02-09-2%E6%9C%889%E6%97%A5%E9%A2%98%E8%A7%A3/#_12","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint a[300500]={0};\nint dp[300500]={0};\nint n,m;\nint check(ll k)\n{\nfor(int i=1;i&lt;=n;i++)\ndp[i]=0;\ndp[0]=1;\nint last=1;\nfor(int i=1;i&lt;=n;i++)\n{\nwhile(a[i]-a[last]&gt;k)\nlast++;\nfor(int j=last;j+m&lt;=i+1;j++)\n{\nif(dp[j-1])\n{\ndp[i]=1;\nbreak;\n}\nelse\n{\nlast++;\n}\n}\n}\nreturn dp[n];\n}\nint main()\n{\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%d\",&amp;a[i]);\nsort(a+1,a+n+1);\nll l=0,r=2e9;\nwhile(l&lt;r)\n{\nll mid=(l+r)/2;\nif(check(mid))\nr=mid;\nelse\nl=mid+1;\n}\ncout&lt;&lt;l&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-12-%E5%AE%89%E5%8D%93%E8%AF%BE%E8%A1%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%2B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B3%A8%E8%A7%A3/","title":"2021-02-12-\u5b89\u5353\u8bfe\u8868\u5ba2\u6237\u7aef+\u670d\u52a1\u7aef\u6ce8\u89e3","text":""},{"location":"problem/2021-02-12-%E5%AE%89%E5%8D%93%E8%AF%BE%E8%A1%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%2B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B3%A8%E8%A7%A3/#_1","title":"\u4e2d\u56fd\u77f3\u6cb9\u5927\u5b66\u4e13\u7528\u8bfe\u8868","text":""},{"location":"problem/2021-02-12-%E5%AE%89%E5%8D%93%E8%AF%BE%E8%A1%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%2B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B3%A8%E8%A7%A3/#_2","title":"\u7efc\u8ff0","text":"<p>\u4ee3\u7801\u5206\u4e3a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4e24\u90e8\u5206\uff0c\u5ba2\u6237\u7aef\u4e3aJava\u5f00\u53d1\u7684\u5b89\u5353app\uff0c\u9879\u76ee\u5730\u5740\u4e3ahttps://github.com/WCX1024979076/upc_course_schedule\uff1b\u670d\u52a1\u7aef\u4e3apython\u5f00\u53d1\u7684qq\u673a\u5668\u4eba\uff0c\u9879\u76ee\u5730\u5740\u4e3ahttps://github.com/WCX1024979076/upc_course_schedule_service</p>"},{"location":"problem/2021-02-12-%E5%AE%89%E5%8D%93%E8%AF%BE%E8%A1%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%2B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B3%A8%E8%A7%A3/#_3","title":"\u5ba2\u6237\u7aef\u4ee3\u7801\u6ce8\u89e3","text":""},{"location":"problem/2021-02-12-%E5%AE%89%E5%8D%93%E8%AF%BE%E8%A1%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%2B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B3%A8%E8%A7%A3/#_4","title":"\u4ee3\u7801\u7ed3\u6784\u56fe","text":""},{"location":"problem/2021-02-12-%E5%AE%89%E5%8D%93%E8%AF%BE%E8%A1%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%2B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B3%A8%E8%A7%A3/#_5","title":"\u53c2\u8003\u4e8e\uff1a","text":"<p>\u8bfe\u8868\u63d0\u9192app</p> <p>\u754c\u9762\u8df3\u8f6c</p> <p>\u8bfe\u8868ui</p> <p>U\u8bfe\u8868</p>"},{"location":"problem/2021-02-12-%E5%AE%89%E5%8D%93%E8%AF%BE%E8%A1%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%2B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B3%A8%E8%A7%A3/#_6","title":"\u670d\u52a1\u7aef\u4ee3\u7801\u6ce8\u89e3","text":""},{"location":"problem/2021-02-12-%E5%AE%89%E5%8D%93%E8%AF%BE%E8%A1%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%2B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B3%A8%E8%A7%A3/#_7","title":"\u670d\u52a1\u7aef\u4ee3\u7801\u7ed3\u6784\u56fe","text":"<p>\u6ce8\uff1a\u8fd9\u91cc\u8fdb\u5c55\u793a\u8bfe\u8868\u63d0\u9192\u6a21\u5757\uff0c\u5176\u4f59\u8bf7\u53c2\u7167https://github.com/beiyuouo/plugins-for-nonebot2</p> <p></p>"},{"location":"problem/2021-02-12-%E5%AE%89%E5%8D%93%E8%AF%BE%E8%A1%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%2B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B3%A8%E8%A7%A3/#_8","title":"\u53c2\u8003\u4e8e\uff1a","text":"<p>https://github.com/beiyuouo/plugins-for-nonebot2</p>"},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-02-16-2\u670816\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#a","title":"A\u9898","text":""},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u89e3","text":"<p>\u7ed9\u9664\u6307\u5b9a\u4e0b\u6807\u4ee5\u5916\u7684\u6570\u505a\u52a0\u6cd5\uff0c\u76f8\u5f53\u4e8e\u7ed9\u8fd9\u4e2a\u6570\u505a\u51cf\u6cd5\uff0c\u6240\u4ee5\u5c06\u8fd9\u4e9b\u6570\u5168\u53d8\u4e3a0\u5373\u53ef\u3002</p>"},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nint n;\nscanf(\"%d\",&amp;n);\nprintf(\"%d\\n\",n);\nfor(int i=1;i&lt;=n;i++)\nprintf(\"%d \",i);\nprintf(\"\\n\");\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#b","title":"B\u9898","text":""},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#_3","title":"\u9898\u89e3","text":"<p>\u6539\u53d8\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u6b63\u8d1f\u53f7\uff0c\u6c42\u6c42\u548c\u540e\u7684\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6709\u5076\u6570\u4e2a\u8d1f\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5168\u90e8\u8f6c\u4e3a\u6b63\u6570\uff0c\u5982\u679c\u6709\u5947\u6570\u4e2a\u8d1f\u6570\uff0c\u5219\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u8d1f\u6570\uff0c\u5c06\u8fd9\u4e2a\u8d1f\u6570\u63a7\u5236\u4e3a\u6700\u5c0f\u5373\u53ef\u3002</p>"},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#_4","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint a[30][30]={0};\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nint n,m;\nscanf(\"%d%d\",&amp;n,&amp;m);\nint sum=0,min1=99999999,ans=0;\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nscanf(\"%d\",&amp;a[i][j]),ans+=(int)abs(a[i][j]);\nif(a[i][j]&lt;0)\nsum++;\nmin1=min(min1,(int)fabs(a[i][j]));\n}\n}\nif(sum%2==0)\nprintf(\"%d\\n\",ans);\nelse{\nans-=2*min1;\nprintf(\"%d\\n\",ans);\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#c","title":"C\u9898","text":""},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#_5","title":"\u9898\u89e3","text":"<p>\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u539f\u6570\u7ec4\u4e2d\u6709\u5927\u4e8eW/2\u4e14\u5c0f\u4e8eW\u7684\u6570\u65f6\u53ef\u4ee5\u76f4\u63a5\u5c06\u5176\u8f93\u51fa\uff0c\u53cd\u4e4b\u5219\u6392\u5e8f\u540e\u4ece\u5c0f\u5230\u5927\u76f8\u52a0\u5373\u53ef\u3002</p>"},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#_6","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nll n,val;\n};\nnode a[200500]={0};\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nll n,m;\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nll mid=m/2;\nif(m%2!=0)\nmid++;\nll flag=-1;\nfor(ll i=1;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;a[i].val);\na[i].n=i;\nif(a[i].val&gt;=mid&amp;&amp;a[i].val&lt;=m)\nflag=i;\n}\nif(flag!=-1)\n{\nprintf(\"1\\n%lld\\n\",flag);\ncontinue;\n}\nsort(a+1,a+n+1,[](node a,node b){return a.val&lt;b.val;});\nll sum=0;\nflag=-1;\nfor(ll i=1;i&lt;=n;i++)\n{\nsum+=a[i].val;\nif(sum&gt;=mid&amp;&amp;sum&lt;=m)\n{\nflag=i;\nbreak;\n}\nif(sum&gt;m)\nbreak;\n}\nif(flag!=-1)\n{\nprintf(\"%lld\\n\",flag);\nfor(ll i=1;i&lt;=flag;i++)\n{\nprintf(\"%lld \",a[i].n);\n}\nprintf(\"\\n\");\n}\nelse\n{\nprintf(\"-1\\n\");\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#d","title":"D\u9898","text":""},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#_7","title":"\u9898\u89e3","text":"<p>\u52a8\u6001\u89c4\u5212\uff0cdp[i][j]\u4ee3\u8868\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u4e3aa[i]\u548cb[j]\u65f6\u7684\u6700\u5927\u503c\uff0c\u5219\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u9012\u63a8\u516c\u5f0f</p> <p>if a[i]==b[j] :</p> <p>\u200b   dp[i][j]=max(dp[i-1][j-1]+2,dp[i][j])    \\\\\u76f8\u540c\u65f6LSA\u52a01\uff0c\u540c\u65f6\u4e24\u4e2a\u4e32\u7684\u957f\u5ea6\u589e\u52a01 </p> <p>else :</p> <p>\u200b   dp[i][j]=max(dp[i][j-1]-1,dp[i-1][j]-1)  \\\\\u4e0d\u540c\u65f6\u53ea\u80fd\u7531\u4e24\u8fb9\u8f6c\u79fb\u8fc7\u6765\uff0c\u5e76\u4e14\u957f\u5ea6\u52a01</p> <p>\u5176\u4e2ddp[i][j]\u6700\u5c0f\u4e3a0\uff0c\u6700\u540e\u53d6\u6700\u5927\u503c\u5373\u4e3a\u7b54\u6848\u3002</p>"},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#_8","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint dp[5050][5050]={0};\nchar a[5050]={0};\nchar b[5050]={0};\nint main()\n{\nint n,m;\nscanf(\"%d%d\",&amp;n,&amp;m);\nscanf(\"%s%s\",a+1,b+1);\nint ans=0;\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nif(a[i]==b[j])\ndp[i][j]=max(dp[i][j],dp[i-1][j-1]+2);\nelse\ndp[i][j]=max(dp[i][j-1],dp[i-1][j])-1;\ndp[i][j]=max(dp[i][j],0);\n}\n}\nint max1=0;\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nmax1=max(max1,dp[i][j]);\n}\n}\nprintf(\"%d\\n\",max1);\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#h","title":"H\u9898","text":""},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#_9","title":"\u9898\u89e3","text":"<p>\u5947\u5076\u77e9\u9635\uff08\u6bd4\u8d5b\u65f6\u5dee\u4e00\u70b9\u60f3\u51fa\uff0c\u4f46\u662f\u8fd8\u5dee\u4e00\u70b9\u70b9\uff0c\u989d\uff09</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u63a7\u5236\u6807\u8bb0\u7684\u70b9\u4e0e\u5468\u56f4\u7684\u70b9\u6570\u503c\u4e0d\u540c\u65f6\u5373\u53ef\u6ee1\u8db3\u9898\u76ee\u7684\u8981\u6c42\uff08\u6bcf\u5bf9\u76f8\u90bb\u7684\u70b9\u6570\u503c\u5404\u4e0d\u76f8\u540c\uff09\u3002</p> <p>\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e9b\u6807\u6ce8\u7684\u70b9\u6a2a\u7eb5\u5750\u6807\u4e4b\u548c\u5747\u4e3a\u5076\u6570\uff0c\u5176\u4f59\u672a\u6807\u6ce8\u7684\u70b9\u548c\u5747\u4e3a\u5947\u6570\u3002</p> <p>\u8fd9\u662f\u6211\u4eec\u53ea\u9700\u8981\u63a7\u5236\u6807\u6ce8\u7684\u70b9\u6240\u5bf9\u5e94\u7684\u6570\u503c\u5747\u4e3a\u5076\u6570\uff0c\u672a\u6807\u8bb0\u70b9\u7684\u6570\u503c\u5747\u4e3a\u5947\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5404\u4e0d\u76f8\u540c\u4e86\u3002</p>"},{"location":"problem/2021-02-16-2%E6%9C%8816%E6%97%A5%E9%A2%98%E8%A7%A3/#_10","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint a[200][200]={0};\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nint n,m;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nscanf(\"%d\",&amp;a[i][j]);\n}\n}\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nif((i+j)%2!=a[i][j]%2)\na[i][j]++;\n}\n}\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nprintf(\"%d \",a[i][j]);\n}\nprintf(\"\\n\");\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-02-19-2\u670819\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#a","title":"A\u9898","text":""},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u89e3","text":"<p>\u6570\u636e\u91cf\u6bd4\u8f83\u5c11\uff0c\u66b4\u529b\u505a\u5373\u53ef\u3002</p>"},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint a[4][1000]={0};\nint p[2000]={0};\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nint n;\nscanf(\"%d\",&amp;n);\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%d\",&amp;a[1][i]);\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%d\",&amp;a[2][i]);        for(int i=1;i&lt;=n;i++)\nscanf(\"%d\",&amp;a[3][i]);\nfor(int i=1;i&lt;=n;i++)\n{\nif(i!=n)\n{\nfor(int j=1;j&lt;=3;j++)\n{\nif(a[j][i]!=p[i-1])\n{\np[i]=a[j][i];\nbreak;\n}\n}\n}\nelse\n{\nfor(int j=1;j&lt;=3;j++)\n{\nif(a[j][i]!=p[i-1]&amp;&amp;a[j][i]!=p[1])\n{\np[i]=a[j][i];\nbreak;\n}\n}\n}\n}\nfor(int i=1;i&lt;=n;i++)\nprintf(\"%d \",p[i]);\nprintf(\"\\n\");\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#b","title":"B\u9898","text":""},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#_3","title":"\u9898\u89e3","text":"<p>\u627e\u89c4\u5f8b\uff0c\u5bb9\u6613\u53d1\u73b0b\u6570\u7ec4\u7684\u6700\u5c11\u4e2a\u6570\u548ca\u6570\u7ec4\u4e2d\u6570\u5b57\u8df3\u8dc3\u7684\u6b21\u6570\u6709\u5173\u3002</p>"},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#_4","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint a[1005]={0};\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nint n,k,sum=0;\nscanf(\"%d%d\",&amp;n,&amp;k);\na[0]=-1;\nfor(int i=1;i&lt;=n;i++)\n{\nscanf(\"%d\",&amp;a[i]);\nif(a[i]!=a[i-1])\nsum++;\n}\nif(sum&lt;=k)\n{\nprintf(\"1\\n\");\ncontinue;\n}\nelse\n{\nsum-=k;\nk--;\nif(k==0)\n{\nprintf(\"-1\\n\");\ncontinue;\n}\nelse\n{\nint ans=sum/k;\nans++;\nif(sum%k!=0)\nans++;\nprintf(\"%d\\n\",ans);\n}\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#c","title":"C\u9898","text":""},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#_5","title":"\u9898\u89e3","text":"<p>\u4e8c\u5206\u7b54\u6848\uff0c\u4e8c\u5206\u4e24\u8f86\u8f66\u6700\u7ec8\u76f8\u9047\u7684\u4f4d\u7f6e\uff0c\u8ba1\u7b97\u4e24\u8f66\u6240\u7528\u7684\u65f6\u95f4\u3002\u6ce8\u610f\u4e8c\u5206\u7684\u7cbe\u5ea6\uff01\uff01\uff01</p>"},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#_6","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(2)\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint n,k;\nint a[100500]={0};\n\nint check(double mid)\n{\ndouble t1=0,t2=0;\nint s1=1,s2=1,last1=1,last2=k+1;\nfor(int i=1;a[i]&lt;=mid&amp;&amp;i&lt;=n;i++)\n{\nif(a[i]&lt;=mid)\n{\nt1+=(a[i]-last1)*1.0/s1;\ns1++;\nlast1=a[i];\n}\n}\nif(last1&lt;=mid)\n{\nt1+=(mid-last1)*1.0/s1;\n}\n\nfor(int i=n;a[i]&gt;=mid&amp;&amp;i&gt;=1;i--)\n{\nif(a[i]&gt;=mid)\n{\nt2+=(last2-a[i])*1.0/s2;\ns2++;\nlast2=a[i];\n}\n}\nif(last2&gt;=mid)\n{\nt2+=(last2-mid)*1.0/s2;\n}\n\nif(t1&gt;t2)\nreturn 1;\nelse\nreturn 0;\n}\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nscanf(\"%d%d\",&amp;n,&amp;k);\nfor(int i=1;i&lt;=n;i++)\n{\nscanf(\"%d\",&amp;a[i]);\na[i]++;\n}\ndouble l=1,r=k+1;\nwhile(abs(r-l)&gt;0.00001)\n{\ndouble mid=(l+r)/2;\nif(check(mid))\nr=mid;\nelse\nl=mid+0.000001;\n}\n\ndouble t=0;\nint s1=1,last1=1;\nfor(int i=1;a[i]&lt;l&amp;&amp;i&lt;=n;i++)\n{\nt+=(a[i]-last1)*1.0/s1;\ns1++;\nlast1=a[i];\n}\nif(last1&lt;l)\n{\nt+=(l-last1)*1.0/s1;\n}\nprintf(\"%.15f\\n\",t);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#d","title":"D\u9898","text":""},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#_7","title":"\u9898\u89e3","text":"<p>\u7531\u4e8ex\u7684\u8303\u56f4\u4e3a1e6\uff0c\u53ef\u4ee5 \u901a\u8fc7 \u679a\u4e3e\u5de6\u79fb\u7684\u6570\u91cf \u5e76 \u8ba1\u7b97\u4e0a\u79fb\u7684\u6570\u91cf \u6c42\u548c\u53d6\u6700\u5c0f \u6765\u786e\u5b9a\u7b54\u6848\u3002</p>"},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#_8","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nll x,y;\n};\nnode a[2050]={0};\nnode b[2050]={0};\nll ans[1005000]={0};\nint main()\n{\nll n,m;\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(ll i=1;i&lt;=n;i++)\nscanf(\"%lld%lld\",&amp;a[i].x,&amp;a[i].y);\nfor(ll j=1;j&lt;=m;j++)\nscanf(\"%lld%lld\",&amp;b[j].x,&amp;b[j].y);\nfor(ll i=1;i&lt;=n;i++)\n{\nfor(ll j=1;j&lt;=m;j++)\n{\nll x=b[j].x-a[i].x;\nll y=b[j].y-a[i].y;\nif(x&gt;=0&amp;&amp;y&gt;=0)\n{\nans[x]=max(ans[x],y+1);\n}\n}\n}\nll min1=999999999,max1=-10000000;\nfor(ll i=1000500;i&gt;=0;i--)\n{\nmax1=max(max1,ans[i]);   ///ans\u6570\u7ec4\u80af\u5b9a\u662f\u4e0d\u51cf\u7684\uff0c\u679a\u4e3e\u8ddd\u79bb\u5373\u53ef\u3002\nmin1=min(min1,max1+i);\n}\ncout&lt;&lt;min1&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#i","title":"I\u9898","text":""},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#_9","title":"\u9898\u89e3","text":"<p>\u7531\u4e8e\u64cd\u4f5c\u6b21\u6570\u4e0a\u9650\u4e3a3 * n * m\u6b21\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u6bcf\u4e2a\u5c0f\u77e9\u9635\uff0c\u8ba9\u6bcf\u4e2a\u5c0f\u77e9\u9635\u53d8\u4e3a0\uff0c\u6700\u540e\u4fbf\u53ef\u4ee5\u8ba9\u6574\u4e2a\u77e9\u9635\u53d8\u4e3a0\u3002\u4f46\u662fJ\u9898\u8981\u6c42\u4e0a\u9650\u4e3an*m\u6b21\uff0c\u65e0\u6cd5\u901a\u8fc7\uff0c\u989d\u3002</p> <p>\u53e6\uff1a\u4ee3\u7801\u5199\u5f97\u6bd4\u8f83\u6076\u5fc3\uff0c\u989d\u3002</p>"},{"location":"problem/2021-02-19-2%E6%9C%8819%E6%97%A5%E9%A2%98%E8%A7%A3/#_10","title":"\u4ee3\u7801","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint a[200][200]={0};\nint dx[5]={0,0,1,0,1};\nint dy[5]={0,0,0,1,1};\nstruct node\n{\nint p[10];\n};\nvector&lt;node&gt;ans;\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nint n,m;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nscanf(\"%1d\",&amp;a[i][j]);\n}\n}\nfor(int i=1;i&lt;=n-1;i++)\n{\nfor(int j=1;j&lt;=m-1;j++)\n{\nint sum=0;\nfor(int k=1;k&lt;=4;k++)\n{\nint x=i+dx[k],y=j+dy[k];\nif(a[x][y]==1)\nsum++;\n}\nif(sum==3)\n{\nnode z;\nint id=0;\nfor(int k=1;k&lt;=4;k++)\n{\nint x=i+dx[k],y=j+dy[k];\nif(a[x][y]==1)\nz.p[++id]=x,z.p[++id]=y;\n}\nans.push_back(z);\n}\nelse if(sum==4)\n{\nnode z;\nz.p[1]=i,z.p[2]=j,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);  z.p[1]=i+1,z.p[2]=j,z.p[3]=i,z.p[4]=j,z.p[5]=i+1,z.p[6]=j+1;\nans.push_back(z);                        z.p[1]=i+1,z.p[2]=j+1,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);                        z.p[1]=i,z.p[2]=j+1,z.p[3]=i,z.p[4]=j,z.p[5]=i+1,z.p[6]=j+1;\nans.push_back(z);\n}\nelse if(sum==2)\n{\nnode z;\nif(a[i+1][j]==1&amp;&amp;a[i][j]==1)\n{\nz.p[1]=i+1,z.p[2]=j+1,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i,z.p[2]=j,z.p[3]=i+1,z.p[4]=j+1,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\n}\nelse if(a[i][j+1]==1&amp;&amp;a[i][j]==1)\n{\nz.p[1]=i,z.p[2]=j,z.p[3]=i+1,z.p[4]=j,z.p[5]=i+1,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i+1,z.p[2]=j+1,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\n}\nelse if(a[i+1][j+1]==1&amp;&amp;a[i][j+1]==1)\n{\nz.p[1]=i,z.p[2]=j,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i+1,z.p[2]=j,z.p[3]=i,z.p[4]=j,z.p[5]=i+1,z.p[6]=j+1;\nans.push_back(z);\n}\nelse if(a[i+1][j+1]==1&amp;&amp;a[i+1][j]==1)\n{\nz.p[1]=i,z.p[2]=j,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i,z.p[2]=j+1,z.p[3]=i+1,z.p[4]=j+1,z.p[5]=i,z.p[6]=j;\nans.push_back(z);\n}\nelse if(a[i+1][j+1]&amp;&amp;a[i][j])\n{\nz.p[1]=i,z.p[2]=j,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i,z.p[2]=j+1,z.p[3]=i+1,z.p[4]=j,z.p[5]=i+1,z.p[6]=j+1;\nans.push_back(z);\n}\nelse if(a[i][j+1]&amp;&amp;a[i+1][j])\n{\nz.p[1]=i+1,z.p[2]=j,z.p[3]=i,z.p[4]=j,z.p[5]=i+1,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i,z.p[2]=j+1,z.p[3]=i,z.p[4]=j,z.p[5]=i+1,z.p[6]=j+1;\nans.push_back(z);\n}\n}\nelse if(sum==1)\n{\nif(a[i][j])\n{\nnode z;\nz.p[1]=i+1,z.p[2]=j,z.p[3]=i,z.p[4]=j,z.p[5]=i+1,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i,z.p[2]=j,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i,z.p[2]=j+1,z.p[3]=i+1,z.p[4]=j+1,z.p[5]=i,z.p[6]=j;\nans.push_back(z);\n}\nelse if(a[i+1][j])\n{\nnode z;\nz.p[1]=i+1,z.p[2]=j,z.p[3]=i,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i,z.p[2]=j,z.p[3]=i+1,z.p[4]=j,z.p[5]=i+1,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i+1,z.p[2]=j+1,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\n}\nelse if(a[i+1][j+1])\n{\nnode z;\nz.p[1]=i,z.p[2]=j+1,z.p[3]=i+1,z.p[4]=j+1,z.p[5]=i,z.p[6]=j;\nans.push_back(z);\nz.p[1]=i,z.p[2]=j,z.p[3]=i+1,z.p[4]=j,z.p[5]=i+1,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i+1,z.p[2]=j+1,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\n}\nelse if(a[i][j+1])\n{\nnode z;\nz.p[1]=i,z.p[2]=j,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i+1,z.p[2]=j+1,z.p[3]=i+1,z.p[4]=j,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\nz.p[1]=i,z.p[2]=j,z.p[3]=i+1,z.p[4]=j+1,z.p[5]=i,z.p[6]=j+1;\nans.push_back(z);\n}\n}\nfor(int k=1;k&lt;=4;k++)\n{\nint x=i+dx[k],y=j+dy[k];\na[x][y]=0;\n}\n}\n}\nprintf(\"%d\\n\",ans.size());\nfor(node i:ans)\n{\nfor(int j=1;j&lt;=6;j++)\n{\nprintf(\"%d \",i.p[j]);\n}\nprintf(\"\\n\");\n}\nans.clear();\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-02-20-2\u670820\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#e","title":"\u95ee\u9898E","text":""},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2723&amp;pid=4</p> <p>\u7c7b\u4f3c\u95ee\u9898\uff1ahttps://www.luogu.com.cn/problem/P2145</p>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Playing games is fun. For programmers, however, playing games with programs is even more fun. Consider a simple single-user tabletop game as follows. Given a row of sticks, each of which is in one of the seven colors, red (R), green (G), blue (B), cyan (C), magenta (M), yellow (Y), and key (K), the goal of the game is to eliminate all the sticks by repeating the following rules. \u2022 Consecutive sticks with the same color can be eliminated if the size of them is not less than m . \u2022 The remaining sticks will move closer together. For the case where the row is BBBRRRRRRGGGB and m is 3, all the sticks can be successfully eliminated as the following steps:</p> <ol> <li>BBBRRRRRRGGGB</li> <li>BBBGGGB (By eliminating all red sticks)</li> <li>BBBB (By eliminating all green sticks)</li> <li>(By eliminating all blue sticks)    For the same row of sticks with m = 4, however, it is no way to eliminate all the sticks.    Given a row of n sticks and the value of m , your task is to determine if it is possible to eliminate all the sticks.</li> </ol>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_3","title":"\u8f93\u5165","text":"<p>Each test case is given as a string that is the row of sticks and an integer m .</p>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_4","title":"\u8f93\u51fa","text":"<p>Output Yes if it is possible to eliminate all the sticks. Otherwise, output No.</p>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_5","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\nBBBRRRRRRGGGB 3\n\u3010\u6837\u4f8b2\u3011\nBBBRRRRRRGGGB 4\n</code></pre>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_6","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\nYes\n\u3010\u6837\u4f8b2\u3011\nNo\n</code></pre>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_7","title":"\u63d0\u793a","text":"<p>\u2022 0 &lt;n,m \u2264 500</p>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_8","title":"\u9898\u89e3","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a7\u79cd\u5b57\u7b26 \u6bcf\u6709\u4e00\u6bb5\u8fde\u7eed\u7684\u957f\u5ea6\u5927\u4e8em\u7684\u76f8\u540c\u5b57\u7b26\u5c31\u80fd\u6d88\u53bb \u95ee\u6700\u7ec8\u6574\u6bb5\u5b57\u7b26\u4e32\u80fd\u5426\u6d88\u53bb</p> <p>dp[i][j][k] \u4ee3\u8868 i\u5230j\u533a\u95f4 \u79cd\u7c7b\u4e3ak\u7684\u6570\u6700\u5927\u8fde\u7eed\u5b50\u4e32\u7684\u957f\u5ea6</p> <p>dp[i][j][k]\u5168\u90e8\u521d\u59cb\u5316\u4e3a-1e9\uff0c\u4ee3\u8868\u6ca1\u6709\u4efb\u4f55\u8fde\u7eed\u5b50\u4e32\u3002</p> <p>\u90a3\u4e48\u6bcf\u6b21\u533a\u95f4\u5408\u5e76\u7684\u65f6\u5019 dp[i][j][k]=max(dp[i][l][k]+dp[l+1][j][k],dp[i][j][k]) </p> <p>\u5982\u679c\u5f53\u524d\u7684\u533a\u95f4\u6bb5\u6709\u80fd\u591f\u5220\u9664\u7684\u6bb5\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u5b57\u7b26\u4e32\u7684\u5f53\u524d\u533a\u95f4\u6bb5\u7684\u6570\u7684\u975e\u6cd5\u72b6\u6001\u5c31\u53ef\u4ee5\u7f6e\u4e3a0\uff0c\u4fdd\u8bc1\u80fd\u628a\u65ad\u5f00\u7684\u5b57\u7b26\u4e32\u63a5\u8d77\u6765\u3002\uff08\u4ee3\u8868\u6d88\u9664\u76f8\u540c\u7684\u5143\u7d20\uff0c\u8be5\u4e32\u957f\u5ea6\u4e3a0\uff09</p> <p>\u7ecf\u8fc7\u5220\u9664\u5408\u5e76\u6700\u540e\u5982\u679c\u5269\u4f59\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8em\u7684\u5b50\u4e32\u5219\u8f93\u51fayes\uff0c\u53cd\u4e4b\u8f93\u51fano</p>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_9","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(2)\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint dp[600][600][8]={0};  ///dp[i][j][k] \u4ee3\u8868\u4ecei\u5230j\u503c\u4e3ak\u7684\u8fde\u7eed\u4e2a\u6570\nmap&lt;char,int&gt;mp;\nchar c[600]={0};\nint main()\n{\nint n,m;\nscanf(\"%s%d\",c+1,&amp;m);\nn=strlen(c+1);\nif(m==1)\n{\nprintf(\"Yes\\n\");\nreturn 0;\n}\nmp['R']=1;\nmp['G']=2;\nmp['B']=3;\nmp['C']=4;\nmp['M']=5;\nmp['Y']=6;\nmp['K']=7;\nfor(int i=0;i&lt;n+10;i++)\nfor(int j=0;j&lt;n+10;j++)\nfor(int k=0;k&lt;8;k++)\ndp[i][j][k]=-1e9;\nfor(int i=1;c[i];i++)\ndp[i][i][mp[c[i]]]=1;\nfor(int len=2;len&lt;=n;len++)\n{\nfor(int i=1;i+len-1&lt;=n;i++)\n{\nint j=i+len-1;\nint flag=0;\nfor(int l=i;l&lt;j;l++)\n{\nfor(int k=1;k&lt;=7;k++)\n{\ndp[i][j][k]=max(dp[i][j][k],dp[i][l][k]+dp[l+1][j][k]);\nif(dp[i][j][k]&gt;=m)\nflag=1;\n}\n}\nif(flag)\n{\nfor(int k=1;k&lt;=7;k++)\n{\nif(dp[i][j][k]&lt;0)\ndp[i][j][k]=0;\n}\n}\n}\n}\nfor(int k=1;k&lt;=7;k++)\n{\nif(dp[1][n][k]&gt;=m)\n{\nprintf(\"Yes\\n\");\nreturn 0;\n}\n}\nprintf(\"No\\n\");\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#f","title":"\u95ee\u9898 F","text":""},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_10","title":"\u95ee\u9898\u94fe\u63a5","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2723&amp;pid=5</p>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_11","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>A company ICPC (International Cable Protection Company) produces a cable protection tool that can be installed in a network switch to monitor whether all cable links connected to it are working properly. Because the protection tool would cause transmission delay, it is not suitable for installation on every switch. Usually network topology consists of two parts: a backbone and several subnets. The switches on the backbone are linked as a ring structure and each backbone switch is treated as a root of a subnet in which the switches are linked as a tree structure. We call such topology as unicyclic topology. Figure 2 shows an example of a unicyclic topology.</p> <p></p> <p>Suppose there are n backbone switches and m subnet switches. The switches are numbered by integers from 0 to m + n \u2212 1. Backbone switches are numbered from 0 to n \u2212 1 in clockwise order and the subnet switches are numbered from n to n + m \u2212 1 where the index of each subnet switch is larger than the index of its parent in the rooted tree structure of the subnet it belongs. Figure 3 shows an example of switch numbering.</p> <p></p> <p>Please write a program for ICPC to decide the minimum number of switches selected for installing cable protection tools that can monitor all the cable links. Figure 4 shows an optimum solution (circled by ellipses) for the given network.</p> <p></p>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_12","title":"\u8f93\u5165","text":"<p>The first line of the input file contains two integers n and m , separated by a space, indicating the numbers of backbone switches and subnet switches respectively. Each of the next n+m lines consists of two integers, separated by a space, indicating the indices of the two end switches of a link.</p>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_13","title":"\u8f93\u51fa","text":"<p>Output the minimum number of switches selected for installing cable protection tools that can monitor all the cable links.</p>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_14","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n3 2\n0 1\n1 2\n0 2\n1 3\n2 4\n\u3010\u6837\u4f8b2\u3011\n4 11\n0 1\n0 3\n0 4\n0 5\n1 2\n1 6\n2 3\n2 9\n3 12\n6 7\n6 8\n9 10\n10 11\n12 13\n12 14\n</code></pre>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_15","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n2\n\u3010\u6837\u4f8b2\u3011\n5\n</code></pre>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_16","title":"\u63d0\u793a","text":"<p>\u2022 3 \u2264 n \u2264 100000 \u2022 1 \u2264 m \u2264 100000</p>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_17","title":"\u9898\u89e3","text":"<p>\u6811\u4e0aDP\uff0c\u7531\u4e8e\u4e2d\u5fc3\u5904\u4e3a\u4e00\u4e2a\u73af\uff0c\u53ef\u4ee5\u53bb\u9664\u4e00\u6761\u8fb9\u4f7f\u5176\u53d8\u4e3a\u4e00\u68f5\u6811\uff0c\u7136\u540e\u901a\u8fc7DP\u6765\u8fdb\u884c\u6c42\u89e3\u7b54\u6848\u3002</p> <p>\u7531\u4e8e\u53bb\u6389\u4e86\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u662f\u8fd9\u6761\u8fb9\uff08\u5047\u8bbe\u8be5\u8fb9\u4e24\u7aef\u70b9\u4e3ax\u548cy\uff09\u80fd\u591f\u88ab\u8986\u76d6\uff0c\u5219\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff0cx\u70b9\u88ab\u9009\u62e9\u548cy\u70b9\u88ab\u9009\u62e9\uff0c\u4e24\u79cd\u60c5\u51b5\u53d6\u6700\u5c0f\u5373\u4e3a\u7b54\u6848\u3002</p> <p>dp[i][0]\u4ee3\u8868\u8be5\u70b9\u88ab\u9009\u62e9\uff0cdp[i][i]\u4ee3\u8868\u8be5\u70b9\u4e0d\u88ab\u9009\u62e9\uff0c\u5219\u6709\u5982\u4e0b\u7684\u9012\u63a8\u516c\u5f0f</p> <p>dp[i][0]=min(dp[i][0],dp[i][1])+1,dp[i][1]=dp[i][0]+1</p>"},{"location":"problem/2021-02-20-2%E6%9C%8820%E6%97%A5%E9%A2%98%E8%A7%A3/#_18","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nint to,next;\n};\nnode edge[400500]={0};\nint head[400500]={0};\nint flag=0,x,y,sum=0;\nint dp[400500][2]={0};  ///\u6811\u4e0aDP\uff0cdp[i][0]\u4ee3\u8868\u8be5\u70b9\u88ab\u9009\u62e9\uff0cdp[i][1]\u4ee3\u8868\u8be5\u70b9\u6ca1\u6709\u88ab\u9009\u62e9\nvoid add(int from ,int to)\n{\nedge[++sum].next=head[from];\nedge[sum].to=to;\nhead[from]=sum;\n}\nvoid dfs(int now,int fa)\n{\ndp[now][0]=dp[now][1]=0;\nfor(int i=head[now];i;i=edge[i].next)\n{\nif(edge[i].to!=fa)\n{\ndfs(edge[i].to,now);\ndp[now][0]+=min(dp[edge[i].to][0],dp[edge[i].to][1]);\ndp[now][1]+=dp[edge[i].to][0];\n}\n}\ndp[now][0]++;\nif(now==y&amp;&amp;flag==2)\ndp[now][1]++;\n}\nint main()\n{\nint n,m;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=n+m;i++)\n{\nint s,e;\nscanf(\"%d%d\",&amp;s,&amp;e);\nif(!flag&amp;&amp;s&lt;n&amp;&amp;e&lt;n) ///\u5728\u4e2d\u5fc3\u73af\u4e0a\uff0c\u9009\u53d6\u4e00\u6761\u8fb9\u5c06\u5176\u65ad\u6389\uff0c\u4f7f\u5176\u53d8\u4e3a\u4e00\u68f5\u6811\n{\nx=s,y=e,flag=1;\ncontinue;\n}\nadd(s,e);\nadd(e,s);\n}\nint ans=999999999;\ndfs(x,-1); ///\u4ee3\u8868x\u70b9\u88ab\u6807\u8bb0\uff0c\u90a3\u4e48x\u5230y\u8fd9\u6761\u8fb9\u4e00\u5b9a\u6ee1\u8db3\u6761\u4ef6\nans=min(ans,dp[x][0]);\n\nflag=2;\ndfs(x,-1);  ///\u4ee3\u8868y\u70b9\u88ab\u6807\u8bb0\uff0c\u90a3\u4e48x\u5230y\u8fd9\u6761\u8fb9\u4e00\u5b9a\u6ee1\u8db3\u6761\u4ef6\nans=min(ans,min(dp[x][0],dp[x][1]));\nprintf(\"%d\\n\",ans);\n}\n</code></pre>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-02-22-2\u670822\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#a","title":"A\u9898","text":""},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u89e3","text":"<p>\u6784\u9020\u7531n-1\u4e2a2\u548c\u4e00\u4e2a3\u6216\u8005n-2\u4e2a2\u548c\u4e24\u4e2a3\u7684\u6570\uff0c\u4f7f\u5176\u65e0\u6cd5\u88ab2\u548c3\u6574\u9664\u3002</p>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(2)\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nint n;\nscanf(\"%d\",&amp;n);\nif(n==1)\nprintf(\"-1\\n\");\nelse{\nint sum=0;\nfor(int i=1;i&lt;=n-1;i++)\n{\nif(i!=n-1)\n{\nsum+=2;\nsum%=3;\nprintf(\"2\");\n}\nelse\n{\nif(sum==0)\nprintf(\"23\\n\");\nelse if(sum==1)\nprintf(\"33\\n\");\nelse if(sum==2)\nprintf(\"23\\n\");\n}\n}\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#b","title":"B\u9898","text":""},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_3","title":"\u9898\u89e3","text":"<p>\u6a21\u62df\uff0ca[1]\u4e00\u5b9a\u548cb[1]\u76f8\u540c\uff0cx[1]\u4e00\u5b9a\u4e3a0\uff0c\u7136\u540e\u6a21\u62df\u6c422~n\u4e2a\u6570\u5373\u53ef\u3002</p>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_4","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(2)\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint b[200500]={0};\nint a[200500]={0};\nint main()\n{\nll sum=0;\nint n,m;\nscanf(\"%d\",&amp;n);\nfor(int i=1;i&lt;=n;i++)\n{\nscanf(\"%d\",&amp;b[i]);\n}\nint max1=0;\nfor(int i=1;i&lt;=n;i++)\n{\na[i]=b[i]+max1;\nmax1=max(max1,a[i]);\n}\nfor(int i=1;i&lt;=n;i++)\n{\nprintf(\"%d \",a[i]);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#c","title":"C\u9898","text":""},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_5","title":"\u9898\u89e3","text":"<p>\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u4f7f\u6c42\u548c\u6700\u5927\uff0c\u5219\u6bcf\u4e00\u5757\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u6700\u5927\u503c\uff0c\u627e\u51fa\u524dk\u4e2a\u6700\u5927\u503c\u6c42\u548c\u5373\u4e3a\u7b54\u6848\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u6700\u5927\u503c\u7684\u4e0b\u6807\u8fdb\u884c\u505a\u5dee\u6c42\u79ef\u5373\u4e3a\u7b2c\u4e8c\u4e2a\u7b54\u6848\u3002</p>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_6","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(2)\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst long long mod=998244353;\nstruct node\n{\nint x,p;\n};\nnode a[200500]={0};\nint main()\n{\nint n,k;\nscanf(\"%d%d\",&amp;n,&amp;k);\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%d\",&amp;a[i].x),a[i].p=i;\nsort(a+1,a+n+1,[](node a,node b){\nif(a.x!=b.x)\nreturn a.x&gt;b.x;\nelse\nreturn a.p&lt;b.p;});\nlong long ans1=0,ans2=1;\nvector&lt;int&gt;v;\nfor(int i=1;i&lt;=k;i++)\n{\nans1+=a[i].x;\nv.push_back(a[i].p);\n}\nsort(v.begin(),v.end(),[](int a,int b){return a&lt;b;});\nfor(int i=1;i&lt;v.size();i++)\n{\nans2=ans2*(v[i]-v[i-1]);\nans2%=mod;\n}\nprintf(\"%lld %lld\\n\",ans1,ans2);\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#de","title":"D\u9898/E\u9898","text":""},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_7","title":"\u9898\u89e3","text":"<p>\u53ef\u4ee5\u9884\u5904\u7406\u524d\u7f00\u548c\u540e\u7f00\u76f8\u540c\u7684\u90e8\u5206\uff0c\u7136\u540e\u5bf9\u5269\u4f59\u90e8\u5206\u8fdb\u884cmanacher\u7b97\u6cd5\uff0c\u6c42\u6700\u957f\u7684\u56de\u6587\u4e32\uff0c\u6ce8\uff1a\u8be5\u56de\u6587\u4e32\u5fc5\u987b\u4f4d\u4e8e\u5f00\u5934\u6216\u7ed3\u5c3e\u3002</p> <p>\u53c2\u7167\u94fe\u63a5\uff1a</p> <p>https://www.luogu.com.cn/blog/xht37/solution-cf1326d2</p> <p>https://zhuanlan.zhihu.com/p/137172524</p>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_8","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nchar a[1005000]={0};\nchar t[1005000]={0};\nint manacher(char *c)\n{\nint max_id=0,ans=1,id=0;\nstring str=\"$#\";\nfor(int i=1;c[i];i++)\nstr+=c[i],str+=\"#\";\nvector&lt;int&gt;p;\np.push_back(1);\nfor(int i=1;i&lt;(int)str.size();i++)\n{\nif(max_id&gt;i)\np.push_back(min(max_id-i,p[2*id-i]));  else\np.push_back(1);\nwhile(i+p[i]&lt;(int)str.size()&amp;&amp;str[i+p[i]]==str[i-p[i]])\np[i]++;\nif(i==p[i]) ///i==p[i]\uff0c\u4ee3\u8868\u8be5\u56de\u6587\u4e32\u4f4d\u4e8e\u5f00\u5934\nans=max(ans,p[i]);\nif(i+p[i]&gt;max_id){\nmax_id=i+p[i],id=i;\n}\n}\nreturn ans-1;\n}\nint main()\n{\nint time;\nscanf(\"%d\",&amp;time);\nwhile(time--)\n{\nscanf(\"%s\",a+1);\nint n=strlen(a+1),sum=1;\nwhile(sum&lt;=n&amp;&amp;a[sum]==a[n-sum+1])sum++;\nif(sum==n+1)\n{\nprintf(\"%s\\n\",a+1);\ncontinue;\n}   int m=0;\nfor(int i=sum;i&lt;=n-sum+1;i++)\nt[++m]=a[i];\nt[m+1]='\\0';\nint l_ans=manacher(t);\nreverse(t+1,t+m+1);\nint r_ans=manacher(t);\nreverse(t+1,t+m+1);\nif(l_ans&lt;r_ans)\nreverse(t+1,t+m+1),swap(l_ans,r_ans);\nfor(int i=1;i&lt;sum;i++)\nprintf(\"%c\",a[i]);\nfor(int i=1;i&lt;=l_ans;i++)\nprintf(\"%c\",t[i]);\nfor(int i=sum-1;i&gt;=1;i--)\nprintf(\"%c\",a[i]);\nprintf(\"\\n\");\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#a-comic-binge","title":"\u7ec4\u961f\u8bad\u7ec3\u8d5bA\u9898 Comic Binge","text":""},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_9","title":"\u9898\u89e3","text":"<p>\u7531\u4e8eA\u5fc5\u987b\u7b49B\u8bfb\u5b8c\u540e\u624d\u8bfb\uff0c\u90a3\u4e48\u4e00\u79cd\u53ef\u884c\u7684\u6761\u4ef6\u4fbf\u662fB\u628a\u6240\u6709\u7684\u4e66\u8bfb\u5b8c\u540eA\u518d\u53bb\u8bfb\u6240\u6709\u7684\u4e66\uff0c\u8fd9\u6837\u603b\u65f6\u957f\u662f\u6700\u5927\u7684\uff0c\u4e14A\u548cB\u7684\u91cd\u5408\u8bfb\u4e66\u65f6\u95f4\u4e3a0\u3002\u5982\u679c\u8981\u4f7f\u603b\u65f6\u95f4\u6700\u77ed\uff0c\u90a3\u4e48\u5e94\u5f53\u5c3d\u53ef\u80fd\u589e\u5927\u4e8c\u8005\u7684\u91cd\u5408\u8bfb\u4e66\u65f6\u95f4\uff0c\u52a8\u6001\u89c4\u5212\u5373\u53ef\u3002</p>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_10","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(2)\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst long long mod=998244353;\nint dp[1050][10050]={0}; ///dp[i][j]\u4ee3\u8868B\u5728\u65f6\u95f4j\u8bfb\u5b8c\u524di-1\u672c\u4e66\u4e8c\u8005\u6700\u5927\u91cd\u5408\u8bfb\u4e66\u65f6\u95f4\nint sum_a[1050]={0};\nint a[1050]={0},b[1050]={0};\nint main()\n{\nint n;\nscanf(\"%d\",&amp;n);\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%d\",&amp;a[i]),sum_a[i]=sum_a[i-1]+a[i];\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%d\",&amp;b[i]);\nint max_b=n*10;   ///B\u6700\u5927\u7684\u65f6\u95f4\nfor(int i=1;i&lt;=n+1;i++)\nfor(int j=0;j&lt;=max_b;j++)\ndp[i][j]=-1;\ndp[1][0]=0;\nfor(int i=1;i&lt;=n+1;i++)\n{\nfor(int j=0;j&lt;=max_b;j++)\n{\nif(dp[i][j]==-1)\ncontinue;\nif(i&lt;=n&amp;&amp;j+b[i]&lt;=max_b)\n{\ndp[i+1][j+b[i]]=max(dp[i+1][j+b[i]],min(dp[i][j]+b[i],sum_a[i-1]));\n///B\u8bfbi\u4e66\uff0cB\u8bfb\u5b8c\u524di\u672c\u4e66\u91cd\u5408\u65f6\u95f4\u6700\u5927\u503c\n//\u6ce8\u610f\u5e94\u5f53\u548csum_a[i-1]\u53d6\u6700\u5c0f\u503c\uff0c\u7531\u4e8eA\u843d\u540e\u4e8eB\u4e00\u672c\u4e66\n}\nif(i&gt;1&amp;&amp;i+1&lt;=n&amp;&amp;j+b[i+1]&lt;=max_b) ///B\u8bfbi+1\u4e66\uff0c\u4e0d\u8981\u5fd8\u8bb0i&gt;1\u7684\u6761\u4ef6\uff0cB\u5fc5\u987b\u8bfb\u7b2c\u4e00\u672c\u4e66\ndp[i+2][j+b[i+1]]=max(dp[i+2][j+b[i+1]],min(dp[i][j]+b[i+1],sum_a[i]));\n}\n}\nint min1=999999999;\nfor(int j=0;j&lt;=max_b;j++)\n{\nif(dp[n+1][j]!=-1)\nmin1=min(min1,j-dp[n+1][j]+sum_a[n]);\n}\nprintf(\"%d\\n\",min1);\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#c-cul-de-sac-parades","title":"\u7ec4\u961f\u8bad\u7ec3\u8d5bC\u9898 Cul-De-Sac Parades","text":""},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_11","title":"\u9898\u89e3","text":"<p>\u6811\u4e0aDP\uff0c\u5bf9\u6bcf\u4e2a\u7236\u8282\u70b9\u7684\u7684\u8fb9\u8fdb\u884c\u679a\u4e3e\u9009\u62e9\uff0c\u662f\u5426\u4f7f\u7528\u8fd9\u4e2a\u8fb9\uff08\u5047\u8bbe\u4e3a\u8fb9A\uff09\uff0c\u5982\u679c\u4f7f\u7528\u8fd9\u6761\u8fb9A\uff0c\u5219\u7ee7\u7eed\u641c\u7d22\u5b50\u8282\u70b9\uff0c\u627e\u51fa\u8fde\u63a5\u5b50\u8282\u70b9\u6240\u6709\u8fb9\u4e2d\u6743\u503c\u6700\u5927\u7684\u8fb9\uff0c\u5c06\u5176\u4e0e\u8fb9A\u8fdb\u884c\u8fde\u63a5\uff0c\u7ec4\u6210\u4e00\u6761\u901a\u8def\uff0c\u5176\u4f59\u5b50\u8282\u70b9\u4e0a\u7684\u8fb9\u8fdb\u884c\u4e24\u4e24\u5339\u914d\u7ec4\u6210\u901a\u8def\uff1b\u53cd\u4e4b\u5982\u679c\u4e0d\u4f7f\u7528\u8fd9\u6761\u8fb9A\uff0c\u5219\u7ee7\u7eed\u641c\u7d22\u5b50\u8282\u70b9\uff0c\u8ba9\u5b50\u8282\u70b9\u7684\u8fb9\u8fdb\u884c\u4e24\u4e24\u5339\u914d\uff0c\u7ec4\u6210\u901a\u8def\u3002</p>"},{"location":"problem/2021-02-22-2%E6%9C%8822%E6%97%A5%E9%A2%98%E8%A7%A3/#_12","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nll to,val;\n};\nstruct node1\n{\nll yes,no;\n};\nvector&lt;node&gt;v[100500];\nvector&lt;node&gt;chr[100500];\nll dp[100500][2]={0};\nvoid dfs(ll now,ll fa)  ///\u7528\u4e8e\u627e\u8fd9\u4e2a\u70b9\u7684\u5b50\u8282\u70b9\n{\nfor(node i:v[now])\n{\nif(i.to==fa)\ncontinue;\nchr[now].push_back(i);\ndfs(i.to,now);\n}\n}\nll work(ll now,ll has_path)   ///has_path\u4ee3\u8868\u662f\u5426\u4f7f\u7528\u8fd9\u6761\u8fb9\n{\nif(chr[now].empty())\nreturn 0;\nif(dp[now][has_path]!=-1)\nreturn dp[now][has_path];\nvector&lt;node1&gt;data;\nll &amp;ans=dp[now][has_path]=0;\nfor(node i:chr[now])\n{\nnode1 data1;\ndata1.yes=work(i.to,true)+i.val;  //\u4f7f\u7528\u8fd9\u6761\u8fb9\uff0c\u7ee7\u7eed\u641c\u7d22\u5b50\u8282\u70b9\ndata1.no=work(i.to,false);      ///\u4e0d\u4f7f\u7528\u8fd9\u6761\u8fb9\uff0c\u7ee7\u7eed\u641c\u7d22\u5b50\u8282\u70b9\ndata.push_back(data1);\n}\nsort(data.begin(),data.end(),[](node1 a,node1 b){return a.yes-a.no&gt;b.yes-b.no;});\nfor(node1 i:data)\nans+=i.no;   ///\u5148\u5bf9\u4e0d\u4f7f\u7528\u8fd9\u4e9b\u8fb9\u7684\u6743\u503c\u6c42\u548c\nif(has_path)\nans+=data[0].yes-data[0].no;  ///\u5982\u679c\u7236\u8282\u70b9\u4f7f\u7528\u8fd9\u6761\u8fb9\uff0c\u5219\u5e94\u5f53\u627e\u4e00\u6761\u6743\u503c\u6700\u5927\u7684\u8fb9\u4e0e\u4e4b\u8fde\u63a5\nfor(ll i=has_path;i+1&lt;(ll)data.size();i+=2)\n{\nll yes=data[i].yes+data[i+1].yes;\nll no=data[i].no+data[i+1].no;\nif(yes&lt;no)\nbreak;\nelse{\nans+=yes-no;  ///\u4ee3\u8868\u4f7f\u7528\u8fd9\u4e24\u6761\u8fb9\u5e76\u7ec4\u6210\u4e00\u4e2a\u901a\u8def\n}\n}\nreturn ans;\n}\nint main()\n{\nll n,s,e,val;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n-1;i++)\n{\nscanf(\"%lld%lld%lld\",&amp;s,&amp;e,&amp;val);\nv[s].push_back({e,val});\nv[e].push_back({s,val});\n}\nmemset(dp,-1,sizeof(dp));\ndfs(1,-1);\nll ans=work(1,false);\nif (chr[1].size() == 1) ///1\u4e3a\u6839\u8282\u70b9\uff0c\u8fd9\u6761\u8fb9\u5fc5\u987b\u4f7f\u7528\nans=max(ans,work(1,true));\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/2021-02-24-2%E6%9C%8824%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-02-24-2\u670824\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-02-24-2%E6%9C%8824%E6%97%A5%E9%A2%98%E8%A7%A3/#e-social-distancing","title":"E\u9898 Social Distancing","text":""},{"location":"problem/2021-02-24-2%E6%9C%8824%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u89e3","text":"<p>\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u548c\u66fc\u54c8\u987f\u8ddd\u79bb\u76f8\u4e92\u8f6c\u53d8</p> <p>\u6839\u636e\u4e0a\u8ff0\u6027\u8d28\uff0c\u53ef\u4ee5\u5c06\u6c42\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f\u6700\u5c0f\u503c\u8f6c\u5316\u4e3a\u6c42\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u4e8c\u7ef4\u77e9\u9635\u6c42\u66fc\u54c8\u987f\u8ddd\u79bb\u53ef\u4ee5\u6839\u636e\u524d\u7f00\u548c\u6765\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5982\u679c\u8be5\u70b9\u975e\u75c5\u4eba\uff0c\u6807\u8bb0\u4e3a1\uff0c\u4ee3\u8868\u8be5\u70b9\u6743\u503c\u4e3a1\uff1b\u53cd\u4e4b\u5219\u6807\u8bb0\u4e3a-1\uff0c\u540e\u671f\u6c42\u524d\u7f00\u548c\u65f6\u8be5\u70b9\u6743\u503c\u5b9a\u4e3a0\uff1b\u7136\u540e\u5206\u522b\u6cbf\u56db\u4e2a\u65b9\u5411\u6c42\u524d\u7f00\u548c\uff0c\u53d6\u6700\u5c0f\u503c\u5373\u4e3a\u6bcf\u4e2a\u70b9\u7684\u6700\u5c0f\u66fc\u54c8\u987f\u8ddd\u79bb\u3002</p> <p>\u6700\u540e\u6839\u636e\u6700\u5c0f\u66fc\u54c8\u987f\u8ddd\u79bbdfs\u8fdb\u884c\u641c\u7d22\u5373\u53ef\u5f97\u51fa\u7b54\u6848\u3002</p>"},{"location":"problem/2021-02-24-2%E6%9C%8824%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(2)\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nchar a[505][505]={0};\nint ans1[505][505]={0};\nint dis[505][505]={0};\nint sx,sy,ex,ey;\nstruct node\n{\nint x,y,val;\n};\nint dx[]={0,1,-1,0,0};\nint dy[]={0,0,0,1,-1};\nint n,m;\nint ans=-1;\nint dfs(int x,int y,int val)\n{\nif(ans&gt;=val)\nreturn 0;\nif(x==ex&amp;&amp;y==ey)\n{\nans=max(ans,val);\nreturn 0;\n}\nfor(int i=1;i&lt;=4;i++)\n{\nint xx=x+dx[i],yy=y+dy[i];\nif(xx&lt;1||xx&gt;n||yy&lt;1||yy&gt;m)\ncontinue;\nif(a[xx][yy]=='#')\ncontinue;\nint val1=min(val,dis[xx][yy]);\nif(ans1[xx][yy]&gt;=val1)\ncontinue;\nans1[xx][yy]=val1;\ndfs(xx,yy,val1);\n}\nreturn 0;\n}\nint mp[1050][1050]={0};\nint mp_sum1[1050][1050]={0};\nint mp_sum2[1050][1050]={0};\nint mp_sum3[1050][1050]={0};\nint mp_sum4[1050][1050]={0};\nint main()\n{\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%s\",a[i]+1);\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\ndis[i][j]=inf;\n}\n}\nfor(int i=0;i&lt;1050;i++)\nfor(int j=0;j&lt;1050;j++)\nmp_sum1[i][j]=mp_sum2[i][j]=mp_sum3[i][j]=mp_sum4[i][j]=inf;\nint sum=0;\nfor(int i=0;i&lt;=n+1;i++)\n{\nint j=0;\nmp[i+j][i-j+500]=inf;\nj=m+1;\nmp[i+j][i-j+500]=inf;\n}\nfor(int j=0;j&lt;=m+1;j++)\n{\nint i=0;\nmp[i+j][i-j+500]=inf;\ni=n+1;\nmp[i+j][i-j+500]=inf;\n}\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nif(a[i][j]=='*')\n{\nsum++;\nmp[i+j][i-j+500]=-1;\n}\nelse\n{\nmp[i+j][i-j+500]=1;\n}\nif(a[i][j]=='S')\nsx=i,sy=j;\nif(a[i][j]=='E')\nex=i,ey=j;\n}\n}\nfor(int i=1;i&lt;1050;i++)\n{\nfor(int j=1;j&lt;1050;j++)\n{\nif(mp[i][j]==-1)\nmp_sum1[i][j]=0;\nelse\nmp_sum1[i][j]=min(mp_sum1[i][j],min(mp_sum1[i-1][j],mp_sum1[i][j-1])+mp[i][j]);\n}\n}\n\nfor(int i=1;i&lt;1050;i++)\n{\nfor(int j=1049;j&gt;=1;j--)\n{\nif(mp[i][j]==-1)\nmp_sum2[i][j]=0;\nelse\nmp_sum2[i][j]=min(mp_sum2[i][j],min(mp_sum2[i-1][j],mp_sum2[i][j+1])+mp[i][j]);\n}\n}\n\n\nfor(int i=1049;i&gt;=1;i--)\n{\nfor(int j=1;j&lt;1050;j++)\n{\nif(mp[i][j]==-1)\nmp_sum3[i][j]=0;\nelse\nmp_sum3[i][j]=min(mp_sum3[i][j],min(mp_sum3[i+1][j],mp_sum3[i][j-1])+mp[i][j]);\n}\n}    for(int i=1049;i&gt;=1;i--)\n{\nfor(int j=1049;j&gt;=1;j--)\n{\nif(mp[i][j]==-1)\nmp_sum4[i][j]=0;\nelse\nmp_sum4[i][j]=min(mp_sum4[i][j],min(mp_sum4[i+1][j],mp_sum4[i][j+1])+mp[i][j]);\n}\n}\n\nfor(int i=1;i&lt;=n;i++)\n{\nfor(int j=1;j&lt;=m;j++)\n{\nint xx=i+j,yy=i-j+500;\ndis[i][j]=min(min(mp_sum1[xx][yy],mp_sum2[xx][yy]),min(mp_sum3[xx][yy],mp_sum4[xx][yy]));\n}\n}\n\ndfs(sx,sy,dis[sx][sy]);\nif(ans!=-1&amp;&amp;sum==0)\n{\nprintf(\"safe\\n\");\nreturn 0;\n}\nprintf(\"%d\\n\",ans);\n}\n</code></pre>"},{"location":"problem/2021-02-28-2%E6%9C%8828%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-02-28-2\u670828\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-02-28-2%E6%9C%8828%E6%97%A5%E9%A2%98%E8%A7%A3/#usaco-2021-february-contest-bronze-problem-3-clockwise-fence","title":"USACO 2021 February Contest, Bronze Problem 3. Clockwise Fence","text":"<p>The fence surrounding Farmer John's largest pasture has fallen into disrepair, and he has finally decided to replace it with a new fence.</p> <p>Unfortunately, as Farmer John is laying out the new fence, a large bee ends up chasing him around the pasture, and as a result, the fence ends up following a rather irregular path. The fence can be described by a string of characters, each either \"N\" (north), \"E\" (east), \"S\" (south), or \"W\" (west). Each character describes a 1-meter run of the fence. For example, if the string is NESW, this means the fence starts by moving north for 1 meter, then east for 1 meter, then south for 1 meter, then west for 1 meter, returning to its starting point.</p> <p>The fence ends at the position where it started, and this is the only point visited more than once by the path of the fence (and the starting point is only re-visited once, at the end). As a result, the fence does indeed enclose a single connected region of the grassy pasture, even though this region could have a rather strange shape.</p> <p>Farmer John is curious if the path in which he laid the fence traveled clockwise (with the enclosed region on the right side of the fence as one walks along the path of the fence in the order specified by the string) or counter-clockwise (with the enclosed region on the left side of the fence).</p>"},{"location":"problem/2021-02-28-2%E6%9C%8828%E6%97%A5%E9%A2%98%E8%A7%A3/#input-format-input-arrives-from-the-terminal-stdin","title":"INPUT FORMAT (input arrives from the terminal / stdin):","text":"<p>The first line of input contains an integer NN (1\u2264N\u2264201\u2264N\u226420). Each of the next NN lines contains a string of length at least 4 and at most 100, describing a single fence path.</p>"},{"location":"problem/2021-02-28-2%E6%9C%8828%E6%97%A5%E9%A2%98%E8%A7%A3/#output-format-print-output-to-the-terminal-stdout","title":"OUTPUT FORMAT (print output to the terminal / stdout):","text":"<p>For each of the NN fence paths described in the input, output a line containing either \"CW\" (clockwise) or \"CCW\" (counterclockwise).</p>"},{"location":"problem/2021-02-28-2%E6%9C%8828%E6%97%A5%E9%A2%98%E8%A7%A3/#sample-input","title":"SAMPLE INPUT:","text":"<pre><code>2\nNESW\nWSSSEENWNEESSENNNNWWWS\n</code></pre>"},{"location":"problem/2021-02-28-2%E6%9C%8828%E6%97%A5%E9%A2%98%E8%A7%A3/#sample-output","title":"SAMPLE OUTPUT:","text":"<pre><code>CW\nCCW\n</code></pre> <p>The two fence paths with  denoting the starting point:</p> <pre><code>*&gt;*\n^ v\n\n&lt;*\n\n  *&lt;*&lt;*&lt;*\n  v     ^\n*&lt;\n     *\nv       ^\n* *&gt;*&gt;* *\nv ^   v ^\n* *&lt;* * *\nv   ^ v ^\n*&gt;*&gt;* *&gt;*\n</code></pre> <p>Problem credits: Brian Dean</p>"},{"location":"problem/2021-02-28-2%E6%9C%8828%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u89e3","text":"<p>\u53c2\u7167\u4e8e\uff1a\u7a7a\u95f4\u591a\u8fb9\u5f62\u987a\u9006\u65f6\u9488\u7684\u5224\u65ad</p> <p>\u6839\u636e\u5b57\u7b26\u4e32\u6a21\u62df\u8fd0\u52a8\u65b9\u5411\uff0c\u6839\u636e\u5411\u91cf\u5224\u65ad\u987a\u9006\u65f6\u9488\u5373\u53ef\u3002</p>"},{"location":"problem/2021-02-28-2%E6%9C%8828%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nchar a[200]={0};\nint main()\n{\nint n;\nscanf(\"%d\",&amp;n);\nfor(int i=1;i&lt;=n;i++)\n{\nscanf(\"%s\",a+1);\nint x=0,y=0,sumz=0,sumf=0;\nfor(int j=1;a[j];j++)\n{\nint xx,yy;\nif(a[j]=='N')\nyy=y-1;\nelse if(a[j]=='S')\nyy=y+1;\nelse if(a[j]=='W')\nxx=x-1;\nelse if(a[j]=='E')\nxx=x+1;\nint val=x*yy-xx*y;\nif(val&gt;0)\nsumz++;\nelse if(val&lt;0)\nsumf++;\nx=xx,y=yy;\n}    if(sumz&lt;sumf)\nprintf(\"CCW\\n\");\nelse\nprintf(\"CW\\n\");\n}\n}\n</code></pre>"},{"location":"problem/2021-03-02-3%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-03-02-3\u67082\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-03-02-3%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#codeforces-global-round-13","title":"Codeforces Global Round 13","text":""},{"location":"problem/2021-03-02-3%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#c","title":"C\u9898","text":""},{"location":"problem/2021-03-02-3%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u89e3","text":"<p>\u8d2a\u5fc3\uff0cPekora \u4e00\u5b9a\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\u8df3\uff0c\u76f4\u5230\u628a\u7b2c\u4e00\u4e2a\u53d8\u4e3a1\uff0c\u7136\u540e\u8df3\u5230\u7b2c2\u4e2a\uff0c\u8fd9\u6837\u80fd\u591f\u8fbe\u5230\u6700\u4f18\u89e3\u3002</p> <p>\u5728\u628a\u4e00\u4e2a\u4f4d\u7f6e\u4e3ai\u4e14\u9ad8\u5ea6\u4e3acur\u7684\u8e66\u5e8a\u53d8\u4e3a1\u65f6\uff0c\u4ece[i+2,cur+i]\u8fd9\u4e2a\u533a\u95f4\u5185\u6240\u6709\u8e66\u5e8a\u7684\u9ad8\u5ea6\u5c06\u51cf\u5c111\u3002</p> <p>\u5982\u679c\u4f4d\u7f6ei\u7684\u8e66\u5e8a\u9ad8\u5ea6\u5df2\u7ecf\u4e3a1\uff0c\u5219\u5e94\u5f53\u8f6c\u79fb\u5230\u7b2ci+1\u4e2a\u4e0a\u3002</p>"},{"location":"problem/2021-03-02-3%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[6000]={0},cur[6000]={0};\nint main()\n{\nll t;\nscanf(\"%lld\",&amp;t);\nwhile(t--)\n{\nll n;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;a[i]);\ncur[i]=0;\n}\nll ans=0;\nfor(ll i=1;i&lt;=n;i++)\n{\nll now=cur[i];\nif(now&lt;a[i]-1)\n{\nans+=a[i]-now-1;\nnow+=a[i]-now-1;\n}\ncur[i+1]+=now-a[i]+1;  ///\u591a\u51fa\u6765\u7684\u8df3\u5230\u4e0b\u4e00\u4e2a\nfor(ll j=i+2;j&lt;=min(n,i+a[i]);j++)\ncur[j]+=1;\n}\nprintf(\"%lld\\n\",ans);\n}\n}\n</code></pre>"},{"location":"problem/2021-03-02-3%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#d","title":"D\u9898","text":""},{"location":"problem/2021-03-02-3%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_3","title":"\u9898\u89e3","text":"<p>\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u6570u\u4e8c\u8fdb\u5236\u67d0\u4e00\u4f4d\u4e3a1\uff0c\u5219\u53ef\u4ee5\u4e14\u4e00\u4e2a\u5176\u4f59\u5168\u4e3a0\uff0c\u53ea\u6709\u8be5\u4f4d\u7f6e\u4e3a1\u7684\u53e6\u4e00\u4e2a\u6570v\u5e76\u4e14\u7ed3\u679c\u4f9d\u7136\u4e3av\uff0c\u5c06v\u52a0\u5230u\u4e0a\u4fbf\u53ef\u4ee5\u628au\u76841\u524d\u79fb\u4e00\u4f4d\uff0c\u7528\u524d\u7f00\u548c\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\u5373\u53ef\u3002</p>"},{"location":"problem/2021-03-02-3%E6%9C%882%E6%97%A5%E9%A2%98%E8%A7%A3/#_4","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;stdio.h&gt;\nusing namespace std;\nint a[50]={0};\nint b[50]={0};\nint sum1[50]={0};\nint sum2[50]={0};\nint main()\n{\nint t;\nscanf(\"%d\",&amp;t);\nwhile(t--)\n{\nlong long u,v;\nscanf(\"%lld%lld\",&amp;u,&amp;v);\nif(v&lt;u)\n{\nprintf(\"NO\\n\");\ncontinue;\n}\nfor(int i=1;i&lt;=40;i++)\n{\na[i]=u%2,u/=2;\nsum1[i]=sum1[i-1]+a[i];\n}\nfor(int i=1;i&lt;=40;i++)\n{\nb[i]=v%2,v/=2;\nsum2[i]=sum2[i-1]+b[i];\n}\nint flag=1;\nfor(int i=1;i&lt;=40;i++)\n{\nif(sum1[i]&lt;sum2[i])\nflag=0;\n}\nif(flag)\nprintf(\"YES\\n\");\nelse\nprintf(\"NO\\n\");\n}\n}\n</code></pre>"},{"location":"problem/2021-03-07-3%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-03-07-3\u67087\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-03-07-3%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#e-group-project","title":"\u95ee\u9898E Group Project","text":""},{"location":"problem/2021-03-07-3%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>The big day has finally arrived: today you are going to form groups of two in which you will do the end-of-the-year project. When you arrive at school, you learn that the teacher of the other class is sick, and that your teacher, Mr. B.A.P. Cee, will also have to make groups for the other class. Mr. B.A.P. Cee is a smart guy and realizes that he can use these unfortunate circumstances to his advantage. Ending up with groups of one should be avoided at all cost, so mixing the students of the two classes may avoid this situation.  However, while it is easy to pair up two students from the same class, it is more difficult to match up students from different classes. Throughout the years there has been a lot of rivalry between the two groups, and many students dislike students in the other class. Mr. B.A.P. Cee knows which pairs of students will result in a fight and a failed project. You are given a list of pairs of students who cannot work together. How many disjoint groups of two can Mr. B.A.P. Cee make that will not result in a failed project?</p>"},{"location":"problem/2021-03-07-3%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u8f93\u5165","text":"<p>The input consists of: \u2022 A line with two integers n (1 \u2264 n \u2264 105 ), the number of students, and m (0 \u2264 m \u2264 2 \u00b7 105 ),the number of pairs of students who cannot work together. \u2022 m lines, each with two distinct integers i and j (1 \u2264 i, j \u2264 n , i \u2260 j ), giving a pair of students who cannot work together. Students are identified by the numbers 1 through n . It is guaranteed that it is possible to split the students into two classes in such a way that all students from the same class get along.</p>"},{"location":"problem/2021-03-07-3%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#_3","title":"\u8f93\u51fa","text":"<p>Output the number of pairs of students Mr. B.A.P. Cee can make without making any pair of students who cannot work together.</p>"},{"location":"problem/2021-03-07-3%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n3 2\n1 2\n3 1\n\u3010\u6837\u4f8b2\u3011\n5 6\n1 4\n2 4\n3 4\n1 5\n2 5\n3 5\n\u3010\u6837\u4f8b3\u3011\n6 6\n1 4\n2 5\n3 6\n1 5\n3 5\n2 6\n</code></pre>"},{"location":"problem/2021-03-07-3%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n1\n\u3010\u6837\u4f8b2\u3011\n2\n\u3010\u6837\u4f8b3\u3011\n3\n</code></pre>"},{"location":"problem/2021-03-07-3%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#_6","title":"\u9898\u89e3","text":"<p>\u9898\u76ee\u5927\u610f\u4e3a\u4e24\u4e2a\u73ed\u4e4b\u95f4\u8981\u8fdb\u884c\u4e24\u4e24\u7ec4\u961f\u5408\u4f5c\uff0c\u5176\u4e2d\u6709\u4e9b\u4eba\u4e0d\u80fd\u548c\u53e6\u4e00\u73ed\u7ea7\u4e2d\u4e00\u4e9b\u4eba\u8fdb\u884c\u7ec4\u961f\uff0c\u5e76\u4e14\u73ed\u7ea7\u5185\u90e8\u90fd\u53ef\u4ee5\u8fdb\u884c\u7ec4\u961f\uff0c\u95ee\u6700\u591a\u53ef\u4ee5\u7ec4\u961f\u7684\u961f\u6570\u3002</p> <p>\u5148\u7528DFS\u5212\u5206\u51fa\u4e24\u4e2a\u73ed\u7684\u4eba\uff0c\u7136\u540e\u5224\u65ad\u4e24\u4e2a\u73ed\u7ea7\u4e4b\u95f4\u662f\u5426\u4e24\u4e24\u90fd\u6709\u77db\u76fe\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\u3002</p> <ol> <li>\u5982\u679c\u4efb\u4f55\u4e24\u4e2a\u4eba\u90fd\u6709\u77db\u76fe\uff0c\u5219\u5e94\u5f53\u73ed\u7ea7\u5185\u90e8\u8fdb\u884c\u5206\u7ec4\u5408\u4f5c\u3002</li> <li>\u5982\u679c\u4e0d\u662f\u6240\u6709\u4eba\u4e4b\u95f4\u90fd\u6709\u77db\u76fe\uff0c\u5219\u7b54\u6848\u5e94\u4e3a\u603b\u4eba\u6570\u9664\u4ee52\uff0c\u5206\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a</li> <li>\u4e24\u4e2a\u73ed\u4e2d\u4eba\u6570\u5747\u4e3a\u5076\u6570\uff0c\u5219\u4e24\u4e2a\u73ed\u7ea7\u5185\u90e8\u4e4b\u95f4\u76f4\u63a5\u8fdb\u884c\u5206\u7ec4\uff0c\u7b54\u6848\u4e3an/2</li> <li>\u4e24\u4e2a\u73ed\u4e2d\u4eba\u6570\u4e00\u5947\u4e00\u5076\uff0c\u4e24\u4e2a\u73ed\u7ea7\u5185\u90e8\u76f4\u63a5\u5206\u7ec4\uff0c\u7b54\u6848\u4ecd\u4e3an/2</li> <li>\u4e24\u4e2a\u73ed\u4e2d\u4eba\u6570\u5747\u4e3a\u5947\u6570\uff0c\u5219\u4e24\u4e2a\u73ed\u7ea7\u4e4b\u95f4\u80af\u5b9a\u5b58\u5728\u4e00\u5bf9\u8de8\u73ed\u7ea7\u7684\u4eba\u6ca1\u6709\u77db\u76fe\uff0c\u53ef\u4ee5\u7ec4\u6210\u4e00\u5bf9\uff0c\u5176\u4ed6\u5185\u90e8\u4e4b\u95f4\u5206\u7ec4\uff0c\u7b54\u6848\u4ecd\u672an/2</li> <li>\u7efc\u4e0a\uff0c\u7b54\u6848\u4e3a\u603b\u4eba\u6570\u9664\u4ee52\uff0c\u5373\u4e3an/2</li> </ol>"},{"location":"problem/2021-03-07-3%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#_7","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nvector&lt;int&gt;edge[100500];\nint depth[100500]={0};\nint vis[100500]={0};\nint dfs(int k,int dep)\n{\ndepth[k]=dep;\nfor(int to:edge[k])\n{\nif(depth[to]==0)\n{\ndfs(to,3-dep);\n}\n}\nreturn 0;\n}\nint main()\n{\nint n,m,s,e;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=m;i++)\n{\nscanf(\"%d%d\",&amp;s,&amp;e);\nedge[s].push_back(e);\nedge[e].push_back(s);\n}\ndfs(1,1);\nint sum1=0,sum2=0;\nfor(int i=1;i&lt;=n;i++)\n{\nif(depth[i]==1)\nsum1++;\nif(depth[i]==2)\nsum2++;\n}\nif(sum1+sum2==n&amp;&amp;sum1*sum2==m)\nprintf(\"%d\\n\",sum1/2+sum2/2);\nelse\nprintf(\"%d\\n\",n/2);\n}\n</code></pre>"},{"location":"problem/2021-03-07-3%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#_8","title":"\u9898\u89e3","text":"<p>\u7528multiset\u7ef4\u62a4\u8d28\u56e0\u6570\u4e2a\u6570\u5373\u53ef\u3002</p>"},{"location":"problem/2021-03-07-3%E6%9C%887%E6%97%A5%E9%A2%98%E8%A7%A3/#_9","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 1e9 + 7;\nll qpow(ll a, ll n)\n{\nll r = 1;\nwhile (n)\n{\nif (n &amp; 1)\nr = (r * a) % mod;\nn &gt;&gt;= 1;\na = (a * a) % mod;\n}\nreturn r;\n}\nmultiset&lt;ll&gt; st[200500];\nmap&lt;ll, ll&gt; mp[200500];\nvector&lt;ll&gt; prime;\nint vis[200500] = {0};\nll last[200500] = {0};\nint main()\n{\nll n, m, k, pos;\nscanf(\"%lld%lld\", &amp;n, &amp;k);\nfor (int i = 2; i &lt;= 200000; i++)\n{\nif (!vis[i])\nprime.push_back(i);\nfor (int j = 2; j * i &lt;= 200000; j++)\nvis[i * j] = 1;\n}\nfor (ll i = 1; i &lt;= n; i++)\n{\nscanf(\"%lld\", &amp;m);\nfor (ll j : prime)\n{\nif (m == 1)\nbreak;\nif (!vis[m])\n{\nmp[i][m] = 1;\nst[m].insert(1);\nbreak;\n}\nll t = 0;\nwhile (m % j == 0)\n{\nm /= j;\nt++;\n}\nif (t)\n{\nmp[i][j] = t;\nst[j].insert(t);\n}\n}\n}\nll ans = 1;\nfor (ll j : prime)\n{\nif (st[j].size() == n)\n{\nint tem = *st[j].begin();\nif (tem != last[j])\n{\nans = ans*qpow(j, tem - last[j])%mod;\nlast[j] = tem;\n}\n}\n}\nwhile (k--)\n{\nscanf(\"%lld%lld\", &amp;pos, &amp;m);\nfor (ll j : prime)\n{\nif (m == 1)\nbreak;\nif (!vis[m])\n{\nll &amp;tem = mp[pos][m];\nif (tem)\nst[m].erase(st[m].lower_bound(tem));\ntem++;\nst[m].insert(tem);\nif (st[m].size() == n)\n{\nint tem1 = *st[m].begin();\nif (tem1 != last[m])\n{\nans = ans*qpow(m, tem1 - last[m])%mod;\nlast[m] = tem1;\n}\n}\nbreak;\n}\nll t = 0;\nwhile (m % j == 0)\n{\nm /= j;\nt++;\n}\nif (t)\n{\nll &amp;tem = mp[pos][j];\nif (tem)\nst[j].erase(st[j].lower_bound(tem));\ntem+=t;\nst[j].insert(tem);\nif (st[j].size() == n)\n{\nint tem1 = *st[j].begin();\nif (tem1 != last[j])\n{\nans =ans* qpow(j, tem1 - last[j])%mod;\nlast[j] = tem1;\n}\n}\n}\n}\nprintf(\"%lld\\n\",ans);\n}\n}\n</code></pre>"},{"location":"problem/2021-03-09-%E6%95%B0%E8%AE%BA/","title":"2021-03-09-\u6570\u8bba","text":""},{"location":"problem/2021-03-09-%E6%95%B0%E8%AE%BA/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<p>\u4e58\u6cd5\u9006\u5143 \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u5b9a\u7406 \u6b27\u62c9\u51fd\u6570\u63a8\u5bfc \u6b27\u62c9\u51fd\u6570\u4ee3\u7801 \u6b27\u62c9\u51fd\u6570\u8be6\u7ec6\u63a8\u5bfc \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406</p>"},{"location":"problem/2021-03-09-%E6%95%B0%E8%AE%BA/#_2","title":"\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u9006\u5143","text":"<p>\u4ee3\u7801 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll exgcd(ll a,ll b,ll&amp; x,ll&amp; y) ///\u540e\u4e24\u4e2a\u53c2\u6570\u4e3a\u5f15\u7528\n{\nif(b==0)\n{\nx=1;\ny=0;\nreturn a;\n}\nll gcd_ans=exgcd(b,a%b,x,y);\nll tem=x;\nx=y;\ny=tem-a/b*y;\nreturn gcd_ans;\n}\nint main()\n{\ncout&lt;&lt;\"\u8bf7\u8f93\u5165a\u548cq\u7684\u503c\"&lt;&lt;endl;\nll a,q,x=0,y=0;\ncin&gt;&gt;a&gt;&gt;q;\nll gcd_ans=exgcd(q,a,x,y);\nll mul=q/gcd_ans;\ny=(y%mul+mul)%mul;\ncout&lt;&lt;\"a\u5173\u4e8e\u6a21q\u7684\u9006\u5143\u4e3a\"&lt;&lt;y&lt;&lt;endl;\n}\n</code></pre> \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u8fd8\u6709\u5176\u4ed6\u5e94\u7528\uff0c\u4f8b\u5982\u6c42\u89e3\u540c\u4f59\u65b9\u7a0b\uff0c\u5176\u4f59\u8bf7\u53c2\u8003\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u5b9a\u7406\u535a\u5ba2\u3002</p>"},{"location":"problem/2021-03-09-%E6%95%B0%E8%AE%BA/#_3","title":"\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u89e3\u9006\u5143","text":"<p>\u53ea\u9002\u7528\u4e8eq\u4e3a\u8d28\u6570\u65f6\uff0c\u53ef\u4ee5\u6c42\u89e3\u9006\u5143\u3002 \u4ee3\u7801 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a,q;\nll ksm(ll n,ll k)\n{\nll sum1=1,sum2=n;\nwhile(k!=0)\n{\nif(k%2==1)\nsum1=sum1*sum2%q;\nsum2=sum2*sum2%q;\nk/=2;\n}\nreturn sum1;\n}\nint main()\n{\ncout&lt;&lt;\"\u8bf7\u8f93\u5165a\u548cq\u7684\u503c\"&lt;&lt;endl;\ncin&gt;&gt;a&gt;&gt;q;\ncout&lt;&lt;\"a\u5173\u4e8e\u6a21q\u7684\u9006\u5143\u4e3a\"&lt;&lt;ksm(a,q-2)&lt;&lt;endl;\n}\n</code></pre> \u8d39\u9a6c\u5c0f\u5b9a\u7406\u4e58\u6cd5\u9006\u5143\u4e00\u4e2a\u5e94\u7528\u4fbf\u662f\u6c42\u7ec4\u5408\u6570\uff0c\u4e00\u822c\u5bf91e9+7\u8fdb\u884c\u53d6\u4f59\uff0c\u800c1e9+7\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u53ef\u4ee5\u7528\u5c0f\u8d39\u9a6c\u5b9a\u7406\u6765\u6c42\u9006\u5143\uff0c\u4ee3\u7801\u4e3a\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll mod=1e9+7;\nll jc[100500]={0};\nll ny[100500]={0};\nll ksm(ll n,ll k)\n{\nll sum1=1,sum2=n;\nwhile(k!=0)\n{\nif(k%2==1)\nsum1=sum1*sum2%mod;\nsum2=sum2*sum2%mod;\nk/=2;\n}\nreturn sum1;\n}\nll c(ll n,ll m)\n{\nif(n&lt;m)\nswap(n,m);\nreturn (jc[n]%mod*ny[m]%mod)%mod*ny[n-m]%mod;\n}\nint main()\n{\njc[0]=1;\nfor(int i=1;i&lt;=100000;i++)\n{\njc[i]=jc[i-1]*i;\nny[i]=ksm(jc[i],mod-2);\n}\nint n,m;\ncin&gt;&gt;n&gt;&gt;m;\ncout&lt;&lt;c(n,m)&lt;&lt;endl;\n}\n</code></pre></p>"},{"location":"problem/2021-03-09-%E6%95%B0%E8%AE%BA/#_4","title":"\u6b27\u62c9\u51fd\u6570","text":"<p>\u6b27\u62c9\u51fd\u6570\u7528\u6765\u6c42\u6bd4n\u5c0f\u4e14\u548cn\u4e92\u8d28\u5143\u7d20\u4e2a\u6570\u3002 \u4ee3\u7801 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint is_prime[100500]={0};\nvector&lt;int&gt;prime;\nint oula_table[100500]={0};\nvoid init(int n)  ///\u6253\u7d20\u6570\u8868\n{\nfor(int i=2;i&lt;=n;i++)\n{\nif(!is_prime[i])\nprime.push_back(i);\nfor (int j = 0; j &lt;=prime.size() &amp;&amp; i*prime[j] &lt;= n; j++) {\nis_prime[i*prime[j]] = 1;\nif (i % prime[j] == 0)\nbreak;\n}\n}\n}\nint oula1(int n) ///\u6839\u636e\u7d20\u6570\u8868\u6c42\u89e3\u6b27\u62c9\u51fd\u6570\n{\nint ans=n;\nfor(int i=0;prime[i]*prime[i]&lt;=n;i++)\n{\nif(n%prime[i]==0)\nans=ans-ans/prime[i];\nwhile(n%prime[i]==0)\nn/=prime[i];\n}\nreturn ans;\n}\nint oula2(int n)  ///\u5206\u89e3\u8d28\u56e0\u6570\u6cd5\u6c42\u89e3\u6b27\u62c9\u51fd\u6570\n{\nint m=n;\nint ans=n;\nfor(int i=2;i&lt;=sqrt(n);i++)\n{\nif(m%i==0)\nans=ans-ans/i;\nwhile(m%i==0)\nm/=i;\n}\nif(m!=1)\nans=ans-ans/m;\nreturn ans;\n}\nvoid get_oula_table(int n) ///\u6b27\u62c9\u6253\u8868\n{\nfor(int i=1;i&lt;=n;i++)\noula_table[i]=0;\noula_table[1]=1;\nfor(int i=2;i&lt;=n;i++)\n{\nif(!oula_table[i]) ///\u8bf4\u660ei\u662f\u8d28\u6570\n{\nfor(int j=i;j&lt;=n;j+=i) //\u53bb\u627ei\u7684\u500d\u6570\n{\nif(!oula_table[j])\noula_table[j]=j;\noula_table[j]=oula_table[j]/i*(i-1);\n}\n}\n}\n}\nint main()\n{\nint n;\ncin&gt;&gt;n;\ninit(n);\ncout&lt;&lt;\"\u627e\u7d20\u6570\u6c42\u89e3\u6b27\u62c9\u51fd\u6570\u503c\u4e3a\"&lt;&lt;oula1(n)&lt;&lt;endl;\ncout&lt;&lt;\"\u5206\u89e3\u8d28\u56e0\u6570\u6cd5\u6c42\u89e3\u6b27\u62c9\u51fd\u6570\u503c\u4e3a\"&lt;&lt;oula2(n)&lt;&lt;endl;\nget_oula_table(n);\ncout&lt;&lt;\"\u6253\u8868\u6cd5\u6c42\u89e3\u6b27\u62c9\u51fd\u6570\u503c\u4e3a\";\nfor(int i=1;i&lt;=n;i++)\ncout&lt;&lt;oula_table[i]&lt;&lt;' ';\n}\n</code></pre> \u6b27\u62c9\u51fd\u6570\u7684\u5e94\u7528 \u8fb9\u585e\u4efb\u52a1 \u4f60\u7684\u8981\u585e\u2fa5\u6709N\u540d\u968f\u4ece\uff0c\u6bcf\u540d\u968f\u4ece\u6709\u2f00\u4e2a\u6218\u2f43\u2f12\u503cAi\uff0c\u4e0d\u540c\u968f\u4ece\u7684\u6218\u2f43\u2f12\u53ef\u4ee5\u76f8\u540c\uff0c\u4e14\u6c38\u8fdc\u4e0d\u8d85\u8fc7N\u3002\u2f00\u4e2a\u8981\u585e\u4efb\u52a1\u9700\u8981\u6070\u597dM\u4e2a\u968f\u4ece\u53c2\u4e0e\u3002 \u8981\u585e\u4efb\u52a1\u7684\u5956\u52b1\u53d6\u51b3\u4e8e\u968f\u4ece\u4eec\u914d\u5408\u7684\u7a0b\u5ea6\u3002\uff08\u663e\u2f7d\u6613\u89c1\u5730\uff09\uff0cM\u4e2a\u968f\u4ece\u7684\u8054\u5408\u6218\u2f43\u2f12A\u4e3a\u5b83\u4eec\u6218\u2f43\u2f12\u7684\u6700\u2f24\u516c\u7ea6\u6570\uff0c\u2f7d\u4efb\u52a1\u7684\u5956\u52b1\u5206\u6570\u5b9a\u4e49\u4e3a\u03d5(A)\u3002 \u6c42\u6700\u2f24\u53ef\u80fd\u7684\u5956\u52b1\u5206\u6570\u3002 \u8f93\u5165 \u672c\u9898\u6709\u591a\u7ec4\u6570\u636e\uff0c\u7b2c\u2f00\u2f8f\u4e3a\u6570\u636e\u7ec4\u6570T\uff08T\u226410\uff09\u3002 \u63a5\u4e0b\u6765\u6bcf\u7ec4\u6570\u636e\u6709\u4e24\u2f8f\uff0c\u7b2c\u2f00\u2f8f\u4e24\u4e2a\u6574\u6570N\uff0cM\uff0c\u7b2c\u2f06\u2f8fN\u4e2a\u6574\u6570Ai\uff08N\uff0cM\uff0cAi\u2264100000\uff09\u3002 \u8f93\u51fa \u6700\u591a\u7684\u5956\u52b1\u5206\u6570\u3002 \u6837\u4f8b\u8f93\u5165 <pre><code>1\n5 2\n1 4 6 9 12\n</code></pre> \u6837\u4f8b\u8f93\u51fa <pre><code>2\n</code></pre> \u63d0\u793a \u6837\u4f8b\u89e3\u91ca\uff1a\u6d3e\u51fa\u7f16\u53f7\u4e3a6\u548c12\u7684\u968f\u4ece\uff0c\u8054\u5408\u6218\u2f43\u2f12\u4e3a3\uff0c\u5956\u52b1\u5206\u65702\u3002 \u4ee3\u7801 <pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N = 100000;\ntypedef long long int ll;\nint pd[100500] = { 0 };//01\u6570\u7ec4\u5b58\u653e\u662f\u5426\u4e3a\u8d28\u6570\nint b[100500] = { 0 };//\u5b58\u653e\u7684\u8d28\u6570\u6570\u5217\nint out[100500] = { 0 };//\u6b27\u62c9\u51fd\u6570 \u03c6(A)\nint num[100500] = { 0 };//\u8ba1\u6570\u7528\u7684\nvoid init()\n{\n//\u6b27\u62c9\u7b5b\u6cd5\nint sum = 0;\nfor (int i = 2; i &lt;= N; i++)\n{\nif (!pd[i])\n{\nb[++sum] = i;\nout[i] = i - 1;\n}\nfor (int j = 1; b[j] * i &lt;= N; j++)\n{\npd[b[j] * i] = 1;\nif (i % b[j] == 0)\nbreak;\n}\n}\n//\u6c42\u03c6(A)\nout[1] = 1;\nint t;\nfor (int i = 2; i &lt;= N; i++)\n{\nif (pd[i])\n{\nout[i] = i;\nt = i;\nfor (int j = 1; j &lt;= sum &amp;&amp; t &gt; 1; j++)\n{\nif (i % b[j] == 0)\n{\nout[i] = out[i] * (b[j] - 1) / b[j];        //\u5957\u7528\u516c\u5f0f\nwhile (t % b[j] == 0)\n{\nt = t / b[j];\n}\n}\nif (b[j] * 2 &gt; i)    break;\n}\n}\n}\n}\nint main()\n{\ninit();\nint t;\nscanf(\"%d\", &amp;t);\nfor (int k1= 0; k1 &lt; t; k1++)\n{\nint n, k;\nint ans = -1;\nmemset(num, 0, sizeof(num));    //\u6e05\u7a7a\uff0c\u52ff\u5fd8@\uff01\uff01\uff01\nscanf(\"%d%d\", &amp;n, &amp;k);\nll max1 = -1;\nfor (int i = 0; i &lt; n; i++)\n{\nll x;\nscanf(\"%lld\", &amp;x);\nnum[x]++;                   //\u8ba1\u6570\nmax1 = max(max1, x);\n}\nfor (int i = 1; i &lt;= max1; i++)\n{\nll tot = 0;\nfor (int j = i; j &lt;= max1; j = j + i)//j\u6bcf\u4e00\u6b21\u9012\u589ei\u5219\u8fd9\u4e9b\u6570\u80af\u5b9a\u6709\u4e00\u4e2a\u516c\u7ea6\u6570i\n{\ntot += num[j];                  //\u8ba1\u6570\n}\nif (tot &gt;= k)//\u5982\u679c\u6570\u76ee\u5927\u4e8ek\n{\nans = max(ans, out[i]);         //\u8ba1\u7b97 \u03c6(A) \u5e76\u6c42\u6700\u5927\u503c\n}\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre></p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/","title":"2021-06-05-6\u67085\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#65","title":"6\u67085\u65e5\u9898\u89e3","text":""},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_1","title":"\u4ea4\u6362","text":""},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2828&amp;pid=9</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217A\uff0c\u5176\u4e2d\u7b2ci\u4e2a\u6570\u5b57\u4e3aai\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u6570\u5b57\u4e0d\u53d8\uff0c\u5c06\u5176\u4ed6\u6570\u5b57\u5168\u90e8\u4e58\u4ee5x\u3002\u5176\u4e2dx\u4e3a\u4efb\u610f\u7d20\u6570\u3002 \u65e0\u9700\u8003\u8651\u8fd9\u4e9b\u6570\u5b57\u5728\u53d8\u6362\u8fc7\u7a0b\u4e2d\u662f\u5426\u8d85\u8fc7long long\u7684\u5b58\u50a8\u8303\u56f4\u3002\u8bf7\u56de\u7b54\uff1a\u6700\u5c11\u7ecf\u8fc7\u591a\u5c11\u6b21\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u5f97\u5e8f\u5217\u4e2d\u6240\u6709\u6570\u5b57\u5168\u90e8\u76f8\u540c\u3002</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_4","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570n\uff0c\u4ee3\u8868\u5e8f\u5217\u957f\u5ea6\u3002 \u63a5\u4e0b\u6765\u4e00\u884c\u5305\u542bn\u4e2a\u6b63\u6574\u6570\uff0c\u63cf\u8ff0\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u3002</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_5","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570\u8868\u793a\u7b54\u6848\u3002</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2 \n5 7\n</code></pre>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>2\n</code></pre>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_8","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b\u8bf4\u660e\uff1a \u53ef\u4ee5\u9009\u4e2d\u7b2c\u4e8c\u4e2a\u6570\u5b57\u4e0d\u53d8\uff0c\u5c06\u7b2c\u4e00\u4e2a\u6570\u5b57\u9664\u4ee55\uff0c\u7136\u540e\u9009\u4e2d\u7b2c\u4e00\u4e2a\u6570\u5b57\u4e0d\u53d8\uff0c\u5c06\u7b2c\u4e8c\u4e2a\u6570\u5b57\u9664\u4ee57\u3002\u4e24\u6b21\u64cd\u4f5c\u540e\uff0c\u6570\u7ec4\u4e2d\u6240\u6709\u6570\u5b57\u5747\u53d8\u4e3a1\u3002\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u65b9\u6cd5\uff0c\u5982\u5c06\u4e24\u4e2a\u6570\u5b57\u6700\u7ec8\u90fd\u53d8\u4e3a35\u4e5f\u53ea\u9700\u89812\u6b21\u64cd\u4f5c\u3002 \u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e20%\u7684\u6570\u636e\uff0c\u6ee1\u8db3n=2,ai\u2264106 \u5bf9\u4e8e40%\u7684\u6570\u636e\uff0c\u6ee1\u8db3n\u226410,ai\u2264106 \u5bf9\u4e8e\u53e6\u591620%\u7684\u6570\u636e\uff0c\u6ee1\u8db3n\u22644\u2217104,ai\u226420 \u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c\u6ee1\u8db31\u2264n\u2264106,1\u2264ai\u2264106</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_9","title":"\u9898\u89e3","text":"<p>\u5bf9\u5176\u4ed6\u6570\u8fdb\u884c\u505a\u4e58\u6cd5\u76f8\u5f53\u4e8e\u5bf9\u81ea\u5df1\u505a\u4e58\u6cd5\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u6570\u9664\u6389\u6700\u5927\u516c\u7ea6\u6570\u4e92\u8d28\u540e\uff0c\u7edf\u8ba1\u548c\u8ba1\u7b97\u8d28\u56e0\u6570\u7684\u4e2a\u6570\u5373\u53ef\u3002</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_10","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[1005000]={0};\nll gcd(ll a,ll b)\n{\nif(b==0)\nreturn a;\nreturn gcd(b,a%b);\n}\nll prime[1005000]={0};\nll is_prime[1005000]={0};\nint main()\n{\nll cnt=0;\nfor(ll i=2;i&lt;=1e6;i++)\n{\nif(!is_prime[i])\nprime[++cnt]=i;\nfor(ll j=1;j&lt;=cnt;j++)\n{\nif(i*prime[j]&gt;1e6)\nbreak;\nis_prime[i*prime[j]]=1;\nif(i%prime[j]==0)\nbreak;\n}\n}\nll n,m=0;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;a[i]);\nm=gcd(a[i],m);\n}\nll ans=0;\nfor(ll i=1;i&lt;=n;i++)\n{\na[i]/=m;\nfor(ll j=1;j&lt;=cnt&amp;&amp;prime[j]*prime[j]&lt;=a[i];j++)\n{\nwhile(a[i]%prime[j]==0)\n{\nans++;\na[i]/=prime[j];\n}\n}\nif(a[i]!=1)\nans++;\n}\nprintf(\"%lld\\n\",ans);\n}\n</code></pre>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#disjoint-set-of-common-divisors","title":"Disjoint Set of Common Divisors","text":""},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_11","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2826&amp;pid=4</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_12","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Given are positive integers A and B. Let us choose some number of positive common divisors of A and B. Here, any two of the chosen divisors must be coprime. At most, how many divisors can we choose? \u2192Definition of common divisor \u00b7An integer d is said to be a common divisor of integers x and y when d divides both x and y. \u2192Definition of being coprime \u00b7Integers x and y are said to be coprime when x and y have no positive common divisors other than 1. \u2192Definition of dividing \u00b7An integer x is said to divide another integer y when there exists an integer \u03b1 such that y=\u03b1x.</p> <p>Constraints \u00b7All values in input are integers. \u00b71\u2264A,B\u22641012</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_13","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format:</p> <p>A B</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_14","title":"\u8f93\u51fa","text":"<p>Print the maximum number of divisors that can be chosen to satisfy the condition.</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_15","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n12 18\n\u3010\u6837\u4f8b2\u3011\n420 660\n\u3010\u6837\u4f8b3\u3011\n1 2019\n</code></pre>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_16","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n3\n\u3010\u6837\u4f8b2\u3011\n4\n\u3010\u6837\u4f8b3\u3011\n1\n</code></pre>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_17","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca 12 and 18 have the following positive common divisors: 1, 2, 3, and 6. 1 and 2 are coprime, 2 and 3 are coprime, and 3 and 1 are coprime, so we can choose 1, 2, and 3, which achieve the maximum result. \u6837\u4f8b3\u89e3\u91ca 1 and 2019 have no positive common divisors other than 1.</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_18","title":"\u9898\u89e3","text":"<p>\u6c42gcd(A,B)\u7684\u8d28\u56e0\u6570\u6709\u591a\u5c11\u4e2a\u5373\u53ef\u3002</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_19","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\n\nint main()\n{\nll n,m;\ncin&gt;&gt;n&gt;&gt;m;\nll k=__gcd(n,m);\nll ans=1;\nfor(ll i=2; i*i&lt;=k; i++)\n{\nif(k%i==0)\nans++;\nwhile(k%i==0)\nk/=i;\n}\nif(k!=1)\nans++;\ncout&lt;&lt;ans&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_20","title":"\u725b\u725b\u7684\u6ed1\u52a8\u7a97\u53e3","text":""},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_21","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2826&amp;pid=9</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_22","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u725b\u725b\u6700\u8fd1\u5b66\u4e60\u4e86\u6ed1\u52a8\u7a97\u53e3\u7c7b\u7684\u7b97\u6cd5\uff0c\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\u53ef\u4ee5\u89e3\u51b3\u4e00\u4e9b\u7ebf\u6027\u6570\u7ec4\u7684\u79bb\u7ebf\u9759\u6001\u533a\u95f4\u67e5\u8be2\u7c7b\u95ee\u9898\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5047\u8bbe\u5bf9\u4e8e\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884cm\u6b21\u9759\u6001\u533a\u95f4\u67e5\u8be2\u95ee\u9898\u3002\u5982\u679c\u8fd9\u4e9b\u67e5\u8be2\u6ee1\u8db3\u6761\u4ef6\uff1a\u2200i,j\u5f53li\u2264lj\u65f6\uff0c\u603b\u6709ri\u2264rj\u3002\uff08i,j\u8868\u793a\u67e5\u8be2\u7684\u7f16\u53f7\uff0cl,r\u8868\u793a\u67e5\u8be2\u7684\u5de6\u53f3\u7aef\u70b9\uff09 \u63a5\u4e0b\u6765\u53ea\u8981\u67e5\u8be2\u7684\u95ee\u9898\u6ee1\u8db3\u53ef\u4ee5\u5feb\u901f\u63d2\u5165\u548c\u5220\u9664\u5355\u70b9\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u4f18\u5316\uff0c\u5c06\u8fd9m\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u964d\u4f4e\u5230O(n)\u3002 \u663e\u7136\uff0c\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u6570\u7ec4\u7684\u533a\u95f4\u67e5\u8be2\u95ee\u9898\uff0c\u67e5\u8be2\u7684\u533a\u95f4\u957f\u5ea6\u7ed9\u5b9a\u4e3ak\u65f6\uff0c\u603b\u662f\u6ee1\u8db3\u2200i,j\u5f53li\u2008\u2264\u2008lj\u65f6\uff0c\u603b\u6709ri\u2264rj\u8fd9\u4e00\u6761\u4ef6\u7684\u3002 \u725b\u725b\u63a5\u4e0b\u6765\u60f3\u8981\u95ee\u4f60\u7684\u95ee\u9898\u4e5f\u548c\u5b9a\u957f\u6ed1\u52a8\u7a97\u53e3\u6709\u5173\u3002 \u4f17\u6240\u5468\u77e5\uff0c\u957f\u5ea6\u4e3ak\u7684\u6ed1\u52a8\u7a97\u53e3\u4ece\u5de6\u5230\u53f3\u53bb\u622a\u53d6\u4e00\u4e2a\u957f\u5ea6\u5927\u5c0f\u4e3an\u7684\u6570\u7ec4\u65f6\uff0c\u4e00\u5171\u53ef\u4ee5\u622a\u53d6\u5230n-k+1\u4e2a\u5b50\u6570\u7ec4\u3002 \u725b\u725b\u5c06\u8fd9n-k+1\u4e2a\u5b50\u6570\u7ec4\u7684\u6781\u5927\u503c\u4e0e\u6781\u5c0f\u503c\u7684\u4e58\u79ef\u6c42\u548c\u79f0\u4e3a\u8be5\u6570\u7ec4\u7684\"\u7b2ck\u7a97\u53e3\u503c\"\u3002  \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u957f\u5ea6\u4e3a5\u7684\u6570\u7ec4\u4e3a[1,5,2,4,3]\uff0c\u957f\u5ea6\u4e3a3\u7684\u6ed1\u52a8\u7a97\u53e3\u53ef\u4ee5\u622a\u53d6\u4e09\u4e2a\u5b50\u6570\u7ec4\uff0c\u5b83\u4eec\u5206\u522b\u4e3a[1,5,2],[5,2,4],[2,4,3]\u3002 \u6240\u4ee5\u8be5\u6570\u7ec4\u7684\u201c\u7b2c3\u7a97\u53e3\u503c\u201d\u4e3a1*5+2*5+2*4=23\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4n\uff0c\u725b\u725b\u73b0\u5728\u60f3\u8981\u77e5\u9053\u5b83\u7684\u7b2c1,2,3,4,5...n\u7a97\u53e3\u503c\u5404\u662f\u591a\u5c11\uff0c\u8bf7\u4f60\u7f16\u5199\u7a0b\u5e8f\u89e3\u51b3\u4ed6\u7684\u95ee\u9898\u3002</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_23","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570n\uff0c\u8868\u793a\u6570\u7ec4\u7684\u5927\u5c0f\u3002 \u63a5\u4e0b\u6765\u4e00\u884c\u8f93\u5165n\u4e2a\u6b63\u6574\u6570ai\uff0c\u8868\u793a\u6570\u7ec4\u7684\u5185\u5bb9</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_24","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fa\u4e00\u884cn\u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a\u6ed1\u52a8\u7a97\u53e3\u7684\u957f\u5ea6\u5206\u522b\u4e3a1,2,3,4,5...n\u65f6\uff0c\u95ee\u9898\u7684\u7b54\u6848\u3002 \u8f93\u51fa\u7684\u6574\u6570\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u884c\u672b\u4e0d\u5141\u8bb8\u6709\u591a\u4f59\u7a7a\u683c\u3002</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_25","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>5 \n1 5 2 4 3\n</code></pre>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_26","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>55 35 23 15 5\n</code></pre>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_27","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b\u89e3\u91ca\uff1a \u7b2c1\u7a97\u53e3\u503c=1*1+5*5+2*2+4*4+3*3=55 \u7b2c2\u7a97\u53e3\u503c=5*1+5*2+4*2+4*3=35 \u7b2c3\u7a97\u53e3\u503c=5*1+5*2+4*2=23 \u7b2c4\u7a97\u53e3\u503c=5*1+5*2=15 \u7b2c5\u7a97\u53e3\u503c=5*1=5</p> <p>\u5bf9\u4e8e10%\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u4fdd\u8bc11\u2264n\u226410 \u5bf9\u4e8e20%\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u4fdd\u8bc11\u2264n\u2264100 \u5bf9\u4e8e30%\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u4fdd\u8bc11\u2264n\u22641000 \u5bf9\u4e8e50%\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u4fdd\u8bc11\u2264n\u22646000 \u5bf9\u4e8e\u53e6\u591610%\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u4fdd\u8bc11\u2264ai\u226410 \u5bf9\u4e8e100%\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u4fdd\u8bc11\u2264n\u2264105,1\u2264ai\u2264100</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_28","title":"\u9898\u89e3","text":"<p>\u6682\u672a\u60f3\u51fa\uff0c\u601d\u8def\u4e3a\u5355\u8c03\u6808\uff0c\u5f85\u8865\uff01\uff01\uff01</p> <p>https://blog.csdn.net/weixin_43346722/article/details/109151074</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_29","title":"\u4ee3\u7801","text":"<pre><code>#include&lt;cstdio&gt;\n#include&lt;iostream&gt;\n\nusing namespace std;\n\nstruct node {\nint x, num;\n}bigstack[101], smallstack[101];\nint n, a[100001], ans[100001], bigtop, smalltop, maxn, minn;\nint lft, bignow, smallnow;\n\nint main() {\nscanf(\"%d\", &amp;n);\nfor (int i = 1; i &lt;= n; i++) scanf(\"%d\", &amp;a[i]);\n\nfor (int i = 1; i &lt;= n; i++) {\nwhile (bigtop &amp;&amp; bigstack[bigtop].x &lt;= a[i]) bigtop--;\nwhile (smalltop &amp;&amp; smallstack[smalltop].x &gt;= a[i]) smalltop--;//\u6808\u7684\u5f39\u51fa\n\nbigstack[++bigtop] = (node){a[i], i};//\u63d2\u5165\nsmallstack[++smalltop] = (node){a[i], i};\nmaxn = minn = a[i];\nlft = i;\nbignow = bigtop - 1;\nsmallnow = smalltop - 1;\n\nwhile (bignow || smallnow) {//\u4e00\u70b9\u4e00\u70b9\u5f80\u540e\u79fb\uff0c\u7b97\u8d21\u732e\nif (bignow &amp;&amp; smallnow) {\nif (bigstack[bignow].num &gt;= smallstack[smallnow].num) {\nans[i - lft + 1] += maxn * minn;\nans[i - bigstack[bignow].num + 1] -= maxn * minn;\nlft = bigstack[bignow].num;\nmaxn = bigstack[bignow].x;\nbignow--;\n}\nelse {\nans[i - lft + 1] += maxn * minn;\nans[i - smallstack[smallnow].num + 1] -= maxn * minn;\nlft = smallstack[smallnow].num;\nminn = smallstack[smallnow].x;\nsmallnow--;\n}\n\ncontinue;\n}\n\nif (bignow) {\nans[i - lft + 1] += maxn * minn;\nans[i - bigstack[bignow].num + 1] -= maxn * minn;\nlft = bigstack[bignow].num;\nmaxn = bigstack[bignow].x;\nbignow--;\n}\n\nelse {\nans[i - lft + 1] += maxn * minn;\nans[i - smallstack[smallnow].num + 1] -= maxn * minn;\nlft = smallstack[smallnow].num;\nminn = smallstack[smallnow].x;\nsmallnow--;\n}\n}\n\nans[i - lft + 1] += maxn * minn;\nans[i + 1] -= maxn * minn;\n}\n\nfor (int i = 1; i &lt;= n; i++) {\nans[i] += ans[i - 1];//\u56e0\u4e3a\u662f\u5dee\u5206\uff0c\u6240\u4ee5\u8981\u52a0\u4e0a\u524d\u9762\u7684\nprintf(\"%d \", ans[i]);\n}\n\nreturn 0;\n}\n</code></pre>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_30","title":"\u7b49\u5dee\u5e8f\u5217\u524d\u7f00\u548c\uff08\u53cc\u524d\u7f00\u548c\uff09","text":"<p>\u542c\u8bf4\u7f57\u7fd4\u8001\u5e08\u6700\u8fd1\u5f88\u706b\u3002 \u5f20\u4e09\u4eca\u5929\u8feb\u4e0d\u53ca\u5f85\u60f3\u72af\u7f6a\u3002\u5c31\u51b3\u5b9a\u662f\u7206\u70b8\u7f6a\u4e86\uff0c\u6b63\u597d\u7f57\u8001\u5e08\u8bb2\u4e86\u8fd9\u4e2a\u6848\u4f8b\u3002 \u4ed6\u4e00\u773c\u5c31\u770b\u4e0a\u4e86 CaPeF_Yyx \u7684\u5bb6 \uff08\u6216\u8bb8\u662f\u4ed6\u592a duliu \u4e86\uff09 \u3002 \u4f5c\u4e3a\u5f20\u4e09\uff0c\u5979\u86ee\u4e0d\u8bb2\u7406\uff0c\u6240\u4ee5\u4ed6\u7684\u7206\u70b8\u4f1a\u6ce2\u53ca\u90e8\u5206\u8857\u9053\u3002\u6bcf\u6b21\u7206\u70b8\u4f1a\u9020\u6210\u4e00\u5b9a\u7684\u635f\u574f\u3002 \u4f5c\u4e3a\u5f20\u4e09\uff0c\u5979\u51fa\u4eba\u610f\u6599\uff0c\u6240\u4ee5\u4ed6\u7684\u7206\u70b8\u6ce2\u53ca\u7684\u8303\u56f4\u6bcf\u6b21\u90fd\u4e0d\u4e00\u6837\u3002 \u4f5c\u4e3a\u5f20\u4e09\uff0c\u5979\u5341\u6076\u4e0d\u8d66\uff0c\u6240\u4ee5\u4ed6\u7684\u7206\u70b8\u4f1a\u8fdb\u884cm \u6b21 \uff08CaPeF_Yyx \u7684\u5bb6\u4e5f\u592a\u575a\u56fa\u4e86\u5427\uff09 \u4f5c\u4e3a\u5f20\u4e09\uff0c\u5979\u4e95\u4e95\u6709\u6761\uff0c\u6240\u4ee5\u4ed6\u7684\u7206\u70b8\u6ce2\u53ca\u7684\u8303\u56f4\u662f\u4e00\u4e2a\u95ed\u533a\u95f4\u3002 \u4f5c\u4e3a\u5f20\u4e09\uff0c\u5979\u7cbe\u76ca\u6c42\u7cbe\uff0c\u6240\u4ee5\u4ed6\u7684\u7206\u70b8\u4ee5\u7b49\u5dee\u6570\u5217\u7684\u65b9\u5f0f\u9020\u6210\u4f24\u5bb3\u3002 CaPeF_Yyx \u5bb6\u5728\u504f\u8fdc\u89d2\u843d\uff0c\u8857\u9053\u7f16\u53f7\u4ece1~n \u3002 CaPeF_Yyx \u8857\u9053\u521a\u7ffb\u65b0\uff0c\u6bcf\u95f4\u623f\u5c4b\u7834\u574f\u7a0b\u5ea6\u90fd\u4e3a0\u3002 \u7f57\u7fd4\u8001\u5e08\u53ef\u4ee5\u9884\u6d4b\u6bcf\u6b21\u7206\u70b8\u7684\u8303\u56f4\u3002\u4f1a\u7ed9\u5230 CaPeF_Yyx \u5f62\u5982[l,r] \u7684\u95ed\u533a\u95f4\u3002 \u7f57\u7fd4\u8001\u5e08\u53ef\u4ee5\u9884\u6d4b\u6bcf\u6b21\u7206\u70b8\u7684\u4f24\u5bb3\u3002\u4f1a\u7ed9\u5230 CaPeF_Yyx \u5f62\u5982l,r,bg,ed \u7684 4 \u4e2a\u6570\u3002 \u8868\u793a\u5f62\u5982{ql,ql+1,...,qr-1,qr},ql=bg,qr=ed\u7684\u7b49\u5dee\u6570\u5217\uff0c\u5bf9\u4e8e\u8857\u9053ai(l\u2264i\u2264r)\uff0c\u9020\u6210qi\u7684\u4f24\u5bb3\u3002 CaPeF_Yyx \u627e\u5230\u4e86 Rainy7 \u4fee\u590d\u8857\u9053\u3002\u53ef\u662f\u5979\u5fc5\u987b\u5148\u77e5\u9053\u8857\u9053\u5230\u5e95\u635f\u574f\u4e86\u591a\u5c11\u3002 \u5979\u8fd8\u5fd9\u7740\u62ef\u6551\u4e16\u754c\u5462\uff0cCaPeF_Yyx \u88ab\u5413\u5f97\u4e0d\u8f7b\uff0c\u4e8e\u662f\u53ea\u80fd\u8ba9\u4f60\u5e2e\u52a9\u5979\u4e86\u3002 \u51fa\u9898\u4eba\u4e0d\u60f3\u592a duliu \uff0c\u5979\u8ba9\u4f60\u53ea\u8981\u8f93\u51fa\u6240\u6709\u623f\u5c4b\u635f\u5bb3\u7a0b\u5ea6\u7684\u6700\u5927\u503c\u548c\u5f02\u6216\u548c\u3002 Q\uff1a\u8bdd\u8bf4\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u7528\u9b54\u6cd5\u963b\u6b62\u5f20\u4e09\uff1f A\uff1a\u56e0\u4e3a \u552f\u6211\u6cd5\u5916\u72c2\u5f92\u5f20\u4e09\u6c38\u4e16\u957f\u5b58 !!!</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_31","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\uff0c\u4e24\u4e2a\u6574\u6570n,m\u8868\u793a\u623f\u5c4b\u7684\u6570\u91cf\uff0c\u548c\u7206\u70b8\u6b21\u6570\u3002</p> <p>\u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c\u56db\u4e2a\u6574\u6570l,r,bg,ed\uff0c\u5206\u522b\u8868\u793a\u7b49\u5dee\u6570\u5217\u7684\u9996\u9879\u6807\u53f7\uff0c\u672b\u9879\u6807\u53f7\uff0c\u9996\u9879\u503c\uff0c\u672b\u9879\u503c\u3002</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_32","title":"\u8f93\u51fa","text":"<p>\u4e00\u884c\uff0c\u4e24\u4e2a\u6570\uff0c\u5206\u522b\u8868\u793a\u6240\u6709\u623f\u5c4b\u635f\u5bb3\u7a0b\u5ea6\u7684\u6700\u5927\u503c\u548c\u5f02\u6216\u548c\u3002</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_33","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n5 2\n1 5 2 10\n2 4 1 1\n\n\u3010\u6837\u4f8b2\u3011\n6 2\n1 5 2 10\n2 4 1 1\n</code></pre>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_34","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n3 10\n\n\u3010\u6837\u4f8b2\u3011\n3 10\n</code></pre>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_35","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca: \u7b2c\u4e00\u6b21\u7206\u70b8\u4ea7\u751f\u7684\u4f24\u5bb3\uff1a[2,4,6,8,10]\u3002 \u7b2c\u4e8c\u6b21\u7206\u70b8\u4ea7\u751f\u7684\u4f24\u5bb3\uff1a[0,1,1,1,0]\u3002 \u6240\u6709\u7206\u70b8\u7ed3\u675f\u540e\u6bcf\u4e2a\u623f\u5c4b\u7684\u635f\u4f24\u7a0b\u5ea6\uff1a[2,5,7,9,10]\u3002 \u8f93\u51fa\u5f02\u6216\u548c\uff1a\u3002 \u8f93\u51fa\u6700\u5927\u503c\uff1a\u3002</p>"},{"location":"problem/2021-06-05-6%E6%9C%885%E6%97%A5%E9%A2%98%E8%A7%A3/#_36","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst long long int N = 1e7 + 500;\nlong long int out[N] = {0};\nint main()\n{\nstd::ios::sync_with_stdio(false);\nstd::cin.tie(0);\nregister long long int n, m, l, r, ks, e1, dc, tmp = 0;\nregister long long int max1 = 0, ans = 0;\ncin &gt;&gt; n &gt;&gt; m;\nregister long long int i;\nfor (i = 1; i &lt;= m; i++)\n{\ncin &gt;&gt; l &gt;&gt; r &gt;&gt; ks &gt;&gt; e1;\ndc = (e1 - ks) / (r - l);\nout[l] = out[l] + ks;\nout[l + 1] = out[l + 1] + dc - ks;\nout[r + 1] = out[r + 1] - dc - e1;\nout[r + 2] = out[r + 2] + e1;\n}\nfor (i = 1; i &lt;= n; i++)\n{\nout[i] = out[i - 1] + out[i];\ntmp += out[i];\nmax1 = max(max1, tmp);\nans = ans ^ tmp;\n}\ncout &lt;&lt; ans &lt;&lt; ' ' &lt;&lt; max1 &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"problem/_coverpage/","title":"Tim-wcx","text":""},{"location":"problem/_coverpage/#_1","title":"\u4e2a\u4eba\u6587\u6863\u7f51\u7ad9","text":"<p>GitHub Get Started</p>"},{"location":"problem/_sidebar/","title":"sidebar","text":"<ul> <li>\u4e0a\u4e00\u7ea7</li> <li>ICPC\u9898\u89e3</li> <li>\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u56db\uff09</li> <li>\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u4e09\uff09</li> <li>\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u4e8c\uff09</li> <li>\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u4e00\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e94\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u56db\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e09\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e8c\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e00\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e5d\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u516b\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e03\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u516d\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e94\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u56db\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e09\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e8c\uff09</li> <li>\u6691\u5047\u96c6\u8bad\u9898\u89e3\u7cfb\u5217\uff08\u4e00\uff09</li> <li>2021-02-02-2\u67082\u65e5\u9898\u89e3</li> <li>2021-02-07-2\u67087\u65e5\u9898\u89e3</li> <li>2021-02-02-2\u67082\u65e5\u9898\u89e3</li> <li>2021-02-07-2\u67087\u65e5\u9898\u89e3</li> <li>2021-02-08-2\u67088\u65e5\u9898\u89e3</li> <li>2021-02-09-2\u67089\u65e5\u9898\u89e3</li> <li>2021-02-12-\u5b89\u5353\u8bfe\u8868\u5ba2\u6237\u7aef+\u670d\u52a1\u7aef\u6ce8\u89e3</li> <li>2021-02-16-2\u670816\u65e5\u9898\u89e3</li> <li>2021-02-19-2\u670819\u65e5\u9898\u89e3</li> <li>2021-02-20-2\u670820\u65e5\u9898\u89e3</li> <li>2021-02-22-2\u670822\u65e5\u9898\u89e3</li> <li>2021-02-24-2\u670824\u65e5\u9898\u89e3</li> <li>2021-02-28-2\u670828\u65e5\u9898\u89e3</li> <li>2021-03-02-3\u67082\u65e5\u9898\u89e3</li> <li>2021-03-07-3\u67087\u65e5\u9898\u89e3</li> <li>2021-03-09-\u6570\u8bba</li> <li>2021-06-05-6\u67085\u65e5\u9898\u89e3</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e03\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e03\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Cow Steeplechase</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Farmer John has a brilliant idea for the next great spectator sport: Cow Steeplechase! As everyone knows, regular steeplechase involves a group of horses that race around a course filled with obstacles they must jump over.FJ figures the same contest should work with highly-trained cows, as long as the obstacles are made short enough.</p> <p>In order to design his course, FJ makes a diagram of all the N (1 &lt;= N &lt;=250) possible obstacles he could potentially build. Each one is represented by a line segment in the 2D plane that is parallel to the horizontal or vertical axis. Obstacle i has distinct endpoints (X1_i, Y1_i) and (X2_i, Y2_i) (1 &lt;= X1_i, Y1_i, X2_i, Y2_i &lt;= 1,000,000,000). An example is as follows:</p> <pre><code>   --+-------   \n-----+-----\n  ---+---     |\n     |     |  |\n   --+-----+--+-   |\n     |     |  |  | |\n     |   --+--+--+-+-\n           |  |  | |\n              |\n</code></pre> <p>FJ would like to build as many of these obstacles as possible, subject to the constraint that no two of them intersect. Starting with the diagram above, FJ can build 7 obstacles: <pre><code>----------\n-----------\n  -------     |\n           |  |\n           |  |    |\n           |  |  | |\n           |  |  | |\n           |  |  | |\n              |\n</code></pre> Two segments are said to intersect if they share any point in common, even an endpoint of one or both of the segments.  FJ is certain that no two horizontal segments in the original input diagram will intersect, and that similarly no two vertical segments in the input diagram will intersect.</p> <p>Please help FJ determine the maximum number of obstacles he can build.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<ul> <li>Line 1: A single integer: N.</li> <li>Lines 2..N+1: Line i+1 contains four space-separated integers  representing an obstacle: X1_i, Y1_i, X2_i, and Y2_i.</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<ul> <li>Line 1: The maximum number of non-crossing segments FJ can choose.</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3\n4 5 10 5\n6 2 6 12\n8 3 8 5\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>2\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_8","title":"\u63d0\u793a","text":"<p>There are three potential obstacles. The first is a horizontal segment connecting (4, 5) to (10, 5); the second and third are vertical segments connecting (6, 2) to (6, 12) and (8, 3) to (8, 5).The optimal solution is to choose both vertical segments.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_9","title":"\u9898\u89e3","text":"<p>\u7f51\u7edc\u6d41\u7b97\u6cd5\uff0c\u5c06\u6a2a\u5411\u76f4\u7ebf\u6807\u53f7\u5e76\u4e0e\u6e90\u70b9\u5efa\u8fb9\uff0c\u5e76\u8d4b\u6743\u503c1\uff1b\u5c06\u7eb5\u5411\u76f4\u7ebf\u6807\u53f7\u4e0e\u6c47\u70b9\u5efa\u8fb9\uff0c\u8d4b\u6743\u503c1\uff1b\u5c06\u6a2a\u7eb5\u4ea4\u53c9\u7684\u76f4\u7ebf\u5efa\u8fb9\uff0c\u8d4b\u6743\u503c\u4e3a\u6b63\u65e0\u7a77\uff1b\u7531\u6700\u5927\u6d41\u7b49\u4e8e\u6700\u5c0f\u5272\uff0c\u6240\u4ee5\u6839\u636eEK\u7b97\u6cd5\u6216\u8005Dinic\u7b97\u6cd5\u7b97\u51fa\u6700\u5927\u6d41\u5373\u53ef\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_10","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nll to, val, next;\n};\nnode edge[100500] = {0};\nll head[4050] = {0};\nll cnt = 0;\nll s = 1, e = 1;\nvoid add_edge(ll from, ll to, ll val)\n{\nedge[cnt].next = head[from];\nedge[cnt].to = to;\nedge[cnt].val = val;\nhead[from] = cnt++;\n}\nll pre[4050] = {0}, tag[4050] = {0}, vis[4050] = {0};\nll bfs()\n{\nqueue&lt;ll&gt; que;\nmemset(tag, 0, sizeof(tag));\nmemset(pre, 0, sizeof(pre));\nmemset(vis, 0, sizeof(vis));\nque.push(s);\nvis[s] = 1;\nwhile (!que.empty())\n{\nll now = que.front();\nque.pop();\nfor (ll i = head[now]; i != -1; i = edge[i].next)\n{\nll to = edge[i].to, val = edge[i].val;\nif (!vis[to] &amp;&amp; val &gt; 0)\n{\nvis[to] = 1;\npre[to] = now;\ntag[to] = i;\nif (to == e)\nreturn 1;\nque.push(to);\n}\n}\n}\nreturn 0;\n}\nll EK()\n{\nll ans = 0;\nwhile (bfs())\n{\nll min1 = inf;\nfor (ll i = e; i != s; i = pre[i])\n{\nmin1 = min(min1, edge[tag[i]].val);\n}\nfor (ll i = e; i != s; i = pre[i])\n{\nedge[tag[i]].val -= min1;\nedge[tag[i] ^ 1].val += min1;\n}\nans += min1;\n}\nreturn ans;\n}\nstruct node1\n{\nll x1, y1, x2, y2, num;\n};\nnode1 a[4050] = {0}, b[4050] = {0};\nll cnta = 0, cntb = 0;\nint main()\n{\n//freopen(\"in.txt\", \"r\", stdin);\nll n;\nscanf(\"%lld\", &amp;n);\nll x1, x2, y1, y2;\nfor (ll i = 1; i &lt;= n; i++)\n{\nscanf(\"%lld%lld%lld%lld\", &amp;x1, &amp;y1, &amp;x2, &amp;y2);\nif (x1 &gt; x2)\nswap(x1, x2);\nif (y1 &gt; y2)\nswap(y1, y2);\nif (x1 == x2)\na[++cnta] = {x1, y1, x2, y2, i};\nelse\nb[++cntb] = {x1, y1, x2, y2, i};\n}\nfor (ll i = 0; i &lt; 4050; i++)\nhead[i] = -1;\ne = 4000, s = 0;\nfor (ll i = 1; i &lt;= cnta; i++)\n{\nadd_edge(s, a[i].num, 1);\nadd_edge(a[i].num, s, 0);\n//cout &lt;&lt; s &lt;&lt; ' ' &lt;&lt; a[i].num &lt;&lt; ' ' &lt;&lt; 1 &lt;&lt; endl;\n}\nfor (ll i = 1; i &lt;= cntb; i++)\n{\nadd_edge(e, b[i].num, 0);\nadd_edge(b[i].num, e, 1);\n//cout &lt;&lt; e &lt;&lt; ' ' &lt;&lt; b[i].num &lt;&lt; ' ' &lt;&lt; 1 &lt;&lt; endl;\n}\nfor (ll i = 1; i &lt;= cnta; i++)\n{\nfor (ll j = 1; j &lt;= cntb; j++)\n{\nif ((b[j].x1 &lt;= a[i].x1 &amp;&amp; a[i].x1 &lt;= b[j].x2) &amp;&amp; (a[i].y1 &lt;= b[j].y1 &amp;&amp; b[j].y1 &lt;= a[i].y2))\n{\nadd_edge(a[i].num, b[j].num, inf);\nadd_edge(b[j].num, a[i].num, 0);\n//cout &lt;&lt; a[i].num &lt;&lt; ' ' &lt;&lt; b[j].num &lt;&lt; ' ' &lt;&lt; inf &lt;&lt; endl;\n}\n}\n}\nprintf(\"%lld\\n\", n - EK());\n}\n</code></pre> <p>\u8be5\u9898\u53e6\u5916\u4e00\u79cd\u505a\u6cd5\u4e3a\u4e8c\u5206\u56fe\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nvector&lt;int&gt; v[1005];\nmap&lt;int, int&gt; mp, vis, mp1;\nint dfs(int now)\n{\nfor (int i = 0; i &lt; v[now].size(); i++)\n{\nint to = v[now][i];\nif (!vis[to])\n{\nvis[to] = 1;\nif (mp[to] == 0 || dfs(mp[to]))\n{\nmp[to] = now;\nmp1[now] = to;\nreturn 1;\n}\n}\n}\nreturn 0;\n}\nstruct node1\n{\nll x1, y1, x2, y2, num;\n};\nnode1 a[4050] = {0}, b[4050] = {0};\nll cnta = 0, cntb = 0;\nint main()\n{\nll n;\nscanf(\"%lld\", &amp;n);\nll x1, x2, y1, y2;\nfor (ll i = 1; i &lt;= n; i++)\n{\nscanf(\"%lld%lld%lld%lld\", &amp;x1, &amp;y1, &amp;x2, &amp;y2);\nif (x1 &gt; x2)\nswap(x1, x2);\nif (y1 &gt; y2)\nswap(y1, y2);\nif (x1 == x2)\n{\ncnta++;\na[cnta] = {x1, y1, x2, y2, cnta};\n}\nelse\n{\ncntb++;\nb[cntb] = {x1, y1, x2, y2, cntb};\n}\n}\nfor (ll i = 1; i &lt;= cnta; i++)\n{\nfor (ll j = 1; j &lt;= cntb; j++)\n{\nif ((b[j].x1 &lt;= a[i].x1 &amp;&amp; a[i].x1 &lt;= b[j].x2) &amp;&amp; (a[i].y1 &lt;= b[j].y1 &amp;&amp; b[j].y1 &lt;= a[i].y2))\n{\nv[a[i].num].push_back(b[j].num);\n}\n}\n}\nint ans = 0;\nfor (int i = 1; i &lt;= cnta; i++)\n{\nvis.clear();\nans += dfs(i);\n}\ncout &lt;&lt; n-ans &lt;&lt; endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#2","title":"\u9898\u76ee2","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_11","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Above the Median</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_12","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Farmer John has lined up his N (1 &lt;= N &lt;= 100,000) cows in a row to measure their heights; cow i has height H_i (1 &lt;= H_i &lt;= 1,000,000,000) nanometers--FJ believes in precise measurements! He wants to take a picture of some contiguous subsequence of the cows to submit to a bovine photography contest at the county fair.  </p> <p>The fair has a very strange rule about all submitted photos: a photograph is only valid to submit if it depicts a group of cows whose median height is at least a certain threshold X (1 &lt;= X &lt;= 1,000,000,000).</p> <p>For purposes of this problem, we define the median of an array A[0...K] to be A[ceiling(K/2)] after A is sorted, where ceiling(K/2) gives K/2 rounded up to the nearest integer (or K/2 itself, it K/2 is an integer to begin with). For example the median of {7, 3, 2, 6} is 6, and the median of {5, 4, 8} is 5.</p> <p>Please help FJ count the number of different contiguous subsequences of his cows that he could potentially submit to the photography contest.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_13","title":"\u8f93\u5165","text":"<p>* Line 1: Two space-separated integers: N and X. * Lines 2..N+1: Line i+1 contains the single integer H_i.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_14","title":"\u8f93\u51fa","text":"<p>* Line 1: The number of subsequences of FJ's cows that have median at least X. Note this may not fit into a 32-bit integer.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_15","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4 6\n10\n5\n6\n2\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_16","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>7\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_17","title":"\u63d0\u793a","text":"<p>FJ's four cows have heights 10, 5, 6, 2. We want to know how many contiguous subsequences have median at least 6.There are 10 possible contiguous subsequences to consider. Of these, only 7 have median at least 6. They are {10}, {6}, {10, 5}, {5, 6}, {6, 2}, {10,5, 6}, {10, 5, 6, 2}.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_18","title":"\u9898\u89e3","text":"<p>sum\u6570\u7ec4\u8bb0\u5f55\u6c42\u51fa\u5927\u4e8ek\u7684\u6570\u5b57\u4e2a\u6570\u7684\u524d\u7f00\u548c\uff0c\u5219\u9898\u76ee\u53ef\u4ee5\u8f6c\u53d8\u4e3a\u5bfb\u627e\u533a\u95f4[l,r]\u6ee1\u8db3sum[r]-sum[l-1]&gt;=0\uff0c\u5229\u7528\u6811\u72b6\u6570\u7ec4\u67e5\u627e\u5373\u53ef\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_19","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll tree[300500] = {0};\nll maxn = 300500;\nll lowbit(ll n)\n{\nreturn n &amp; (-n);\n}\nvoid add(ll pos, ll val)\n{\nfor (ll i = pos; i &lt;= maxn; i += lowbit(i))\ntree[i] += val;\n}\nll query(ll pos)\n{\nll ans = 0;\nfor (ll i = pos; i &gt; 0; i -= lowbit(i))\nans += tree[i];\nreturn ans;\n}\nint main()\n{\nll n, m, k, sum = 0, ans = 0;\nscanf(\"%lld%lld\", &amp;n, &amp;k)\nadd(n,1); ///\u4e3a\u9632\u6b62\u8d1f\u6570\u51fa\u73b0\uff0c\u7edf\u4e00\u52a0n\uff0c\u8fd9\u91cc\u521d\u59cb\u5316\u589e\u6dfb\u4e00\u4e2a0\nfor (ll i = 1; i &lt;= n; i++)\n{\nscanf(\"%lld\", &amp;m);\nif (m &lt; k)\nsum -= 1;\nelse\nsum += 1;\nans += query(sum + n);\nadd(sum + n, 1);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#3","title":"\u9898\u76ee3","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_20","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Eddy Walker</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_21","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Eddy likes to walk around. Especially, he likes to walk in a loop called \"Infinite loop\". But, actually, it's just a loop with finite length(Anyway, the name doesn't matter). Eddy can walk in a fixed length. He finds that it takes him N steps to walk through the loop a cycle. Then, he puts N marks on the \"Infinite loop\" labeled with 0,1,\u2026,N\u22121, where i and i+1 are a step away each other, so as 0 and N-1. After that, Eddy stands on the mark labeled 0 and start walking around. For each step, Eddy will independently uniformly randomly choose to move forward or backward. If currently Eddy is on the mark labeled i, he will on the mark labeled i+1 if move forward or i-1 if move backward. If Eddy is on the mark labeled N-1 and moves forward, he will stand on the mark labeled 0. If Eddy is on the mark labeled 0 and moves backward, he will stand on the mark labeled N-1.</p> <p>Although, Eddy likes to walk around. He will get bored after he reaches each mark at least once. After that, Eddy will pick up all the marks, go back to work and stop walking around.</p> <p>You, somehow, notice the weird convention Eddy is doing. And, you record T scenarios that Eddy walks around. For i-th scenario, you record two numbers Ni, Mi, where Ni tells that in the i-th scenario, Eddy can walk through the loop a cycle in exactly Ni steps(Yes! Eddy can walk in different fixed length for different day.). While Mi tells that you found that in the i-th scenario, after Eddy stands on the mark labeled Mi, he reached all the marks. </p> <p>However, when you review your records, you are not sure whether the data is correct or even possible. Thus, you want to know the probability that those scenarios will happen.  Precisely, you are going to compute the probability that first i scenarios will happen sequentially for each i.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_22","title":"\u8f93\u5165","text":"<p>The first line of input contains an integers T. Following T lines each contains two space-separated integers Ni and Mi. 1\u2264T\u22641021 0\u2264Mi&lt;Ni\u2264109</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_23","title":"\u8f93\u51fa","text":"<p>Output T lines each contains an integer representing the probability that first i scenarios will happen sequentially. you should output the number module 109+7(1000000007). Suppose the probability is P/Q, the desired output will be P\u00d7Q\u22121 mod 109+7</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_24","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3\n1 0\n2 1\n3 0\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_25","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>1\n1\n0\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_26","title":"\u9898\u89e3","text":"<p>\u6253\u8868\u627e\u89c4\u5f8b\uff0c\u6253\u8868\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;cstring&gt;\n#include &lt;ctime&gt;\nusing namespace std;\nint num[520];\nbool vis[520];\nint main(){\nsrand((unsigned)time(NULL));\nint n;\nwhile(cin &gt;&gt; n){\nmemset(num,0,sizeof(num));\nfor (int i = 1; i&lt;= 10000000;i++){//\u6570\u636e\u5f00\u7684\u5927\uff0c\u8dd1\u5f97\u6162\uff0c\u8010\u5fc3\u7b49\u5f85\uff0c\u53ef\u4ee5\u8c03\u5c0f\u4e00\u70b9 \nmemset(vis,false,sizeof(vis));\nint pos=0;\nint cnt=1;\nvis[0]=true;\nwhile(cnt&lt;n){\nint x=rand()%2;\nif(!x) x=-1;\npos+=x;\npos=(pos+n)%n;\nif(!vis[pos]){\nvis[pos]=true;\ncnt++;\n}\nif(cnt==n){\nnum[pos]++;\n}\n}\n}\nfor (int i = 0; i&lt; n;i++){\ncout &lt;&lt; i &lt;&lt; \": \" &lt;&lt; num[i] &lt;&lt; endl; }\n}\nreturn 0;\n} </code></pre> <p>\u9644\uff1a</p> <ol> <li> <p>C++\u4ea7\u751f\u4efb\u610f\u533a\u95f4\u7684\u968f\u673a\u6570\uff1anumber = (rand()%(maxValue - minValue +1)) + minValue;</p> </li> <li> <p>rand()\u4f1a\u8fd4\u56de\u4e00\u968f\u673a\u6570\u503c, \u8303\u56f4\u57280\u81f3RAND_MAX \u95f4\u3002RAND_MAX\u5b9a\u4e49\u5728stdlib.h, \u5176\u503c\u4e3a2147483647\u3002</p> </li> <li> <p>srand()\u53ef\u7528\u6765\u8bbe\u7f6erand()\u4ea7\u751f\u968f\u673a\u6570\u65f6\u7684\u968f\u673a\u6570\u79cd\u5b50\u3002\u901a\u8fc7\u8bbe\u7f6e\u4e0d\u540c\u7684\u79cd\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u4e0d\u540c\u7684\u968f\u673a\u6570\u5e8f\u5217\u3002\u53ef\u4ee5\u5229\u7528srand((int)(time(NULL))\u7684\u65b9\u6cd5\uff0c\u5229\u7528\u7cfb\u7edf\u65f6\u949f\uff0c\u4ea7\u751f\u4e0d\u540c\u7684\u968f\u673a\u6570\u79cd\u5b50\u3002</p> </li> </ol> <p>\u6253\u8868\u7ed3\u8bba\uff1a\u5982\u679cn==1\u663e\u7136\u6982\u7387\u662f1\uff0c\u5982\u679cm==0\uff0c\u4ece\u6837\u4f8b\u53ef\u4ee5\u770b\u51fa\u662f0\uff0c\u5176\u4ed6\u60c5\u51b5\u662f1/(n-1),</p> <p>\u53c2\u8003\u4e8e\uff1a</p> <p>https://blog.csdn.net/lgz0921/article/details/96695326</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%83%EF%BC%89/#_27","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 1e9 + 7;\nll ksm(ll a, ll b)\n{\nll ans1 = 1, ans2 = a;\nwhile (b != 0)\n{\nif (b % 2)\nans1 = (ans1 * ans2) % mod;\nans2 = (ans2 * ans2) % mod;\nb /= 2;\n}\nreturn ans1;\n}\nint main()\n{\n// freopen(\"in.txt\", \"r\", stdin);\n// freopen(\"out.txt\", \"w\", stdout);\nll t;\nscanf(\"%lld\", &amp;t);\nll n, m, ans = 1;\nwhile (t--)\n{\nscanf(\"%lld%lld\", &amp;n, &amp;m);\nif (n == 1)\nans *= 1;\nelse if (m == 0)\nans = 0;\nelse\nans = (ans*ksm(n - 1, mod - 2))%mod;\nprintf(\"%lld\\n\", ans);\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e09\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e09\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>I love exam</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Student Z doesn't love exams</p> <p>The exam was about to be done soon, but student Z didn't even read the book, He had collapsed.</p> <p>Student Z has a total of n exams, and there are still t days before the start of the exam, which means he still has t days to PREVIEW.</p> <p>But student Z couldn\u2019t even read the textbooks, and couldn\u2019t review it at all. Fortunately, a kind classmate gave him m sets of review materials. The i set of materials can improve the grades of the si course. The i set of materials needs to be studied for yi days. You can increase xi points later (the upper limit of each course is 100 points, so after it is upgraded to 100 points, there will be no further increase).and note that each set of review materials can only be used once.</p> <p>Student Z now has a zero-point level in every course. it is impossible to review all the materials, so he needs to choose some materials to review, but he can fail at most p courses in this semester (if the score of one course is less than 60 points will fail), otherwise he will be talked to by the professor.</p> <p>Student Z now wants to know the maximum points he can get in all courses under the premise of fail no more than p courses this semester. If he cannot meet the conditions, please output \u22121 .</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>A positive integer T (T\u226410) in the first line represents the number of test cases.</p> <p>For each test case:</p> <p>The first line contains a positive integer n (n\u226450) represents the total number of courses in this semester.</p> <p>The second line contains n strings which length is no more than 15, representing the course name of each course in this semester.</p> <p>The third line contains a positive integer m (m\u226415000) represents the number of review materials he obtained.</p> <p>In the next m lines, each line have a string s and two positive integers x(1\u2264x\u226410) and y(1\u2264y\u226410) , representing the course of this set of materials review, the improved scores and The number of days required for learning(data assurance this course was studied this semester ).</p> <p>The last line has two integers t, p(1\u2264t\u2264500,0\u2264p\u22643) represents the number of review days that student Z has and the upper limit of the number of failed courses in this semester.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>For each test case, output a line with a positive integer representing the maximum score that student Z can obtain in the case of meeting the conditions .If he must be talked to by the professor, output \u22121\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1\n3\nmathematics physics signals\n20\nphysics 10 1\nphysics 10 1\nphysics 10 1\nphysics 10 1\nphysics 10 1\nphysics 10 1\nphysics 10 1\nmathematics 10 1\nmathematics 10 1\nmathematics 10 1\nmathematics 10 1\nmathematics 10 1\nmathematics 10 1\nmathematics 10 1\nsignals 10 1\nsignals 10 1\nsignals 10 1\nsignals 10 1\nsignals 10 1\nsignals 10 2\n19 1\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>190\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/#_8","title":"\u9898\u89e3","text":"<p>\u9996\u514801\u80cc\u5305\u6c42\u51fa\u6bcf\u95e8\u8bfe\u82b1\u8d39k\u5929\u53ef\u4ee5\u6700\u591a\u5f97\u5230\u591a\u5c11\u5206\uff0c\u7136\u540edp[i][k][l]\u524di\u95e8\u8bfe\u7a0b,\u590d\u4e60\u4e86k\u5929\uff0c \u6302\u4e86l\u95e8\u8bfe\u7a0b\u7684\u6700\u5927\u5206\u6570\u3002</p> <pre><code>     dp[i][k][l]=max(dp[i-1][k-j][l-x]+f[j],dp[i][k][l]);\n</code></pre> <p>\u5177\u4f53\u53ef\u53c2\u7167\u535a\u5ba2\uff1a</p> <p>https://blog.csdn.net/m0_46062697/article/details/119008022</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/#_9","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint mx[600] = {0};\nint dp[60][600][60] = {0}; ///dp[i][j][k]\u4ee3\u8868\u5b66\u4e60\u524di\u95e8\uff0c\u7528\u65f6j\u5929\u3002\u6302\u6389k\u95e8\u7684\u6700\u5927\u5206\u6570\nmap&lt;string, int&gt; mp;\nstring str;\nvector&lt;pair&lt;int, int&gt;&gt; v[60];\nint main()\n{\nint t;\nscanf(\"%d\", &amp;t);\nwhile (t--)\n{\nint n;\nscanf(\"%d\", &amp;n);\nfor (int i = 1; i &lt;= n; i++)\nv[i].clear();\nmemset(dp, -0x3f, sizeof(dp));\nmp.clear();\nfor (int i = 1; i &lt;= n; i++)\n{\ncin &gt;&gt; str;\nmp[str] = i;\n}\nint m, x, y;\nscanf(\"%d\", &amp;m);\nfor (int i = 1; i &lt;= m; i++)\n{\ncin &gt;&gt; str;\nscanf(\"%d %d\", &amp;x, &amp;y);\nint index = mp[str];\nv[index].push_back({x, y});\n}\nint t, p;\nscanf(\"%d%d\", &amp;t, &amp;p);\ndp[0][0][0] = 0;\nfor (int i = 1; i &lt;= n; i++)\n{\nmemset(mx, -0x3f, sizeof(mx));\nmx[0] = 0;\nfor (int j = 0; j &lt; v[i].size(); j++)\nfor (int k = t; k &gt;= v[i][j].second; k--)\nmx[k] = max(mx[k], mx[k - v[i][j].second] + v[i][j].first);\nfor (int j = 0; j &lt;= t; j++)\n{\nfor (int k = j; k &lt;= t; k++)\n{\nfor (int l = 0; l &lt;= p; l++)\n{\nif (mx[j] &lt; 0)\ncontinue;\nint x = 0;\nif (mx[j] &lt; 60)\nx = 1;\nmx[j] = min(mx[j], 100);\nif (l &gt;= x)\ndp[i][k][l] = max(dp[i][k][l], dp[i - 1][k - j][l - x] + mx[j]);\n}\n}\n}\n}\nint ans = -0x3f;\nfor (int i = 0; i &lt;= t; i++)\nfor (int j = 0; j &lt;= p; j++)\nans = max(ans, dp[n][i][j]);\nif (ans &lt; 0)\nputs(\"-1\");\nelse\nprintf(\"%d\\n\", ans);\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e5d\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e5d\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Spread of Information</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Takahashi Kingdom has N towns, called Town 1 through N. There are N\u22121 roads in this kingdom. The i-th road connects Town ui and Town vi bidirectionally. For any two towns a and b, it is possible to get from Town a to Town b by traversing some roads. Takahashi, the king, wants to spread some information all over the kingdom. Since he is busy, he can directly transmit this information to at most K towns. Assume that Takahashi finishes transmitting the information at time 0. Then, for each t=1,2,3,\u22ef, the following happens: For towns a and b directly connected by a road, if a has already received the information at time t\u22120.5 but b has not, b receives it at time t. Takahashi wants to choose the K towns to transmit the information to minimize the time taken until every town receives it. Find the minimum time this takes.</p> <p>Constraints All values in input are integers. 1\u2264K&lt;N\u22642\u00d710^5 1\u2264ui,vi\u2264N For any two towns a and b, it is possible to get from Town a to Town b by traversing some roads.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format: N K u1 v1 u2 v2 \u22ee uN\u22121 vN\u22121</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>Print the answer.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n5 2\n1 2\n2 3\n3 4\n4 5\n\u3010\u6837\u4f8b2\u3011\n5 1\n1 2\n1 3\n1 4\n5 4\n\u3010\u6837\u4f8b3\u3011\n20 3\n2 15\n6 5\n12 1\n7 9\n17 2\n15 5\n2 4\n17 16\n12 2\n8 17\n17 19\n18 11\n20 8\n20 3\n13 9\n11 10\n11 20\n14 8\n11 7\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n1\n\u3010\u6837\u4f8b2\u3011\n2\n\u3010\u6837\u4f8b3\u3011\n3\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_8","title":"\u9898\u89e3","text":"<p>\u6811\u4e0aDP\uff0c\u8be6\u7ec6\u89c1\u4ee3\u7801\u6ce8\u91ca\u3002</p> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://blog.csdn.net/qq_48099121/article/details/115670878</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_9","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\nstruct node\n{\nint to,next;\n};\nnode edge[400500]= {0};\nint head[200500]= {0};\nint cnt=0,num=0;\nvoid add_edge(int from,int to)\n{\nedge[++cnt]= {to,head[from]};\nhead[from]=cnt;\n}\nint f[200500]= {0}; ///f\u4ee3\u8868\u4ee5u\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u8ddd\u79bbu\u6700\u8fd1\u7684\u7279\u6b8a\u70b9\nint g[200500]= {0}; ///g\u4ee3\u8868\u4ee5u\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u672a\u88ab\u8986\u76d6\u5230\u7684\u6700\u8fdc\u7684\u70b9\nint dfs(int now,int fa,int mid)\n{\nf[now]=inf,g[now]=0;\nfor(int i=head[now]; i; i=edge[i].next)\n{\nint to=edge[i].to;\nif(to==fa)\ncontinue;\ndfs(to,now,mid);\nf[now]=min(f[now],f[to]+1);\ng[now]=max(g[now],g[to]+1);\n}\nif(g[now]+f[now]&lt;=mid)\ng[now]=-inf;\nelse if(g[now]==mid)\ng[now]=-inf,f[now]=0,num++;\n}\nint check(int mid)\n{\nnum=0;\ndfs(1,-1,mid);\nif(g[1]&gt;=0)   ///\u8fd8\u6709\u672a\u88ab\u8986\u76d6\u5230\u7684\u70b9\nnum++;\nreturn num;\n}\nint main()\n{\nint n,m;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1; i&lt;=n-1; i++)\n{\nint x,y;\nscanf(\"%d%d\",&amp;x,&amp;y);\nadd_edge(x,y);\nadd_edge(y,x);\n}\nint l=0,r=n;\nwhile(l&lt;r)\n{\nint mid=(l+r)/2;\nif(check(mid)&lt;=m)\nr=mid;\nelse\nl=mid+1;\n}\ncout&lt;&lt;l&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#2","title":"\u9898\u76ee2","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_10","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2889&amp;pid=5</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_11","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Farmer John has just received a new shipment of N (1 &lt;= N &lt;= 20) bales of hay, where bale i has size S_i (1 &lt;= S_i &lt;= 100). He wants to divide the bales between his three barns as fairly as possible.  </p> <p>After some careful thought, FJ decides that a \"fair\" division of the hay bales should make the largest share as small as possible. That is, if B_1, B_2, and B_3 are the total sizes of all the bales placed in barns 1, 2, and 3, respectively (where B_1 &gt;= B_2 &gt;= B_3), then FJ wants to make B_1 as small as possible.</p> <p>For example, if there are 8 bales in these sizes: 2 4 5 8 9 14 15 20</p> <p>A fair solution is Barn 1: 2 9 15  B_1 = 26 Barn 2: 4 8 14  B_2 = 26 Barn 3: 5 20   B_3 = 25</p> <p>Please help FJ determine the value of B_1 for a fair division of the hay bales.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_12","title":"\u8f93\u5165","text":"<p>* Line 1: The number of bales, N. * Lines 2..1+N: Line i+1 contains S_i, the size of the ith bale.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_13","title":"\u8f93\u51fa","text":"<p>* Line 1: Please output the value of B_1 in a fair division of the hay bales.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_14","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>8\n14\n2\n5\n15\n8\n9\n20\n4\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_15","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>26\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_16","title":"\u9898\u89e3","text":"<p>\u4e09\u7ef4\u52a8\u6001\u89c4\u5212\u8f6c\u79fb\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_17","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nll a[25]= {0};\nbool dp[2][2005][2005]= {0};\nint main()\n{\nll n,sum=0;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1; i&lt;=n; i++)\n{\nscanf(\"%lld\",&amp;a[i]);\nsum+=a[i];\n}\ndp[1][0][0]=true;\nll last=1,now=0;\nll ans=sum;\nfor(ll i=1; i&lt;=n; i++)\n{\nfor(ll j=0; j&lt;2005; j++)\n{\nfor(ll k=0; k&lt;2005; k++)\n{\nif(dp[i&amp;1][j][k]==1)\n{\ndp[(i+1)&amp;1][j][k]=true;\nif(k+a[i]&lt;2005)\ndp[(i+1)&amp;1][j][k+a[i]]=true;\nif(j+a[i]&lt;2005)\ndp[(i+1)&amp;1][j+a[i]][k]=true;\n}\n}\n}\n}\nfor(ll j=0; j&lt;2005; j++)\n{\nfor(ll k=0; k&lt;2005; k++)\n{\nif(dp[n&amp;1][j][k])\n{\nans=min(ans,max(sum-j-k,max(j,k)));\n}\n}\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#3","title":"\u9898\u76ee3","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_18","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2889&amp;pid=7</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_19","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Given are two sequences of length N each: A=(A1,A2,A3,\u2026,AN) and B=(B1,B2,B3,\u2026,BN). Determine whether it is possible to make A equal B by repeatedly doing the operation below (possibly zero times). If it is possible, find the minimum number of operations required to do so.</p> <p>Choose an integer i such that 1\u2264i&lt;N, and do the following in order: swap Ai and Ai+1; add 1 to Ai; subtract 1 from Ai+1. Constraints 2\u2264N\u22642\u00d710^5\u200b\u200b 0\u2264Ai\u226410^9\u200b 0\u2264Bi\u226410^9 All values in input are integers.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_20","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format: N A1 A2 A3 \u2026 AN B1 B2 B3 \u2026 BN</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_21","title":"\u8f93\u51fa","text":"<p>If it is impossible to make A equal B, print -1. Otherwise, print the minimum number of operations required to do so.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_22","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n3\n3 1 4\n6 2 0\n\u3010\u6837\u4f8b2\u3011\n3\n1 1 1\n1 1 2\n\u3010\u6837\u4f8b3\u3011\n5\n5 4 1 3 2\n5 4 1 3 2\n\u3010\u6837\u4f8b4\u3011\n6\n8 5 4 7 4 5\n10 5 6 7 4 1\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_23","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n2\n\u3010\u6837\u4f8b2\u3011\n-1\n\u3010\u6837\u4f8b3\u3011\n0\n\u3010\u6837\u4f8b4\u3011\n7\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_24","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca\uff1a We can match A with B in two operations, as follows: First, do the operation with i=2, making A=(3,5,0). Next, do the operation with i=1, making A=(6,2,0). We cannot meet our objective in one or fewer operations. \u6837\u4f8b2\u89e3\u91ca\uff1a In this case, it is impossible to match A with B. \u6837\u4f8b3\u89e3\u91ca\uff1a A may equal B before doing any operation.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_25","title":"\u9898\u89e3","text":"<p>\u5bf9\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u5982\u4e0a\u7684\u4e09\u6b21\u64cd\u4f5c\u4e4b\u540ei+a[i]\u200b\u7684\u503c\u4fdd\u6301\u4e0d\u53d8\uff0c\u6240\u4ee5\u53ea\u8981\u628aa\u6570\u7ec4i+a[i]\u200b\u8f6c\u53d8\u4e3ab\u6570\u7ec4\u4e2dj+b[j]\u200b\u5373\u53ef\uff0c\u53c8\u56e0\u4e3a\u4e3a\u76f8\u90bb\u4ea4\u6362\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u6c42\u51fa\u9006\u5e8f\u5bf9\u5373\u53ef\u3002</p> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://blog.csdn.net/weixin_45483201/article/details/117699573</p> <p>https://www.cnblogs.com/spnooyseed/p/14810702.html</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_26","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3.\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nconst ll maxn=400000;\nll tree[400500]={0};\nll a[200500]={0};\nll b[200500]={0};\nunordered_map&lt;int,vector&lt;int&gt; &gt;mpa,mpb;\nll lowbit(ll x)\n{\nreturn x&amp;(-x);\n}\nvoid add(ll pos,ll val)\n{\nfor(ll i=pos;i&lt;=400000;i+=lowbit(i))\ntree[i]+=val;\n}\nll query(ll pos)\n{\nll ans=0;\nfor(ll i=pos;i&gt;=1;i-=lowbit(i))\nans+=tree[i];\nreturn ans;\n}\nint main()\n{\nll n;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;a[i]);\na[i]+=i;\nmpa[a[i]].push_back(i);\n}\n\n\nfor(ll i=1;i&lt;=n;i++)\n{\nscanf(\"%lld\",&amp;b[i]);\nb[i]+=i;\nmpb[b[i]].push_back(i);\n}\n\nfor(auto v:mpa)\n{\nif(v.second.size()!=mpb[v.first].size())\nreturn 0*puts(\"-1\");\nauto v2=mpb[v.first];\nfor(int i=0;i&lt;v.second.size();i++)\na[v.second[i]]=v2[i];\n}\n\nll ans=0;\nfor(ll i=1;i&lt;=n;i++)\n{\nadd(a[i],1);\nans+=i-query(a[i]);\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#4","title":"\u9898\u76ee4","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_27","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2890&amp;pid=3</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_28","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Farmer John has discovered that his cows produce higher quality milk when they are subject to strenuous exercise. He therefore decides to send his N cows (1 &lt;= N &lt;= 25,000) to climb up and then back down a nearby mountain!</p> <p>Cow i takes U(i) time to climb up the mountain and then D(i) time to climb down the mountain. Being domesticated cows, each cow needs the help of a farmer for each leg of the climb, but due to the poor economy, there are only two farmers available, Farmer John and his cousin Farmer Don. FJ plans to guide cows for the upward climb, and FD will then guide the cows for the downward climb. Since every cow needs a guide, and there is only one farmer for each part of the voyage, at most one cow may be climbing upward at any point in time (assisted by FJ), and at most one cow may be climbing down at any point in time (assisted by FD). A group of cows may temporarily accumulate at the top of the mountain if they climb up and then need to wait for FD's assistance before climbing down. Cows may climb down in a different order than they climbed up.</p> <p>Please determine the least possible amount of time for all N cows to make the entire journey.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_29","title":"\u8f93\u5165","text":"<ul> <li> <p>Line 1: The number of cows, N.</p> </li> <li> <p>Lines 2..1+N: Line i+1 contains two space-separated integers: U(i) and D(i). (1 &lt;= U(i), D(i) &lt;= 50,000).</p> </li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_30","title":"\u8f93\u51fa","text":"<ul> <li>Line 1: A single integer representing the least amount of time for all the cows to cross the mountain.</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_31","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3\n6 4\n8 1\n2 3\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_32","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>17\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_33","title":"\u9898\u89e3","text":"<p>\u8d2a\u5fc3\uff0c\u8be6\u7ec6\u89c1\u4ee3\u7801\u6ce8\u91ca\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B9%9D%EF%BC%89/#_34","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nll u,d,sum,sum1;\n};\nbool cmp(node a,node b)\n{\nif(a.d&gt;a.u&amp;&amp;b.d&lt;=b.u)        ///\u4e0b\u5c71\u6bd4\u4e0a\u5c71\u6162\u7684\u7684\u4f18\u5148\u4e0a\nreturn 1;\nelse if(a.d&lt;=a.u&amp;&amp;b.d&gt;b.u)\nreturn 0;\nelse if(a.d&gt;a.u)            ///\u5148\u4e0a\u7684\u4f18\u5148\u8ba9\u4e0a\u5c71\u5feb\u7684\u4e0a\uff0c\u52a0\u901f\u65f6\u95f4\nreturn a.u&lt;b.u;\nelse\nreturn a.d&gt;b.d;         ///\u540e\u4e0a\u7684\u4f18\u5148\u8ba9\u4e0b\u5c71\u7684\u6162\u7684\u4e0a\uff0c\u5c3d\u53ef\u80fd\u62d6\u5ef6\u65f6\u95f4\n}\nnode a[25500]={0};\nint main()\n{\nll n;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\nscanf(\"%lld%lld\",&amp;a[i].u,&amp;a[i].d);\nsort(a+1,a+n+1,cmp);\nll ans=0;\nfor(ll i=1;i&lt;=n;i++)\na[i].sum=a[i-1].sum+a[i].u;\nfor(ll i=1;i&lt;=n;i++)\n{\na[i].sum1=max(a[i].sum,a[i-1].sum1)+a[i].d;\nans=max(ans,a[i].sum1);\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e8c\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e8c\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2852&amp;pid=5</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Given a sequence of integers of length n, find the shortest consecutive subsequence witch XOR sum not less than k.</p> <p>If there are multiple consecutive subsequences of the same length, print the consecutive subsequence with the smallest left end point.</p> <p>If there are no consecutive subsequence witch XOR sum not less than k, just print \"-1\".</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>The first line contains a single integer t (t&lt;=100) representing the number of test cases in the input. Then t test cases follow.</p> <p>The first line of each test case contains two integers n (1&lt;=n&lt;=100000) and k (0&lt;=k&lt;2^30), representing the length of sequence.</p> <p>The second line of each test contains n integers ai (0&lt;=ai&lt;2^30), representing the integers in sequence.</p> <p>The number of test witch n&gt;1000 does not exceed 5.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>For each test case, print two integers in one line, representing the left end point and right end point of the consecutive subsequence.</p> <p>If there are no consecutive subsequence witch XOR sum not less than k, print \"-1\" in one line.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2\n3 2\n1 2 2\n9 7\n3 1 3 2 4 0 3 5 1\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>2 2\n5 7\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_8","title":"\u9898\u89e3","text":"<p>\u6784\u902001\u5b57\u5178\u6811\uff0c\u904d\u5386\u53f3\u8282\u70b9\uff0c\u67e5\u627e\u7b26\u5408\u6761\u4ef6\u7684\u5de6\u8282\u70b9\u6700\u5927\u503c\uff0c\u53ef\u53c2\u7167\u535a\u5ba2\uff1a</p> <p>https://www.cnblogs.com/lipoicyclic/p/15040070.html#4911382</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_9","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\nint ch[3005000][2] = {0};\nint val[3005000] = {0};\nint max_pos[3005000] = {0};\nint total = 0;\nint sum[100500] = {0}, a[100600] = {0};\nint n, k;\nvoid init()\n{\nch[0][0] = ch[0][1] = 0;\ntotal = 1;\nfor (int i = 0; i &lt;= 32 * n; i++)\nmax_pos[i] = 0;\n}\nvoid insert(int x, int pos)\n{\nint u = 0;\nfor (int i = 31; i &gt;= 0; i--)\n{\nint v = (x &gt;&gt; i) &amp; 1;\nmax_pos[u] = max(max_pos[u], pos);\nif (!ch[u][v])\n{\nch[total][0] = ch[total][1] = 0; ///\u521d\u59cb\u5316\nval[total] = 0;                  ///\u672a\u5230\u5e95\u90e8\u8282\u70b9\uff0c\u4e3a0\nch[u][v] = total++;\n}\nu = ch[u][v];\n}\nval[u] = x;\nmax_pos[u] = max(max_pos[u], pos);\n}\nint dfs(int p, int sum, int i, int k, int x)\n{\nint ans = -1;\nif (sum &gt;= k)\nreturn max_pos[p];\nif (sum + (((1ll &lt;&lt; (i + 1)) - 1)) &lt; k)\nreturn -1;\nif (ch[p][0])\nans = max(ans, dfs(ch[p][0], sum + (x &amp; (1 &lt;&lt; i)), i - 1, k, x));\nif (ch[p][1])\nans = max(ans, dfs(ch[p][1], sum + ((x &amp; (1 &lt;&lt; i)) ^ (1 &lt;&lt; i)), i - 1, k, x));\nreturn ans;\n}\nint main()\n{\nint t;\nscanf(\"%d\", &amp;t);\nwhile (t--)\n{\nscanf(\"%d%d\", &amp;n, &amp;k);\ninit();\ninsert(0, 0);\nfor (int i = 1; i &lt;= n; i++)\n{\nscanf(\"%d\", &amp;a[i]);\nsum[i] = sum[i - 1] ^ a[i];\n}\nint min_num = inf, ansl = -1, ansr = -1;\nfor (int i = 1; i &lt;= n; i++)\n{\nif (a[i] &gt;= k)\n{\nmin_num = 1;\nansl = ansr = i;\nbreak;\n}\nint lpos = dfs(0, 0, 31, k, sum[i]);\nif (lpos != -1 &amp;&amp; (sum[i] ^ sum[lpos]) &gt;= k)\n{\nint len = i - lpos;\nif (len &lt; min_num)\n{\nmin_num = len;\nansl = lpos + 1;\nansr = i;\n}\nelse if (len == min_num)\n{\nif (lpos + 1 &lt; ansl)\nansl = lpos + 1, ansr = i;\n}\n}\ninsert(sum[i], i);\n}\nif (min_num != inf)\n{\nprintf(\"%d %d\\n\", ansl, ansr);\n}\nelse\n{\nprintf(\"-1\\n\");\n}\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#2","title":"\u9898\u76ee2","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_10","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>http://icpc.upc.edu.cn/problem.php?cid=2852&amp;pid=7</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_11","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Given a matrix of n rows and m columns,find the largest area submatrix which is non decreasing on each column</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_12","title":"\u8f93\u5165","text":"<p>The first line contains an integer T(1\u2264T\u226410)representing the number of test cases. For each test case, the first line contains two integers n,m(1\u2264n,m\u22642\u2217103)representing the size of the matrix the next n line followed. the i-th line contains m integers vij(1\u2264vij\u22645\u2217103)representing the value of matrix It is guaranteed that there are no more than 2 testcases with n\u2217m&gt;10000</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_13","title":"\u8f93\u51fa","text":"<p>For each test case, print a integer representing the Maximal submatrix</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_14","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1\n2 3\n1 2 4\n2 3 3\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_15","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>4\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_16","title":"\u9898\u89e3","text":"<p>\u627e\u6700\u5927\u7684\u4e0a\u5347\u5b50\u77e9\u9635\uff0c\u5229\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u6bcf\u4e00\u884c\u7684\u5217\u6700\u5927\u4e0a\u5347\u503c\u548c\u5bbd\u5ea6\u7684\u4e58\u79ef\u5e76\u6c42\u51fa\u6700\u5927\u503c\u5373\u53ef\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_17","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint a[2050][2050] = {0};\nint sum[2050][2050] = {0};\nstruct node\n{\nint pos, val;\n};\nnode s[100500] = {0};\nint main()\n{\nint t;\nscanf(\"%d\", &amp;t);\nwhile (t--)\n{\nint n, m;\nscanf(\"%d %d\", &amp;n, &amp;m);\nfor (int i = 0; i &lt;= n+1; i++)\nfor (int j = 0; j &lt;= m+1; j++)\na[i][j]=sum[i][j]=0;\nfor (int i = 1; i &lt;= n; i++)\nfor (int j = 1; j &lt;= m; j++)\nscanf(\"%d\", &amp;a[i][j]);\n\nfor (int j = 1; j &lt;= m; j++)\n{\nfor (int i = 1; i &lt;= n; i++)\n{\nif (a[i][j] &gt;= a[i - 1][j])\nsum[i][j] = sum[i - 1][j] + 1;\nelse\nsum[i][j] = 1;\n}\n}\nll ans = 0;\nfor (ll i = 1; i &lt;= n; i++)\n{\nll top = 0;\nfor (ll j = 1; j &lt;= m+1; j++)\n{\nif (top == 0)\n{\ns[++top] = {j, sum[i][j]};\n}\nelse\n{\nwhile (s[top].val &gt; sum[i][j])\n{\nll tmp = (ll)(j - s[top-1].pos - 1) * (ll)s[top].val;\ntop--;\nans = max(ans, tmp);\n}\ns[++top] = {j, sum[i][j]};\n}\n}\n}\nprintf(\"%lld\\n\", ans);\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#3","title":"\u9898\u76ee3","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_18","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>https://ac.nowcoder.com/acm/contest/11255/J</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_19","title":"\u9898\u76ee\u622a\u56fe","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_20","title":"\u9898\u89e3","text":"<p>\u4e8c\u5206\u7b54\u6848\uff0c\u67e5\u627e\u957f\u5ea6\u5927\u4e8e\u67d0\u4e00\u7279\u5b9a\u503c\u7684\u5b50\u5e8f\u5217\u5e73\u5747\u503c\u6700\u5927\u503c\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/#_21","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint a[100500]={0},b[100500]={0};\nint check(int a[],double mid,int n,int k)\n{\ndouble sum[100500]={0};\ndouble min1[100500]={0};\nfor(int i=1;i&lt;=n;i++)\nmin1[i]=2e5;\nfor(int i=1;i&lt;=n;i++)\n{\nsum[i]=sum[i-1]+a[i]-mid;\nmin1[i]=min(min1[i-1],sum[i]);\n}\nfor(int i=k;i&lt;=n;i++)\n{\nif((sum[i]-min1[i-k])&gt;=0.0000)\nreturn 1;\n}\nreturn 0;\n}\nint main()\n{\nint n,m,x,y;\nscanf(\"%d%d\",&amp;n,&amp;m);\nscanf(\"%d%d\",&amp;x,&amp;y);\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%d\",&amp;a[i]);\nfor(int i=1;i&lt;=m;i++)\nscanf(\"%d\",&amp;b[i]);\ndouble l=0,r=1e5;\nwhile(abs(l-r)&gt;1e-9)\n{\ndouble mid=(l+r)/2.0;\nif(check(a,mid,n,x))\nl=mid;\nelse\nr=mid;\n}\ndouble ans1=l;\nl=0,r=1e5;\nwhile(abs(l-r)&gt;1e-9)\n{\ndouble mid=(l+r)/2.0;\nif(check(b,mid,m,y))\nl=mid;\nelse\nr=mid;\n}\ndouble ans2=l;\nprintf(\"%.10f\\n\",ans2+ans1);\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e94\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u4e94\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>\u9e3d\u5b50</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u4f60\u7684\u673a\u623f\u5171\u6709 n \u53f0\u7535\u8111\uff0c\u4f46\u662f\u7b2c k \u53f0\u7535\u8111\u574f\u4e86\u3002</p> <p>\u4f60\u7684\u8001\u5e08\u7ed9\u4f60 m \u6b21\u8981\u6c42\uff0c\u6bcf\u6b21\u8981\u6c42\u4f60\u5c06\u7b2c ui \u548c vi \u53f0\u7535\u8111\u4ea4\u6362\uff0c\u8fd9\u6837\u574f\u7684\u7535\u8111\u5c31\u53ef\u80fd\u4f1a\u88ab\u4ea4\u6362\u5230\u4e00\u4e2a\u65b0\u7684\u4f4d\u7f6e\u3002</p> <p>\u4f46\u7531\u4e8e\u4f60\u5e0c\u671b\u8fdb\u884c\u6697\u7bb1\u64cd\u4f5c\uff0c\u4f60\u53ef\u4ee5\u62d2\u7edd\u6267\u884c\u5176\u4e2d\u7684\u82e5\u5e72\u6761\u8981\u6c42\uff0c\u4f7f\u5f97\u574f\u7684\u7535\u8111\u6700\u7ec8\u4ea4\u6362\u5230 j \u53f7\u4f4d\u7f6e\u3002</p> <p>\u7531\u4e8e\u9a97\u8fc7\u8001\u5e08\u5f88\u7d2f\uff0c\u8bf7\u5bf9\u4e8e j=1...n \u6c42\u51fa\u6700\u5c11\u53ef\u80fd\u7684\u4e0d\u6267\u884c\u8981\u6c42\u6761\u6570\uff0c\u4f7f\u5f97\u574f\u7684\u7535\u8111\u5728\u7b2c j \u4e2a\u4f4d\u7f6e\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>\u672c\u9898\u6709\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e\u3002</p> <p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6570 T \u8868\u793a\u4e00\u5171\u6709 T \u7ec4\u6570\u636e\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e\uff1a</p> <p>\u7b2c\u4e00\u884c\u4e09\u4e2a\u6574\u6570 n,m,k \uff0c\u8868\u793a\u7535\u8111\u4e2a\u6570\uff0c\u603b\u64cd\u4f5c\u6b21\u6570\u548c\u574f\u7535\u8111\u7684\u521d\u59cb\u4f4d\u7f6e\u3002</p> <p>\u4e0b\u9762 m \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6b63\u6574\u6570 ui , vi \uff0c\u8868\u793a\u8fd9\u6b21\u64cd\u4f5c\u9009\u62e9\u7684\u4e24\u4e2a\u4f4d\u7f6e\u3002</p> <p>\u6ee1\u8db3 1\u2264T\u22645\uff0c1\u2264n\u2264105\uff0c0\u2264m\u2264105\uff0c1\u2264k\u2264n\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>\u5bf9\u6bcf\u7ec4\u6570\u636e\uff0c\u8f93\u51fa\u5171\u4e00\u884c n \u4e2a\u6574\u6570\uff0c\u7b2c i \u4e2a\u6574\u6570\u8868\u793a\u4f7f\u574f\u7535\u8111\u6700\u7ec8\u505c\u7559\u5728\u8be5\u4f4d\u7f6e\u6240\u9700\u7684\u6700\u5c11\u6697\u7bb1\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>\u82e5\u6700\u7ec8\u574f\u7535\u8111\u4e0d\u53ef\u80fd\u505c\u7559\u5728\u8be5\u4f4d\u7f6e\uff0c\u5219\u8f93\u51fa \u22121\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1\n5 5 1\n3 5\n2 1\n4 1\n3 1\n3 1\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>2 0 3 1 -1\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_8","title":"\u9898\u89e3","text":"<p>\u52a8\u6001\u89c4\u5212\uff0c\u5f53\u8981\u6c42\u8f6c\u79fbu\u548cv\u65f6\uff1a</p> <pre><code>dp[i][u]=min(dp[i-1][u]+1,dp[i-1][v]);\ndp[i][v]=min(dp[i-1][v]+1,dp[i-1][u]);\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_9","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nll dp[200500] = {0};\nint main()\n{\n// freopen(\"in.txt\",\"r\",stdin);\n// freopen(\"out.txt\",\"w\",stdout);\nll t;\nscanf(\"%lld\", &amp;t);\nwhile (t--)\n{\nll n, m, k;\nscanf(\"%lld%lld%lld\", &amp;n, &amp;m, &amp;k);\nfor (ll i = 1; i &lt;= n; i++)\ndp[i] = inf;\ndp[k] = 0;\nll u, v;\nfor (ll i = 1; i &lt;= m; i++)\n{\nscanf(\"%lld%lld\", &amp;u, &amp;v);\nll tmpv = min(dp[v] + 1, dp[u]);\nll tmpu = min(dp[u] + 1, dp[v]);\ndp[v] = tmpv;\ndp[u] = tmpu;\n}\nfor (ll i = 1; i &lt;= n; i++)\n{\nif (dp[i] == inf)\n{\nif (i != n)\nprintf(\"-1 \");\nelse\nprintf(\"-1\");\n}\nelse\n{\nif (i != n)\nprintf(\"%lld \", dp[i]);\nelse\nprintf(\"%lld\", dp[i]);\n}\n}\nprintf(\"\\n\");\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#2","title":"\u9898\u76ee2","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_10","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>\u8ff7\u5931</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_11","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u5c0f T \u8ff7\u5931\u5728\u4e86\u4e00\u4e2a\u6709 n \u4e2a\u70b9\u7684\u7fa4\u5c9b\u4e0a\u3002</p> <p>\u521d\u59cb\u65f6\u4ed6\u5728 1 \u53f7\u5c9b\uff0c\u4ed6\u8981\u901a\u8fc7\u67b6\u5728\u5c9b\u95f4\u7684 m \u5ea7\u53cc\u5411\u6865\uff0c\u5728\u6b63\u597d\u8fc7 k \u5ea7\u6865\u65f6\u8fbe\u5230 n \u53f7\u5c9b\u7684\u5927\u95e8\u3002</p> <p>\u8fd9\u4e9b\u6865\u4e2d\u6709\u82e5\u5e72\u5ea7\u9644\u9b54\u6865\u3002\u5f53\u5c0f T \u7ecf\u8fc7\u4e00\u5ea7\u9644\u9b54\u6865\u65f6\uff0c\u5982\u679c\u4ed6\u8eab\u4e0a\u6ca1\u6709\u9644\u9b54\u6807\u8bb0\u5219\u88ab\u6807\u8bb0\uff0c\u5982\u679c\u4ed6\u8eab\u4e0a\u5df2\u6709\u9644\u9b54\u6807\u8bb0\u5219\u6807\u8bb0\u6d88\u5931\u3002</p> <p>\u5927\u95e8\u53ea\u4f1a\u5728\u4ed6\u8eab\u4e0a\u6709\u9644\u9b54\u6807\u8bb0\u65f6\u624d\u4f1a\u5f00\u542f\uff0c\u53ea\u6709\u8fd9\u6837\u4ed6\u624d\u80fd\u9003\u79bb\u3002</p> <p>\u5c0f T \u8ff7\u5931\u5728\u4e86\u7fa4\u5c9b\u4e4b\u95f4\uff0c\u4ed6\u6bcf\u6b21\u4f1a\u7b49\u6982\u7387\u968f\u673a\u6311\u9009\u4e00\u5ea7\u4e0e\u4ed6\u6240\u5728\u5c9b\u5c7f\u76f8\u8fde\u7684\u6865\u8d70\u3002\u5c0f T \u5411\u4f60\u8be2\u95ee\u4ed6\u80fd\u9003\u79bb\u7684\u6982\u7387\u3002</p> <p>\u4fdd\u8bc1\u56fe\u65e0\u81ea\u73af\u65e0\u91cd\u8fb9\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_12","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6570 T \u8868\u793a\u4e00\u5171\u6709 T \u7ec4\u6570\u636e\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e\uff1a</p> <p>\u7b2c\u4e00\u884c\u4e09\u4e2a\u6b63\u6574\u6570 n\uff0cm\uff0ck\u3002</p> <p>\u6b64\u540e m \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6570 ui\uff0cvi\uff0cwi \uff0c\u8868\u793a\u4e00\u5ea7\u4ece ui \u5230 vi \u7684\u6865\u3002\u82e5 wi=1 \u5219\u8be5\u6865\u662f\u9644\u9b54\u6865\uff0c\u5426\u5219\uff08wi=0\uff09\u662f\u666e\u901a\u6865\u3002</p> <p>\u4fdd\u8bc1\u65e0\u81ea\u73af\u65e0\u91cd\u8fb9\uff0cT\u226410\uff0c1\u2264ui,vi\u2264n\uff0cwi \u4e3a 0 \u5230 1 \u7684\u6574\u6570\uff0c\u6ee1\u8db3 2\u2264n\u2264100\uff0c1\u2264m\u2264n\u00d7(n\u22121)/2\uff0c1\u2264k\u226410^6\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_13","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fa\u4e00\u5171 T \u884c\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e\uff0c\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570\uff1a\u4ed6\u80fd\u9003\u79bb\u7684\u6982\u7387\u5bf9 998244353 \u7684\u6a21\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_14","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2\n4 4 2\n1 2 1\n2 4 0\n1 3 0\n3 4 0\n6 7 2\n1 2 0\n1 3 1\n1 4 1\n2 5 0\n3 5 0\n3 6 0\n4 6 0\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_15","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>748683265\n610038216\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_16","title":"\u63d0\u793a","text":"<p>\u7b2c\u4e00\u7ec4\u6570\u636e \u4ece 1 \u8d70\u5230 n \u5e76\u4e14\u7ecf\u8fc7\u4e00\u6761\u9644\u9b54\u8fb9\u7684\u6982\u7387\u4e3a 1/4 \uff0c\u5bf9 998244353 \u53d6\u6a21\u540e\u4e3a 748683265\u3002 \u7b2c\u4e8c\u7ec4\u6570\u636e \u6982\u7387\u4e3a 5/18 \uff0c\u5bf9 998244353 \u53d6\u6a21\u540e\u4e3a 610038216\u200b\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_17","title":"\u9898\u89e3","text":"<p>\u77e9\u9635\u5feb\u901f\u5e42\uff0c\u901a\u8fc7\u6784\u9020\u90bb\u63a5\u77e9\u9635\u505a\u4e58\u6cd5\u5e42\u8fd0\u7b97\u7684\u65b9\u5f0f\u8ba1\u7b97\u51fa\u6700\u7ec8\u7684\u6982\u7387\u3002</p> <p></p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_18","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 998244353;\nll ksm(ll a, ll b)\n{\nll ans1 = 1, ans2 = a;\nwhile (b != 0)\n{\nif (b % 2)\nans1 = (ans2 * ans1) % mod;\nans2 = (ans2 * ans2) % mod;\nb /= 2;\n}\nreturn ans1;\n}\nll a[400][400] = {0};\nll ans1[400][400] = {0};\nll ans2[400][400] = {0};\nvector&lt;pair&lt;int, int&gt;&gt; v[400];\nint n, m, k;\nvoid cf(ll a[400][400], ll b[400][400])\n{\nll c[400][400] = {0};\nfor (ll i = 1; i &lt;= 2 * n; i++)\n{\nfor (ll j = 1; j &lt;= 2 * n; j++)\n{\nfor (ll k = 1; k &lt;= 2 * n; k++)\n{\nc[i][j] += a[i][k] * b[k][j];\nc[i][j] %= mod;\n}\n}\n}\nfor (ll i = 1; i &lt;= 2 * n; i++)\n{\nfor (ll j = 1; j &lt;= 2 * n; j++)\n{\na[i][j] = c[i][j];\na[i][j] %= mod;\n}\n}\n}\nint main()\n{\nint t;\nscanf(\"%d\", &amp;t);\nwhile (t--)\n{\nscanf(\"%d %d %d\", &amp;n, &amp;m, &amp;k);\nmemset(a, 0, sizeof(a));\nfor (int i = 1; i &lt;= n; i++)\nv[i].clear();\nint from, to, val;\nfor (int i = 1; i &lt;= m; i++)\n{\nscanf(\"%d %d %d\", &amp;from, &amp;to, &amp;val);\nv[from].push_back({to, val});\nv[to].push_back({from, val});\n}\nfor (int i = 1; i &lt;= n; i++)\n{\nll tmp = ksm((ll)v[i].size(), mod - 2);\nfor (int k = 0; k &lt; v[i].size(); k++)\n{\npair&lt;int, int&gt; j = v[i][k];\nif (j.second == 0)\n{\na[i * 2 - 1][j.first * 2 - 1] = tmp;\na[i * 2][j.first * 2] = tmp;\n}\nelse\n{\na[i * 2 - 1][j.first * 2] = tmp;\na[i * 2][j.first * 2 - 1] = tmp;\n}\n}\n}\n\nfor (ll i = 1; i &lt;= 2 * n; i++)\n{\nfor (ll j = 1; j &lt;= 2 * n; j++)\n{\nans1[i][j] = a[i][j];\nif (i == j)\nans2[i][j] = 1;\nelse\nans2[i][j] = 0;\n}\n}\n\nwhile (k != 0)\n{\nif (k % 2)\ncf(ans2, ans1);\ncf(ans1, ans1);\nk /= 2;\n}\nprintf(\"%lld\\n\", ans2[1][2 * n]);\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#3","title":"\u9898\u76ee3","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_19","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>https://ac.nowcoder.com/acm/contest/11256/K</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_20","title":"\u9898\u76ee","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_21","title":"\u9898\u89e3","text":"<p>\u7ef4\u62a4\u5355\u8c03\u5b50\u5e8f\u5217\uff0c\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/#_22","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[100500] = {0};\nint main()\n{\nll n, m;\nscanf(\"%lld%lld\", &amp;n, &amp;m);\nfor (ll i = 1; i &lt;= n; i++)\nscanf(\"%lld\", &amp;a[i]);\nwhile (m--)\n{\nll k;\nscanf(\"%lld\", &amp;k);\ndeque&lt;ll&gt; que1, que2; ///\u7ef4\u62a4\u9012\u589e\u5e8f\u5217\u548c\u9012\u51cf\u5e8f\u5217\nll ans = 0, last = 0;\nfor (ll i = 1; i &lt;= n; i++)\n{\nwhile (!que1.empty() &amp;&amp; a[que1.back()] &lt; a[i]) ///\u9012\u51cf\nque1.pop_back();\nque1.push_back(i);\n\nwhile (!que2.empty() &amp;&amp; a[que2.back()] &gt; a[i]) ///\u9012\u589e\nque2.pop_back();\nque2.push_back(i);\n\nwhile (!que1.empty() &amp;&amp; !que2.empty() &amp;&amp; a[que1.front()] - a[que2.front()] &gt; k)\n{\nif (que1.front() &lt; que2.front())\nans += (n - que2.front() + 1) * (que1.front() - last), last = que1.front(), que1.pop_front();\nelse\nans += (n - que1.front() + 1) * (que2.front() - last), last = que2.front(), que2.pop_front();\n}\n}\nprintf(\"%lld\\n\", ans);\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AB%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u516b\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AB%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u516b\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AB%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AB%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Grass Planting</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AB%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Farmer John has N barren pastures (2 &lt;= N &lt;= 100,000) connected by N-1 bidirectional roads, such that there is exactly one path between any two pastures. Bessie, a cow who loves her grazing time, often complains about how there is no grass on the roads between pastures. Farmer John loves Bessie very much, and today he is finally going to plant grass on the roads. He will do so using a procedure consisting of M steps (1 &lt;= M &lt;=100,000).</p> <p>At each step one of two things will happen:</p> <p>- FJ will choose two pastures, and plant a patch of grass along each road in between the two pastures, or, - Bessie will ask about how many patches of grass on a particular road, and Farmer John must answer her question.</p> <p>Farmer John is a very poor counter -- help him answer Bessie's questions!</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AB%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<ul> <li>Line 1: Two space-separated integers N and M</li> <li>Lines 2..N: Two space-separated integers describing the endpoints of  a road.</li> <li>Lines N+1..N+M: Line i+1 describes step i. The first character of the line is either P or Q, which describes whether or not FJ is planting grass or simply querying. This is followed by two space-separated integers A_i and B_i (1 &lt;= A_i, B_i &lt;= N)  which describe FJ's action or query.</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AB%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<ul> <li>Lines 1..???: Each line has the answer to a query, appearing in the same order as the queries appear in the input.</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AB%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4 6\n1 4\n2 4\n3 4\nP 2 3\nP 1 3\nQ 3 4\nP 1 4\nQ 2 4\nQ 1 4\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AB%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>2\n1\n2\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AB%EF%BC%89/#_8","title":"\u9898\u89e3","text":"<p>\u6811\u94fe\u5256\u5206\uff0c\u5c06\u6811\u8fdb\u884c\u8fb9\u5256\u5206\u5229\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002</p> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://oi-wiki.org/graph/hld/#_4</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AB%EF%BC%89/#_9","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll sum[400500] = {0}, lazy[400500] = {0};\nll dep[200500] = {0}, size1[200500] = {0}, son[200500] = {0}, f[200500] = {0}, id[200500] = {0}, top[200500] = {0};\nstruct node\n{\nll to, next;\n};\nnode edge[400500] = {0};\nll head[400500] = {0};\nll num = 0, cnt = 0;\nvoid add_edge(ll from, ll to)\n{\nedge[++num] = {to, head[from]};\nhead[from] = num;\n}\nvoid dfs1(ll now, ll fa)\n{\nsize1[now] = 1;\nfor (ll i = head[now]; i; i = edge[i].next)\n{\nll to = edge[i].to;\nif (to == fa)\ncontinue;\nf[to] = now;\ndep[to] = dep[now] + 1;\ndfs1(to, now);\nsize1[now] += size1[to];\nif (size1[to] &gt; size1[son[now]])\nson[now] = to;\n}\n}\nvoid dfs2(ll now, ll fa)\n{\nid[now] = ++cnt;\ntop[now] = fa;\nif (son[now])\ndfs2(son[now], fa);\nfor (ll i = head[now]; i; i = edge[i].next)\n{\nll to = edge[i].to;\nif (to == f[now] || to == son[now])\ncontinue;\ndfs2(to, to);\n}\n}\nvoid push_down(ll t, ll l, ll r)\n{\nif (lazy[t] == 0)\nreturn;\nlazy[2 * t + 1] += lazy[t];\nlazy[2 * t] += lazy[t];\nll mid = (l + r) / 2;\nsum[2 * t] += (mid - l + 1) * lazy[t];\nsum[2 * t + 1] += (r - mid) * lazy[t];\nlazy[t] = 0;\n}\nvoid push_up(ll t)\n{\nsum[t] = sum[2 * t] + sum[2 * t + 1];\n}\nvoid update(ll t, ll l, ll r, ll L, ll R, ll add)\n{\nif (l &lt;= L &amp;&amp; R &lt;= r)\n{\nlazy[t] += add;\nsum[t] += add * (R - L + 1);\nreturn;\n}\npush_down(t, L, R);\nll mid = (L + R) / 2;\nif (l &lt;= mid)\nupdate(2 * t, l, r, L, mid, add);\nif (mid &lt; r)\nupdate(2 * t + 1, l, r, mid + 1, R, add);\npush_up(t);\n}\nll query(ll t, ll l, ll r, ll L, ll R)\n{\nif (l &lt;= L &amp;&amp; R &lt;= r)\nreturn sum[t];\npush_down(t, L, R);\nll mid = (L + R) / 2;\nll ans = 0;\nif (l &lt;= mid)\nans += query(2 * t, l, r, L, mid);\nif (mid &lt; r)\nans += query(2 * t + 1, l, r, mid + 1, R);\nreturn ans;\n}\nvoid update_chain(ll x, ll y)\n{\nll fx = top[x], fy = top[y];\nwhile (fx != fy) ///\u4e0d\u5728\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\n{\nif (dep[fx] &lt; dep[fy])\nswap(x, y), swap(fx, fy);\nupdate(1, id[fx], id[x], 1, cnt, 1);\nx = f[fx], fx = top[x]; ///\u8df3\u8f6c\u5230\u53e6\u4e00\u6761\u91cd\u94fe\n}\nif (id[x] &gt; id[y])\nswap(x, y);\nupdate(1, id[x] + 1, id[y], 1, cnt, 1);\n}\nll query_chain(ll x, ll y)\n{\nll fx = top[x], fy = top[y], ans = 0;\nwhile (fx != fy) ///\u4e0d\u5728\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\n{\nif (dep[fx] &lt; dep[fy])\nswap(x, y), swap(fx, fy);\nans += query(1, id[fx], id[x], 1, cnt);\nx = f[fx], fx = top[x]; ///\u8df3\u8f6c\u5230\u53e6\u4e00\u6761\u91cd\u94fe\n}\nif (id[x] &gt; id[y])\nswap(x, y);\nans += query(1, id[x] + 1, id[y], 1, cnt);\nreturn ans;\n}\nint main()\n{\nll n, m, from, to;\nscanf(\"%lld%lld\", &amp;n, &amp;m);\nfor (ll i = 1; i &lt;= n - 1; i++)\n{\nscanf(\"%lld%lld\", &amp;from, &amp;to);\nadd_edge(from, to);\nadd_edge(to, from);\n}\nf[1] = 0, dep[1] = 1;\ndfs1(1, 0), dfs2(1, 1);\nchar c[10];\nfor (ll i = 1; i &lt;= m; i++)\n{\nscanf(\"%s%lld%lld\", c + 1, &amp;from, &amp;to);\nif (c[1] == 'P')\nupdate_chain(from, to);\nelse\nprintf(\"%lld\\n\", query_chain(from, to));\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AD%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u516d\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AD%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u516d\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AD%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AD%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Hopping Rabbit</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AD%EF%BC%89/#_3","title":"\u9898\u76ee","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AD%EF%BC%89/#_4","title":"\u9898\u89e3","text":"<p>\u626b\u63cf\u7ebf+\u7ebf\u6bb5\u6811\uff0c\u5c06\u9677\u9631\u533a\u57df\u6620\u5c04\u5230(0,0)-(d-1,d-1)\u7684\u77e9\u5f62\u5f53\u4e2d\uff0c\u53ea\u8981\u67e5\u627e\u77e9\u5f62\u4e2d\u4e3a\u88ab\u9677\u9631\u8986\u76d6\u7684\u90e8\u5206\u5373\u53ef\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%85%AD%EF%BC%89/#_5","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nll n, d;\nll num[200500] = {0};\nll lazy[800500] = {0};\nll min1[800500] = {0};\nvoid push_up(ll t)\n{\nmin1[t] = min(min1[2 * t], min1[2 * t + 1]);\n}\nvoid push_down(ll t)\n{\nif (lazy[t] == 0)\nreturn;\nlazy[2 * t] += lazy[t];\nlazy[2 * t + 1] += lazy[t];\nmin1[2 * t] += lazy[t];\nmin1[2 * t + 1] += lazy[t];\nlazy[t] = 0;\n}\nvoid update(ll t, ll l, ll r, ll L, ll R, ll add) ///l,r\u4e3a\u66f4\u65b0\u533a\u95f4\uff0cL,R\u4e3a\u7ebf\u6bb5\u6811\u533a\u95f4\n{\nif (l &lt;= L &amp;&amp; r &gt;= R)\n{\nmin1[t] += add;\nlazy[t] += add;\nreturn;\n}\npush_down(t);\nll mid = (L + R) / 2;\nif (l &lt;= mid)\nupdate(2 * t, l, r, L, mid, add);\nif (mid &lt; r)\nupdate(2 * t + 1, l, r, mid + 1, R, add);\npush_up(t);\n}\nll query_pos(ll t, ll l, ll r)\n{\nif (l == r)\nreturn l;\nll mid = (l + r) / 2;\npush_down(t);\nif (min1[2 * t] == 0)\nreturn query_pos(2 * t, l, mid);\nelse\nreturn query_pos(2 * t + 1, mid + 1, r);\n}\nstruct node\n{\nll l, r;\n};\nvector&lt;node&gt; v1[100500], v2[100500];\nvoid clc(ll &amp;x)\n{\nx = (x % d + d) % d;\n}\nvoid option1(ll x1, ll y1, ll x2, ll y2)\n{\nif (x1 &gt;= x2 || y1 &gt;= y2)\nreturn;\nv1[x1].push_back({y1 + 1, y2});\nv2[x2].push_back({y1 + 1, y2});\n}\nvoid option(ll x1, ll y1, ll x2, ll y2)\n{\nif (y2 - y1 &gt;= d)\n{\noption1(x1, 0, x2, d);\nreturn;\n}\nclc(y1), clc(y2);\nif (y1 &gt; y2)\n{\noption1(x1, 0, x2, y2);\noption1(x1, y1, x2, d);\nreturn;\n}\nelse\n{\noption1(x1, y1, x2, y2);\nreturn;\n}\n}\nint main()\n{\nscanf(\"%lld%lld\", &amp;n, &amp;d);\nfor (ll i = 1; i &lt;= n; i++)\n{\nll x1, y1, x2, y2;\nscanf(\"%lld%lld%lld%lld\", &amp;x1, &amp;y1, &amp;x2, &amp;y2);\nif (x2 - x1 &gt;= d)\n{\noption(0, y1, d, y2);\ncontinue;\n}\nclc(x1), clc(x2);\nif (x1 &gt; x2)\n{\noption(0, y1, x2, y2);\noption(x1, y1, d, y2);\n}\nelse\n{\noption(x1, y1, x2, y2);\n}\n}\nfor (ll i = 0; i &lt; d; i++)\n{\nfor (node x : v1[i])\nupdate(1, x.l, x.r, 1, d, 1);\nfor (node x : v2[i])\nupdate(1, x.l, x.r, 1, d, -1);\nif (min1[1] != 0)\ncontinue;\nprintf(\"YES\\n%lld %lld\\n\", i, query_pos(1, 1, d) - 1);\nreturn 0;\n}\nprintf(\"NO\\n\");\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e00\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e00\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Add or Multiply 1</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3\n2 1\n5 5\n100 100\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>4\n329462\n294770659\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_6","title":"\u9898\u89e3","text":"<p>\u5c06+\u548c*\u5206\u522b\u8f6c\u6362\u4e3a\u767d\u7403\u548c\u9ed1\u7403\uff0c\u5c06\u9898\u76ee\u8f6c\u6362\u4e3an\u4e2a\u4e0d\u540c\u7684\u5c0f\u7403\u653e\u5230m\u4e2a\u4e0d\u540c\u7684\u76d2\u5b50\u4e14\u4e0d\u4e3a\u7a7a\uff0c\u5373\u4e3a\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570\uff0c\u8be6\u89c1\uff1ahttps://github.tim-wcx.ltd/#/icpc/?id=\u7ec4\u5408\u6570\u5b66\uff0c\u7136\u540e\u679a\u4e3e\u767d\u8272\u5c0f\u7403\u76d2\u5b50\u6570\u76een\uff0c\u5219\u5bf9\u4e8e\u9ed1\u8272\u5c0f\u7403\uff0c\u6709\u4e09\u79cd\u5206\u6cd5\uff1an\u4e2a\u76d2\u5b50\uff0cn-1\u4e2a\u76d2\u5b50\u548cn+1\u4e2a\u76d2\u5b50\uff0c\u5bf9\u4e8e\u4e09\u79cd\u60c5\u51b5\u5206\u522b\u8ba1\u7b97\u6c42\u548c\u5373\u53ef\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_7","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 1e9 + 7;\nll dp[4000][4000] = {0};\nll jc[4000] = {0};\nint main()\n{\njc[0] = 1;\nfor (ll i = 1; i &lt; 4000; i++)\n{\njc[i] = jc[i - 1] * i % mod;\n}\ndp[0][0] = 1;\nfor(int i=1; i&lt;4000; i++)\n{\nfor(int j=1; j&lt;=i; j++)\n{\ndp[i][j] = ( dp[i-1][j-1] + (ll)j * dp[i-1][j] % mod ) % mod;\n}\n}\nll t;\nscanf(\"%lld\", &amp;t);\nwhile (t--)\n{\nll n, m;\nscanf(\"%lld%lld\", &amp;n, &amp;m);\nll ans = 0;\nfor (ll i = 0; i &lt;= max(n, m); i++)\n{\nll tmp1 = dp[n][i] * jc[i];\ntmp1 %= mod;\nans += tmp1 * dp[m][i - 1] % mod * jc[i - 1] % mod;\nans %= mod;\nans += tmp1 * dp[m][i] % mod * jc[i] % mod * 2 % mod;\nans %= mod;\nans += tmp1 * dp[m][i + 1] % mod * jc[i + 1] % mod;\nans %= mod;\n}\nprintf(\"%lld\\n\", ans);\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#2","title":"\u9898\u76ee2","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_8","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>\u4ed3\u9889\u9020\u6570</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_9","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u9aa4\u98ce\u8d77\uff0c\u4ed3\u9889\u98d8\u98d8\u4e4e\u4e0d\u81ea\u89c9\u4e8e\u5b64\u5c9b\u7109\u3002\u5c9b\u65e0\u4eba\u8ff9\uff0c\u552f\u6709\u6709\u7406\u6570\u4e8c\u65cf\u5c14\u3002\u4e00\u65cf\u66f0\u7532\u5206\u4e4b\u4e59\uff0c \u4e00\u65cf\u66f0\u4e59\u5206\u4e4b\u7532\uff0c\u7532\u3001\u4e59\u7686\u6b63\u6574\u6570\u3002\u6570\u4e4b\uff0c\u5219\u65cf\u65cf\u4e0d\u7aed\u5176\u6570\u3002 \u9e66\u9e49\u8c13\u4ed3\u9889\uff1a\u201c\u65e5\u62e9\u4e8c\u6570\uff0c\u5408\u5176\u4e3a\u5e73\u5747\u6216\u8c03\u548c\u5e73\u5747\u3002\u9020\u5f97\u4e00\uff0c\u543e\u9001\u6c5d\u5f52\uff01\u201d \u4ed3\u9889\u80fd\u5f52\u4e8e\u4e5d\u5343\u4e5d\u767e\u4e5d\u5341\u4e5d\u4ebf\u4e5d\u5343\u4e5d\u767e\u4e5d\u5341\u4e5d\u4e07\u4e5d\u5343\u4e5d\u767e\u4e5d\u5341\u4e5d\u65e5\u5426\uff1f</p> <p>\u4ed3\u9889\u88ab\u4e00\u9635\u98ce\u522e\u5230\u4e86\u4e00\u4e2a\u8352\u65e0\u4eba\u70df\u7684\u5c0f\u5c9b\u4e0a\uff0c\u90a3\u91cc\u6709\u4e24\u65cf\u6709\u7406\u6570\uff0cab\u548cba\uff0c\uff08a,b \u4e3a\u6b63\u6574\u6570\uff09\uff0c\u6bcf\u65cf\u6570\u6709\u65e0\u7a77\u591a\u4e2a\u3002 \u9e66\u9e49\u544a\u8bc9\u4ed3\u9889\uff1a\u201c\u6bcf\u5929\uff0c\u4f60\u53ef\u4ee5\u9009\u4e24\u4e2a\u5df2\u6709\u7684\u6570 x,y\uff0c\u5c06\u5b83\u4eec\u5408\u6210\u4e3a\\frac{x+y}{2}\u6216\\frac{2x*y}{x+y}\u3002\u5982\u679c\u4f60\u80fd\u5408\u6210 1\uff0c\u6211\u5c31\u9001\u4f60\u56de\u5bb6\uff01\u201d \u4ed3\u9889\u80fd\u5728 999999999999 \u5929\u5185\u56de\u5bb6\u5417\uff1f</p> <p>T \u7ec4\u6570\u636e\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_10","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570 T(1\u2264T\u2264400)\uff0c\u8868\u793a\u6570\u636e\u7ec4\u6570\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff1a</p> <p>\u8f93\u5165\u4e00\u884c\u4e24\u4e2a\u6574\u6570 a,b(1\u2264a,b\u226410^9)\uff0c\u8868\u793a\u521d\u59cb\u7684\u6709\u7406\u6570\u4e3a\\frac{a}{b}\u548c\\frac{b}{a}\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_11","title":"\u8f93\u51fa","text":"<p>\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff1a</p> <p>\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32 \u201cYes\u201d \u6216\u8005 \u201cNo\u201d\uff08\u5747\u4e0d\u542b\u5f15\u53f7\uff09\uff0c\u5206\u522b\u8868\u793a\u4ed3\u9889\u80fd\u6216\u8005\u4e0d\u80fd\u5728 999999999999 \u5929\u5185\u5408\u6210\u6570\u5b57 1\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_12","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3\n1 1\n1 2\n5 3\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_13","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>Yes\nNo\nYes\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_14","title":"\u9898\u89e3","text":"<p>\u89c4\u5f8b\u9898\uff0c\u7531\u4e8ea/b\u548cb/a\u662f\u4efb\u610f\u591a\u4e2a\u7684\uff0c\u53ef\u4ee5\u591a\u5199\u51e0\u9879\u627e\u627e\u89c4\u5f8b\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_15","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\n#define inf1 0x3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nmap&lt;ll,ll&gt;mp;\nint main()\n{\nll sum=1;\nfor(ll i=1;i&lt;=40;i++)\n{\nmp[sum]=1;\nsum=sum*2;\n}\nll t;\nscanf(\"%lld\",&amp;t);\nwhile(t--)\n{\nll a,b;\nscanf(\"%lld%lld\",&amp;a,&amp;b);\nll tmp=__gcd(a,b);\na/=tmp,b/=tmp;\nif(a==b)\n{\nputs(\"Yes\");\ncontinue;\n}\nif(mp[a+b]&amp;&amp;a%2==1&amp;&amp;b%2==1)\nputs(\"Yes\");\nelse\nputs(\"No\");\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#3","title":"\u9898\u76ee3","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_16","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>123 Triangle</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_17","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Given is a sequence of N digits a1a2\u2026aN, where each element is 1, 2, or 3. Let xi,j defined as follows:</p> <p>\u00b7x_{1,j}:=a_j (1\u2264j\u2264N)</p> <p>\u00b7x_{i,j}:=|x_{i\u22121,j}\u2212x_{i\u22121,j+1}| (2\u2264i\u2264N and 1\u2264j\u2264N+1\u2212i)</p> <p>Find xN,1.</p> <p>Constraints</p> <p>\u00b72\u2264N\u226410^6</p> <p>\u00b7ai=1,2,3 (1\u2264i\u2264N)</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_18","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format:</p> <p>N</p> <p>a1a2\u2026aN</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_19","title":"\u8f93\u51fa","text":"<p>Print x_{N,1}.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_20","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n4\n1231\n\u3010\u6837\u4f8b2\u3011\n10\n2311312312\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_21","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n1\n\u3010\u6837\u4f8b2\u3011\n0\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_22","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca x1,1,x1,2,x1,3,x1,4 are respectively 1,2,3,1.</p> <p>x2,1,x2,2,x2,3 are respectively |1\u22122|=1,|2\u22123|=1,|3\u22121|=2.</p> <p>x3,1,x3,2 are respectively |1\u22121|=0,|1\u22122|=1.</p> <p>Finally, x4,1=|0\u22121|=1, so the answer is 1.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_23","title":"\u9898\u89e3","text":"<p>\u51cf\u6cd5\u76f8\u5f53\u4e8e\u6a212\u52a0\uff0c\u5c06\u9898\u76ee\u8f6c\u53d8\u4e3a</p> <p></p> <p>\u5373\u7edf\u8ba1\u6bcf\u4e00\u4f4d\u6570\u52a0\u4e86\u591a\u5c11\u6b21\uff0c\u901a\u8fc7\u89c2\u5bdf\uff0c\u6bcf\u4e00\u4f4d\u6570\u52a0C_{i-1}^{n-1}\uff0c\u5373\u5224\u65ad\u5947\u5076\u5373\u53ef\u3002</p> <p>\u53c2\u8003\u535a\u5ba2\uff1a</p> <p>https://blog.csdn.net/weixin_45750972/article/details/105271373</p> <p>https://blog.csdn.net/weixin_45750972/article/details/105272194</p> <p>https://www.cnblogs.com/Willems/p/12552885.html</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/#_24","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint b[10] = {0};\nchar a[1005000] = {0};\nint main()\n{\nint n;\nscanf(\"%d\", &amp;n);\nscanf(\"%s\", a + 1);\nint f1 = 0;\nfor (int i = 1; i &lt;= n; i++)\n{\na[i]--; ///\u7531\u4e8en&gt;=2\uff0c123\u7b49\u4ef7\u4e8e012\u8ba1\u7b97\nif (a[i] == '1')\nf1 = 1;\nb[a[i] - '0'] += (int)(((n - 1) &amp; (i - 1)) == (i - 1));\n}\nif (b[1] &amp; 1)\nputs(\"1\");\nelse if (f1 == 0 &amp;&amp; (b[2] &amp; 1))\nputs(\"2\");\nelse\nputs(\"0\");\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e09\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e09\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Nuske vs Phantom Thnook</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Nuske has a grid with N rows and M columns of squares. The rows are numbered 1 through N from top to bottom, and the columns are numbered 1 through M from left to right. Each square in the grid is painted in either blue or white. If S_{i,j} is 1, the square at the i-th row and j-th column is blue; if S_{i,j} is 0, the square is white. For every pair of two blue square a and b, there is at most one path that starts from a, repeatedly proceeds to an adjacent (side by side) blue square and finally reaches b, without traversing the same square more than once.</p> <p>Phantom Thnook, Nuske's eternal rival, gives Q queries to Nuske. The i-th query consists of four integers x_{i,1}, y_{i,1}, x_{i,2} and y_{i,2} and asks him the following: when the rectangular region of the grid bounded by (and including) the xi,1-th row, xi,2-th row, yi,1-th column and yi,2-th column is cut out, how many connected components consisting of blue squares there are in the region?</p> <p>Process all the queries.</p> <p>Constraints</p> <p>1\u2264N,M\u22642000</p> <p>1\u2264Q\u2264200000</p> <p>Si,j is either 0 or 1.</p> <p>Si,j satisfies the condition explained in the statement.</p> <p>1\u2264x_{i,1}\u2264x_{i,2}\u2264N(1\u2264i\u2264Q)</p> <p>1\u2264y_{i,1}\u2264y_{i,2}\u2264M(1\u2264i\u2264Q)</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>The input is given from Standard Input in the following format:</p> <p>N M Q S1,1..S1,M : SN,1..SN,M x1,1 yi,1 xi,2 yi,2 : xQ,1 yQ,1 xQ,2 yQ,2</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>For each query, print the number of the connected components consisting of blue squares in the region.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3 4 4\n1101\n0110\n1101\n1 1 3 4\n1 1 3 1\n2 2 3 4\n1 2 2 4\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>3\n2\n2\n2\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_8","title":"\u63d0\u793a","text":"<p>In the first query, the whole grid is specified. There are three components consisting of blue squares, and thus 3 should be printed.</p> <p>In the second query, the region within the red frame is specified. There are two components consisting of blue squares, and thus 2 should be printed. Note that squares that belong to the same component in the original grid may belong to different components.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_9","title":"\u9898\u89e3","text":"<p>\u524d\u7f00\u548c\u4ee5\u53ca\u6811\u7684\u6027\u8d28\uff0c\u68ee\u6797\u7684\u4e2a\u6570\u7b49\u4e8e\u70b9\u7684\u4e2a\u6570\u51cf\u53bb\u8fb9\u7684\u6570\u76ee\uff0c\u7528\u524d\u7f00\u548c\u7ef4\u62a4\u8fb9\u7684\u6570\u76ee\u548c\u70b9\u7684\u6570\u76ee\u5373\u53ef\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_10","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nchar a[2050][2050] = {0};\nint qzh[2050][2050] = {0};\nint qzl[2050][2050] = {0};\nint sum[2050][2050] = {0};\nint main()\n{\nint n, m, q;\nscanf(\"%d%d%d\", &amp;n, &amp;m, &amp;q);\nfor (int i = 1; i &lt;= n; i++)\nscanf(\"%s\", a[i] + 1);\nfor (int i = 1; i &lt;= n; i++)\n{\nfor (int j = 1; j &lt;= m; j++)\n{\nsum[i][j] = -sum[i - 1][j - 1] + sum[i][j - 1] + sum[i - 1][j] + a[i][j] - '0';\nif (a[i][j] == '1')\n{\nint tmp1 = 0, tmp2 = 0;\nif (a[i - 1][j] == '1')\ntmp2++;\nif (a[i][j - 1] == '1')\ntmp1++;\nqzh[i][j] = -qzh[i - 1][j - 1] + qzh[i][j - 1] + qzh[i - 1][j] + tmp1;\nqzl[i][j] = -qzl[i - 1][j - 1] + qzl[i][j - 1] + qzl[i - 1][j] + tmp2;\n}\nelse\n{\nqzh[i][j] = -qzh[i - 1][j - 1] + qzh[i][j - 1] + qzh[i - 1][j];\nqzl[i][j] = -qzl[i - 1][j - 1] + qzl[i][j - 1] + qzl[i - 1][j];\n}\n}\n}\nwhile (q--)\n{\nint x1, y1, x2, y2;\nscanf(\"%d%d%d%d\", &amp;x1, &amp;y1, &amp;x2, &amp;y2);\nint ans = sum[x2][y2] - sum[x1 - 1][y2] - sum[x2][y1 - 1] + sum[x1 - 1][y1 - 1];\nans = ans - (qzh[x2][y2] - qzh[x1 - 1][y2] - qzh[x2][y1] + qzh[x1 - 1][y1]);\nans = ans - (qzl[x2][y2] - qzl[x1][y2] - qzl[x2][y1 - 1] + qzl[x1][y1 - 1]);\nprintf(\"%d\\n\", ans);\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#2","title":"\u9898\u76ee2","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_11","title":"\u9898\u76ee\u94fe\u63a5","text":"<p> A or...or B Problem</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_12","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Nukes has an integer that can be represented as the bitwise OR of one or more integers between A and B (inclusive). How many possible candidates of the value of Nukes's integer there are?</p> <p>Constraints</p> <p>1\u2264A\u2264B&lt;2^{60}</p> <p>A and B are integers.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_13","title":"\u8f93\u5165","text":"<p>The input is given from Standard Input in the following format:</p> <p>A</p> <p>B</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_14","title":"\u8f93\u51fa","text":"<p>Print the number of possible candidates of the value of Nukes's integer.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_15","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>7\n9\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_16","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>4\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_17","title":"\u63d0\u793a","text":"<p>In this case, A=7 and B=9. There are four integers that can be represented as the bitwise OR of a non-empty subset of {7, 8, 9}: 7, 8, 9 and 15.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_18","title":"\u9898\u89e3","text":"<p>\u5047\u8bbeA\uff0cB\u4e24\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u5982\u4e0b\uff1a</p> <p>A\uff1axxxxxx..0*****</p> <p>B\uff1axxxxxx..10-----</p> <p>\u5219\uff1a</p> <p>C\uff1axxxxxx..011111</p> <p>D\uff1axxxxxx..100000</p> <p>C\u548cD\u4e00\u5b9a\u6ee1\u8db3A&lt;=C&lt;=D&lt;=B</p> <p>\u5219\uff1a</p> <p>E\uff1axxxxxx..1*****</p> <p>F\uff1axxxxxx..111111</p> <p>G\uff1axxxxxx..100111</p> <p>\u5176\u4e2d[E,F]\u53ef\u4ee5\u7531[A,C]\u548cD\u6216\u8fd0\u7b97\u5f97\u5230\uff0c[D,G]\u53ef\u4ee5\u7531[D,B]\u6216\u8fd0\u7b97\u5f97\u5230\uff0c\u6240\u4ee5\u7b54\u6848\u5373\u4e3a[A,G]\\cup[E,F]</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_19","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint main()\n{\nll a, b;\ncin &gt;&gt; a &gt;&gt; b;\nif (a &gt; b)\nswap(a, b);\nll tmp = b, aa = a;\nfor (ll i = 60; i &gt;= 0; i--)\n{\nif (((a ^ b) &gt;&gt; i) &amp; 1)\n{\nfor (ll j = i - 1; j &gt;= 0; j--)\ntmp |= (1ll &lt;&lt; j); ///\u7b49\u6548\u4e8exxxxx..111111\na |= (1ll &lt;&lt; i);       ///\u7b49\u6548\u4e8exxxxx..1*****\nfor (i--; i &gt;= 0 &amp;&amp; !((b &gt;&gt; i) &amp; 1); i--)\n;\nfor (; i &gt;= 0; i--)\nb |= (1ll &lt;&lt; i); ///\u7b49\u6548\u4e8exxxxx..100111\nbreak;\n}\n}\nll ans = 0;\nif (b &gt;= a)\nans = tmp - aa + 1;\nelse\nans = tmp - a + 1 + b - aa + 1;\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#3","title":"\u9898\u76ee3","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_20","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>\u62a2\u5360\u57ce\u5821</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_21","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u51ac\u51ac\u6b63\u548c\u4ed6\u7684\u670b\u53cb\u4e00\u8d77\u73a9\u62a2\u5360\u57ce\u5821\u7684\u6e38\u620f\uff0c\u8be5\u6e38\u620f\u53ef\u4ee5\u8868\u793a\u4e3a\u5927\u5c0f\u4e3an\u00d7m\u7684\u7f51\u683c\uff0c\u6bcf\u4e2a\u683c\u5b50\u6700\u591a\u53ea\u80fd\u5bb9\u4e0b\u4e00\u5ea7\u57ce\u5821\uff0c\u6bcf\u4e2a\u683c\u5b50\u6709\u4e09\u79cd\u72b6\u6001\uff1a</p> <p>1\u3001\u7a7a\u57ce\u5821\u7528\u201c.\u201d\u8868\u793a\uff1b</p> <p>2\u3001\u969c\u788d\u7269\u7528\u201c*\u201d\u8868\u793a\uff0c\u6240\u6709\u73a9\u5bb6\u90fd\u4e0d\u80fd\u901a\u8fc7\u5b83\uff1b</p> <p>3\u3001\u4e00\u540d\u6e38\u620f\u73a9\u5bb6\u7684\u7f16\u53f7\u5373\u4e3a\u6570\u5b57x\uff0c\u8868\u793a\u8be5\u57ce\u5821\u88abx\u5360\u9886\u3002</p> <p>\u6e38\u620f\u662f\u6309\u73a9\u5bb6\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u8f6e\u6d41\u8fdb\u884c\u7684\uff0c\u5728\u6bcf\u4e00\u8f6e\u4e2d\uff0c\u73a9\u5bb6\u8f6e\u6d41\u6269\u5f20\u52bf\u529b\u8303\u56f4\uff1a\u9996\u5148\uff0c\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u6269\u5f20\uff0c\u7136\u540e\u7b2c\u4e8c\u4e2a\u73a9\u5bb6\u6269\u5f20\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u6269\u5f20\u89c4\u5219\u5982\u4e0b\uff1a</p> <p>\u5bf9\u4e8e\u73a9\u5bb6\u73b0\u5728\u62e5\u6709\u7684\u6bcf\u4e2a\u57ce\u5821\uff0c\u53ef\u4ee5\u6269\u5f20\u5230\u9644\u8fd1\u7684\u7a7a\u57ce\u5821\uff08\u672a\u88ab\u4eba\u5360\u9886\u7684\uff09\u3002</p> <p>\u73a9\u5bb6i\u53ef\u4ee5\u4ece\u4ed6\u5df2\u5360\u9886\u7684\u57ce\u5821\u5411\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u6269\u5f20\uff0c\u4e14\u6bcf\u540d\u73a9\u5bb6\u90fd\u6709\u4e00\u4e2a\u653b\u51fb\u529bsi\uff0c\u5982\u679c\u80fd\u5728si\u6b65\u5185\uff08\u542bsi\uff09\u5230\u8fbe\u9644\u8fd1\u7684\u7a7a\u57ce\u5821\u5219\u53ef\u4ee5\u62a2\u5360\u8be5\u57ce\u5821\u3002</p> <p>\u5f53\u6240\u6709\u73a9\u5bb6\u90fd\u4e0d\u80fd\u7ee7\u7eed\u62a2\u5360\u7684\u65f6\u5019\u6e38\u620f\u7ed3\u675f\uff0c\u51ac\u51ac\u60f3\u77e5\u9053\u6e38\u620f\u7ed3\u675f\u65f6\u6bcf\u540d\u73a9\u5bb6\u6240\u5360\u7684\u57ce\u5821\u6570\u662f\u591a\u5c11\uff1f</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_22","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570n\uff0cm\u548cp\uff081\u2264n\uff0cm\u22641000,1\u2264p\u22649\uff09\u8868\u793a\u7f51\u683c\u7684\u884c\u548c\u5217\u4ee5\u53ca\u73a9\u5bb6\u6570\u91cf\u3002</p> <p>\u7b2c\u4e8c\u884c\u5305\u542bp\u6574\u6570si\uff081\u2264si\u22645000\uff09\u8868\u793a\u6bcf\u540d\u73a9\u5bb6\u7684\u6269\u5f20\u901f\u5ea6\u3002</p> <p>\u4ee5\u4e0bn\u884c\u63cf\u8ff0\u4e86\u6e38\u620f\u7f51\u683c\uff0c\u6bcf\u884c\u7531m\u4e2a\u7b26\u53f7\u7ec4\u6210\uff0c\u5176\u4e2d'.'\u8868\u793a\u7a7a\u57ce\u5821\uff0c'*'\u8868\u793a\u969c\u788d\u4eec\uff0c\u6570\u5b57x\uff081\u2264x\u2264p\uff09\u8868\u793a\u7531\u73a9\u5bb6x\u62e5\u6709\u7684\u57ce\u5821\u3002</p> <p>\u4fdd\u8bc1\u6bcf\u540d\u73a9\u5bb6\u5728\u7f51\u683c\u4e0a\u81f3\u5c11\u6709\u4e00\u5ea7\u57ce\u5821\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_23","title":"\u8f93\u51fa","text":"<p>\u8f93\u51fap\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6e38\u620f\u7ed3\u675f\u540e\u6bcf\u540d\u73a9\u5bb6\u62a2\u5360\u7684\u57ce\u5821\u6570\u91cf\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_24","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n3 3 2\n1 1\n1..\n...\n..2\n\u3010\u6837\u4f8b2\u3011\n3 4 4\n1 1 1 1\n....\n*...\n1234\n\u3010\u6837\u4f8b3\u3011\n3 4 4\n1 1 2 1\n....\n*...\n1234\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_25","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n6 3\n\u3010\u6837\u4f8b2\u3011\n1 4 3 3\n\u3010\u6837\u4f8b3\u3011\n1 4 5 1\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_26","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e10%\u7684\u6570\u636e\uff0c1\u2264n\uff0cm\u22641000\uff0cp=1\u3002</p> <p>\u5bf9\u4e8e20%\u7684\u6570\u636e\uff0c1\u2264n\uff0cm\u22641000\uff0cp=2\u3002</p> <p>\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c1\u2264n\uff0cm\u22641000,1\u2264p\u22649\uff0c1\u2264si\u22645000\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_27","title":"\u9898\u89e3","text":"<p>BFS\u76f4\u63a5\u641c\u7d22\u5373\u53ef\uff0c\u6ce8\u610f\u641c\u7d22\u6280\u5de7\uff0c\u6269\u5c55\u6280\u5de7\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/#_28","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nchar a[1050][1050] = {0};\nint s[20] = {0};\nint ans[20] = {0};\nint vis[1050][1050] = {0};\nint n, m, p;\nint dx[] = {0, 1, -1, 0, 0};\nint dy[] = {0, 0, 0, 1, -1};\nstruct node\n{\nint x, y;\n};\nqueue&lt;node&gt; que[1005];\nvoid bfs(int k)\n{\nfor (int p = 1; p &lt;= s[k]; p++)\n{\nint tmp = que[k].size();\nif (tmp == 0)\nbreak;\nfor (int i = 0; i &lt; tmp; i++)\n{\nint x = que[k].front().x;\nint y = que[k].front().y;\nque[k].pop();\nfor (int j = 1; j &lt;= 4; j++)\n{\nint xx = x + dx[j];\nint yy = y + dy[j];\nif (xx &lt;= 0 || xx &gt; n || yy &lt;= 0 || yy &gt; m || vis[xx][yy] != 0)\ncontinue;\nvis[xx][yy] = k;\nque[k].push({xx, yy});\n}\n}\n}\n}\nint main()\n{\nscanf(\"%d%d%d\", &amp;n, &amp;m, &amp;p);\nfor (int i = 1; i &lt;= p; i++)\nscanf(\"%d\", &amp;s[i]);\nfor (int i = 1; i &lt;= n; i++)\nscanf(\"%s\", a[i] + 1);\nfor (int i = 1; i &lt;= n; i++)\n{\nfor (int j = 1; j &lt;= m; j++)\n{\nif (a[i][j] == '.')\n;\nelse\n{\nif (a[i][j] == '*')\n{\nvis[i][j] = -1;\n}\nelse\n{\nvis[i][j] = a[i][j] - '0';\nque[a[i][j] - '0'].push({i, j});\n}\n}\n}\n}\nwhile (1)\n{\nint flag = 1;\nfor (int p1 = 1; p1 &lt;= p; p1++)\n{\nif (que[p1].size() &gt; 0)\n{\nbfs(p1);\nflag = 0;\n}\n}\nif (flag)\nbreak;\n}\nfor (int i = 1; i &lt;= n; i++)\nfor (int j = 1; j &lt;= m; j++)\nif (vis[i][j] != -1)\nans[vis[i][j]]++;\nfor (int i = 1; i &lt;= p; i++)\nprintf(\"%d \", ans[i]);\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e8c\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e8c\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Flowerpot</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u8001\u677f\u9700\u8981\u4f60\u5e2e\u5fd9\u6d47\u82b1\u3002\u7ed9\u51faN\u6ef4\u6c34\u7684\u5750\u6807\uff0cy\u8868\u793a\u6c34\u6ef4\u7684\u9ad8\u5ea6\uff0cx\u8868\u793a\u5b83\u4e0b\u843d\u5230x\u8f74\u7684\u4f4d\u7f6e\u3002</p> <p></p> <p>\u6bcf\u6ef4\u6c34\u4ee5\u6bcf\u79d21\u4e2a\u5355\u4f4d\u957f\u5ea6\u7684\u901f\u5ea6\u4e0b\u843d\u3002\u4f60\u9700\u8981\u628a\u82b1\u76c6\u653e\u5728x\u8f74\u4e0a\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u4f7f\u5f97\u4ece\u88ab\u82b1\u76c6\u63a5\u7740\u7684\u7b2c1\u6ef4\u6c34\u5f00\u59cb\uff0c\u5230\u88ab\u82b1\u76c6\u63a5\u7740\u7684\u6700\u540e1\u6ef4\u6c34\u7ed3\u675f\uff0c\u4e4b\u95f4\u7684\u65f6\u95f4\u5dee\u81f3\u5c11\u4e3aD\u3002</p> <p>\u6211\u4eec\u8ba4\u4e3a\uff0c\u53ea\u8981\u6c34\u6ef4\u843d\u5230x\u8f74\u4e0a\uff0c\u4e0e\u82b1\u76c6\u7684\u8fb9\u6cbf\u5bf9\u9f50\uff0c\u5c31\u8ba4\u4e3a\u88ab\u63a5\u4f4f\u3002\u7ed9\u51faN\u6ef4\u6c34\u7684\u5750\u6807\u548cD\u7684\u5927\u5c0f\uff0c\u8bf7\u7b97\u51fa\u6700\u5c0f\u7684\u82b1\u76c6\u7684\u5bbd\u5ea6W\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>\u7b2c\u4e00\u884c2\u4e2a\u6574\u6570 N \u548c D\u3002 \u7b2c2.. N+1\u884c\u6bcf\u884c2\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6c34\u6ef4\u7684\u5750\u6807(x,y)\u3002 1 \u2264 N \u2264 100000\uff0c1 \u2264 D \u2264 1000000\uff0c0\u2264x,y\u2264106\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>\u4ec5\u4e00\u884c1\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c0f\u7684\u82b1\u76c6\u7684\u5bbd\u5ea6\u3002\u5982\u679c\u65e0\u6cd5\u6784\u9020\u51fa\u8db3\u591f\u5bbd\u7684\u82b1\u76c6\uff0c\u4f7f\u5f97\u5728D\u5355\u4f4d\u7684\u65f6\u95f4\u63a5\u4f4f\u6ee1\u8db3\u8981\u6c42\u7684\u6c34\u6ef4\uff0c\u5219\u8f93\u51fa-1\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4 5\n6 3\n2 4\n4 10\n12 15\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>2\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_8","title":"\u63d0\u793a","text":"<p>\u67094\u6ef4\u6c34\uff0c (6,3), (2,4), (4,10), (12,15).\u6c34\u6ef4\u5fc5\u987b\u7528\u81f3\u5c115\u79d2\u65f6\u95f4\u843d\u5165\u82b1\u76c6\u3002\u82b1\u76c6\u7684\u5bbd\u5ea6\u4e3a2\u662f\u5fc5\u987b\u4e14\u8db3\u591f\u7684\u3002\u628a\u82b1\u76c6\u653e\u5728x=4..6\u7684\u4f4d\u7f6e\uff0c\u5b83\u53ef\u4ee5\u63a5\u52301\u548c3\u6c34\u6ef4, \u4e4b\u95f4\u7684\u65f6\u95f4\u5dee\u4e3a10-3 = 7\u6ee1\u8db3\u6761\u4ef6\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_9","title":"\u9898\u89e3","text":"<p>\u5355\u8c03\u6808\uff0c\u7ef4\u62a4\u5355\u8c03\u4e0a\u5347\u7684y\uff0c\u7136\u540e\u6c42x\u4e4b\u5dee\u7684\u6700\u5c0f\u503c\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_10","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\nstruct node\n{\nint x,y;\nbool operator &lt;(const node&amp; a) const\n{\nif(a.x!=x)\nreturn x&lt;a.x;\nelse\nreturn y&lt;a.y;\n}\n};\nnode a[100500]={0},s[100500]={0};\nint main()\n{\nint n,m;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1;i&lt;=n;i++)\nscanf(\"%d%d\",&amp;a[i].x,&amp;a[i].y);\nsort(a+1,a+n+1);\nint head=1,tail=1,ans=inf;\ns[1]=a[1];\nfor(int i=2;i&lt;=n;i++)\n{\nwhile(tail&gt;=head&amp;&amp;s[tail].y&gt;a[i].y)\n{\nif(s[tail].y-a[i].y&gt;=m)\nans=min(ans,a[i].x-s[tail].x);\ntail--;\n}\ns[++tail]=a[i];\nwhile(tail&gt;=head&amp;&amp;s[tail].y-s[head].y&gt;=m)\nans=min(ans,s[tail].x-s[head].x),head++;\n}\nprintf(\"%d\\n\",ans==inf?-1:ans);\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#2","title":"\u9898\u76ee2","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_11","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Haybale Restacking</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_12","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Farmer John has just ordered a large number of bales of hay. He would like to organize these into N piles (1 &lt;= N &lt;= 100,000) arranged in a circle, where pile i contains B_i bales of hay. Unfortunately, the truck driver delivering the hay was not listening carefully when Farmer John provided this information, and only remembered to leave the hay in N piles arranged in a circle. After delivery, Farmer John notes that pile i contains A_i bales of hay. Of course, the A_i's and the B_i's have the same sum.</p> <p>Farmer John would like to move the bales of hay from their current configuration (described by the A_i's) into his desired target configuration (described by the B_i's). It takes him x units of work to move one hay bale from one pile to a pile that is x steps away around the circle. Please help him compute the minimum amount of work he will need to spend.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_13","title":"\u8f93\u5165","text":"<p>* Line 1: The single integer N. * Lines 2..1+N: Line i+1 contains the two integers A_i and B_i (1 &lt;= A_i, B_i &lt;= 1000).</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_14","title":"\u8f93\u51fa","text":"<p>* Line 1:the minimum amount of work he will need to spend.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_15","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4\n7 1\n3 4\n9 2\n1 13\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_16","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>13\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_17","title":"\u63d0\u793a","text":"<p>\u8bbexi\u4e3a\u7b2ci\u5806\u5e72\u8349\u4e0e\u7b2ci-1\u5806\u5e72\u8349\u7684\u4ea4\u6362\u6570</p> <p>\u4ee4B[i]\u7b49\u4e8eB[i]-A[i],\u5219\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9B[i]\u5168\u90e8\u53d8\u4e3a0</p> <p>B[1]-x1+x2=0 ==&gt; x2=x1-B[1]</p> <p>B[2]-x2+x3=0 ==&gt; x3=x2-B[2]=x1-B[1]-B[2]</p> <p>......xn-1=x1-B[1]-B[2]-...-B[n-1]</p> <p>\u800c\u6211\u4eec\u8981\u4f7f x1+x2+x3+...+xn-1 \u6700\u5c0f, \u5373|x1|+|x1-B[1]|+...+|x1-B[1]-B[2]-...-B[n-1]| \u6700\u5c0f</p> <p>\u6240\u4ee5x1\u8981\u7b49\u4e8eB[1],B[1]+B[2],...,B[1]+B[2]+...+B[n-1]\u7684\u4e2d\u4f4d\u6570</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_18","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nll b[100500]= {0};\nll a[100500]= {0};\nll sum[100500]= {0};\nint main()\n{\nll n;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1; i&lt;=n; i++)\n{\nscanf(\"%lld%lld\",&amp;a[i],&amp;b[i]);\nb[i]-=a[i];\nsum[i]=sum[i-1]+b[i];\n}\nsort(sum+1,sum+n+1);\nll tmp=sum[(n+1)/2],ans=0;\nfor(ll i=1; i&lt;=n; i++)\nans+=abs(sum[i]-tmp);\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#3","title":"\u9898\u76ee3","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_19","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>123 Triangle</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_20","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>You are given four positive integers x0, x1, a, b. And you know x_i=a\u22c5x_{i\u22121}+b\u22c5x_{i\u22122} for all i\u22652.</p> <p>Given two positive integers n, and MOD, please calculate xn modulo MOD.</p> <p>Does the problem look simple? Surprise! The value of n may have many many digits! </p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_21","title":"\u8f93\u5165","text":"<p>The input contains two lines.</p> <p>The first line contains four integers x0, x1, a, b,a,b (1\u2264x0,x1,a,b\u2264109).</p> <p>The second line contains two integers n, MOD (, n has no leading zero).</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_22","title":"\u8f93\u51fa","text":"<p>Print one integer representing the answer.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_23","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1 1 1 1\n10 1000000001\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_24","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>89\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_25","title":"\u63d0\u793a","text":"<p>The resulting sequence x is Fibonacci sequence. The 11-th item is 89.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_26","title":"\u9898\u89e3","text":"<p>\u9996\u5148\u662f\u5341\u8fdb\u5236\u5feb\u901f\u5e42\uff0c\u4f8b\u5982\uff1a</p> <p>3^{1234}=((((ans*3^1)^{10}*3^2)^{10}*3^3)^{10}*3^4)^{10}</p> <p>\u7136\u540e\u662f\u77e9\u9635\u5feb\u901f\u5e42\uff0cx_i=a\u22c5x_{i\u22121}+b\u22c5x_{i\u22122}\u53ef\u4ee5\u8f6c\u6362\u4e3a\uff1a</p> <p>$\\left( \\matrix{  a &amp; b \\  1&amp; 0  } \\right) ^{n-1} * \\left(\\matrix {x1  \\ x0  } \\right) $</p> <p>\u6c42\u51fa\u77e9\u9635\u53d8\u4e3a\u7b54\u6848\u3002</p> <p>\u53c2\u8003\u4e0e\uff1a</p> <p>https://blog.csdn.net/qq_41650771/article/details/98108098</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_27","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll x0,x1,a,b,mod;\nstruct node\n{\nll data[3][3];\nvoid clear1()\n{\ndata[1][2]=data[2][1]=0;\ndata[1][1]=data[2][2]=0;\n}\nvoid clear()\n{\ndata[1][2]=data[2][1]=0;\ndata[1][1]=data[2][2]=1;\n}\nnode operator * (const node&amp; a) const\n{\nnode tmp;\ntmp.clear1();\nfor(ll i=1; i&lt;=2; i++)\n{\nfor(ll j=1; j&lt;=2; j++)\n{\nfor(ll k=1; k&lt;=2; k++)\n{\ntmp.data[i][j]+=data[i][k]*a.data[k][j];\ntmp.data[i][j]%=mod;\n}\n}\n}\nreturn tmp;\n}\nvoid print()\n{\nprintf(\"%lld %lld\\n%lld %lld\\n**\\n\",data[1][1],data[1][2],data[2][1],data[2][2]);\n}\n};\nchar t[1005000]= {0};\nnode ksm(node a,int b)\n{\nnode ans1,ans2=a;\nans1.clear();\nwhile(b!=0)\n{\nif(b%2)\nans1=ans1*ans2;\nans2=ans2*ans2;\nb/=2;\n}\nreturn ans1;\n}\nint main()\n{\nscanf(\"%lld%lld%lld%lld\",&amp;x0,&amp;x1,&amp;a,&amp;b);\nscanf(\"%s\",t+1);\nscanf(\"%lld\",&amp;mod);\nnode tmp1,tmp2;\ntmp2.data[1][1]=a;\ntmp2.data[1][2]=1;\ntmp2.data[2][1]=b;\ntmp2.data[2][2]=0;\ntmp1.data[1][1]=x1;\ntmp1.data[1][2]=x0;\ntmp1.data[2][1]=0;\ntmp1.data[2][2]=0;\nnode tmp4;\ntmp4.clear();\nfor(int i=1;t[i];i++)\n{\ntmp4=ksm(tmp4,10);\nnode tmp3=ksm(tmp2,t[i]-'0');\ntmp4=tmp3*tmp4;\n}\ntmp1=tmp1*tmp4;\ncout&lt;&lt;tmp1.data[1][2]&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#4","title":"\u9898\u76ee4","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_28","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>XOR Game</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_29","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>There are 2N integers written on a blackboard. The i-th integer is Ai.</p> <p>Alice and Bob will play a game consisting of N rounds. In each round, they do the following:</p> <p>First, Alice chooses an integer on the blackboard and erases it. Let x be the integer erased here.</p> <p>Second, Bob chooses an integer on the blackboard and erases it. Let y be the integer erased here.</p> <p>Finally, write the value x\u2295y on a notebook, where \u2295 denotes the bitwise XOR.</p> <p>In the end, all the integers on the blackboard will be erased, and the notebook will have N integers written </p> <p>on it. The greatest integer written on the notebook will be the score of the game. Alice wants to maximize </p> <p>this score, while Bob wants to minimize it. Find the score of the game when both players play optimally </p> <p>under their objectives.</p> <p>Constraints</p> <p>1\u2264N\u22642\u00d710^5</p> <p>0\u2264Ai&lt;2^{30}</p> <p>All values in input are integers.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_30","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format:</p> <p>N</p> <p>A1 A2 \u22ef A2N</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_31","title":"\u8f93\u51fa","text":"<p>Print the answer.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_32","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n2\n0 1 3 5\n\u3010\u6837\u4f8b2\u3011\n2\n0 0 0 0\n\u3010\u6837\u4f8b3\u3011\n10\n974654030 99760550 750234695 255777344 907989127 917878091 818948631 690392797 579845317 549202360 511962375 203530861 491981716 64663831 561104719 541423175 301832976 252317904 471905694 350223945\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_33","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n4\n\u3010\u6837\u4f8b2\u3011\n0\n\u3010\u6837\u4f8b3\u3011\n268507123\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_34","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca\uff1a Below is one possible progress of the game (it may contain suboptimal choices).</p> <p>Round 1:</p> <p>Alice chooses A1=0.</p> <p>Bob chooses A3=3.</p> <p>They write 0\u22953=3 on the notebook.</p> <p>Round 2:</p> <p>Alice chooses A4=5.</p> <p>Bob chooses A2=1.</p> <p>They write 5\u22951=4 on the notebook.</p> <p>The score of the game is max(3,4)=4.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_35","title":"\u9898\u89e3","text":"<p>\u5b57\u5178\u6811\uff0c\u537301trai\uff0c\u7531\u4e8e\u4e00\u4e2a\u8981\u6700\u5927\u5316\u5f02\u6216\u503c\uff0c\u4e00\u4e2a\u8981\u6700\u5c0f\u5316\u5f02\u6216\u503c\uff0c\u5219\u7b54\u6848\u4e3a\u5f02\u6216\u540e\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\uff0c\u5373\u627e\u4e24\u4e2a\u6570\u4f7f\u5f97\u5176\u5f02\u6216\u503c\u6700\u5c0f\u5316\u5373\u53ef\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_36","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\nint tree[10000005][2]= {0};\nint size1[10000005]= {0};\nint cnt=1;\nvoid insert1(int k)\n{\nint p=1;\nsize1[p]++;\nfor(int i=29; i&gt;=0; i--)\n{\nint tmp=(k&amp;(1&lt;&lt;i))?1:0;\nif(tree[p][tmp]==0)\ntree[p][tmp]=++cnt;\np=tree[p][tmp];\nsize1[p]++;\n}\n}\nint solve(int a,int b,int dp)\n{\nif(dp&lt;0)\nreturn 0;\nif(size1[a]==0||size1[b]==0)\nreturn inf;     ///\u5de6\u53f3\u65e0\u6cd5\u518d\u8fdb\u884c\u5339\u914d\nif(a==b)\n{\nif(size1[tree[a][0]]%2==1)\n{\nreturn solve(tree[a][0],tree[a][1],dp-1)+(1&lt;&lt;dp);\n}\nelse\n{\nint tmp1=solve(tree[a][0],tree[a][0],dp-1);\nint tmp2=solve(tree[a][1],tree[a][1],dp-1);\nif(tmp1&gt;=inf)\nreturn tmp2;\nelse if(tmp2&gt;=inf)\nreturn tmp1;\nelse\nreturn max(tmp1,tmp2);\n}\n}\nelse\n{\nint ans=inf;\nif((tree[a][0]&amp;&amp;tree[b][0])||(tree[a][1]&amp;&amp;tree[b][1]))\n{\nans=min(ans,solve(tree[a][0],tree[b][0],dp-1));\nans=min(ans,solve(tree[a][1],tree[b][1],dp-1));\n}\nelse\n{\nans=min(ans,solve(tree[a][1],tree[b][0],dp-1)+(1&lt;&lt;dp));\nans=min(ans,solve(tree[a][0],tree[b][1],dp-1)+(1&lt;&lt;dp));\n}\nreturn ans;\n}\n}\nint main()\n{\nint n,m;\nscanf(\"%d\",&amp;n);\nfor(int i=1; i&lt;=2*n; i++)\n{\nscanf(\"%d\",&amp;m);\ninsert1(m);\n}\ncout&lt;&lt;solve(1,1,29)&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#5","title":"\u9898\u76ee5","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_37","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Mountain Climbing</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_38","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Farmer John has discovered that his cows produce higher quality milk when they are subject to strenuous exercise. He therefore decides to send his N cows (1 &lt;= N &lt;= 25,000) to climb up and then back down a nearby mountain!</p> <p>Cow i takes U(i) time to climb up the mountain and then D(i) time to climb down the mountain. Being domesticated cows, each cow needs the help of a farmer for each leg of the climb, but due to the poor economy, there are only two farmers available, Farmer John and his cousin Farmer Don. FJ plans to guide cows for the upward climb, and FD will then guide the cows for the downward climb. Since every cow needs a guide, and there is only one farmer for each part of the voyage, at most one cow may be climbing upward at any point in time (assisted by FJ), and at most one cow may be climbing down at any point in time (assisted by FD). A group of cows may temporarily accumulate at the top of the mountain if they climb up and then need to wait for FD's assistance before climbing down. Cows may climb down in a different order than they climbed up.</p> <p>Please determine the least possible amount of time for all N cows to make the entire journey.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_39","title":"\u8f93\u5165","text":"<p>* Line 1: The number of cows, N.</p> <p>* Lines 2..1+N: Line i+1 contains two space-separated integers: U(i) and D(i). (1 &lt;= U(i), D(i) &lt;= 50,000).</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_40","title":"\u8f93\u51fa","text":"<p>* Line 1: A single integer representing the least amount of time for all the cows to cross the mountain.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_41","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3\n6 4\n8 1\n2 3\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_42","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>17\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_43","title":"\u9898\u89e3","text":"<p>\u4e8c\u7ea7\u8f66\u95f4\u8c03\u5ea6\u95ee\u9898\uff0c\u8d2a\u5fc3\uff0c\u8ba9\u4e0b\u5c71\u6bd4\u4e0a\u5c71\u5feb\u7684\u5148\u4e0a\uff0c\u7136\u540e\u5728\u8d2a\u5fc3\u7684\u7f29\u77ed\u4e0a\u5c71\u65f6\u95f4\u548c\u6269\u5927\u4e0b\u5c71\u65f6\u95f4\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_44","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nll u,d,sum,sum1;\n};\nbool cmp(node a,node b)\n{\nif(a.d&gt;a.u&amp;&amp;b.d&lt;=b.u)  ///\u4e0b\u7684\u6162\u7684\u4f18\u5148\nreturn 1;\nelse if(a.d&lt;=a.u&amp;&amp;b.d&gt;b.u)\nreturn 0;\nelse if(a.d&gt;a.u)\nreturn a.u&lt;b.u;  ///\u4e0a\u7684\u5feb\u7684\u4f18\u5148\nelse\nreturn a.d&gt;b.d;  ///\u4e0b\u7684\u6162\u7684\u4f18\u5148\n}\nnode a[25500]={0};\nint main()\n{\nll n;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\nscanf(\"%lld%lld\",&amp;a[i].u,&amp;a[i].d);\nsort(a+1,a+n+1,cmp);\nll ans=0;\nfor(ll i=1;i&lt;=n;i++)\na[i].sum=a[i-1].sum+a[i].u;\nfor(ll i=1;i&lt;=n;i++)\n{\na[i].sum1=max(a[i].sum,a[i-1].sum1)+a[i].d;\nans=max(ans,a[i].sum1);\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#6","title":"\u9898\u76ee6","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_45","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Tower</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_46","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>There are N blocks, numbered 1,2,\u2026,N. For each i (1\u2264i\u2264N), Block i has a weight of wi, a solidness of si and a value of vi.</p> <p>Taro has decided to build a tower by choosing some of the N blocks and stacking them vertically in some order. Here, the tower must satisfy the following condition:</p> <p>For each Block i contained in the tower, the sum of the weights of the blocks stacked above it is not greater than si. Find the maximum possible sum of the values of the blocks contained in the tower.</p> <p>Constraints All values in input are integers.</p> <p>1\u2264N\u226410^3</p> <p>1\u2264wi,si\u226410^4</p> <p>1\u2264vi\u226410^9</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_47","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format: N w1 s1 v1 w2 s2 v2 : wN sN vN</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_48","title":"\u8f93\u51fa","text":"<p>Print the maximum possible sum of the values of the blocks contained in the tower.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_49","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n3\n2 2 20\n2 1 30\n3 1 40\n\u3010\u6837\u4f8b2\u3011\n4\n1 2 10\n3 1 10\n2 4 10\n1 6 10\n\u3010\u6837\u4f8b3\u3011\n5\n1 10000 1000000000\n1 10000 1000000000\n1 10000 1000000000\n1 10000 1000000000\n1 10000 1000000000\n\u3010\u6837\u4f8b4\u3011\n8\n9 5 7\n6 2 7\n5 7 3\n7 8 8\n1 9 6\n3 3 3\n4 1 7\n4 5 5\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_50","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n50\n\u3010\u6837\u4f8b2\u3011\n40\n\u3010\u6837\u4f8b3\u3011\n5000000000\n\u3010\u6837\u4f8b4\u3011\n22\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_51","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca\uff1aIf Blocks 2,1 are stacked in this order from top to bottom, this tower will satisfy the condition, with the total value of 30+20=50.</p> <p>\u6837\u4f8b2\u89e3\u91ca\uff1aBlocks 1,2,3,4 should be stacked in this order from top to bottom.</p> <p>\u6837\u4f8b3\u89e3\u91ca\uff1aThe answer may not fit into a 32-bit integer type.</p> <p>\u6837\u4f8b4\u89e3\u91ca\uff1aWe should, for example, stack Blocks 5,6,8,4 in this order from top to bottom.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_52","title":"\u9898\u89e3","text":"<p>\u9996\u5148\u8d2a\u5fc3\u6392\u5e8f\uff0c\u5bf9\u4e8ea\u548cb\u4e24\u4e2a\u7269\u54c1\uff0c\u5982\u679ca\u653e\u5728b\u4e0a\u9762\u5219\u6743\u503c\u4e3as[b]-w[a]\uff0c\u5982\u679cb\u653e\u5728a\u4e0a\u9762\uff0c\u5219\u6743\u503c\u4e3as[a]-w[b]\uff0c\u5219a\u548cb\u7684\u987a\u5e8f\u7531s[b]-w[a]\u548cs[a]-w[b]\u6240\u51b3\u5b9a\uff0c\u79fb\u9879\u53ef\u5f97\u5373\u4e3a\u6bd4\u8f83s[a]+w[a]\u548cs[b]+w[b]\uff0c\u6240\u4ee5\u6839\u636es[a]+w[a]\u7684\u5927\u5c0f\u8d2a\u5fc3\u6392\u5e8f\uff0c\u540e\u6839\u636e\u91cd\u91cf\u9650\u5236\u52a8\u6001\u89c4\u5212\uff0c\u5373\u5047\u8bbedp[i]\u4e3a\u91cd\u91cf\u4e3ai\u65f6\u7684\u6700\u5927\u6743\u503c\uff0c\u5219\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a</p> <p>dp[j+w[i]]=max(dp[j+w[i]],dp[j]+v[i])(0&lt;=j&lt;=s[i])</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/#_53","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\nll w, s, v;\n};\nnode a[1005] = {0};\nll dp[30050] = {0};\nint main()\n{\nll n;\nscanf(\"%d\", &amp;n);\nfor (ll i = 1; i &lt;= n; i++)\nscanf(\"%d%d%d\", &amp;a[i].w, &amp;a[i].s, &amp;a[i].v);\nsort(a + 1, a + n + 1, [](node a, node b)\n{ return a.s + a.w &lt; b.s + b.w; });\nll ans = 0;\nfor (ll i = 1; i &lt;= n; i++)\n{\nfor (ll j = a[i].s; j &gt;= 0; j--)\ndp[j + a[i].w] = max(dp[j + a[i].w], dp[j] + a[i].v);\n}\nfor (ll j = 0; j &lt; 30050; j++)\nans = max(ans, dp[j]);\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e94\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u4e94\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>\u95ee\u9898 C: Safe Distance</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>The past year has been difficult, with a virus spreading among the population. Fortunately, Alice knows that one of the keys to be healthy is to keep a safe distance from other people.</p> <p>Alice is currently in a closed room, represented in the 2D plane, with width X and height Y. There are N other people inside the room, and we\u2019re given their (xi, yi) coordinates.</p> <p>We consider Alice and the N people as points in the 2D plane. Alice\u2019s initial position is (0, 0) and she wants to move to the exit at position (X, Y). She can move freely in any direction inside the room,but can not step outside the room bounds.</p> <p>Find the maximum distance Alice can keep from other people while moving from (0, 0) to (X, Y).</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>The input begins with one line containing two space-separated integers, X and Y, where X is the width, and Y is the height of the room. The second line consists of a single integer N, the number of people in the room. Then N lines follow, each of them consisting of two floating-point numbers xi and yi, the coordinates of the ith person in the room.</p> <p>\u2022 1\u2264X, Y\u22641 000 000</p> <p>\u2022 1\u2264N\u22641 000</p> <p>\u2022 0\u2264xi\u2264X</p> <p>\u2022 0\u2264yi\u2264Y</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>The output consists of a single value d, the maximum safe distance, as a floating-point number. An additive or multiplicative error of 10\u22125 is tolerated: if d is the answer, any number either within [d \u2212 10^{\u22125}; d + 10^{\u22125}] or within [(1 \u221210^{\u22125})d; (1 +10^{\u22125})d] is accepted.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>8 6\n3\n3 1\n3 5.5\n6.5 1.5\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>2.250000\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/#_8","title":"\u63d0\u793a","text":"<p>Alice can keep a distance of 2.25 from every other person, and this is the best she can do. The picture below shows a possible path (in green).</p> <p></p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/#_9","title":"\u9898\u89e3","text":"<p>\u5e76\u67e5\u96c6\u9898\u76ee\uff0c\u5c06\u5de6\u548c\u4e0a\u9762\u7684\u4e24\u6761\u8fb9\u770b\u4f5c\u8d77\u70b9\uff0c\u5c06\u53f3\u548c\u4e0b\u9762\u7684\u4e24\u6761\u8fb9\u770b\u4f5c\u7ec8\u70b9\uff0c\u5982\u679c\u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u4e92\u8fde\u901a\uff0c\u5219S\u548cF\u70b9\u5c06\u65e0\u6cd5\u8fde\u901a\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/#_10","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct node\n{\nint from, to;\ndouble val;\n};\nvector&lt;node&gt; v;\nint fa[100500] = {0};\ndouble xx[100500] = {0}, yy[100500] = {0};\nint findfa(int x)\n{\nif (x == fa[x])\nreturn x;\nreturn fa[x] = findfa(fa[x]);\n}\nbool cmp(node a, node b)\n{\nreturn a.val &lt; b.val;\n}\nint main()\n{\ndouble x, y;\nscanf(\"%lf%lf\", &amp;x, &amp;y);\nint n;\nscanf(\"%d\", &amp;n);\nint s = n + 1, e = n + 2;\nfa[s] = s, fa[e] = e;\nfor (int i = 1; i &lt;= n; i++)\n{\nfa[i] = i;\nscanf(\"%lf%lf\", &amp;xx[i], &amp;yy[i]);\nv.push_back({s, i, min(xx[i], y - yy[i])});\nv.push_back({e, i, min(x - xx[i], yy[i])});\nfor (int j = 1; j &lt; i; j++)\nv.push_back({i, j, sqrt((xx[i] - xx[j]) * (xx[i] - xx[j]) + (yy[i] - yy[j]) * (yy[i] - yy[j])) / 2.0});\n}\nsort(v.begin(), v.end(), cmp);\nfor (int i = 0; i &lt; v.size(); i++)\n{\nint fx = findfa(v[i].from);\nint fy = findfa(v[i].to);\nif (fx == fy)\ncontinue;\nfa[fx] = fy;\nif (findfa(s) == findfa(e))\n{\nprintf(\"%.8f\\n\", v[i].val);\nreturn 0;\n}\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u56db\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\u56db\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>\u95ee\u9898 F: Fair Distribution</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>There are n robots and m energy bars in the Dream Kingdom. DreamGrid, the king, is trying to make a fair distribution of the energy bars. A fair distribution exists if and only if the number of the energy bars is a multiple of the number of robots.</p> <p>The only tool DreamGrid has is a powerful laser gun. Every time he turns on the laser gun, he can do exactly one of the two things:</p> <p>Create a new energy bar.</p> <p>Destroy a robot.</p> <p>To avoid the extinction of robots, it's forbidden to destroy all the n robots. It takes one dollar to turn on the laser gun once. You are asked to find the minimum cost of making a fair distribution.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>There are multiple test cases. The first line of the input contains an integer T (1\u2264T\u22641000), indicating the number of test cases. For each test case:</p> <p>The only line contains two integers n and m (1\u2264n,m\u2264108), indicating the initial number of robots and energy bars.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>For each test case output one line containing an integer, indicating the minimum cost to get a fair distribution.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>3\n3 12\n10 6\n8 20\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>0\n4\n2\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/#_8","title":"\u63d0\u793a","text":"<p>For the third sample, the best way is to destroy a robot and create an energy bar. After that, we have 7 robots and 21 energy bars, which leads to a fair distribution.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/#_9","title":"\u9898\u89e3","text":"<p>\u679a\u4e3e\u673a\u5668\u4eba\u5c11\u4e86x\u4e2a\uff0c\u5219\u53ef\u5f97\u5f53\u524d\u7684\u7b54\u6848\uff1a</p> <p>n-(n-x)+(\\frac{m+n-x-1}{n-x})*(n-x)-m=n-m+\\frac{m-1}{n-x}*(n-x)</p> <p>\u5176\u4e2d \\frac{m-1}{n-x}*(n-x)\u53ef\u4ee5\u7531\u6574\u6570\u5206\u5757\u5f97\u5230\uff0c\u7c7b\u4f3c\u4e8e\\sum{\\frac{n}{i}}\uff0c\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002</p> <p>\u53c2\u8003\u535a\u5ba2\uff1ahttps://blog.csdn.net/qq_50377393/article/details/119151746</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/#_10","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint main()\n{\nint t;\nscanf(\"%d\", &amp;t);\nwhile (t--)\n{\nint n, m;\nscanf(\"%d%d\", &amp;n, &amp;m);\nif (n &gt;= m)\n{\nprintf(\"%d\\n\", n - m);\ncontinue;\n}\nint ans = 0x3f3f3f3f;\nfor (int l = 1, r; l &lt;= n; l = r + 1)\n{\nr = min(n, (m - 1) / ((m - 1) / l));\nans = min(ans, n - m + (m - 1) / l * l);\n}\nprintf(\"%d\\n\", ans);\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u5341\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Multiple Sequences</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Given are integers N and M. How many sequences A of N integers satisfy the following conditions?</p> <p>1\u2264Ai\u2264M(i=1,2,\u2026,N)</p> <p>Ai+1 is a multiple of Ai. (i=1,2,\u2026,N\u22121)</p> <p>Since the answer can be enormous, report it modulo 998244353.</p> <p>Constraints</p> <p>All values in input are integers.</p> <p>1\u2264N\u22642\u00d710^5</p> <p>1\u2264M\u22642\u00d710^5</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format:</p> <p>N M</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>Print the answer.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n3 4\n\u3010\u6837\u4f8b2\u3011\n20 30\n\u3010\u6837\u4f8b3\u3011\n200000 200000\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n13\n\u3010\u6837\u4f8b2\u3011\n71166\n\u3010\u6837\u4f8b3\u3011\n835917264\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_8","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca</p> <p>Some of the sequences A satisfying the conditions follow:</p> <p>A=(1,1,4)</p> <p>A=(3,3,3)</p> <p>A=(1,2,4)</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_9","title":"\u9898\u89e3","text":"<p>\u6392\u5217\u7ec4\u5408+\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u679a\u4e3eAn\u7684\u53d6\u503c\u8303\u56f4\uff0c\u53731-m\uff0c\u540e\u5bf9An\u8fdb\u884c\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u56e0\u5b50p\uff0c\u8bbe\u5176\u4e3ae\u6b21\u5e42\uff0c\u5219\u5bf9\u4e8ep\u56e0\u5b50\uff0c\u53ef\u4ee5\u653e\u5728n\u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u6a21\u578b\u8f6c\u4e3a\u5c06e\u4e2a\u5c0f\u7403\u653e\u5230n\u4e2a\u76d2\u5b50\u4e2d\u4e14\u76d2\u5b50\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u5219\u7b54\u6848\u4e3a$ \\tbinom{n+e-1}{e}$\u200b</p> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://blog.csdn.net/weixin_43184669/article/details/116059248</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_10","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nconst ll mod=998244353;\nll ksm(ll a,ll b)\n{\nll ans1=1,ans2=a;\nwhile(b!=0)\n{\nif(b%2)\nans1=(ans2*ans1)%mod;\nans2=(ans2*ans2)%mod;\nb/=2;\n}\nreturn ans1;\n}\nll inv[300500]= {0};\nll jc[300500]= {0};\nll C(ll a,ll b)\n{\nif(a==b)\nreturn 1;\nif(b&gt;a||a==0)\nreturn 0;\nll res=jc[a]*inv[b]%mod*inv[a-b]%mod;\nreturn res;\n}\nint main()\n{\njc[0]=1;\nfor(ll i=1; i&lt;=300100; i++)\njc[i]=(jc[i-1]*i)%mod;\ninv[300100]=ksm(jc[300100],mod-2);\nfor(ll i=300100-1; i&gt;=1; i--)\ninv[i]=inv[i+1]*(i+1)%mod;\nll n,m,ans=0;\ncin&gt;&gt;n&gt;&gt;m;\nfor(ll i=1; i&lt;=m; i++)\n{\nvector&lt;ll&gt;v;\nll tmp=i;\nfor(ll j=2; j*j&lt;=tmp ; j++)\n{\nif(tmp%j!=0)\ncontinue;\nll cnt=0;\nwhile(tmp%j==0)\n{\ntmp/=j;\ncnt++;\n}\nv.push_back(cnt);\n}\nif(tmp!=1)\nv.push_back(1);\ntmp=1;\nfor(int i=0; i&lt;v.size(); i++)\ntmp=(tmp*C(n+v[i]-1,v[i]))%mod;\nans=(ans+tmp)%mod;\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#2","title":"\u9898\u76ee2","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_11","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Grass Planting</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_12","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Farmer John has N barren pastures (2 &lt;= N &lt;= 100,000) connected by N-1 bidirectional roads, such that there is exactly one path between any two pastures. Bessie, a cow who loves her grazing time, often complains about how there is no grass on the roads between pastures. Farmer John loves Bessie very much, and today he is finally going to plant grass on the roads. He will do so using a procedure consisting of M steps (1 &lt;= M &lt;=100,000).</p> <p>At each step one of two things will happen:</p> <p>- FJ will choose two pastures, and plant a patch of grass along each road in between the two pastures, or, - Bessie will ask about how many patches of grass on a particular road, and Farmer John must answer her question.</p> <p>Farmer John is a very poor counter -- help him answer Bessie's questions!</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_13","title":"\u8f93\u5165","text":"<ul> <li> <p>Line 1: Two space-separated integers N and M</p> </li> <li> <p>Lines 2..N: Two space-separated integers describing the endpoints of    a road.</p> </li> <li>Lines N+1..N+M: Line i+1 describes step i. The first character of the line is either P or Q, which describes whether or not FJ is planting grass or simply querying. This is followed by two space-separated integers A_i and B_i (1 &lt;= A_i, B_i &lt;= N) which describe FJ's action or query.</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_14","title":"\u8f93\u51fa","text":"<ul> <li>Lines 1..???: Each line has the answer to a query, appearing in the same order as the queries appear in the input.</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_15","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4 6\n1 4\n2 4\n3 4\nP 2 3\nP 1 3\nQ 3 4\nP 1 4\nQ 2 4\nQ 1 4\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_16","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>2\n1\n2\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_17","title":"\u9898\u89e3","text":"<p>\u6811\u94fe\u5256\u5206\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_18","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll sum[400500] = {0}, lazy[400500] = {0};\nll dep[200500] = {0}, size1[200500] = {0}, son[200500] = {0}, f[200500] = {0}, id[200500] = {0}, top[200500] = {0};\nstruct node\n{\nll to, next;\n};\nnode edge[400500] = {0};\nll head[400500] = {0};\nll num = 0, cnt = 0;\nvoid add_edge(ll from, ll to)\n{\nedge[++num] = {to, head[from]};\nhead[from] = num;\n}\nvoid dfs1(ll now, ll fa)\n{\nsize1[now] = 1;\nfor (ll i = head[now]; i; i = edge[i].next)\n{\nll to = edge[i].to;\nif (to == fa)\ncontinue;\nf[to] = now;\ndep[to] = dep[now] + 1;\ndfs1(to, now);\nsize1[now] += size1[to];\nif (size1[to] &gt; size1[son[now]])\nson[now] = to;\n}\n}\nvoid dfs2(ll now, ll fa)\n{\nid[now] = ++cnt;\ntop[now] = fa;\nif (son[now])\ndfs2(son[now], fa);\nfor (ll i = head[now]; i; i = edge[i].next)\n{\nll to = edge[i].to;\nif (to == f[now] || to == son[now])\ncontinue;\ndfs2(to, to);\n}\n}\nvoid push_down(ll t, ll l, ll r)\n{\nif (lazy[t] == 0)\nreturn;\nlazy[2 * t + 1] += lazy[t];\nlazy[2 * t] += lazy[t];\nll mid = (l + r) / 2;\nsum[2 * t] += (mid - l + 1) * lazy[t];\nsum[2 * t + 1] += (r - mid) * lazy[t];\nlazy[t] = 0;\n}\nvoid push_up(ll t)\n{\nsum[t] = sum[2 * t] + sum[2 * t + 1];\n}\nvoid update(ll t, ll l, ll r, ll L, ll R, ll add)\n{\nif (l &lt;= L &amp;&amp; R &lt;= r)\n{\nlazy[t] += add;\nsum[t] += add * (R - L + 1);\nreturn;\n}\npush_down(t, L, R);\nll mid = (L + R) / 2;\nif (l &lt;= mid)\nupdate(2 * t, l, r, L, mid, add);\nif (mid &lt; r)\nupdate(2 * t + 1, l, r, mid + 1, R, add);\npush_up(t);\n}\nll query(ll t, ll l, ll r, ll L, ll R)\n{\nif (l &lt;= L &amp;&amp; R &lt;= r)\nreturn sum[t];\npush_down(t, L, R);\nll mid = (L + R) / 2;\nll ans = 0;\nif (l &lt;= mid)\nans += query(2 * t, l, r, L, mid);\nif (mid &lt; r)\nans += query(2 * t + 1, l, r, mid + 1, R);\nreturn ans;\n}\nvoid update_chain(ll x, ll y)\n{\nll fx = top[x], fy = top[y];\nwhile (fx != fy) ///\u4e0d\u5728\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\n{\nif (dep[fx] &lt; dep[fy])\nswap(x, y), swap(fx, fy);\nupdate(1, id[fx], id[x], 1, cnt, 1);\nx = f[fx], fx = top[x]; ///\u8df3\u8f6c\u5230\u53e6\u4e00\u6761\u91cd\u94fe\n}\nif (id[x] &gt; id[y])\nswap(x, y);\nupdate(1, id[x] + 1, id[y], 1, cnt, 1);\n}\nll query_chain(ll x, ll y)\n{\nll fx = top[x], fy = top[y], ans = 0;\nwhile (fx != fy) ///\u4e0d\u5728\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\n{\nif (dep[fx] &lt; dep[fy])\nswap(x, y), swap(fx, fy);\nans += query(1, id[fx], id[x], 1, cnt);\nx = f[fx], fx = top[x]; ///\u8df3\u8f6c\u5230\u53e6\u4e00\u6761\u91cd\u94fe\n}\nif (id[x] &gt; id[y])\nswap(x, y);\nans += query(1, id[x] + 1, id[y], 1, cnt);\nreturn ans;\n}\nint main()\n{\nll n, m, from, to;\nscanf(\"%lld%lld\", &amp;n, &amp;m);\nfor (ll i = 1; i &lt;= n - 1; i++)\n{\nscanf(\"%lld%lld\", &amp;from, &amp;to);\nadd_edge(from, to);\nadd_edge(to, from);\n}\nf[1] = 0, dep[1] = 1;\ndfs1(1, 0), dfs2(1, 1);\nchar c[10];\nfor (ll i = 1; i &lt;= m; i++)\n{\nscanf(\"%s%lld%lld\", c + 1, &amp;from, &amp;to);\nif (c[1] == 'P')\nupdate_chain(from, to);\nelse\nprintf(\"%lld\\n\", query_chain(from, to));\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#3","title":"\u9898\u76ee3","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_19","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Eyjafjalla</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_20","title":"\u9898\u76ee","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_21","title":"\u9898\u89e3","text":"<p>\u6811\u94fe\u5256\u5206\uff0c\u5c06\u6811\u4e0a\u7684\u70b9\u6620\u5c04\u4e3a\u7ebf\u6bb5\u6811\u4e2d\u7684\u70b9\uff0c\u7136\u540e\u8be2\u95ee\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5373\u53ef\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_22","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nvector&lt;ll&gt; v[100500];\nll size1[100500] = {0}, id[100500] = {0}, fa[100500][30] = {0}, dep[100500] = {0}, tem[100500] = {0}, w[100500] = {0};\nll cnt = 0;\nll max1[400500] = {0}, min1[400500] = {0};\nvoid dfs(ll now, ll fa1)\n{\nid[now] = ++cnt;\ndep[now] = dep[fa1] + 1;\nsize1[now] = 1;\nw[cnt] = tem[now];\nfa[now][0] = fa1;\nfor (ll i = 1; (1 &lt;&lt; i) &lt;= dep[now]; i++)\nfa[now][i] = fa[fa[now][i - 1]][i - 1];\nfor (ll i = 0; i &lt; v[now].size(); i++)\n{\nll to = v[now][i];\nif (to == fa1)\ncontinue;\ndfs(to, now);\nsize1[now] += size1[to];\n}\n}\nbool check(ll x, ll l, ll r)\n{\nif (x &lt;= r &amp;&amp; x &gt;= l)\nreturn 1;\nreturn 0;\n}\nvoid push_up(ll t)\n{\nmin1[t] = min(min1[2 * t], min1[2 * t + 1]);\nmax1[t] = max(max1[2 * t], max1[2 * t + 1]);\n}\nvoid build(ll t, ll l, ll r)\n{\nif (l == r)\n{\nmax1[t] = min1[t] = w[l];\nreturn;\n}\nll mid = (l + r) / 2;\nbuild(2 * t, l, mid);\nbuild(2 * t + 1, mid + 1, r);\npush_up(t);\n}\nll query_sum(ll t, ll l, ll r, ll L, ll R, ll lt, ll rt) ///l,r\u4e3a\u66f4\u65b0\u533a\u95f4\uff0cL,R\u4e3a\u7ebf\u6bb5\u6811\u533a\u95f4\n{\nif (min1[t] &gt; rt || max1[t] &lt; lt)\nreturn 0;\nelse if (l &lt;= L &amp;&amp; R &lt;= r)\n{\nif (check(max1[t], lt, rt) &amp;&amp; check(min1[t], lt, rt))\nreturn R - L + 1;\n}\nll mid = (L + R) / 2, sum = 0;\nif (l &lt;= mid)\nsum += query_sum(2 * t, l, r, L, mid, lt, rt);\nif (mid &lt; r)\nsum += query_sum(2 * t + 1, l, r, mid + 1, R, lt, rt);\nreturn sum;\n}\nint main()\n{\nll n, from, to;\nscanf(\"%lld\", &amp;n);\nfor (ll i = 1; i &lt; n; i++)\n{\nscanf(\"%lld%lld\", &amp;from, &amp;to);\nv[from].push_back(to);\nv[to].push_back(from);\n}\nfor (ll i = 1; i &lt;= n; i++)\nscanf(\"%lld\", &amp;tem[i]);\ndfs(1, 0);\nbuild(1, 1, n);\nll x, l, r, q;\nscanf(\"%lld\", &amp;q);\nfor (ll i = 1; i &lt;= q; i++)\n{\nscanf(\"%lld%lld%lld\", &amp;x, &amp;l, &amp;r);\nif (!check(tem[x], l, r))\n{\nputs(\"0\");\ncontinue;\n}\nfor (int i = 21; i &gt;= 0; i--)\n{\nint fa1 = fa[x][i];\nif (fa1 != 0)\n{\nif (check(tem[fa1], l, r))\nx = fa1;\n}\n}\nprintf(\"%lld\\n\", query_sum(1, id[x], id[x] + size1[x] - 1, 1, n, l, r));\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#4","title":"\u9898\u76ee4","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_23","title":"\u9898\u76ee\u94fe\u63a5","text":"<p> Simplifying the Farm</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_24","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Farmer John has been taking an evening algorithms course at his local university, and he has just learned about minimum spanning trees. However, Farmer John now realizes that the design of his farm is not as efficient as it could be, and he wants to simplify the layout of his farm.</p> <p>The farm is currently arranged like a graph, with vertices representing fields and edges representing pathways between these fields, each having an associated length. Farmer John notes that for each distinct length, at most three pathways on his farm share this length. FJ would like to remove some of the pathways on his farm so that it becomes a tree -- that is, so that there is one unique route between any pair of fields. Moreover, Farmer John would like this to be a minimum spanning tree -- a tree having the smallest possible sum of edge lengths.</p> <p>Help Farmer John compute not only the sum of edge lengths in a minimum spanning tree derived from his farm graph, but also the number of different possible minimum spanning trees he can create.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_25","title":"\u8f93\u5165","text":"<ul> <li>Line 1: Two integers N and M (1 &lt;= N &lt;= 40,000; 1 &lt;= M &lt;= 100,000), representing the number of vertices and edges in the farm graph, respectively. Vertices are numbered as 1..N.</li> <li>Lines 2..M+1: Three integers a_i, b_i and n_i (1 &lt;= a_i, b_i &lt;= N; 1&lt;= n_i &lt;= 1,000,000) representing an edge from vertex a_i to b_i with length n_i. No edge length n_i will occur more than three times.</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_26","title":"\u8f93\u51fa","text":"<ul> <li>Line 1: Two integers representing the length of the minimal spanning tree and the number of minimal spanning trees (mod 1,000,000,007).</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_27","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4 5\n1 2 1\n3 4 1\n1 3 2\n1 4 2\n2 3 2\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_28","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>4 3\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_29","title":"\u63d0\u793a","text":"<p>Picking both edges with length 1 and any edge with length 2 yields a minimum spanning tree of length 4.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_30","title":"\u9898\u89e3","text":"<p>\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_31","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 1e9 + 7;\nstruct node\n{\nint from, to, val;\n};\nnode a[100500] = {0};\nbool cmp(node a, node b)\n{\nreturn a.val &lt; b.val;\n}\nint fa[100500] = {0};\nint findfa(int n)\n{\nif (n == fa[n])\nreturn n;\nreturn fa[n] = findfa(fa[n]);\n}\nint main()\n{\nint n, m;\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= m; i++)\nscanf(\"%d%d%d\", &amp;a[i].from, &amp;a[i].to, &amp;a[i].val);\nfor (int i = 1; i &lt;= n; i++)\nfa[i] = i;\nsort(a + 1, a + m + 1, cmp);\nll ans = 0, sum = 1;\nfor (int i = 1; i &lt;= m;)\n{\nint cnt = 0, num = 0;\nset&lt;pair&lt;int, int&gt;&gt; s;\nint j;\nfor (j = i; a[j].val == a[i].val &amp;&amp; j &lt;= m; j++)\n{\nint fx = findfa(a[j].from);\nint fy = findfa(a[j].to);\nif (fx &gt; fy)\nswap(fx, fy);\nif (fx != fy)\n{\ncnt++;\ns.insert({fx, fy});\n}\n}\nfor (; i &lt; j; i++)\n{\nint fx = findfa(a[i].from);\nint fy = findfa(a[i].to);\nif (fx != fy)\n{\nnum++;\nfa[fx] = fy;\nans += a[i].val;\n}\n}\nif (num == 1)\n{\nsum = sum * cnt % mod;\n}\nelse if (num == 2)\n{\nif (cnt == 3 &amp;&amp; s.size() == 2)\nsum = sum * 2 % mod;\nelse if (cnt == 3 &amp;&amp; s.size() == 3)\nsum = sum * 3 % mod;\n}\n}\ncout &lt;&lt; ans &lt;&lt; ' ' &lt;&lt; sum &lt;&lt; endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#5","title":"\u9898\u76ee5","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_32","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>GCD Game</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_33","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Alice and Bob are playing a game.</p> <p>They take turns to operate. There are n numbers, a1 , a2 , ... , an. Every time, the player plays in 3 steps. 1.Arbitrarily chooses one number ai. 2.Arbitrarily chooses another number x(1\u2264x&lt;ai). 3.Replace the number ai with gcd(ai,x). Here, gcd(u,v) refers to the Greatest Common Divisor of u and v.</p> <p>When a player can not make a single move he/she loses the game. Alice moves the first and she asks you to tell her who will win the game if both player play optimally.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_34","title":"\u8f93\u5165","text":"<ul> <li>The first line contains a number T(1\u2264T\u2264100), the number of testcases.</li> <li>For each testcase, there are two lines.</li> <li>The first line contains one number n(1\u2264n\u226410^6).</li> <li>The second line contains n numbers a1 , a2 , ... , an(1\u2264ai\u226410^7).</li> <li>It is guaranteed that for all testcases, \u2211n\u226410^6\u200b.</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_35","title":"\u8f93\u51fa","text":"<ul> <li>Line 1: Two integers representing the length of the minimal spanning tree and the number of minimal spanning trees (mod 1,000,000,007).</li> </ul>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_36","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2\n1\n1\n1\n2\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_37","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>Bob\nAlice\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_38","title":"\u9898\u89e3","text":"<p>\u5c3c\u5c14\u535a\u5f08\u53d8\u5f62\uff0c\u6c42\u89e3\u8d28\u56e0\u6570\u7684\u4e2a\u6570\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%8D%81%EF%BC%89/#_39","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\n#define inf 0x3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nconst ll maxn=1e7+5;\nll low_prime[10050000]={0};\nll prime[700500]={0};\nll cnt=0;\nint main()\n{\nfor(ll i=2;i&lt;=maxn;i++)\n{\nif(low_prime[i]==0)\n{\nlow_prime[i]=i;\nprime[++cnt]=i;\n}\nfor(ll j=1;j&lt;=cnt&amp;&amp;prime[j]*i&lt;=maxn;j++)\n{\nlow_prime[prime[j]*i]=prime[j];\nif(i%prime[j]==0)\nbreak;\n}\n}\nll t;\nscanf(\"%lld\",&amp;t);\nwhile(t--)\n{\nll n,flag=0;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\n{\nll m,sum=0;\nscanf(\"%lld\",&amp;m);\nwhile(m&gt;1)\n{\nm/=low_prime[m];\nsum++;\n}\nflag^=sum;\n}\nif(!flag)\nputs(\"Bob\");\nelse\nputs(\"Alice\");\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u56db\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u7cfb\u5217\u9898\u89e3\uff08\u56db\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Reversible Cards</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>We have N cards numbered 1 to N. Each side of each card has a color represented by a positive integer.</p> <p>One side of Card i has a color ai, and the other side has a color bi.</p> <p>For each card, you can choose which side shows up. Find the maximum possible number of different colors showing up.</p> <p>Constraints 1\u2264N\u2264200000 1\u2264ai,bi\u2264400000 All numbers in input are integers.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format: N a1 b1 a2 b2 : aN bN</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>Print the answer.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n4\n1 2\n1 3\n4 2\n2 3\n\u3010\u6837\u4f8b2\u3011\n2\n111 111\n111 111\n\u3010\u6837\u4f8b3\u3011\n12\n5 2\n5 6\n1 2\n9 7\n2 7\n5 5\n4 2\n6 7\n2 2\n7 8\n9 7\n1 8\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n4\n\u3010\u6837\u4f8b2\u3011\n1\n\u3010\u6837\u4f8b3\u3011\n8\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_8","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca We can choose the sides with 1, 3, 4, 2 to have four colors. \u6837\u4f8b2\u89e3\u91ca They are painted with just one color.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_9","title":"\u9898\u89e3","text":"<p>\u5e76\u67e5\u96c6\uff0c\u5efa\u7acb\u8fde\u901a\u5757\u3002\u5206\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u8fde\u901a\u5757\u65e0\u73af\uff0c\u4e3a\u4e00\u68f5\u6811\uff0c\u5219\u8be5\u8fde\u901a\u5757\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5ea6\u4e3a\u70b9\u7684\u4e2a\u6570\u51cf1\uff0c\u4f8b\u59821-2\uff0c2-3\uff0c3-4\uff0c\u8fd9\u79cd\u60c5\u51b5\u7b54\u6848\u4e3a3</li> <li>\u8fde\u901a\u5757\u6709\u73af\uff0c\u5219\u8be5\u8fde\u901a\u5757\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5ea6\u4e3a\u70b9\u7684\u6570\u76ee\uff0c\u4f8b\u59821-2\uff0c2-3\uff0c3-1\uff0c\u8be5\u60c5\u51b5\u7b54\u6848\u4e3a4</li> </ol>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_10","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll fa[400500]={0};\nll huan[400500]={0};\nll sum[400500]={0};\nll findfa(ll n)\n{\nif(n==fa[n])\nreturn n;\nreturn fa[n]=findfa(fa[n]);\n}\nint main()\n{\nll n,s,e;\nfor(ll i=1;i&lt;=400000;i++)\nfa[i]=i;\nscanf(\"%lld\",&amp;n);\nfor(ll i=1;i&lt;=n;i++)\n{\nll x,y;\nscanf(\"%lld%lld\",&amp;x,&amp;y);\nll fx=findfa(x);\nll fy=findfa(y);\nif(fx==fy)\nhuan[fx]=huan[fy]=1;\nelse\nfa[fy]=fx;\n}\nfor(ll i=1;i&lt;=400000;i++)\n{\nfindfa(i);\nhuan[fa[i]]|=huan[i];\nsum[fa[i]]++;\n}\nll ans=0;\nfor(ll i=1;i&lt;=400000;i++)\n{\nif(sum[i]!=0)\n{\nif(huan[i])\nans+=sum[i];\nelse\nans+=sum[i]-1;\n}\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#2","title":"\u9898\u76ee2","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_11","title":"\u9898\u76ee\u94fe\u63a5","text":"<p> Second Large Rectangle</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_12","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Given a N\u00d7M binary matrix. Please output the size of second large rectangle containing all \"1\". Containing all \"1\" means that the entries of the rectangle are all \"1\". A rectangle can be defined as four integers x1,y1,x2,y2 where 1\u2264x1\u2264x2\u2264N and 1\u2264y1\u2264y2\u2264M. Then, the rectangle is composed of all the cell (x, y) where x1\u2264x\u2264x2 and y1\u2264y\u2264y2. If all of the cell in the rectangle is \"1\", this is a valid rectangle.</p> <p>Please find out the size of the second largest rectangle, two rectangles are different if exists a cell belonged to one of them but not belonged to the other.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_13","title":"\u8f93\u5165","text":"<p>The first line of input contains two space-separated integers N and M. Following N lines each contains M characters cij. 1\u2264N,M\u22641000 N\u00d7M\u22652 cij\u2208\"01\"</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_14","title":"\u8f93\u51fa","text":"<p>Output one line containing an integer representing the answer. If there are less than 2 rectangles containning all \"1\", output \"0\".</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_15","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>1 2\n01\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_16","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>0\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_17","title":"\u9898\u89e3","text":"<p>\u6784\u9020\u5217\u65b9\u5411\u7684\u524d\u7f00\u548c\uff0c\u540e\u7528\u5355\u8c03\u6808\u6c42\u51fa\u533a\u95f4\u6700\u5c0f\u503c\u548c\u533a\u95f4\u957f\u5ea6\u4e58\u79ef\u7684\u7b2c\u4e8c\u5927\u503c\u5373\u53ef\u3002</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_18","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nint sum[2050][2050] = {0};\nint a[2050][2050] = {0};\n\nstruct node\n{\nll pos, val;\n};\nnode s[100500] = {0};\nint main()\n{\nint n, m;\nscanf(\"%d %d\", &amp;n, &amp;m);\n\nfor (int i = 1; i &lt;= n; i++)\nfor (int j = 1; j &lt;= m; j++)\nscanf(\"%1d\", &amp;a[i][j]);\n\nfor (int i = 1; i &lt;= n; i++)\nfor (int j = 1; j &lt;= m; j++)\n{\nif (a[i][j])\nsum[i][j] = sum[i - 1][j] + a[i][j];\nelse\nsum[i][j] = 0;\n}\n\nll ans = 0;\nll max1 = 0, max2 = 0;\nfor (ll i = 1; i &lt;= n; i++)\n{\nll top = 0;\nfor (ll j = 1; j &lt;= m + 1; j++)\n{\nif (top == 0)\n{\ns[++top] = {j, sum[i][j]};\n}\nelse\n{\nwhile (s[top].val &gt; sum[i][j])\n{\nll tmp = (ll)(j - s[top - 1].pos - 1) * (ll)s[top].val;\nll tmp1 = (ll)(j - s[top - 1].pos - 2) * (ll)s[top].val;\nll tmp2 = (ll)(j - s[top - 1].pos - 1) * (ll)(s[top].val - 1);\ntop--;\nif (tmp &gt; max1)\nswap(max1, tmp);\nif (tmp &gt; max2)\nswap(max2, tmp);\n\nif (tmp1 &gt; max1)\nswap(max1, tmp1);\nif (tmp1 &gt; max2)\nswap(max2, tmp1);\n\nif (tmp2 &gt; max1)\nswap(max1, tmp2);\nif (tmp2 &gt; max2)\nswap(max2, tmp2);\n}\ns[++top] = {j, sum[i][j]};\n}\n}\n}\ncout &lt;&lt; max2 &lt;&lt; endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#3","title":"\u9898\u76ee3","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_19","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>Simple Math 2</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_20","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Given positive integers N and M, find the remainder when \u230a10^N/M\u230b\u200b\u200b is divided by M.  What is \u230ax\u230b?\u230ax\u230b denotes the greatest integer not exceeding x. For example: \u230a2.5\u230b=2 \u230a3\u230b=3 \u230a9.9999999\u230b=9 \u230a100/3\u230b=\u230a33.33...\u230b=33 Constraints 1\u2264N\u226410^{18} 1\u2264M\u226410000</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_21","title":"\u8f93\u5165","text":"<p>Input is given from Standard Input in the following format: N a1 b1 a2 b2 : aN bN</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_22","title":"\u8f93\u51fa","text":"<p>Print the answer.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_23","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n1 2\n\u3010\u6837\u4f8b2\u3011\n2 7\n\u3010\u6837\u4f8b3\u3011\n1000000000000000000 9997\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_24","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n1\n\u3010\u6837\u4f8b2\u3011\n0\n\u3010\u6837\u4f8b3\u3011\n9015\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_25","title":"\u63d0\u793a","text":"<p>\u6837\u4f8b1\u89e3\u91ca\uff1a We have \u230a10^\u00bd\u230b=5, so we should print the remainder when 5 is divided by 2, that is, 1.</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_26","title":"\u9898\u89e3","text":"<p>\u230a\\frac{10^N}{M}\u230b \\% m =\u230a\\frac{10^N}{M}-k*m\u230b \\% m =\u230a\\frac{10^N-k*m^2}{M}\u230b\\% m=\u230a\\frac{10^N \\% m^2}{M}\u230b\\% m\u200b\u200b\u200b\u200b\u200b\u200b</p> <p>\u6240\u4ee5\uff0c\u53ea\u9700\u8981\u5229\u7528\u5feb\u901f\u5e42\u7b97\u6cd5\u8ba1\u7b97\u51fa $ 10 ^N \\% m^2$\u200b\u200b \u5373\u53ef</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E7%B3%BB%E5%88%97%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/#_27","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nmap&lt;ll, ll&gt; mp;\nvector&lt;ll&gt; v;\nint main()\n{\nll n, m;\ncin &gt;&gt; n &gt;&gt; m;\nll mod = m * m, ans1 = 1, ans2 = 10;\nwhile (n != 0)\n{\nif (n % 2)\nans1 = (ans1 * ans2) % mod;\nans2 = (ans2 * ans2) % mod;\nn /= 2;\n}\nll ans = (ans1 / m + m) % m;\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/","title":"\u6691\u5047\u96c6\u8bad\u9898\u89e3\u7cfb\u5217\uff08\u4e00\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/#_1","title":"\u6691\u5047\u96c6\u8bad\u9898\u89e3\u7cfb\u5217\uff08\u4e00\uff09","text":""},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/#1","title":"\u9898\u76ee1","text":"<p>Alice and Bob</p> <p></p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/#_2","title":"\u9898\u89e3","text":"<p>\u6253\u8868\u66b4\u529b\u9898\u76ee\uff08\u6bd4\u8d5b\u65f6\u9ad8\u4f30\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\uff0cQAQ\uff09</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/#_3","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nbool a[5050][5050] = {0}; ///\u7528bool\uff0cint\u4f1a\u8d85\u65f6\nint main()\n{\nfor (int i = 0; i &lt;= 5000; i++)\nfor (int j = 0; j &lt;= 5000; j++)\n{\nif (!a[i][j])\n{\nfor (int k = 1; i + k &lt;= 5000; k++)\nfor (int x = 0; x * k + j &lt;= 5000; x++)\na[i + k][x * k + j] = 1;\nfor (int k = 1; j + k &lt;= 5000; k++)\nfor (int x = 0; x * k + i &lt;= 5000; x++)\na[i + x * k][k + j] = 1;\n}\n}\nint t;\nscanf(\"%d\", &amp;t);\nwhile (t--)\n{\nint n, m;\nscanf(\"%d%d\", &amp;n, &amp;m);\nif (a[n][m])\nputs(\"Alice\");\nelse\nputs(\"Bob\");\n}\n}\n</code></pre>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/#2","title":"\u9898\u76ee2","text":"<p> Hash Function</p> <p></p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/#_4","title":"\u9898\u89e3","text":"<p>\u4e24\u4e2afor\u5faa\u73af\u904d\u5386\uff0c\u5bfb\u627e\u6700\u4f18\u7b54\u6848\uff0c\u5982\u679c\u7b54\u6848\u4e0d\u7b26\u5408\uff0c\u5219\u9000\u56de\u8c03\u6574\u7b54\u6848\u3002</p> <p>\u53e6\u8be5\u9898\u76ee\u53ef\u4ee5\u7528NTT\u6765\u5b8c\u6210\uff0c\u53ef\u53c2\u8003\u535a\u5ba2\uff1a</p> <p>https://blog.nowcoder.net/n/9e67ea84ea1f4b8fa1046762f6e41210</p> <p>https://blog.nowcoder.net/n/97fe1e13d21141349751df63315eaa97</p>"},{"location":"problem/%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/#_5","title":"\u4ee3\u7801","text":"<pre><code>#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint a[500500] = {0};\nint num[500500] = {0};\nint main()\n{\nstd::ios::sync_with_stdio(0);\ncin.tie(0);\nint n;\ncin&gt;&gt;n;\nfor (int i = 1; i &lt;= n; i++)\ncin&gt;&gt;a[i], num[a[i]] = 1;\nsort(a + 1, a + n + 1);\nint idx=1,jdx=1,ans=n,ndx=1;\nwhile(idx&lt;=n)\n{\nint jdx=a[idx]%ans;\nint flag=1;\nfor(;jdx&lt;=a[n];jdx+=ans)\n{\nif(num[jdx])\n{\nif(flag==2) ///\u6709\u4e24\u4e2a\u6570\u540c\u4f59\uff0c\u8df3\u51fa\u5faa\u73af\n{\nflag=0;\nbreak;\n}\nflag++;\n}\n}\nif(flag==0)\nidx=ndx,ans++; ///\u56de\u9000\nif(a[idx]&lt;=ans)\nndx=idx;     ///\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u7b54\u6848\uff08\u7531\u4e8e\u5df2\u6392\u5e8f\u4e14\u5f53\u524d\u503c\u5c0f\u4e8e\u53d6\u6a21\u7684\u503c\uff0c\u6240\u4ee5\u524d\u9762\u7684\u80af\u5b9a\u7b26\u5408\u3002\nidx++;\n}\ncout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/","title":"\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u4e00\uff09","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/#_1","title":"\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u4e00\uff09","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>\u95ee\u9898 A: Matrix Equation</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>We call a matrix \u201c01 Square\u201d if and only if it\u2019s a N \u00d7 N matrix and its elements are all 0 or 1.</p> <p>For two 01 Squares X,Y , we de\ufb01ne two operators X \u00d7 Y and XY . The value of them are also 01 Square matrices and calculated below(we use Z to abbreviate X \u00d7 Y and D to abbreviate XY ):</p> <p></p> <p>Now MianKing has two 01 Squares A, B, he wants to solve the matrix equation below: A \u00d7 C = B C</p> <p>You need to help MainKing solve this problem by calculating how many 01 Squares C satisfy this equation.</p> <p>The answer may be very large, so you only need to output the answer module 998244353.</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>The first line has one integer N</p> <p>Then there are N lines and each line has N integers, the j-th integer of the i-th line denotes A_{i,j}</p> <p>Then there are N lines and each line has N integers, the j-th integer of the i-th line denotes B_{i,j}</p> <p>1\u2264N\u2264200, A_{i,j},$ B_{i,j}$\u2208{ 0, 1 }</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>Output the answer module 998244353.</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n2\n0 1\n1 1\n1 0\n0 1\n\u3010\u6837\u4f8b2\u3011\n3\n1 0 0\n0 1 0\n0 0 1\n1 1 1\n1 1 1\n1 1 1\n\u3010\u6837\u4f8b3\u3011\n4\n0 1 0 1\n0 1 1 0\n0 1 1 1\n1 0 0 1\n1 0 1 1\n0 1 1 1\n1 0 0 1\n1 1 1 0\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>\u3010\u6837\u4f8b1\u3011\n2\n\u3010\u6837\u4f8b2\u3011\n512\n\u3010\u6837\u4f8b3\u3011\n8\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/#_8","title":"\u9898\u89e3","text":"<p>\u9ad8\u65af\u6d88\u5143\u6cd5\u6c42\u89e3\u77e9\u9635\u7684\u79e9\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5217\u5355\u72ec\u8003\u8651\u53ef\u4ee5\u5c06\u9898\u76ee\u8f6c\u6362\u4e3a\u4ee5\u4e0b\u65b9\u7a0b\uff1a</p> <p></p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65b9\u7a0b\u7ec4\u7cfb\u6570\u77e9\u9635\uff0c\u5982\u679c\u79e9\u4e3ak\uff0c\u5219C_k,C_{K+1} .... C_n\uff0c\u53ef\u4ee5\u4efb\u610f\u9009\u62e90\u548c1\uff0c\u5219\u5bf9\u5e94\u7b54\u6848\u4e3a2^{n-k}\uff0c\u6700\u540e\u5c06\u6bcf\u4e00\u5217\u7684\u7b54\u6848\u4e58\u8d77\u6765\u5373\u4e3a\u7b54\u6848\u3002</p> <p></p> <p>\u53c2\u8003\u4e8e\uff1a</p> <p>https://blog.csdn.net/hddddh/article/details/111828336</p> <p>https://blog.csdn.net/weixin_45697774/article/details/113198407</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/#_9","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 998244353;\nbitset&lt;330&gt; a[330];\nint A[330][330] = {0};\nint C[330][330] = {0};\nll ksm(ll a, ll b)\n{\nll ans1 = 1, ans2 = a;\nwhile (b != 0)\n{\nif (b &amp; 1)\nans1 = (ans1 * ans2) % mod;\nans2 = (ans2 * ans2) % mod;\nb /= 2;\n}\nreturn ans1;\n}\nll guess(ll n)\n{\nll maxx = 0, row = 0;\nfor (ll col = 0; col &lt; n; col++)\n{\nfor (maxx = row; maxx &lt; n; maxx++)\nif (a[maxx][col] != 0)\nbreak;\nif (maxx == n)\ncontinue;\nif (a[maxx][col] == 0)\ncontinue;\nswap(a[maxx], a[row]);\nfor (ll i = row + 1; i &lt; n; i++)\n{\nif (a[i][col] != 0)\na[i] ^= a[row];\n}\nrow++;\n}\nreturn ksm(2, n - row);\n}\nint main()\n{\nint n;\nscanf(\"%d\", &amp;n);\nfor (int i = 0; i &lt; n; i++)\nfor (int j = 0; j &lt; n; j++)\nscanf(\"%d\", &amp;A[i][j]);\n\nfor (int i = 0; i &lt; n; i++)\n\nfor (int j = 0; j &lt; n; j++)\nscanf(\"%d\", &amp;C[i][j]);\n\nll ans = 1;\nfor (int col = 0; col &lt; n; col++)\n{\nfor (int i = 0; i &lt; n; i++)\nfor (int j = 0; j &lt; n; j++)\na[i][j] = A[i][j];\n\nfor (int i = 0; i &lt; n; i++)\na[i][i] = A[i][i] ^ C[i][col];\n\nans = (ans * guess(n)) % mod;\n}\nprintf(\"%lld\\n\", ans);\nreturn 0;\n}\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%89%EF%BC%89/","title":"\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u4e09\uff09","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%89%EF%BC%89/#_1","title":"\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u4e09\uff09","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%89%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%89%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>\u667a\u4e43\u9171\u7684\u5b50\u96c6\u4e0e\u8d85\u96c6</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%89%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%89%EF%BC%89/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2\n2\n2 1\n3 1\n2\n2 2\n3 2\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%89%EF%BC%89/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>15\n168\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%89%EF%BC%89/#_6","title":"\u9898\u89e3","text":"<p>\u628a N \u4e2a\u7269\u54c1\u7406\u89e3\u4e3a\u5411\u91cf\uff0c\u5148\u60f3\u4e8c\u7ef4\u7684\u60c5\u51b5</p> <p>F[A][B] = v[A][B]</p> <p>F[A][B] += F[0][B] + F[A][0]</p> <p>\u63a8\u5e7f\u5230 N \u7ef4\uff1a</p> <p>F[A][B][C][D][E]... = v[A][B][C][D][E]...</p> <p>F[A][B][C][D][E]... += v[A][0][0][0][0]... + ...</p> <p>\u5199\u6210\u5bb9\u65a5\uff0c\u5728\u7ef4\u5ea6\u4e0a\u662f\u4e0d\u597d\u6269\u5c55\u7684\u3002\u800c\u5199\u6210\u7a7a\u95f4\u5411\u91cf\u7684\u7406\u89e3\uff0c\u662f\u5f88\u597d\u6269\u5c55\u7684</p> <p>\u52a0\u4e0a\u4e8c\u8fdb\u5236\u4f4d\u8fd0\u7b97</p> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://blog.nowcoder.net/n/fba9bdd58cda4937a10bbd293bd3a7ec</p> <p>https://blog.csdn.net/eternity19/article/details/119735293</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%B8%89%EF%BC%89/#_7","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nll a[50] = {0};\nll ans[1050000] = {0};\nll sum1[1050000] = {0};\nll sum2[1050000] = {0};\nint main()\n{\n//     freopen(\"in.txt\", \"r\", stdin);\nll n, m;\nscanf(\"%lld%lld\", &amp;n, &amp;m);\nfor (ll i = 0; i &lt; n; i++)\nscanf(\"%lld\", &amp;a[i]);\nfor (ll i = 0; i &lt; (1 &lt;&lt; n); i++)\n{\nfor (ll j = 0; j &lt; n; j++)\nif ((i &gt;&gt; j) &amp; 1)\nans[i] ^= a[j];\nsum1[i] = ans[i];\nsum2[i] = ans[i];\n}\nfor (ll j = 0; j &lt; n; j++) \\\\\u4f9d\u6b21\u8003\u8651\u653e\u7f6e\u6bcf\u4e00\u4e2a\u7269\u54c1\n{\nfor (ll i = 0; i &lt; (1 &lt;&lt; n); i++)\n{\nif ((i &gt;&gt; j) &amp; 1)\nsum1[i] += sum1[i ^ (1 &lt;&lt; j)];\nelse\nsum2[i] += sum2[i ^ (1 &lt;&lt; j)];\n}\n}\nfor (ll i = 1; i &lt;= m; i++)\n{\nll k, m, p = 0;\nscanf(\"%lld\", &amp;k);\nfor (ll j = 1; j &lt;= k; j++)\n{\nscanf(\"%lld\", &amp;m);\nm--;\np += (1 &lt;&lt; m);\n}\nprintf(\"%lld %lld\\n\", sum1[p], sum2[p]);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/","title":"\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u4e8c\uff09","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_1","title":"\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u4e8c\uff09","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>\u95ee\u9898 A: Matrix Equation</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>You are given an integer n. Please output the answer of   modulo 998244353. n is represented in the form of factorization.</p> <p>\u03c6(n) is Euler\u2019s totient function, and it is defi ned more formally as the number of integers k in the interval 1\u2264k\u2264n for which the greatest common divisor gcd(n,k) is equal to 1.</p> <p>For example, the totatives of n = 9 are the six numbers 1, 2, 4, 5, 7 and 8. They are all co-prime to 9, but the other three numbers in this interval, 3, 6, and 9 are not, because gcd(9,3) = gcd(9,6) = 3 and gcd(9,9) = 9. </p> <p>Therefore, \u03c6(9) = 6. As another example, \u03c6(1) = 1 since for n = 1 the only integer in the interval from 1 to n is 1 itself, and gcd(1,1) = 1.</p> <p>And there are several formulas for computing \u03c6(n), for example, Euler\u2019s product formula states like: </p> <p>where the product is all the distinct prime numbers (p in the formula) dividing n.</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_4","title":"\u8f93\u5165","text":"<p>The fi rst line contains an integer T (1\u2264T\u226420) representing the number of test cases.</p> <p>For each test case, the fi rst line contains an integer m\uffff(1\u2264m\u226420) is the number of prime factors.</p> <p>The following m lines each contains two integers pi and qi (2\u2264pi\u2264108 , 1\u2264qi\u2264108 ) describing that n contains the factor piqi , in other words, . It is guaranteed that all pi are prime numbers and diff erent from each other.</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_5","title":"\u8f93\u51fa","text":"<p>For each test case, print the the answer modulo 998244353 in one line.</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_6","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2\n2\n2 1\n3 1\n2\n2 2\n3 2\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_7","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>15\n168\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_8","title":"\u63d0\u793a","text":"<p>For first test case, n = 21*31= 6, and the answer is (\u03c6(1)*n/1+\u03c6(2)*n/2+\u03c6(3)*n/3+\u03c6(6)*n/6) mod 998244353 = (6 + 3 + 4 + 2) mod 998244353 = 15.</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_9","title":"\u9898\u89e3","text":"<p>\u9898\u76ee\u8981\u6c42\u6c42\u89e3F(n)=\\sum_{d|n} \\varphi(d)*\\frac{n}{d}\uff0c\u7531\u4e8e\u6b27\u62c9\u51fd\u6570\u548c\\frac{n}{d}\u5747\u4e3a\u79ef\u6027\u51fd\u6570\uff0c\u5219\u6709</p> <p>F(m*n)=F(m)*F(n)</p> <p>\u5373\u4e3aF( \\prod p_i^{q_i})=\\prod F(p_i^{q_i})\uff0c\u5219</p> <p>F(p_i^{q_i})=\\sum_{d|n}\\varphi(d)*\\frac{n}{d}=\\varphi(1)*n+\\sum_{i=1}^{q} \\varphi(p^i)*\\frac{n}{p^i}=p_i^{q_i}+\\sum _{i=1} ^{q_i}(p_i-1)*(p_i^{i-1}*\\frac{p_i^{q_i}}{p_i})</p> <p>=p_i^{q_i}+p_i^{q_i-1}*(p_i-1)*{q_i}=p_i^{q_i-1}*(p_i+q_i*(p_i-1))</p> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://blog.csdn.net/xiongshuxian2019/article/details/109631325</p> <p>https://blog.csdn.net/consciousman/article/details/77888386</p> <p>https://www.cnblogs.com/letlifestop/p/10262791.html</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_10","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 998244353;\nll ksm(ll a, ll b)\n{\nll ans1 = 1, ans2 = a;\nwhile (b != 0)\n{\nif (b &amp; 1)\nans1 = (ans1 * ans2) % mod;\nans2 = (ans2 * ans2) % mod;\nb /= 2;\n}\nreturn ans1;\n}\nint main()\n{\nint t;\nscanf(\"%d\", &amp;t);\nwhile (t--)\n{\nll n, p, q, ans = 1;\nscanf(\"%lld\", &amp;n);\nfor (int i = 1; i &lt;= n; i++)\n{\nscanf(\"%lld%lld\", &amp;p, &amp;q);\nans = (ans * ksm(p, q - 1) % mod * ((p + q * (p - 1)) % mod + mod) % mod) % mod;\n}\nprintf(\"%lld\\n\", ans % mod);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#2","title":"\u9898\u76ee2","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_11","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>\u95ee\u9898 D: Master of Random</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_12","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Hakase provides Nano with a problem. There is a rooted tree with values on nodes. For each query,you are asked to calculate the sum of the values in the subtree. However, Nano is a rookie so she decides to guess the answer. She has known how the data generator works: it identifi es the nodes with labels from 0 to n-1 and then visits them one by one. For each i (1\u2264i\u2264n), the generator selects a node whose label is smaller than i to be its father. The pseudocode is like this:</p> <p>\u200b     for i = 1 to n - 1:</p> <p>\u200b       father[i] = random(0, i - 1);</p> <p>where random(a, b) randomly generates a uniformly distributed random integer in range [a, b]. Knowing n and the value of the i-th node ai , Nano decides to randomly choose a subtree and sum up all of the values in the subtree as the answer. Now Hakase wants to know what the expectation of the answer is. Can you help her?</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_13","title":"\u8f93\u5165","text":"<p>The first line contains an integer T (1\u2264T\u226410) representing the number of test cases.</p> <p>For each test case, the fi rst line contains an integer n (1\u2264n\u2264100000), the number of the nodes in the rooted tree.</p> <p>The second line contains n integers a0,a1,...,a_{n-1} (1\u2264ai\u2264100000) represent the values of nodes.</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_14","title":"\u8f93\u51fa","text":"<p>It can be proven that the answer equals to an irreducible fraction p/q. For each test case, print p*q^{-1} mod 998244353 in one line. q^{-1} is the inverse of q under module number 998244353.</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_15","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2\n2\n1 1\n3\n1 2 3\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_16","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>499122178\n166374063\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_17","title":"\u63d0\u793a","text":"<p>The shape of the tree in the first test case is unique. The father of node 1 is 0. It is possible to choose node 0 or 1 with equal possibility. The sum of the subtree with 0 as the root is 2 while the sum of the subtree with 1 as the root is 1. So the expectation is (2 + 1)/2 = 3/2. The output is 3*2-1 mod 998244353 = 400122178.</p> <p>There are two possible shapes in the second test case, node 1\u2019s father destines to be 0, but node 2\u2019s father might be node 0 or node 1. Both conditions are equally possible.</p> <p>If node 2\u2019s father is node 0, we randomly choose a node. The sum of the subtree with node 0 as the root is 6. The sum of the subtree with node 1 as the root is 2. The sum of the subtree with node 2 as the root is 3.</p> <p>If node 2\u2019s father is node 1, we randomly choose a node. The sum of the subtree with node 0 as the root is 6. The sum of the subtree with node 1 as the root is 5. The sum of the subtree with node 2 as the root is 3.</p> <p>So the expectation is (6 + 2 + 3 + 6 + 5 + 3)/6 = 25/6. The output is 25*6^{-1} mod 998244353 = 166374063.</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_18","title":"\u9898\u89e3","text":"<p>n\u4e2a\u70b9\u53ef\u4ee5\u5f62\u6210\u6811\u7684\u79cd\u7c7b\u4e3a(n-1)!\uff0c\u7136\u540e\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u70b9\u8ba1\u7b97\u5b50\u6811\u7684\u6743\u503c\uff0c\u6240\u4ee5\u603b\u5171\u6709n!\u79cd\u53ef\u80fd\u3002</p> <p>\u8003\u8651\u6bcf\u4e00\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u5373\u8003\u8651\u6bcf\u4e2a\u70b9\u5728\u6240\u9009\u51fa\u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u79cd\u53ef\u80fd\u88ab\u5305\u542b\u3002</p> <p>0: (n-1)!</p> <p>\u200b   0\u70b9\u53ea\u6709\u9009\u53d60\u8fd9\u4e2a\u8282\u70b9\u65f6\u624d\u4f1a\u88ab\u9009\u62e9\uff0c\u5171\u6709(n-1)!\u79cd\u5f62\u6001\u7684\u6811\uff0c\u6240\u4ee5\u4e3a(n-1)!</p> <p>1: (n-1)!+(n-1)!</p> <p>\u200b   1\u70b9\u53ea\u6709\u9009\u53d60\u548c1\u8fd9\u4e24\u4e2a\u8282\u70b9\u65f6\u624d\u4f1a\u88ab\u9009\u62e9</p> <p>2:(n-1)!+(n-1)!/2+(n-1)!</p> <p>\u200b   2\u70b9\u53ea\u6709\u9009\u53d60\u70b9\u65f6\u548c\u9009\u53d61\u70b9\uff082\u70b9\u4e0d\u57280\u4e0b\u9762\uff09\u548c\u9009\u53d62\u70b9\u65f6\u624d\u4f1a\u88ab\u9009\u62e9</p> <p>...</p> <p>k:(n-1)!+(n-1)!/2+(n-1)!/3+....+(n-1)!/k+(n-1)!</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5047\u8bbek\u51fa\u73b0\u7684\u79cd\u6811\u4e3acnt[k]=(n-1)!+(n-1)!/2+(n-1)!/3+....+(n-1)!/k+(n-1)!\uff0c\u6743\u503c\u4e3aa[k]\uff0c\u5219\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3acnt[k]*a[k]*(n!)^{-1}</p> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://blog.csdn.net/weixin_44178736/article/details/113450079</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E4%BA%8C%EF%BC%89/#_19","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 998244353;\nll jc[100500] = {0};\nll a[100500] = {0};\nll ksm(ll a, ll b)\n{\nll ans1 = 1, ans2 = a;\nwhile (b != 0)\n{\nif (b &amp; 1)\nans1 = (ans1 * ans2) % mod;\nans2 = (ans2 * ans2) % mod;\nb /= 2;\n}\nreturn ans1;\n}\nint main()\n{\njc[0] = 1;\nfor (int i = 1; i &lt;= 100000; i++)\njc[i] = jc[i - 1] * i % mod;\nint t;\nscanf(\"%d\", &amp;t);\nwhile (t--)\n{\nint n;\nscanf(\"%d\", &amp;n);\nfor (int i = 0; i &lt; n; i++)\nscanf(\"%lld\", &amp;a[i]);\nll cnt = jc[n - 1] % mod, ans = 0;\nfor (int i = 0; i &lt; n; i++)\n{\ncnt = (cnt + jc[n - 1] * ksm(i, mod - 2) % mod) % mod;\nans = (ans + a[i] * cnt) % mod;\n}\nans = ans * ksm(jc[n], mod - 2);\nprintf(\"%lld\\n\", ans % mod);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/","title":"\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u56db\uff09","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_1","title":"\u7ec4\u961f\u8bad\u7ec3\u8d5b\uff08\u56db\uff09","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#1","title":"\u9898\u76ee1","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_2","title":"\u9898\u76ee\u94fe\u63a5","text":"<p>\u667a\u4e43\u9171\u7684\u524d\u7f00\u548c\u4e0e\u5dee\u5206</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>10 2 11\n1000 1000 1000 100000 1000 1000 10000 10000 10000 100000\n1 10 0 100\n1 10 1 1 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n1 10\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>1101\n1102\n1103\n100104\n1105\n1106\n10107\n10108\n10109\n100110\n236055\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_6","title":"\u9898\u89e3","text":"<p>\u7531\u4e8e\u6a21\u6570\u5927\u4e8e\u5e8f\u5217\u957f\u5ea6\uff0c\u6240\u4ee5\u5bf9\u8d1f\u6570\u7684\u5dee\u5206\u53ef\u4ee5\u8f6c\u5316\u4e3a\u53d6\u6a21\u540e\u7684\u524d\u7f00\u548c\u3002</p> <p>\u5bf9\u5e8f\u5217{a_0,0,0,0,0}\u505a\u524d\u7f00\u53ef\u5f97</p> \u5e8f\u53f7 0 1 2 3 4 \u539f\u5e8f\u5217 a_0 0 0 0 0 \u4e00\u6b21\u524d\u7f00\u548c a_0 a_0 a_0 a_0 a_0 \u4e8c\u6b21\u524d\u7f00\u548c a_0 2a_0 3a_0 4a_0 5a_0 \u4e09\u6b21\u524d\u7f00\u548c a_0 3a_0 6a_0 10a_0 15a_0 <p>\u5219\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u9012\u63a8\u5f0f\uff1ab[k][i]=b[k-1][i]+b[k][i-1]\uff0c\u8be5\u516c\u5f0f\u5373\u4e3a\u4ece(0,0)\u70b9\u8d70\u5230(k,i)\u70b9\u7684\u8def\u5f84\u79cd\u7c7b\u6570\uff0c\u4e14\u901a\u9879\u516c\u5f0f\u5373\u4e3a\uff1a</p> <p>b[k][i]=C_{i+k-1}^{i-1}</p> <p>\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408\u6570\u9012\u63a8\u7684\u65b9\u5f0f\u6c42\u51fa\u7cfb\u6570\u3002</p> <p>\u5982\u679c\u8003\u8651{a_0,a_1,a_2,.....,a_k}\u5e8f\u5217\uff0c\u5219\u53ef\u5f97\u5230\u4e00\u4e0b\u8ba1\u7b97\uff1a</p> <p></p> <p>\u7b54\u6848\u5373\u4e3a{a_0,a_1,a_2,...,a_k}\u548c{b_0,b_1,b_2,...,b_k}\u5377\u79ef\u7684\u7ed3\u679c\uff0c\u6839\u636eNTT\u7b97\u6cd5\u53ef\u4ee5\u5728O(nlogn)\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5f97\u51fa\u7b54\u6848\u3002</p> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>https://blog.nowcoder.net/n/d1e592fc44b648668bcddc3fe44b7927</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_7","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 998244353;\nconst ll G = 3;\nll n, m, L, R[600500] = {0};\nll a[600500] = {0}, b[600500] = {0}, inv[600500] = {0};\nll qpow(ll a, ll b)\n{\nll ans1 = 1, ans2 = a;\nwhile (b != 0)\n{\nif (b &amp; 1)\nans1 = ans1 * ans2 % mod;\nans2 = ans2 * ans2 % mod;\nb /= 2;\n}\nreturn ans1 % mod;\n}\n\nvoid NTT(ll *a, ll f)\n{\nfor (ll i = 0; i &lt; n; i++)\n{\nif (i &lt; R[i])\nswap(a[i], a[R[i]]);\n}\nfor (ll i = 1; i &lt; n; i &lt;&lt;= 1)\n{\nll gn = qpow(G, (mod - 1) / (i &lt;&lt; 1));\nfor (ll j = 0; j &lt; n; j += (i &lt;&lt; 1))\n{\nll g = 1;\nfor (ll k = 0; k &lt; i; k++, g = g * gn % mod)\n{\nll x = a[j + k], y = g * a[j + k + i] % mod;\na[j + k] = (x + y) % mod;\na[j + k + i] = (x - y + mod) % mod;\n}\n}\n}\nif (f == 1)\nreturn;\nll inv = qpow(n, mod - 2);\nreverse(a + 1, a + n);\nfor (ll i = 0; i &lt; n; i++)\na[i] = 1ll * a[i] * inv % mod;\n}\nvoid solve(ll *A, ll *B)\n{\nm = n + m;\nfor (n = 1; n &lt;= m; n &lt;&lt;= 1)\nL++;\nfor (int i = 0; i &lt; n; i++)\nR[i] = (R[i &gt;&gt; 1] &gt;&gt; 1) | ((i &amp; 1) &lt;&lt; (L - 1));\nNTT(A, 1);\nNTT(B, 1);\nfor (int i = 0; i &lt; n; i++)\nA[i] = (A[i] % mod * B[i] % mod + mod) % mod;\nNTT(A, -1);\n}\nint main()\n{\nll k;\nscanf(\"%lld%lld\", &amp;n, &amp;k);\nm = n;\nll nn = n;\nfor (ll i = 0; i &lt; n; i++)\nscanf(\"%lld\", &amp;a[i]);\n\ninv[1] = 1;\nfor (ll i = 2; i &lt; 200500; i++)\ninv[i] = (ll)(mod - mod / i) * inv[mod % i] % mod;\n\nb[0] = 1;\nll kk = (k % mod + mod) % mod;\nfor (ll i = 1; i &lt; n; i++)\nb[i] = b[i - 1] * (i + kk - 1) % mod * inv[i] % mod;\nsolve(a, b);\nfor (ll i = 0; i &lt; nn; i++)\nprintf(\"%lld \", a[i]);\nreturn 0;\n}\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#2","title":"\u9898\u76ee2","text":""},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_8","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u5b9a\u6b63\u6574\u6570 n\uff0c\u6c42 1\\le x,y\\le n\u4e14 gcd(x,y)\u4e3a\u7d20\u6570\u7684\u6570\u5bf9 (x,y) \u6709\u591a\u5c11\u5bf9\u3002</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_9","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u53ea\u6709\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u4ee3\u8868n\u3002</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_10","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u4e00\u884c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u7b54\u6848\u3002</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_11","title":"\u8f93\u5165","text":"<pre><code>4\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_12","title":"\u8f93\u51fa","text":"<pre><code>4\n</code></pre>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_13","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e\u6837\u4f8b\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684 (x,y) \u4e3a (2,2)\uff0c(2,4)\uff0c(3,3)\uff0c(4,2)</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_14","title":"\u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a","text":"<p>\u5bf9\u4e8e 100% \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 1\\le n\\le10^7\u3002</p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_15","title":"\u9898\u89e3","text":"<p>\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u3002</p> <p></p>"},{"location":"problem/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83%E8%B5%9B%EF%BC%88%E5%9B%9B%EF%BC%89/#_16","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 998244353;\nbool is_prime[10050000] = {0};\nll prime[5005000] = {0};\nll mu[10050000] = {0};\nll sum[10050000] = {0};\nll cnt = 0;\nvoid get_mu(ll n)\n{\nmu[1] = 1;\nfor (ll i = 2; i &lt;= n; i++)\n{\nif (!is_prime[i])\n{\nprime[++cnt] = i;\nmu[i] = -1;\n}\nfor (ll j = 1; j &lt;= cnt &amp;&amp; prime[j] * i &lt;= n; j++)\n{\nis_prime[prime[j] * i] = 1;\nif (i % prime[j] == 0)\nbreak;\nelse\nmu[i * prime[j]] = -mu[i];\n}\n}\n}\n\nint main()\n{\nll n;\nscanf(\"%lld\", &amp;n);\nget_mu(n);\nfor (ll i = 1; i &lt;= cnt; i++)\nfor (ll j = 1; j * prime[i] &lt;= n; j++)\nsum[j * prime[i]] += mu[j];\nfor (int i = 1; i &lt;= n; i++)\nsum[i] += sum[i - 1];\nll ans = 0;\nfor (ll l = 1, r; l &lt;= n; l = r + 1)\n{\nr = n / (n / l);\nans += (sum[r] - sum[l - 1]) * (n / l) * (n / l);\n}\nprintf(\"%lld\\n\", ans);\nreturn 0;\n}\n</code></pre>"},{"location":"question/","title":"\u9898\u5355","text":""},{"location":"question/#2021","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u5341\u516b\u573a","text":""},{"location":"question/#a-radio-prize","title":"\u95ee\u9898 A: Radio Prize","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6811\u4e0aDP</li> </ul>"},{"location":"question/#b-perfect-flush","title":"\u95ee\u9898 B: Perfect Flush","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6a21\u62df</li> </ul>"},{"location":"question/#c-coloring-contention","title":"\u95ee\u9898 C: Coloring Contention","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6a21\u62df</li> </ul>"},{"location":"question/#l-party-invitations","title":"\u95ee\u9898 L: Party Invitations","text":"<ul> <li> \u7b97\u6cd5\uff1aBFS</li> </ul>"},{"location":"question/#m-liars-and-truth-tellers","title":"\u95ee\u9898 M: Liars and Truth Tellers","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5e76\u67e5\u96c6</li> </ul>"},{"location":"question/#k-seating","title":"\u95ee\u9898 K: Seating","text":"<ul> <li> \u7b97\u6cd5\uff1a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u524d\u7f00</li> </ul>"},{"location":"question/#j-interstellar-travel","title":"\u95ee\u9898 J: Interstellar Travel","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5dee\u5206</li> </ul>"},{"location":"question/#2021_1","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u5341\u4e94\u573a","text":""},{"location":"question/#a-almost-origami","title":"\u95ee\u9898 A: Almost Origami","text":"<ul> <li> \u7b97\u6cd5\uff1a\u8ba1\u7b97\u51e0\u4f55</li> </ul>"},{"location":"question/#d-dividing-candy","title":"\u95ee\u9898 D: Dividing Candy","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6a21\u62df</li> </ul>"},{"location":"question/#c-crisis-at-the-wedding","title":"\u95ee\u9898 C: Crisis at the Wedding","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6a21\u62df</li> </ul>"},{"location":"question/#e-excellent-views","title":"\u95ee\u9898 E: Excellent Views","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5355\u8c03\u6808</li> </ul>"},{"location":"question/#h-halting-wolf","title":"\u95ee\u9898 H: Halting Wolf","text":"<ul> <li> \u7b97\u6cd5\uff1a\u7f51\u7edc\u6d41</li> </ul>"},{"location":"question/#j-job-allocator","title":"\u95ee\u9898 J: Job Allocator","text":"<ul> <li> \u7b97\u6cd5\uff1a\u66b4\u529b\u679a\u4e3e</li> </ul>"},{"location":"question/#f-fascinating-partitions","title":"\u95ee\u9898 F: Fascinating Partitions","text":"<ul> <li> \u7b97\u6cd5\uff1aDP+\u4f18\u5316</li> </ul>"},{"location":"question/#2021_2","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u5341\u4e8c\u573a","text":""},{"location":"question/#j-tree-constructer","title":"\u95ee\u9898 J: Tree Constructer","text":"<ul> <li> \u7b97\u6cd5\uff1a\u4e8c\u5206\u56fe</li> </ul>"},{"location":"question/#d-fight-against-involution","title":"\u95ee\u9898 D: Fight against involution","text":"<ul> <li> \u7b97\u6cd5\uff1a\u8d2a\u5fc3</li> </ul>"},{"location":"question/#g-xor-transformation","title":"\u95ee\u9898 G: Xor Transformation","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6784\u9020</li> </ul>"},{"location":"question/#a-matrix-equation","title":"\u95ee\u9898 A: Matrix Equation","text":"<ul> <li> \u7b97\u6cd5\uff1a\u7ebf\u6027\u4ee3\u6570--\u9ad8\u65af\u6d88\u5143\u6cd5</li> </ul>"},{"location":"question/#2021_3","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u5341\u56db\u573a","text":""},{"location":"question/#c-hakase-and-nano","title":"\u95ee\u9898 C: Hakase and Nano","text":"<ul> <li> \u7b97\u6cd5\uff1a\u535a\u5f08\u8bba</li> </ul>"},{"location":"question/#b-master-of-phi","title":"\u95ee\u9898 B: Master of Phi","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6570\u8bba\uff08\u6b27\u62c9\u5b9a\u7406\uff09</li> </ul>"},{"location":"question/#k-master-of-sequence","title":"\u95ee\u9898 K: Master of Sequence","text":"<ul> <li> \u7b97\u6cd5\uff1a\u968f\u673a\u5316</li> </ul>"},{"location":"question/#d-master-of-random","title":"\u95ee\u9898 D: Master of Random","text":"<ul> <li> \u7b97\u6cd5\uff1a\u89c4\u5f8b</li> </ul>"},{"location":"question/#2021_4","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u5341\u4e8c\u573a","text":""},{"location":"question/#j-tree-constructer_1","title":"\u95ee\u9898 J: Tree Constructer","text":"<ul> <li> \u7b97\u6cd5\uff1a\u4e8c\u5206\u56fe</li> </ul>"},{"location":"question/#d-fight-against-involution_1","title":"\u95ee\u9898 D: Fight against involution","text":"<ul> <li> \u7b97\u6cd5\uff1a\u8d2a\u5fc3</li> </ul>"},{"location":"question/#g-xor-transformation_1","title":"\u95ee\u9898 G: Xor Transformation","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6784\u9020</li> </ul>"},{"location":"question/#a-matrix-equation_1","title":"\u95ee\u9898 A: Matrix Equation","text":"<ul> <li> \u7b97\u6cd5\uff1a\u7ebf\u6027\u4ee3\u6570--\u9ad8\u65af\u6d88\u5143\u6cd5</li> </ul>"},{"location":"question/#2021_5","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u5341\u4e00\u573a","text":""},{"location":"question/#b-collatz-conjecture","title":"\u95ee\u9898 B: Collatz Conjecture","text":"<ul> <li> \u7b97\u6cd5\uff1aGCD \u6027\u8d28</li> </ul>"},{"location":"question/#g-hoarse-horses","title":"\u95ee\u9898 G: Hoarse Horses","text":"<ul> <li> \u7b97\u6cd5\uff1a\u8ba1\u7b97\u51e0\u4f55+\u56fe\u7684\u6027\u8d28</li> </ul>"},{"location":"question/#k-lemonade-trade","title":"\u95ee\u9898 K: Lemonade Trade","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6570\u5b66\uff0c\u4e58\u6cd5---\u5bf9\u6570\u53d8\u6362---&gt;\u52a0\u6cd5</li> </ul>"},{"location":"question/#l-manhattan-mornings","title":"\u95ee\u9898 L: Manhattan Mornings","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6700\u5927\u4e0a\u5347\u5b50\u5e8f\u5217</li> </ul>"},{"location":"question/#h-irrational-division","title":"\u95ee\u9898 H: Irrational Division","text":"<ul> <li> \u7b97\u6cd5\uff1a\u89c4\u5f8b\u9898</li> </ul>"},{"location":"question/#2021_6","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u4e5d\u573a","text":""},{"location":"question/#h-prime-set","title":"\u95ee\u9898 H: Prime Set","text":"<ul> <li> \u7b97\u6cd5\uff1a\u4e8c\u5206\u56fe\u5339\u914d+\u5308\u7259\u5229\u7f51\u8def</li> </ul>"},{"location":"question/#g-numbersi","title":"\u95ee\u9898 G: NumbersI","text":"<ul> <li> \u7b97\u6cd5\uff1aJava\u9ad8\u7cbe\u5ea6+\u8d2a\u5fc3</li> </ul>"},{"location":"question/#c-crusaders-quest","title":"\u95ee\u9898 C: Crusaders Quest","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32</li> </ul>"},{"location":"question/#e-string-of-ccpc","title":"\u95ee\u9898 E: String of CCPC","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32</li> </ul>"},{"location":"question/#l-one-dimensional-maze","title":"\u95ee\u9898 L: One-Dimensional Maze","text":"<ul> <li> \u7b97\u6cd5\uff1a\u524d\u540e\u7f00</li> </ul>"},{"location":"question/#a-balloon-robot","title":"\u95ee\u9898 A: Balloon Robot","text":"<ul> <li> \u7b97\u6cd5\uff1a\u524d\u540e\u7f00</li> </ul>"},{"location":"question/#m-safest-buildings","title":"\u95ee\u9898 M: Safest Buildings","text":"<ul> <li> \u7b97\u6cd5\uff1a\u8ba1\u7b97\u51e0\u4f55</li> </ul>"},{"location":"question/#2021_7","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u516b\u573a","text":""},{"location":"question/#f-hopscotch","title":"\u95ee\u9898 F: Hopscotch","text":"<ul> <li> \u7b97\u6cd5\uff1a\u591a\u6e90\u6700\u77ed\u8def</li> </ul>"},{"location":"question/#h-letter-wheels","title":"\u95ee\u9898 H: Letter Wheels","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32\u54c8\u5e0c</li> </ul>"},{"location":"question/#g-icpc-camp","title":"\u95ee\u9898 G: ICPC Camp","text":"<ul> <li> \u7b97\u6cd5\uff1a\u4e8c\u5206+\u5339\u914d</li> </ul>"},{"location":"question/#k-rooted-subtrees","title":"\u95ee\u9898 K: Rooted Subtrees","text":"<ul> <li> \u7b97\u6cd5\uff1aLCA+ST\u500d\u589e</li> </ul>"},{"location":"question/#b-mini-battleship","title":"\u95ee\u9898 B: Mini Battleship","text":"<ul> <li> \u7b97\u6cd5\uff1a\u641c\u7d22</li> </ul>"},{"location":"question/#d-all-kill","title":"\u95ee\u9898 D: All Kill","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6982\u7387\u8bba+\u6253\u8868/\u627e\u89c4\u5f8b</li> </ul>"},{"location":"question/#2021_8","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u4e03\u573a","text":""},{"location":"question/#a-anagram","title":"\u95ee\u9898 A: Anagram","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32\u6a21\u62df</li> </ul>"},{"location":"question/#c-cities","title":"\u95ee\u9898 C: Cities","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6700\u5c0f\u751f\u6210\u6811</li> </ul>"},{"location":"question/#f-four-tuples","title":"\u95ee\u9898 F: Four-tuples","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5bb9\u65a5\u539f\u7406</li> </ul>"},{"location":"question/#b-bullet","title":"\u95ee\u9898 B: Bullet","text":"<ul> <li> \u7b97\u6cd5\uff1a\u4e8c\u5206+\u4e8c\u5206\u56fe\u5339\u914d</li> </ul>"},{"location":"question/#g-games","title":"\u95ee\u9898 G: Games","text":"<ul> <li> \u7b97\u6cd5\uff1a\u535a\u5f08\u8bba+\u52a8\u6001\u89c4\u5212</li> </ul>"},{"location":"question/#2021_9","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u516d\u573a","text":""},{"location":"question/#l-mixtape-management","title":"\u95ee\u9898 L: Mixtape Management","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32\u6784\u9020\u9898\u76ee</li> </ul>"},{"location":"question/#a-adolescent-architecture","title":"\u95ee\u9898 A: Adolescent Architecture","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6392\u5e8f</li> </ul>"},{"location":"question/#b-bookshelf-building","title":"\u95ee\u9898 B: Bookshelf Building","text":"<ul> <li> \u7b97\u6cd5\uff1a\u52a8\u6001\u89c4\u5212</li> </ul>"},{"location":"question/#j-knightly-knowledge","title":"\u95ee\u9898 J: Knightly Knowledge","text":"<ul> <li> \u7b97\u6cd5\uff1a\u4e8c\u5206\u67e5\u627e</li> </ul>"},{"location":"question/#k-lexicographical-lecturing","title":"\u95ee\u9898 K: Lexicographical Lecturing","text":"<ul> <li> \u7b97\u6cd5\uff1a\u601d\u7ef4+\u5b57\u7b26\u4e32</li> </ul>"},{"location":"question/#c-decorative-dominoes","title":"\u95ee\u9898 C: Decorative Dominoes","text":"<ul> <li> \u7b97\u6cd5\uff1a\u4e8c\u5206\u56fe\u7684\u5339\u914d</li> </ul>"},{"location":"question/#f-gravity-grid","title":"\u95ee\u9898 F: Gravity Grid","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5927\u6a21\u62df</li> </ul>"},{"location":"question/#2021_10","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u4e94\u573a","text":""},{"location":"question/#c-safe-distance","title":"\u95ee\u9898 C: Safe Distance","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5e76\u67e5\u96c6</li> </ul>"},{"location":"question/#g-decoration","title":"\u95ee\u9898 G: Decoration","text":"<ul> <li> \u7b97\u6cd5\uff1a\u56fe\u8bba+\u6570\u8bba</li> </ul>"},{"location":"question/#i-emails","title":"\u95ee\u9898 I: Emails","text":"<ul> <li> \u7b97\u6cd5\uff1aBFS\uff0c\u65e0\u5411\u56fe\u76f4\u5f84</li> </ul>"},{"location":"question/#k-unique-activities","title":"\u95ee\u9898 K: Unique Activities","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32+\u4e8c\u5206check</li> </ul>"},{"location":"question/#2021_11","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u56db\u573a","text":""},{"location":"question/#f-fair-distribution","title":"\u95ee\u9898 F: Fair Distribution","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6570\u8bba+\u6574\u6570\u5206\u5757</li> </ul>"},{"location":"question/#2021_12","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u4e09\u573a","text":""},{"location":"question/#e-interview-queue","title":"\u95ee\u9898 E: Interview Queue","text":"<ul> <li> \u7b97\u6cd5\uff1aSTL+\u6a21\u62df</li> </ul>"},{"location":"question/#f-conquest","title":"\u95ee\u9898 F: Conquest","text":"<ul> <li> \u7b97\u6cd5\uff1a\u4f18\u5148\u961f\u5217+BFS</li> </ul>"},{"location":"question/#h-antimatter-rain","title":"\u95ee\u9898 H: Antimatter Rain","text":"<ul> <li> \u7b97\u6cd5\uff1a\u626b\u63cf\u7ebf+\u7ebf\u6bb5\u6811</li> </ul>"},{"location":"question/#j-pegs-and-legs","title":"\u95ee\u9898 J: Pegs and Legs","text":"<ul> <li> \u7b97\u6cd5\uff1a\u56fe\u8bba+\u6982\u7387\u8bba</li> </ul>"},{"location":"question/#2021_13","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u4e8c\u573a","text":""},{"location":"question/#a-three-axis-views","title":"\u95ee\u9898 A: Three-Axis Views","text":"<ul> <li> \u7b97\u6cd5\uff1a\u4e09\u89c6\u56fe\u6a21\u62df</li> </ul>"},{"location":"question/#b-secrets-of-legendary-treasure","title":"\u95ee\u9898 B: Secrets of Legendary Treasure","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6784\u9020+\u6a21\u62df\u9898\u76ee</li> </ul>"},{"location":"question/#e-jewelry-size","title":"\u95ee\u9898 E: Jewelry Size","text":"<ul> <li> \u7b97\u6cd5\uff1a\u8ba1\u7b97\u51e0\u4f55</li> </ul>"},{"location":"question/#g-to-be-connected-or-not-to-be-that-is-the-question","title":"\u95ee\u9898 G: To be Connected, or not to be, that is the Question","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5e76\u67e5\u96c6\u7684\u64a4\u9500</li> </ul>"},{"location":"question/#h-lcm-of-gcds","title":"\u95ee\u9898 H: LCM of GCDs","text":"<ul> <li> \u7b97\u6cd5\uff1a\u7ebf\u6bb5\u6811+GCD&amp;LCM\u6027\u8d28</li> </ul>"},{"location":"question/#i-high-tech-detective","title":"\u95ee\u9898 I: High-Tech Detective","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32+\u52a8\u6001\u89c4\u5212</li> </ul>"},{"location":"question/#j-formica-sokobanica","title":"\u95ee\u9898 J: Formica Sokobanica","text":"<ul> <li> \u7b97\u6cd5\uff1a\u641c\u7d22</li> </ul>"},{"location":"question/#2021_14","title":"2021\u79cb\u7ec4\u961f\u8bad\u7ec3\u8d5b\u7b2c\u4e00\u573a","text":""},{"location":"question/#f-agamemnons-odyssey","title":"\u95ee\u9898 F: Agamemnon\u2019s Odyssey","text":"<ul> <li> \u7b97\u6cd5\uff1a\u6811\u7684\u76f4\u5f84</li> </ul>"},{"location":"question/#d-substring-characters","title":"\u95ee\u9898 D: Substring Characters","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32</li> </ul>"},{"location":"question/#j-ada-loveslaces","title":"\u95ee\u9898 J: Ada Loveslaces","text":"<ul> <li> \u7b97\u6cd5\uff1a\u72b6\u538b</li> </ul>"},{"location":"question/#i-staggering-to-the-finish","title":"\u95ee\u9898 I: Staggering to the Finish","text":"<ul> <li> \u7b97\u6cd5\uff1a\u8ba1\u7b97\u51e0\u4f55\uff0c\u6709\u70b9\u96be</li> </ul>"},{"location":"question/#k-icpc-record-matching","title":"\u95ee\u9898 K: ICPC Record Matching","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32\u54c8\u5e0c\uff0c\u6a21\u62df</li> </ul>"},{"location":"question/#a-logdb","title":"\u95ee\u9898 A: LogDB","text":"<ul> <li> \u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32\u6a21\u62df</li> </ul>"},{"location":"question/#b-ride-hailing","title":"\u95ee\u9898 B: Ride-Hailing","text":"<ul> <li> \u7b97\u6cd5\uff1a\u56fe\u5339\u914d+\u6700\u5927\u6d41Dinic\u7b97\u6cd5</li> </ul>"},{"location":"question/#202152","title":"2021\u4e2a\u4eba\u8bad\u7ec3\u8d5b\u7b2c52\u573a","text":""},{"location":"question/#c","title":"\u95ee\u9898 C: \u62a2\u5360\u57ce\u5821","text":"<p>\u7b97\u6cd5\uff1a\u76f4\u63a5\u641c\u7d22\uff0c\u6ce8\u610f\u6709\u5751\uff01\uff01\uff01</p>"},{"location":"question/#h","title":"\u95ee\u9898 H: \u5305\u542b","text":"<p>\u7b97\u6cd5\uff1a\u5b57\u5178\u6811+\u641c\u7d20</p>"},{"location":"question/#k-gcd","title":"\u95ee\u9898 K: GCD","text":"<p>\u7b97\u6cd5\uff1a\u8d28\u56e0\u6570</p>"},{"location":"question/#b","title":"\u95ee\u9898 B: \u653e\u725b\u5976\u7684\u51b0\u7bb1","text":"<p>\u7b97\u6cd5\uff1a\u672a\u77e5\uff0c\u8fd8\u6ca1\u8865\uff0cqaq\uff0c\u53ef\u4ee5\u66b4\u529b\u6216\u4e8c\u5206\u8bd5\u8bd5</p>"},{"location":"question/#i-reverse-and-compare","title":"\u95ee\u9898 I: Reverse and Compare","text":"<p>\u7b97\u6cd5\uff1a\u89c4\u5f8b\u9898\uff0c\u7ed9\u4e2a\u6837\u4f8b\u63d0\u793a\uff1aabca\uff0c\u6682\u65f6\u8fd8\u6ca1\u8865</p>"},{"location":"question/#j-fountain-walk","title":"\u95ee\u9898 J: Fountain Walk","text":"<p>\u7b97\u6cd5\uff1a\u6700\u5927\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u53ef\u4ee5\u5148\u653e\u4e00\u653e\uff0c\u6211\u8fd8\u6ca1\u8865\u51fa\u6765\uff0cqaq</p>"},{"location":"question/#202151","title":"2021\u4e2a\u4eba\u8bad\u7ec3\u8d5b\u7b2c51\u573a","text":""},{"location":"question/#b-getting-difference","title":"\u95ee\u9898 B: Getting Difference","text":"<p>\u7b97\u6cd5\uff1a\u601d\u7ef4+\u6570\u8bba</p>"},{"location":"question/#c_1","title":"\u95ee\u9898 C: \u91ce\u725b\u4e0e\u72fc","text":"<p>\u7b97\u6cd5\uff1a\u524d\u7f00+\u601d\u7ef4</p>"},{"location":"question/#d","title":"\u95ee\u9898 D: \u8001\u6b7b\u4e0d\u76f8\u5f80\u6765","text":"<p>\u7b97\u6cd5\uff1a\u79bb\u6563\u5316</p>"},{"location":"question/#g-cow-lineup-i","title":"\u95ee\u9898 G: Cow Lineup I","text":"<p>\u7b97\u6cd5\uff1a\u4e8c\u5206\u6216\u8005\u66b4\u529b</p>"},{"location":"question/#k-painting-the-fence","title":"\u95ee\u9898 K: Painting the Fence","text":"<p>\u7b97\u6cd5\uff1a\u79bb\u6563\u5316+\u524d\u7f00</p>"},{"location":"question/#202150","title":"2021\u4e2a\u4eba\u8bad\u7ec3\u8d5b\u7b2c50\u573a","text":""},{"location":"question/#c_2","title":"\u95ee\u9898 C: \u725b\u725b\u7684\u65b9\u7a0b\u5f0f","text":"<p>\u7b97\u6cd5\uff1a\u7b7e\u5230\u9898\uff0c\u6570\u8bba</p>"},{"location":"question/#m-milk-routing","title":"\u95ee\u9898 M: Milk Routing","text":"<p>\u7b97\u6cd5\uff1a\u56fe\u8bba\uff0c\u6700\u77ed\u8def\uff0c\u641c\u7d20</p>"},{"location":"question/#d_1","title":"\u95ee\u9898 D: \u725b\u725b\u7684\u731c\u7403\u6e38\u620f","text":"<p>\u7b97\u6cd5\uff1a\u601d\u7ef4\u9898\u76ee</p>"},{"location":"question/#a-lh","title":"\u95ee\u9898 A: LH \u64b8\u4e32\u4e32","text":"<p>\u7b97\u6cd5\uff1a\u65e0\u8111\u66b4\u529b</p>"},{"location":"question/#j-moderate-differences","title":"\u95ee\u9898 J: Moderate Differences","text":"<p>\u7b97\u6cd5\uff1a\u601d\u7ef4+\u679a\u4e3e</p>"},{"location":"question/#k-biscuits","title":"\u95ee\u9898 K: Biscuits","text":"<p>\u7b97\u6cd5\uff1a\u52a8\u6001\u89c4\u5212/\u7ec4\u5408\u6570\u5b66</p>"},{"location":"question/#202149","title":"2021\u4e2a\u4eba\u8bad\u7ec3\u8d5b\u7b2c49\u573a","text":""},{"location":"question/#a-rectangle","title":"\u95ee\u9898 A: \u00b1 Rectangle","text":"<p>\u7b97\u6cd5\uff1a\u6bd4\u8f83\u96be\u7684\u6784\u9020\u9898\uff0c\u4e0d\u8fc7\u6a21\u62df\u4e5f\u53ef\u4ee5\u8fc7\uff0c\u989d</p>"},{"location":"question/#h-wifi-setup","title":"\u95ee\u9898 H: Wifi Setup","text":"<p>\u7b97\u6cd5\uff1aDP\uff1f\u53ef\u80fd\u662f\u5427</p>"},{"location":"question/#j-shrinking","title":"\u95ee\u9898 J: Shrinking","text":"<p>\u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32</p>"},{"location":"question/#g-colorful-hats","title":"\u95ee\u9898 G: Colorful Hats","text":"<p>\u7b97\u6cd5\uff1a\u672a\u77e5\uff0c\u8fd8\u6ca1\u8865\u51fa\u6765\uff0c</p>"},{"location":"question/#d-scrambled-letters","title":"\u95ee\u9898 D: Scrambled Letters","text":"<p>\u7b97\u6cd5\uff1a\u672a\u77e5\uff0c\u8fd8\u6ca1\u8865\u51fa\u6765\uff0c</p>"},{"location":"question/#202148","title":"2021\u4e2a\u4eba\u8bad\u7ec3\u8d5b\u7b2c48\u573a","text":""},{"location":"question/#f","title":"\u95ee\u9898F\uff1a\u62ec\u53f7\u5e8f\u5217","text":"<p>\u7b97\u6cd5\uff1a\u6808\u7684\u5e94\u7528</p>"},{"location":"question/#l-a-oror-b-problem","title":"\u95ee\u9898 L: A or...or B Problem","text":"<p>\u7b97\u6cd5\uff1a\u601d\u7ef4\uff0c\u4f4d\u8fd0\u7b97</p>"},{"location":"question/#h-nuske-vs-phantom-thnook","title":"\u95ee\u9898 H: Nuske vs Phantom Thnook","text":"<p>\u7b97\u6cd5\uff1a\u524d\u7f00\u548c\u3001\u6811\u7684\u6027\u8d28</p>"},{"location":"question/#k","title":"\u95ee\u9898 K: \u5b57\u6bcd\u91d1\u5b57\u5854","text":"<p>\u7b97\u6cd5\uff1a\u5927\u6a21\u62df\uff0c\u53ef\u4ee5\u5148\u653e\u4e00\u653e</p>"},{"location":"question/_coverpage/","title":"Tim-wcx","text":""},{"location":"question/_coverpage/#_1","title":"\u4e2a\u4eba\u6587\u6863\u7f51\u7ad9","text":"<p>GitHub Get Started</p>"},{"location":"question/_sidebar/","title":"sidebar","text":"<ul> <li>\u4e0a\u4e00\u7ea7</li> <li>ICPC\u9898\u5355</li> </ul>"}]}